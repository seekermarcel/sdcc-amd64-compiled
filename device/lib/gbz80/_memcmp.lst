                              1 ;--------------------------------------------------------
                              2 ; File Created by SDCC : free open source ANSI-C Compiler
                              3 ; Version 3.5.0 #9253 (Apr  4 2022) (Linux)
                              4 ; This file was generated Mon Apr  4 14:16:48 2022
                              5 ;--------------------------------------------------------
                              6 	.module _memcmp
                              7 	.optsdcc -mgbz80
                              8 	
                              9 ;--------------------------------------------------------
                             10 ; Public variables in this module
                             11 ;--------------------------------------------------------
                             12 	.globl _memcmp
                             13 ;--------------------------------------------------------
                             14 ; ram data
                             15 ;--------------------------------------------------------
                             16 	.area _DATA
                             17 ;--------------------------------------------------------
                             18 ; absolute external ram data
                             19 ;--------------------------------------------------------
                             20 	.area _DABS (ABS)
                             21 ;--------------------------------------------------------
                             22 ; global & static initialisations
                             23 ;--------------------------------------------------------
                             24 	.area _HOME
                             25 	.area _GSINIT
                             26 	.area _GSFINAL
                             27 	.area _GSINIT
                             28 ;--------------------------------------------------------
                             29 ; Home
                             30 ;--------------------------------------------------------
                             31 	.area _HOME
                             32 	.area _HOME
                             33 ;--------------------------------------------------------
                             34 ; code
                             35 ;--------------------------------------------------------
                             36 	.area _CODE
                             37 ;../_memcmp.c:31: int memcmp (const void * buf1, const void * buf2, size_t count)
                             38 ;	---------------------------------
                             39 ; Function memcmp
                             40 ; ---------------------------------
   0000                      41 _memcmp::
   0000 E8 FA                42 	add	sp, #-6
                             43 ;../_memcmp.c:33: if (!count)
   0002 F8 0D                44 	ldhl	sp,#13
   0004 3A                   45 	ld	a,(hl-)
   0005 B6                   46 	or	a,(hl)
   0006 20 06                47 	jr	NZ,00112$
                             48 ;../_memcmp.c:34: return(0);
   0008 11 00 00             49 	ld	de,#0x0000
   000B C3r7Fr00             50 	jp	00107$
                             51 ;../_memcmp.c:36: while ( --count && *((char *)buf1) == *((char *)buf2) ) {
   000E                      52 00112$:
   000E F8 0C                53 	ldhl	sp,#12
   0010 2A                   54 	ld	a,(hl+)
   0011 5E                   55 	ld	e, (hl)
   0012 F8 01                56 	ldhl	sp,#1
   0014 22                   57 	ld	(hl+),a
   0015 73                   58 	ld	(hl),e
   0016                      59 00104$:
   0016 F8 02                60 	ldhl	sp,#2
   0018 2B                   61 	dec	hl
   0019 5E                   62 	ld	e,(hl)
   001A 23                   63 	inc	hl
   001B 56                   64 	ld	d,(hl)
   001C 1B                   65 	dec	de
   001D 2B                   66 	dec	hl
   001E 73                   67 	ld	(hl),e
   001F 23                   68 	inc	hl
   0020 72                   69 	ld	(hl),d
   0021 3A                   70 	ld	a,(hl-)
   0022 B6                   71 	or	a,(hl)
   0023 CAr5Cr00             72 	jp	Z,00106$
   0026 F8 09                73 	ldhl	sp,#9
   0028 2B                   74 	dec	hl
   0029 4E                   75 	ld	c,(hl)
   002A 23                   76 	inc	hl
   002B 46                   77 	ld	b,(hl)
   002C 0A                   78 	ld	a,(bc)
   002D F8 00                79 	ldhl	sp,#0
   002F 77                   80 	ld	(hl),a
   0030 F8 0A                81 	ldhl	sp,#10
   0032 2A                   82 	ld	a,(hl+)
   0033 5E                   83 	ld	e, (hl)
   0034 F8 03                84 	ldhl	sp,#3
   0036 22                   85 	ld	(hl+),a
   0037 73                   86 	ld	(hl),e
   0038 2B                   87 	dec	hl
   0039 5E                   88 	ld	e,(hl)
   003A 23                   89 	inc	hl
   003B 56                   90 	ld	d,(hl)
   003C 1A                   91 	ld	a,(de)
   003D 23                   92 	inc	hl
   003E 77                   93 	ld	(hl),a
   003F F8 00                94 	ldhl	sp,#0
   0041 7E                   95 	ld	a,(hl)
   0042 F8 05                96 	ldhl	sp,#5
   0044 96                   97 	sub	a, (hl)
   0045 20 15                98 	jr	NZ,00106$
                             99 ;../_memcmp.c:37: buf1 = (char *)buf1 + 1;
   0047 03                  100 	inc	bc
   0048 F8 08               101 	ldhl	sp,#8
   004A 71                  102 	ld	(hl),c
   004B 23                  103 	inc	hl
   004C 70                  104 	ld	(hl),b
                            105 ;../_memcmp.c:38: buf2 = (char *)buf2 + 1;
   004D F8 04               106 	ldhl	sp,#4
   004F 2B                  107 	dec	hl
   0050 4E                  108 	ld	c,(hl)
   0051 23                  109 	inc	hl
   0052 46                  110 	ld	b,(hl)
   0053 03                  111 	inc	bc
   0054 F8 0A               112 	ldhl	sp,#10
   0056 71                  113 	ld	(hl),c
   0057 23                  114 	inc	hl
   0058 70                  115 	ld	(hl),b
   0059 C3r16r00            116 	jp	00104$
   005C                     117 00106$:
                            118 ;../_memcmp.c:41: return( *((unsigned char *)buf1) - *((unsigned char *)buf2) );
   005C F8 09               119 	ldhl	sp,#9
   005E 2B                  120 	dec	hl
   005F 5E                  121 	ld	e,(hl)
   0060 23                  122 	inc	hl
   0061 56                  123 	ld	d,(hl)
   0062 1A                  124 	ld	a,(de)
   0063 47                  125 	ld	b,a
   0064 0E 00               126 	ld	c,#0x00
   0066 23                  127 	inc	hl
   0067 5E                  128 	ld	e,(hl)
   0068 23                  129 	inc	hl
   0069 56                  130 	ld	d,(hl)
   006A 1A                  131 	ld	a,(de)
   006B F8 03               132 	ldhl	sp,#3
   006D 22                  133 	ld	(hl+),a
   006E 36 00               134 	ld	(hl),#0x00
   0070 58                  135 	ld	e, b
   0071 51                  136 	ld	d, c
   0072 2B                  137 	dec	hl
   0073 2A                  138 	ld	a,(hl+)
   0074 66                  139 	ld	h,(hl)
   0075 6F                  140 	ld	l,a
   0076 7B                  141 	ld	a,e
   0077 95                  142 	sub	a,l
   0078 5F                  143 	ld	e,a
   0079 7A                  144 	ld	a,d
   007A 9C                  145 	sbc	a,h
   007B 4F                  146 	ld	c,a
   007C 43                  147 	ld	b,e
   007D 58                  148 	ld	e, b
   007E 51                  149 	ld	d, c
   007F                     150 00107$:
   007F E8 06               151 	add	sp, #6
   0081 C9                  152 	ret
                            153 	.area _CODE
                            154 	.area _CABS (ABS)
