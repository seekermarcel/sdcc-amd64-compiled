                              1 ;--------------------------------------------------------
                              2 ; File Created by SDCC : free open source ANSI-C Compiler
                              3 ; Version 3.5.0 #9253 (Apr  4 2022) (Linux)
                              4 ; This file was generated Mon Apr  4 14:10:35 2022
                              5 ;--------------------------------------------------------
                              6 	.module puts
                              7 	.optsdcc -mhc08
                              8 	
                              9 	.area HOME    (CODE)
                             10 	.area GSINIT0 (CODE)
                             11 	.area GSINIT  (CODE)
                             12 	.area GSFINAL (CODE)
                             13 	.area CSEG    (CODE)
                             14 	.area XINIT   (CODE)
                             15 	.area CONST   (CODE)
                             16 	.area DSEG    (PAG)
                             17 	.area OSEG    (PAG, OVR)
                             18 	.area XSEG
                             19 	.area XISEG
                             20 ;--------------------------------------------------------
                             21 ; Public variables in this module
                             22 ;--------------------------------------------------------
                             23 	.globl _puts
                             24 	.globl _putchar
                             25 ;--------------------------------------------------------
                             26 ; ram data
                             27 ;--------------------------------------------------------
                             28 	.area DSEG    (PAG)
   0000                      29 _puts_sloc0_1_0:
   0000                      30 	.ds 2
   0002                      31 _puts_sloc1_1_0:
   0002                      32 	.ds 2
                             33 ;--------------------------------------------------------
                             34 ; overlayable items in ram 
                             35 ;--------------------------------------------------------
                             36 ;--------------------------------------------------------
                             37 ; absolute ram data
                             38 ;--------------------------------------------------------
                             39 	.area IABS    (ABS)
                             40 	.area IABS    (ABS)
                             41 ;--------------------------------------------------------
                             42 ; absolute external ram data
                             43 ;--------------------------------------------------------
                             44 	.area XABS    (ABS)
                             45 ;--------------------------------------------------------
                             46 ; external initialized ram data
                             47 ;--------------------------------------------------------
                             48 	.area XISEG
                             49 ;--------------------------------------------------------
                             50 ; extended address mode data
                             51 ;--------------------------------------------------------
                             52 	.area XSEG
                             53 ;--------------------------------------------------------
                             54 ; global & static initialisations
                             55 ;--------------------------------------------------------
                             56 	.area HOME    (CODE)
                             57 	.area GSINIT  (CODE)
                             58 	.area GSFINAL (CODE)
                             59 	.area GSINIT  (CODE)
                             60 ;--------------------------------------------------------
                             61 ; Home
                             62 ;--------------------------------------------------------
                             63 	.area HOME    (CODE)
                             64 	.area HOME    (CODE)
                             65 ;--------------------------------------------------------
                             66 ; code
                             67 ;--------------------------------------------------------
                             68 	.area CSEG    (CODE)
                             69 ;------------------------------------------------------------
                             70 ;Allocation info for local variables in function 'puts'
                             71 ;------------------------------------------------------------
                             72 ;sloc0                     Allocated with name '_puts_sloc0_1_0'
                             73 ;sloc1                     Allocated with name '_puts_sloc1_1_0'
                             74 ;s                         Allocated to registers 
                             75 ;i                         Allocated to registers 
                             76 ;------------------------------------------------------------
                             77 ;../puts.c:31: int puts (char *s)
                             78 ;	-----------------------------------------
                             79 ;	 function puts
                             80 ;	-----------------------------------------
                             81 ;	Register assignment is optimal.
                             82 ;	Stack space usage: 0 bytes.
   0000                      83 _puts:
   0000 B7*01         [ 3]   84 	sta	*(_puts_sloc0_1_0 + 1)
   0002 BF*00         [ 3]   85 	stx	*_puts_sloc0_1_0
                             86 ;../puts.c:34: while (*s){
   0004 8C            [ 1]   87 	clrh
   0005 5F            [ 1]   88 	clrx
   0006                      89 00101$:
   0006 89            [ 2]   90 	pshx
   0007 8B            [ 2]   91 	pshh
   0008 55*00         [ 4]   92 	ldhx	*_puts_sloc0_1_0
   000A F6            [ 2]   93 	lda	,x
   000B 8A            [ 2]   94 	pulh
   000C 88            [ 2]   95 	pulx
                             96 ;../puts.c:36: i++;
   000D AF 01         [ 2]   97 	aix	#1
   000F 35*02         [ 4]   98 	sthx	*_puts_sloc1_1_0
                             99 ;../puts.c:34: while (*s){
   0011 4D            [ 1]  100 	tsta
   0012 27 0D         [ 3]  101 	beq	00103$
                            102 ;../puts.c:35: putchar(*s++);
   0014 55*00         [ 4]  103 	ldhx	*_puts_sloc0_1_0
   0016 AF 01         [ 2]  104 	aix	#1
   0018 35*00         [ 4]  105 	sthx	*_puts_sloc0_1_0
   001A CDr00r00      [ 5]  106 	jsr	_putchar
                            107 ;../puts.c:36: i++;
   001D 55*02         [ 4]  108 	ldhx	*_puts_sloc1_1_0
   001F 20 E5         [ 3]  109 	bra	00101$
   0021                     110 00103$:
                            111 ;../puts.c:38: putchar('\n');
   0021 A6 0A         [ 2]  112 	lda	#0x0A
   0023 CDr00r00      [ 5]  113 	jsr	_putchar
                            114 ;../puts.c:39: return i+1;
   0026 BE*02         [ 3]  115 	ldx	*_puts_sloc1_1_0
   0028 B6*03         [ 3]  116 	lda	*(_puts_sloc1_1_0 + 1)
   002A 81            [ 4]  117 	rts
                            118 	.area CSEG    (CODE)
                            119 	.area CONST   (CODE)
                            120 	.area XINIT   (CODE)
                            121 	.area CABS    (ABS,CODE)
