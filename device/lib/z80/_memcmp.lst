                              1 ;--------------------------------------------------------
                              2 ; File Created by SDCC : free open source ANSI-C Compiler
                              3 ; Version 3.5.0 #9253 (Apr  4 2022) (Linux)
                              4 ; This file was generated Mon Apr  4 14:15:28 2022
                              5 ;--------------------------------------------------------
                              6 	.module _memcmp
                              7 	.optsdcc -mz80
                              8 	
                              9 ;--------------------------------------------------------
                             10 ; Public variables in this module
                             11 ;--------------------------------------------------------
                             12 	.globl _memcmp
                             13 ;--------------------------------------------------------
                             14 ; special function registers
                             15 ;--------------------------------------------------------
                             16 ;--------------------------------------------------------
                             17 ; ram data
                             18 ;--------------------------------------------------------
                             19 	.area _DATA
                             20 ;--------------------------------------------------------
                             21 ; ram data
                             22 ;--------------------------------------------------------
                             23 	.area _INITIALIZED
                             24 ;--------------------------------------------------------
                             25 ; absolute external ram data
                             26 ;--------------------------------------------------------
                             27 	.area _DABS (ABS)
                             28 ;--------------------------------------------------------
                             29 ; global & static initialisations
                             30 ;--------------------------------------------------------
                             31 	.area _HOME
                             32 	.area _GSINIT
                             33 	.area _GSFINAL
                             34 	.area _GSINIT
                             35 ;--------------------------------------------------------
                             36 ; Home
                             37 ;--------------------------------------------------------
                             38 	.area _HOME
                             39 	.area _HOME
                             40 ;--------------------------------------------------------
                             41 ; code
                             42 ;--------------------------------------------------------
                             43 	.area _CODE
                             44 ;../_memcmp.c:31: int memcmp (const void * buf1, const void * buf2, size_t count)
                             45 ;	---------------------------------
                             46 ; Function memcmp
                             47 ; ---------------------------------
   0000                      48 _memcmp::
   0000 DD E5         [15]   49 	push	ix
   0002 DD 21 00 00   [14]   50 	ld	ix,#0
   0006 DD 39         [15]   51 	add	ix,sp
   0008 F5            [11]   52 	push	af
                             53 ;../_memcmp.c:33: if (!count)
   0009 DD 7E 09      [19]   54 	ld	a,9 (ix)
   000C DD B6 08      [19]   55 	or	a,8 (ix)
   000F 20 05         [12]   56 	jr	NZ,00112$
                             57 ;../_memcmp.c:34: return(0);
   0011 21 00 00      [10]   58 	ld	hl,#0x0000
   0014 18 5D         [12]   59 	jr	00107$
                             60 ;../_memcmp.c:36: while ( --count && *((char *)buf1) == *((char *)buf2) ) {
   0016                      61 00112$:
   0016 DD 5E 08      [19]   62 	ld	e,8 (ix)
   0019 DD 56 09      [19]   63 	ld	d,9 (ix)
   001C                      64 00104$:
   001C 1B            [ 6]   65 	dec	de
   001D 7A            [ 4]   66 	ld	a,d
   001E B3            [ 4]   67 	or	a,e
   001F 28 3A         [12]   68 	jr	Z,00106$
   0021 DD 4E 04      [19]   69 	ld	c,4 (ix)
   0024 DD 46 05      [19]   70 	ld	b,5 (ix)
   0027 C5            [11]   71 	push	bc
   0028 FD E1         [14]   72 	pop	iy
   002A FD 7E 00      [19]   73 	ld	a, 0 (iy)
   002D DD 77 FE      [19]   74 	ld	-2 (ix),a
   0030 DD 4E 06      [19]   75 	ld	c,6 (ix)
   0033 DD 46 07      [19]   76 	ld	b,7 (ix)
   0036 0A            [ 7]   77 	ld	a,(bc)
   0037 DD 77 FF      [19]   78 	ld	-1 (ix),a
   003A DD 7E FE      [19]   79 	ld	a,-2 (ix)
   003D DD 96 FF      [19]   80 	sub	a, -1 (ix)
   0040 20 19         [12]   81 	jr	NZ,00106$
                             82 ;../_memcmp.c:37: buf1 = (char *)buf1 + 1;
   0042 FD 23         [10]   83 	inc	iy
   0044 FD E5         [15]   84 	push	iy
   0046 F1            [10]   85 	pop	af
   0047 DD 77 05      [19]   86 	ld	5 (ix),a
   004A FD E5         [15]   87 	push	iy
   004C 3B            [ 6]   88 	dec	sp
   004D F1            [10]   89 	pop	af
   004E 33            [ 6]   90 	inc	sp
   004F DD 77 04      [19]   91 	ld	4 (ix),a
                             92 ;../_memcmp.c:38: buf2 = (char *)buf2 + 1;
   0052 03            [ 6]   93 	inc	bc
   0053 DD 71 06      [19]   94 	ld	6 (ix),c
   0056 DD 70 07      [19]   95 	ld	7 (ix),b
   0059 18 C1         [12]   96 	jr	00104$
   005B                      97 00106$:
                             98 ;../_memcmp.c:41: return( *((unsigned char *)buf1) - *((unsigned char *)buf2) );
   005B DD 6E 04      [19]   99 	ld	l,4 (ix)
   005E DD 66 05      [19]  100 	ld	h,5 (ix)
   0061 5E            [ 7]  101 	ld	e,(hl)
   0062 16 00         [ 7]  102 	ld	d,#0x00
   0064 DD 6E 06      [19]  103 	ld	l,6 (ix)
   0067 DD 66 07      [19]  104 	ld	h,7 (ix)
   006A 6E            [ 7]  105 	ld	l,(hl)
   006B 26 00         [ 7]  106 	ld	h,#0x00
   006D 7B            [ 4]  107 	ld	a,e
   006E 95            [ 4]  108 	sub	a, l
   006F 6F            [ 4]  109 	ld	l,a
   0070 7A            [ 4]  110 	ld	a,d
   0071 9C            [ 4]  111 	sbc	a, h
   0072 67            [ 4]  112 	ld	h,a
   0073                     113 00107$:
   0073 DD F9         [10]  114 	ld	sp, ix
   0075 DD E1         [14]  115 	pop	ix
   0077 C9            [10]  116 	ret
                            117 	.area _CODE
                            118 	.area _INITIALIZER
                            119 	.area _CABS (ABS)
