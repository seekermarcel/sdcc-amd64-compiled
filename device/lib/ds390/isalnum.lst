                                      1 ;--------------------------------------------------------
                                      2 ; File Created by SDCC : free open source ANSI-C Compiler
                                      3 ; Version 3.5.0 #9253 (Apr  4 2022) (Linux)
                                      4 ; This file was generated Mon Apr  4 14:10:26 2022
                                      5 ;--------------------------------------------------------
                                      6 	.module isalnum
                                      7 	.optsdcc -mds390 --model-flat24
                                      8 	
                                      9 ;--------------------------------------------------------
                                     10 ; CPU specific extensions
                                     11 ;--------------------------------------------------------
                                     12 	.DS80C390
                                     13 	.amode	2	; 24 bit flat addressing
                           000082    14 dpl	=	0x82
                           000083    15 dph	=	0x83
                           000084    16 dpl1	=	0x84
                           000085    17 dph1	=	0x85
                           000086    18 dps	=	0x86
                           000093    19 dpx	=	0x93
                           000095    20 dpx1	=	0x95
                           00009B    21 esp	=	0x9B
                           00009C    22 ap	=	0x9C
                           00009C    23 acc1	=	0x9C
                           0000D1    24 mcnt0	=	0xD1
                           0000D2    25 mcnt1	=	0xD2
                           0000D3    26 ma	=	0xD3
                           0000D4    27 mb	=	0xD4
                           0000D5    28 mc	=	0xD5
                           00009D    29 acon	=	0x9D
                           0000D1    30 F1	=	0xD1	; user flag
                                     31 ;--------------------------------------------------------
                                     32 ; Public variables in this module
                                     33 ;--------------------------------------------------------
                                     34 	.globl _isalpha
                                     35 	.globl _isalnum
                                     36 ;--------------------------------------------------------
                                     37 ; special function registers
                                     38 ;--------------------------------------------------------
                                     39 ;--------------------------------------------------------
                                     40 ; special function bits
                                     41 ;--------------------------------------------------------
                                     42 ;--------------------------------------------------------
                                     43 ; overlayable register banks
                                     44 ;--------------------------------------------------------
                                     45 	.area REG_BANK_0	(REL,OVR,DATA)
      000000                         46 	.ds 8
                                     47 ;--------------------------------------------------------
                                     48 ; internal ram data
                                     49 ;--------------------------------------------------------
                                     50 	.area DSEG    (DATA)
                                     51 ;--------------------------------------------------------
                                     52 ; overlayable items in internal ram 
                                     53 ;--------------------------------------------------------
                                     54 ;--------------------------------------------------------
                                     55 ; indirectly addressable internal ram data
                                     56 ;--------------------------------------------------------
                                     57 	.area ISEG    (DATA)
                                     58 ;--------------------------------------------------------
                                     59 ; absolute internal ram data
                                     60 ;--------------------------------------------------------
                                     61 	.area IABS    (ABS,DATA)
                                     62 	.area IABS    (ABS,DATA)
                                     63 ;--------------------------------------------------------
                                     64 ; bit data
                                     65 ;--------------------------------------------------------
                                     66 	.area BSEG    (BIT)
                                     67 ;--------------------------------------------------------
                                     68 ; paged external ram data
                                     69 ;--------------------------------------------------------
                                     70 	.area PSEG    (PAG,XDATA)
                                     71 ;--------------------------------------------------------
                                     72 ; external ram data
                                     73 ;--------------------------------------------------------
                                     74 	.area XSEG    (XDATA)
                                     75 ;--------------------------------------------------------
                                     76 ; absolute external ram data
                                     77 ;--------------------------------------------------------
                                     78 	.area XABS    (ABS,XDATA)
                                     79 ;--------------------------------------------------------
                                     80 ; external initialized ram data
                                     81 ;--------------------------------------------------------
                                     82 	.area XISEG   (XDATA)
                                     83 ;--------------------------------------------------------
                                     84 ; global & static initialisations
                                     85 ;--------------------------------------------------------
                                     86 	.area HOME    (CODE)
                                     87 	.area GSINIT  (CODE)
                                     88 	.area GSFINAL (CODE)
                                     89 	.area GSINIT  (CODE)
                                     90 ;--------------------------------------------------------
                                     91 ; Home
                                     92 ;--------------------------------------------------------
                                     93 	.area HOME    (CODE)
                                     94 	.area HOME    (CODE)
                                     95 ;--------------------------------------------------------
                                     96 ; code
                                     97 ;--------------------------------------------------------
                                     98 	.area CSEG    (CODE)
                                     99 ;------------------------------------------------------------
                                    100 ;Allocation info for local variables in function 'isalnum'
                                    101 ;------------------------------------------------------------
                                    102 ;c                         Allocated to registers r2 r3 
                                    103 ;__00010001                Allocated to registers 
                                    104 ;__00020002                Allocated to registers 
                                    105 ;c                         Allocated to registers 
                                    106 ;------------------------------------------------------------
                                    107 ;	isalnum.c:37: int isalnum (int c)
                                    108 ;	-----------------------------------------
                                    109 ;	 function isalnum
                                    110 ;	-----------------------------------------
      000000                        111 _isalnum:
                           000002   112 	ar2 = 0x02
                           000003   113 	ar3 = 0x03
                           000004   114 	ar4 = 0x04
                           000005   115 	ar5 = 0x05
                           000006   116 	ar6 = 0x06
                           000007   117 	ar7 = 0x07
                           000000   118 	ar0 = 0x00
                           000001   119 	ar1 = 0x01
      000000 AA 82            [ 8]  120 	mov	r2,dpl
      000002 AB 83            [ 8]  121 	mov	r3,dph
                                    122 ;	isalnum.c:39: return (isalpha (c) || isdigit (c));
      000004 C0 02            [ 8]  123 	push	ar2
      000006 C0 03            [ 8]  124 	push	ar3
      000008 8A 82            [ 8]  125 	mov	dpl,r2
      00000A 8B 83            [ 8]  126 	mov	dph,r3
      00000C 12s00r00r00      [16]  127 	lcall	_isalpha
      000010 D0 03            [ 8]  128 	pop	ar3
      000012 D0 02            [ 8]  129 	pop	ar2
      000014 E5 82            [ 8]  130 	mov	a,dpl
      000016 45 83            [ 8]  131 	orl	a,dph
      000018 70 0F            [12]  132 	jnz  00105$
      00001A                        133 00117$:
                                    134 ;	../../device/include/ctype.h:62: return ((unsigned char)c >= '0' && (unsigned char)c <= '9');
      00001A BA 30 00         [16]  135 	cjne	r2,#0x30,00118$
      00001D                        136 00118$:
      00001D 40 06            [12]  137 	jc   00109$
      00001F                        138 00119$:
      00001F C3               [ 4]  139 	clr	c
      000020 74 39            [ 8]  140 	mov	a,#0x39
      000022 9A               [ 4]  141 	subb	a,r2
      000023 50 04            [12]  142 	jnc  00105$
      000025                        143 00120$:
      000025                        144 00109$:
                                    145 ;	isalnum.c:39: return (isalpha (c) || isdigit (c));
                                    146 ;	genAssign: resultIsFar = FALSE
      000025 7A 00            [ 8]  147 	mov	r2,#0x00
      000027 80 02            [12]  148 	sjmp 00106$
      000029                        149 00105$:
                                    150 ;	genAssign: resultIsFar = FALSE
      000029 7A 01            [ 8]  151 	mov	r2,#0x01
      00002B                        152 00106$:
      00002B 8A 84            [ 8]  153 	mov	dpl1,r2
      00002D EA               [ 4]  154 	mov	a,r2
      00002E 33               [ 4]  155 	rlc	a
      00002F 95 E0            [ 8]  156 	subb	a,acc
      000031 F5 85            [ 8]  157 	mov	dph1,a
      000033 85 84 82         [12]  158 	mov	dpl,dpl1
      000036 85 85 83         [12]  159 	mov	dph,dph1
      000039                        160 00102$:
      000039 22               [16]  161 	ret
                                    162 	.area CSEG    (CODE)
                                    163 	.area CONST   (CODE)
                                    164 	.area XINIT   (CODE)
                                    165 	.area CABS    (ABS,CODE)
