                                      1 ;--------------------------------------------------------
                                      2 ; File Created by SDCC : free open source ANSI-C Compiler
                                      3 ; Version 3.5.0 #9253 (Apr  4 2022) (Linux)
                                      4 ; This file was generated Mon Apr  4 14:17:16 2022
                                      5 ;--------------------------------------------------------
                                      6 	.module _strncat
                                      7 	.optsdcc -mstm8
                                      8 	
                                      9 ;--------------------------------------------------------
                                     10 ; Public variables in this module
                                     11 ;--------------------------------------------------------
                                     12 	.globl _strncat
                                     13 ;--------------------------------------------------------
                                     14 ; ram data
                                     15 ;--------------------------------------------------------
                                     16 	.area DATA
                                     17 ;--------------------------------------------------------
                                     18 ; ram data
                                     19 ;--------------------------------------------------------
                                     20 	.area INITIALIZED
                                     21 ;--------------------------------------------------------
                                     22 ; absolute external ram data
                                     23 ;--------------------------------------------------------
                                     24 	.area DABS (ABS)
                                     25 ;--------------------------------------------------------
                                     26 ; global & static initialisations
                                     27 ;--------------------------------------------------------
                                     28 	.area HOME
                                     29 	.area GSINIT
                                     30 	.area GSFINAL
                                     31 	.area GSINIT
                                     32 ;--------------------------------------------------------
                                     33 ; Home
                                     34 ;--------------------------------------------------------
                                     35 	.area HOME
                                     36 	.area HOME
                                     37 ;--------------------------------------------------------
                                     38 ; code
                                     39 ;--------------------------------------------------------
                                     40 	.area CODE
                                     41 ;	../_strncat.c: 31: char * strncat ( char * front, const char * back, size_t count )
                                     42 ;	-----------------------------------------
                                     43 ;	 function strncat
                                     44 ;	-----------------------------------------
      000000                         45 _strncat:
      000000 52 0C            [ 2]   46 	sub	sp, #12
                                     47 ;	../_strncat.c: 33: char *start = front;
      000002 16 0F            [ 2]   48 	ldw	y, (0x0f, sp)
      000004 17 01            [ 2]   49 	ldw	(0x01, sp), y
                                     50 ;	../_strncat.c: 35: while (*front++);
      000006 1E 01            [ 2]   51 	ldw	x, (0x01, sp)
      000008                         52 00101$:
      000008 F6               [ 1]   53 	ld	a, (x)
      000009 5C               [ 2]   54 	incw	x
      00000A 4D               [ 1]   55 	tnz	a
      00000B 26 FB            [ 1]   56 	jrne	00101$
                                     57 ;	../_strncat.c: 37: front--;
      00000D 5A               [ 2]   58 	decw	x
      00000E 1F 0F            [ 2]   59 	ldw	(0x0f, sp), x
                                     60 ;	../_strncat.c: 39: while (count--)
      000010 16 11            [ 2]   61 	ldw	y, (0x11, sp)
      000012 17 07            [ 2]   62 	ldw	(0x07, sp), y
      000014 16 0F            [ 2]   63 	ldw	y, (0x0f, sp)
      000016 17 03            [ 2]   64 	ldw	(0x03, sp), y
      000018 16 13            [ 2]   65 	ldw	y, (0x13, sp)
      00001A 17 05            [ 2]   66 	ldw	(0x05, sp), y
      00001C                         67 00106$:
      00001C 16 05            [ 2]   68 	ldw	y, (0x05, sp)
      00001E 17 0B            [ 2]   69 	ldw	(0x0b, sp), y
      000020 1E 05            [ 2]   70 	ldw	x, (0x05, sp)
      000022 5A               [ 2]   71 	decw	x
      000023 1F 05            [ 2]   72 	ldw	(0x05, sp), x
      000025 1E 0B            [ 2]   73 	ldw	x, (0x0b, sp)
      000027 27 1B            [ 1]   74 	jreq	00108$
                                     75 ;	../_strncat.c: 40: if (!(*front++ = *back++))
      000029 1E 07            [ 2]   76 	ldw	x, (0x07, sp)
      00002B F6               [ 1]   77 	ld	a, (x)
      00002C 1E 07            [ 2]   78 	ldw	x, (0x07, sp)
      00002E 5C               [ 2]   79 	incw	x
      00002F 1F 07            [ 2]   80 	ldw	(0x07, sp), x
      000031 1E 03            [ 2]   81 	ldw	x, (0x03, sp)
      000033 F7               [ 1]   82 	ld	(x), a
      000034 1E 03            [ 2]   83 	ldw	x, (0x03, sp)
      000036 5C               [ 2]   84 	incw	x
      000037 1F 03            [ 2]   85 	ldw	(0x03, sp), x
      000039 16 03            [ 2]   86 	ldw	y, (0x03, sp)
      00003B 17 0F            [ 2]   87 	ldw	(0x0f, sp), y
      00003D 4D               [ 1]   88 	tnz	a
      00003E 26 DC            [ 1]   89 	jrne	00106$
                                     90 ;	../_strncat.c: 41: return(start);
      000040 1E 01            [ 2]   91 	ldw	x, (0x01, sp)
      000042 20 09            [ 2]   92 	jra	00109$
      000044                         93 00108$:
                                     94 ;	../_strncat.c: 43: *front = '\0';
      000044 16 0F            [ 2]   95 	ldw	y, (0x0f, sp)
      000046 17 09            [ 2]   96 	ldw	(0x09, sp), y
      000048 1E 09            [ 2]   97 	ldw	x, (0x09, sp)
      00004A 7F               [ 1]   98 	clr	(x)
                                     99 ;	../_strncat.c: 44: return(start);
      00004B 1E 01            [ 2]  100 	ldw	x, (0x01, sp)
      00004D                        101 00109$:
      00004D 5B 0C            [ 2]  102 	addw	sp, #12
      00004F 81               [ 4]  103 	ret
                                    104 	.area CODE
                                    105 	.area INITIALIZER
                                    106 	.area CABS (ABS)
