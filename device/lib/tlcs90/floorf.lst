                              1 ;--------------------------------------------------------
                              2 ; File Created by SDCC : free open source ANSI-C Compiler
                              3 ; Version 3.5.0 #9253 (Apr  4 2022) (Linux)
                              4 ; This file was generated Mon Apr  4 14:16:33 2022
                              5 ;--------------------------------------------------------
                              6 	.module floorf
                              7 	.optsdcc -mtlcs90
                              8 	
                              9 ;--------------------------------------------------------
                             10 ; Public variables in this module
                             11 ;--------------------------------------------------------
                             12 	.globl _floorf
                             13 ;--------------------------------------------------------
                             14 ; ram data
                             15 ;--------------------------------------------------------
                             16 	.area _DATA
                             17 ;--------------------------------------------------------
                             18 ; ram data
                             19 ;--------------------------------------------------------
                             20 	.area _INITIALIZED
                             21 ;--------------------------------------------------------
                             22 ; absolute external ram data
                             23 ;--------------------------------------------------------
                             24 	.area _DABS (ABS)
                             25 ;--------------------------------------------------------
                             26 ; global & static initialisations
                             27 ;--------------------------------------------------------
                             28 	.area _HOME
                             29 	.area _GSINIT
                             30 	.area _GSFINAL
                             31 	.area _GSINIT
                             32 ;--------------------------------------------------------
                             33 ; Home
                             34 ;--------------------------------------------------------
                             35 	.area _HOME
                             36 	.area _HOME
                             37 ;--------------------------------------------------------
                             38 ; code
                             39 ;--------------------------------------------------------
                             40 	.area _CODE
                             41 ;../floorf.c:33: float floorf (float x) _FLOAT_FUNC_REENTRANT
                             42 ;	---------------------------------
                             43 ; Function floorf
                             44 ; ---------------------------------
   0000                      45 _floorf::
   0000 54            [ 4]   46 	push	ix
   0001 3C 00 00      [ 4]   47 	ld	ix,#0
   0004 FE 14         [ 7]   48 	add	ix,sp
   0006 16 F7 FF      [ 7]   49 	add	sp, #-9
                             50 ;../floorf.c:36: r=x;
   0009 F2 0F 4A      [10]   51 	ld	hl, 15 (sp)
   000C 52            [ 4]   52 	push	hl
   000D F2 0F 4A      [10]   53 	ld	hl, 15 (sp)
   0010 52            [ 4]   54 	push	hl
   0011 1Cr00r00      [ 4]   55 	call	___fs2slong
   0014 16 04 00      [ 7]   56 	add	sp, #4
   0017 F4 F7 25      [17]   57 	ld	-9 (ix),l
   001A F4 F8 24      [17]   58 	ld	-8 (ix),h
   001D F4 F9 23      [17]   59 	ld	-7 (ix),e
   0020 F4 FA 22      [17]   60 	ld	-6 (ix),d
                             61 ;../floorf.c:38: return (r+((r>x)?-1:0));
   0023 F2 02 4A      [10]   62 	ld	hl, 2 (sp)
   0026 52            [ 4]   63 	push	hl
   0027 F2 02 4A      [10]   64 	ld	hl, 2 (sp)
   002A 52            [ 4]   65 	push	hl
   002B 1Cr00r00      [ 4]   66 	call	___slong2fs
   002E 16 04 00      [ 7]   67 	add	sp, #4
   0031 F4 FE 22      [17]   68 	ld	-2 (ix),d
   0034 F4 FD 23      [17]   69 	ld	-3 (ix),e
   0037 F4 FC 24      [17]   70 	ld	-4 (ix),h
   003A F4 FB 25      [17]   71 	ld	-5 (ix),l
                             72 ;../floorf.c:37: if (r<=0)
   003D FE 65         [ 7]   73 	xor	a, a
   003F F0 F7 67      [11]   74 	cp	a, -9 (ix)
   0042 F0 F8 63      [11]   75 	sbc	a, -8 (ix)
   0045 36 00         [10]   76 	ld	a,#0x00
   0047 F0 F9 63      [11]   77 	sbc	a, -7 (ix)
   004A 36 00         [10]   78 	ld	a,#0x00
   004C F0 FA 63      [11]   79 	sbc	a, -6 (ix)
   004F EBr55r00 CC   [ 4]   80 	jp	PO, 00116$
   0053 6D 80         [ 4]   81 	xor	a, #0x80
   0055                      82 00116$:
   0055 EBrAFr00 C5   [ 4]   83 	jp	M,00102$
                             84 ;../floorf.c:38: return (r+((r>x)?-1:0));
   0059 F2 0F 4A      [10]   85 	ld	hl, 15 (sp)
   005C 52            [ 4]   86 	push	hl
   005D F2 0F 4A      [10]   87 	ld	hl, 15 (sp)
   0060 52            [ 4]   88 	push	hl
   0061 F2 0A 4A      [10]   89 	ld	hl, 10 (sp)
   0064 52            [ 4]   90 	push	hl
   0065 F2 0A 4A      [10]   91 	ld	hl, 10 (sp)
   0068 52            [ 4]   92 	push	hl
   0069 1Cr00r00      [ 4]   93 	call	___fsgt
   006C 16 08 00      [ 7]   94 	add	sp, #8
   006F F4 FF 25      [17]   95 	ld	-1 (ix), l
   0072 25            [ 4]   96 	ld	a, l
   0073 FE 66         [ 7]   97 	or	a, a
   0075 C6 06         [ 7]   98 	jr	Z,00106$
   0077 F4 FF 37 FF   [17]   99 	ld	-1 (ix),#0xFF
   007B C8 04         [11]  100 	jr	00107$
   007D                     101 00106$:
   007D F4 FF 37 00   [17]  102 	ld	-1 (ix),#0x00
   0081                     103 00107$:
   0081 F0 FF 2D      [11]  104 	ld	l,-1 (ix)
   0084 F0 FF 2E      [11]  105 	ld	a,-1 (ix)
   0087 A2            [ 4]  106 	rla
   0088 FE 63         [ 7]  107 	sbc	a, a
   008A 2C            [ 4]  108 	ld	h,a
   008B 2B            [ 6]  109 	ld	e,a
   008C 2A            [16]  110 	ld	d,a
   008D F0 F7 2E      [11]  111 	ld	a,-9 (ix)
   0090 FD 60               112 	add	a, l
   0092 2D            [ 4]  113 	ld	l,a
   0093 F0 F8 2E      [11]  114 	ld	a,-8 (ix)
   0096 FC 61         [17]  115 	adc	a, h
   0098 2C            [ 4]  116 	ld	h,a
   0099 F0 F9 2E      [11]  117 	ld	a,-7 (ix)
   009C FB 61         [ 4]  118 	adc	a, e
   009E 2B            [ 6]  119 	ld	e,a
   009F F0 FA 2E      [11]  120 	ld	a,-6 (ix)
   00A2 FA 61         [10]  121 	adc	a, d
   00A4 2A            [16]  122 	ld	d,a
   00A5 51            [ 4]  123 	push	de
   00A6 52            [ 4]  124 	push	hl
   00A7 1Cr00r00      [ 4]  125 	call	___slong2fs
   00AA 16 04 00      [ 7]  126 	add	sp, #4
   00AD C8 0C         [11]  127 	jr	00104$
   00AF                     128 00102$:
                            129 ;../floorf.c:40: return r;
   00AF F0 FB 2D      [11]  130 	ld	l,-5 (ix)
   00B2 F0 FC 2C      [11]  131 	ld	h,-4 (ix)
   00B5 F0 FD 2B      [11]  132 	ld	e,-3 (ix)
   00B8 F0 FE 2A      [11]  133 	ld	d,-2 (ix)
   00BB                     134 00104$:
   00BB FC 3E         [17]  135 	ld	sp, ix
   00BD 5C            [ 4]  136 	pop	ix
   00BE 1E            [ 7]  137 	ret
                            138 	.area _CODE
                            139 	.area _INITIALIZER
                            140 	.area _CABS (ABS)
