                                      1 ;--------------------------------------------------------
                                      2 ; File Created by SDCC : free open source ANSI-C Compiler
                                      3 ; Version 3.5.0 #9253 (Apr  4 2022) (Linux)
                                      4 ; This file was generated Mon Apr  4 14:10:26 2022
                                      5 ;--------------------------------------------------------
                                      6 	.module ispunct
                                      7 	.optsdcc -mds390 --model-flat24
                                      8 	
                                      9 ;--------------------------------------------------------
                                     10 ; CPU specific extensions
                                     11 ;--------------------------------------------------------
                                     12 	.DS80C390
                                     13 	.amode	2	; 24 bit flat addressing
                           000082    14 dpl	=	0x82
                           000083    15 dph	=	0x83
                           000084    16 dpl1	=	0x84
                           000085    17 dph1	=	0x85
                           000086    18 dps	=	0x86
                           000093    19 dpx	=	0x93
                           000095    20 dpx1	=	0x95
                           00009B    21 esp	=	0x9B
                           00009C    22 ap	=	0x9C
                           00009C    23 acc1	=	0x9C
                           0000D1    24 mcnt0	=	0xD1
                           0000D2    25 mcnt1	=	0xD2
                           0000D3    26 ma	=	0xD3
                           0000D4    27 mb	=	0xD4
                           0000D5    28 mc	=	0xD5
                           00009D    29 acon	=	0x9D
                           0000D1    30 F1	=	0xD1	; user flag
                                     31 ;--------------------------------------------------------
                                     32 ; Public variables in this module
                                     33 ;--------------------------------------------------------
                                     34 	.globl _isalnum
                                     35 	.globl _isspace
                                     36 	.globl _isprint
                                     37 	.globl _ispunct
                                     38 ;--------------------------------------------------------
                                     39 ; special function registers
                                     40 ;--------------------------------------------------------
                                     41 ;--------------------------------------------------------
                                     42 ; special function bits
                                     43 ;--------------------------------------------------------
                                     44 ;--------------------------------------------------------
                                     45 ; overlayable register banks
                                     46 ;--------------------------------------------------------
                                     47 	.area REG_BANK_0	(REL,OVR,DATA)
      000000                         48 	.ds 8
                                     49 ;--------------------------------------------------------
                                     50 ; internal ram data
                                     51 ;--------------------------------------------------------
                                     52 	.area DSEG    (DATA)
                                     53 ;--------------------------------------------------------
                                     54 ; overlayable items in internal ram 
                                     55 ;--------------------------------------------------------
                                     56 ;--------------------------------------------------------
                                     57 ; indirectly addressable internal ram data
                                     58 ;--------------------------------------------------------
                                     59 	.area ISEG    (DATA)
                                     60 ;--------------------------------------------------------
                                     61 ; absolute internal ram data
                                     62 ;--------------------------------------------------------
                                     63 	.area IABS    (ABS,DATA)
                                     64 	.area IABS    (ABS,DATA)
                                     65 ;--------------------------------------------------------
                                     66 ; bit data
                                     67 ;--------------------------------------------------------
                                     68 	.area BSEG    (BIT)
                                     69 ;--------------------------------------------------------
                                     70 ; paged external ram data
                                     71 ;--------------------------------------------------------
                                     72 	.area PSEG    (PAG,XDATA)
                                     73 ;--------------------------------------------------------
                                     74 ; external ram data
                                     75 ;--------------------------------------------------------
                                     76 	.area XSEG    (XDATA)
                                     77 ;--------------------------------------------------------
                                     78 ; absolute external ram data
                                     79 ;--------------------------------------------------------
                                     80 	.area XABS    (ABS,XDATA)
                                     81 ;--------------------------------------------------------
                                     82 ; external initialized ram data
                                     83 ;--------------------------------------------------------
                                     84 	.area XISEG   (XDATA)
                                     85 ;--------------------------------------------------------
                                     86 ; global & static initialisations
                                     87 ;--------------------------------------------------------
                                     88 	.area HOME    (CODE)
                                     89 	.area GSINIT  (CODE)
                                     90 	.area GSFINAL (CODE)
                                     91 	.area GSINIT  (CODE)
                                     92 ;--------------------------------------------------------
                                     93 ; Home
                                     94 ;--------------------------------------------------------
                                     95 	.area HOME    (CODE)
                                     96 	.area HOME    (CODE)
                                     97 ;--------------------------------------------------------
                                     98 ; code
                                     99 ;--------------------------------------------------------
                                    100 	.area CSEG    (CODE)
                                    101 ;------------------------------------------------------------
                                    102 ;Allocation info for local variables in function 'ispunct'
                                    103 ;------------------------------------------------------------
                                    104 ;c                         Allocated to registers r2 r3 
                                    105 ;------------------------------------------------------------
                                    106 ;	ispunct.c:33: int ispunct (int c)
                                    107 ;	-----------------------------------------
                                    108 ;	 function ispunct
                                    109 ;	-----------------------------------------
      000000                        110 _ispunct:
                           000002   111 	ar2 = 0x02
                           000003   112 	ar3 = 0x03
                           000004   113 	ar4 = 0x04
                           000005   114 	ar5 = 0x05
                           000006   115 	ar6 = 0x06
                           000007   116 	ar7 = 0x07
                           000000   117 	ar0 = 0x00
                           000001   118 	ar1 = 0x01
      000000 AA 82            [ 8]  119 	mov	r2,dpl
      000002 AB 83            [ 8]  120 	mov	r3,dph
                                    121 ;	ispunct.c:35: return (isprint (c) && !isspace (c) && !isalnum (c));
      000004 C0 02            [ 8]  122 	push	ar2
      000006 C0 03            [ 8]  123 	push	ar3
      000008 8A 82            [ 8]  124 	mov	dpl,r2
      00000A 8B 83            [ 8]  125 	mov	dph,r3
      00000C 12s00r00r00      [16]  126 	lcall	_isprint
      000010 D0 03            [ 8]  127 	pop	ar3
      000012 D0 02            [ 8]  128 	pop	ar2
      000014 E5 82            [ 8]  129 	mov	a,dpl
      000016 45 83            [ 8]  130 	orl	a,dph
      000018 60 24            [12]  131 	jz  00103$
      00001A                        132 00114$:
      00001A C0 02            [ 8]  133 	push	ar2
      00001C C0 03            [ 8]  134 	push	ar3
      00001E 8A 82            [ 8]  135 	mov	dpl,r2
      000020 8B 83            [ 8]  136 	mov	dph,r3
      000022 12s00r00r00      [16]  137 	lcall	_isspace
      000026 D0 03            [ 8]  138 	pop	ar3
      000028 D0 02            [ 8]  139 	pop	ar2
      00002A E5 82            [ 8]  140 	mov	a,dpl
      00002C 45 83            [ 8]  141 	orl	a,dph
      00002E 70 0E            [12]  142 	jnz  00103$
      000030                        143 00115$:
      000030 8A 82            [ 8]  144 	mov	dpl,r2
      000032 8B 83            [ 8]  145 	mov	dph,r3
      000034 12s00r00r00      [16]  146 	lcall	_isalnum
      000038 E5 82            [ 8]  147 	mov	a,dpl
      00003A 45 83            [ 8]  148 	orl	a,dph
      00003C 60 04            [12]  149 	jz  00104$
      00003E                        150 00116$:
      00003E                        151 00103$:
                                    152 ;	genAssign: resultIsFar = FALSE
      00003E 7A 00            [ 8]  153 	mov	r2,#0x00
      000040 80 02            [12]  154 	sjmp 00105$
      000042                        155 00104$:
                                    156 ;	genAssign: resultIsFar = FALSE
      000042 7A 01            [ 8]  157 	mov	r2,#0x01
      000044                        158 00105$:
      000044 8A 84            [ 8]  159 	mov	dpl1,r2
      000046 EA               [ 4]  160 	mov	a,r2
      000047 33               [ 4]  161 	rlc	a
      000048 95 E0            [ 8]  162 	subb	a,acc
      00004A F5 85            [ 8]  163 	mov	dph1,a
      00004C 85 84 82         [12]  164 	mov	dpl,dpl1
      00004F 85 85 83         [12]  165 	mov	dph,dph1
      000052                        166 00101$:
      000052 22               [16]  167 	ret
                                    168 	.area CSEG    (CODE)
                                    169 	.area CONST   (CODE)
                                    170 	.area XINIT   (CODE)
                                    171 	.area CABS    (ABS,CODE)
