                                      1 ;--------------------------------------------------------
                                      2 ; File Created by SDCC : free open source ANSI-C Compiler
                                      3 ; Version 3.5.0 #9253 (Apr  4 2022) (Linux)
                                      4 ; This file was generated Mon Apr  4 14:17:02 2022
                                      5 ;--------------------------------------------------------
                                      6 	.module powf
                                      7 	.optsdcc -mstm8
                                      8 	
                                      9 ;--------------------------------------------------------
                                     10 ; Public variables in this module
                                     11 ;--------------------------------------------------------
                                     12 	.globl _logf
                                     13 	.globl _expf
                                     14 	.globl _powf
                                     15 ;--------------------------------------------------------
                                     16 ; ram data
                                     17 ;--------------------------------------------------------
                                     18 	.area DATA
                                     19 ;--------------------------------------------------------
                                     20 ; ram data
                                     21 ;--------------------------------------------------------
                                     22 	.area INITIALIZED
                                     23 ;--------------------------------------------------------
                                     24 ; absolute external ram data
                                     25 ;--------------------------------------------------------
                                     26 	.area DABS (ABS)
                                     27 ;--------------------------------------------------------
                                     28 ; global & static initialisations
                                     29 ;--------------------------------------------------------
                                     30 	.area HOME
                                     31 	.area GSINIT
                                     32 	.area GSFINAL
                                     33 	.area GSINIT
                                     34 ;--------------------------------------------------------
                                     35 ; Home
                                     36 ;--------------------------------------------------------
                                     37 	.area HOME
                                     38 	.area HOME
                                     39 ;--------------------------------------------------------
                                     40 ; code
                                     41 ;--------------------------------------------------------
                                     42 	.area CODE
                                     43 ;	../powf.c: 35: float powf(float x, float y)
                                     44 ;	-----------------------------------------
                                     45 ;	 function powf
                                     46 ;	-----------------------------------------
      000000                         47 _powf:
      000000 52 04            [ 2]   48 	sub	sp, #4
                                     49 ;	../powf.c: 37: if(y == 0.0) return 1.0;
      000002 1E 0D            [ 2]   50 	ldw	x, (0x0d, sp)
      000004 26 0C            [ 1]   51 	jrne	00102$
      000006 1E 0B            [ 2]   52 	ldw	x, (0x0b, sp)
      000008 58               [ 2]   53 	sllw	x
      000009 26 07            [ 1]   54 	jrne	00102$
      00000B 5F               [ 1]   55 	clrw	x
      00000C 90 AE 3F 80      [ 2]   56 	ldw	y, #0x3f80
      000010 20 56            [ 2]   57 	jra	00107$
      000012                         58 00102$:
                                     59 ;	../powf.c: 38: if(y == 1.0) return x;
      000012 5F               [ 1]   60 	clrw	x
      000013 89               [ 2]   61 	pushw	x
      000014 4B 80            [ 1]   62 	push	#0x80
      000016 4B 3F            [ 1]   63 	push	#0x3f
      000018 1E 11            [ 2]   64 	ldw	x, (0x11, sp)
      00001A 89               [ 2]   65 	pushw	x
      00001B 1E 11            [ 2]   66 	ldw	x, (0x11, sp)
      00001D 89               [ 2]   67 	pushw	x
      00001E CDr00r00         [ 4]   68 	call	___fseq
      000021 5B 08            [ 2]   69 	addw	sp, #8
      000023 4D               [ 1]   70 	tnz	a
      000024 27 06            [ 1]   71 	jreq	00104$
      000026 1E 09            [ 2]   72 	ldw	x, (0x09, sp)
      000028 16 07            [ 2]   73 	ldw	y, (0x07, sp)
      00002A 20 3C            [ 2]   74 	jra	00107$
      00002C                         75 00104$:
                                     76 ;	../powf.c: 39: if(x <= 0.0) return 0.0;
      00002C 5F               [ 1]   77 	clrw	x
      00002D 89               [ 2]   78 	pushw	x
      00002E 5F               [ 1]   79 	clrw	x
      00002F 89               [ 2]   80 	pushw	x
      000030 1E 0D            [ 2]   81 	ldw	x, (0x0d, sp)
      000032 89               [ 2]   82 	pushw	x
      000033 1E 0D            [ 2]   83 	ldw	x, (0x0d, sp)
      000035 89               [ 2]   84 	pushw	x
      000036 CDr00r00         [ 4]   85 	call	___fsgt
      000039 5B 08            [ 2]   86 	addw	sp, #8
      00003B 4D               [ 1]   87 	tnz	a
      00003C 26 05            [ 1]   88 	jrne	00106$
      00003E 5F               [ 1]   89 	clrw	x
      00003F 90 5F            [ 1]   90 	clrw	y
      000041 20 25            [ 2]   91 	jra	00107$
      000043                         92 00106$:
                                     93 ;	../powf.c: 40: return expf(logf(x) * y);
      000043 1E 09            [ 2]   94 	ldw	x, (0x09, sp)
      000045 89               [ 2]   95 	pushw	x
      000046 1E 09            [ 2]   96 	ldw	x, (0x09, sp)
      000048 89               [ 2]   97 	pushw	x
      000049 CDr00r00         [ 4]   98 	call	_logf
      00004C 5B 04            [ 2]   99 	addw	sp, #4
      00004E 1F 03            [ 2]  100 	ldw	(0x03, sp), x
      000050 1E 0D            [ 2]  101 	ldw	x, (0x0d, sp)
      000052 89               [ 2]  102 	pushw	x
      000053 1E 0D            [ 2]  103 	ldw	x, (0x0d, sp)
      000055 89               [ 2]  104 	pushw	x
      000056 1E 07            [ 2]  105 	ldw	x, (0x07, sp)
      000058 89               [ 2]  106 	pushw	x
      000059 90 89            [ 2]  107 	pushw	y
      00005B CDr00r00         [ 4]  108 	call	___fsmul
      00005E 5B 08            [ 2]  109 	addw	sp, #8
      000060 89               [ 2]  110 	pushw	x
      000061 90 89            [ 2]  111 	pushw	y
      000063 CDr00r00         [ 4]  112 	call	_expf
      000066 5B 04            [ 2]  113 	addw	sp, #4
      000068                        114 00107$:
      000068 5B 04            [ 2]  115 	addw	sp, #4
      00006A 81               [ 4]  116 	ret
                                    117 	.area CODE
                                    118 	.area INITIALIZER
                                    119 	.area CABS (ABS)
