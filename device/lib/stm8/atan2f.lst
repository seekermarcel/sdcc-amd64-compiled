                                      1 ;--------------------------------------------------------
                                      2 ; File Created by SDCC : free open source ANSI-C Compiler
                                      3 ; Version 3.5.0 #9253 (Apr  4 2022) (Linux)
                                      4 ; This file was generated Mon Apr  4 14:17:08 2022
                                      5 ;--------------------------------------------------------
                                      6 	.module atan2f
                                      7 	.optsdcc -mstm8
                                      8 	
                                      9 ;--------------------------------------------------------
                                     10 ; Public variables in this module
                                     11 ;--------------------------------------------------------
                                     12 	.globl _fabsf
                                     13 	.globl _atanf
                                     14 	.globl _atan2f
                                     15 ;--------------------------------------------------------
                                     16 ; ram data
                                     17 ;--------------------------------------------------------
                                     18 	.area DATA
                                     19 ;--------------------------------------------------------
                                     20 ; ram data
                                     21 ;--------------------------------------------------------
                                     22 	.area INITIALIZED
                                     23 ;--------------------------------------------------------
                                     24 ; absolute external ram data
                                     25 ;--------------------------------------------------------
                                     26 	.area DABS (ABS)
                                     27 ;--------------------------------------------------------
                                     28 ; global & static initialisations
                                     29 ;--------------------------------------------------------
                                     30 	.area HOME
                                     31 	.area GSINIT
                                     32 	.area GSFINAL
                                     33 	.area GSINIT
                                     34 ;--------------------------------------------------------
                                     35 ; Home
                                     36 ;--------------------------------------------------------
                                     37 	.area HOME
                                     38 	.area HOME
                                     39 ;--------------------------------------------------------
                                     40 ; code
                                     41 ;--------------------------------------------------------
                                     42 	.area CODE
                                     43 ;	../atan2f.c: 34: float atan2f(float x, float y)
                                     44 ;	-----------------------------------------
                                     45 ;	 function atan2f
                                     46 ;	-----------------------------------------
      000000                         47 _atan2f:
      000000 52 1E            [ 2]   48 	sub	sp, #30
                                     49 ;	../atan2f.c: 38: if ((x==0.0) && (y==0.0))
      000002 1E 23            [ 2]   50 	ldw	x, (0x23, sp)
      000004 26 1A            [ 1]   51 	jrne	00102$
      000006 1E 21            [ 2]   52 	ldw	x, (0x21, sp)
      000008 58               [ 2]   53 	sllw	x
      000009 26 15            [ 1]   54 	jrne	00102$
      00000B 1E 27            [ 2]   55 	ldw	x, (0x27, sp)
      00000D 26 11            [ 1]   56 	jrne	00102$
      00000F 1E 25            [ 2]   57 	ldw	x, (0x25, sp)
      000011 58               [ 2]   58 	sllw	x
      000012 26 0C            [ 1]   59 	jrne	00102$
                                     60 ;	../atan2f.c: 40: errno=EDOM;
      000014 AE 00 21         [ 2]   61 	ldw	x, #0x0021
      000017 CFu00u00         [ 2]   62 	ldw	_errno+0, x
                                     63 ;	../atan2f.c: 41: return 0.0;
      00001A 5F               [ 1]   64 	clrw	x
      00001B 90 5F            [ 1]   65 	clrw	y
      00001D CCr01r1D         [ 2]   66 	jp	00109$
      000020                         67 00102$:
                                     68 ;	../atan2f.c: 44: if(fabsf(y)>=fabsf(x))
      000020 1E 27            [ 2]   69 	ldw	x, (0x27, sp)
      000022 89               [ 2]   70 	pushw	x
      000023 1E 27            [ 2]   71 	ldw	x, (0x27, sp)
      000025 89               [ 2]   72 	pushw	x
      000026 CDr00r00         [ 4]   73 	call	_fabsf
      000029 5B 04            [ 2]   74 	addw	sp, #4
      00002B 1F 18            [ 2]   75 	ldw	(0x18, sp), x
      00002D 17 16            [ 2]   76 	ldw	(0x16, sp), y
      00002F 1E 23            [ 2]   77 	ldw	x, (0x23, sp)
      000031 89               [ 2]   78 	pushw	x
      000032 1E 23            [ 2]   79 	ldw	x, (0x23, sp)
      000034 89               [ 2]   80 	pushw	x
      000035 CDr00r00         [ 4]   81 	call	_fabsf
      000038 5B 04            [ 2]   82 	addw	sp, #4
      00003A 1F 1D            [ 2]   83 	ldw	(0x1d, sp), x
      00003C 17 1B            [ 2]   84 	ldw	(0x1b, sp), y
                                     85 ;	../atan2f.c: 47: if(y<0.0) r+=(x>=0?PI:-PI);
      00003E 5F               [ 1]   86 	clrw	x
      00003F 89               [ 2]   87 	pushw	x
      000040 5F               [ 1]   88 	clrw	x
      000041 89               [ 2]   89 	pushw	x
      000042 1E 27            [ 2]   90 	ldw	x, (0x27, sp)
      000044 89               [ 2]   91 	pushw	x
      000045 1E 27            [ 2]   92 	ldw	x, (0x27, sp)
      000047 89               [ 2]   93 	pushw	x
                                     94 ;	../atan2f.c: 44: if(fabsf(y)>=fabsf(x))
      000048 CDr00r00         [ 4]   95 	call	___fslt
      00004B 5B 08            [ 2]   96 	addw	sp, #8
      00004D 6B 1A            [ 1]   97 	ld	(0x1a, sp), a
      00004F 1E 1D            [ 2]   98 	ldw	x, (0x1d, sp)
      000051 89               [ 2]   99 	pushw	x
      000052 1E 1D            [ 2]  100 	ldw	x, (0x1d, sp)
      000054 89               [ 2]  101 	pushw	x
      000055 1E 1C            [ 2]  102 	ldw	x, (0x1c, sp)
      000057 89               [ 2]  103 	pushw	x
      000058 1E 1C            [ 2]  104 	ldw	x, (0x1c, sp)
      00005A 89               [ 2]  105 	pushw	x
      00005B CDr00r00         [ 4]  106 	call	___fslt
      00005E 5B 08            [ 2]  107 	addw	sp, #8
      000060 6B 11            [ 1]  108 	ld	(0x11, sp), a
      000062 0D 11            [ 1]  109 	tnz	(0x11, sp)
      000064 26 63            [ 1]  110 	jrne	00107$
                                    111 ;	../atan2f.c: 46: r=atanf(x/y);
      000066 1E 27            [ 2]  112 	ldw	x, (0x27, sp)
      000068 89               [ 2]  113 	pushw	x
      000069 1E 27            [ 2]  114 	ldw	x, (0x27, sp)
      00006B 89               [ 2]  115 	pushw	x
      00006C 1E 27            [ 2]  116 	ldw	x, (0x27, sp)
      00006E 89               [ 2]  117 	pushw	x
      00006F 1E 27            [ 2]  118 	ldw	x, (0x27, sp)
      000071 89               [ 2]  119 	pushw	x
      000072 CDr00r00         [ 4]  120 	call	___fsdiv
      000075 5B 08            [ 2]  121 	addw	sp, #8
      000077 89               [ 2]  122 	pushw	x
      000078 90 89            [ 2]  123 	pushw	y
      00007A CDr00r00         [ 4]  124 	call	_atanf
      00007D 5B 04            [ 2]  125 	addw	sp, #4
      00007F 1F 0F            [ 2]  126 	ldw	(0x0f, sp), x
      000081 17 0D            [ 2]  127 	ldw	(0x0d, sp), y
                                    128 ;	../atan2f.c: 47: if(y<0.0) r+=(x>=0?PI:-PI);
      000083 5F               [ 1]  129 	clrw	x
      000084 89               [ 2]  130 	pushw	x
      000085 5F               [ 1]  131 	clrw	x
      000086 89               [ 2]  132 	pushw	x
      000087 1E 2B            [ 2]  133 	ldw	x, (0x2b, sp)
      000089 89               [ 2]  134 	pushw	x
      00008A 1E 2B            [ 2]  135 	ldw	x, (0x2b, sp)
      00008C 89               [ 2]  136 	pushw	x
      00008D CDr00r00         [ 4]  137 	call	___fslt
      000090 5B 08            [ 2]  138 	addw	sp, #8
      000092 4D               [ 1]  139 	tnz	a
      000093 26 03            [ 1]  140 	jrne	00144$
      000095 CCr01r19         [ 2]  141 	jp	00108$
      000098                        142 00144$:
      000098 0D 1A            [ 1]  143 	tnz	(0x1a, sp)
      00009A 26 0C            [ 1]  144 	jrne	00111$
      00009C AE 0F DB         [ 2]  145 	ldw	x, #0x0fdb
      00009F 1F 0B            [ 2]  146 	ldw	(0x0b, sp), x
      0000A1 AE 40 49         [ 2]  147 	ldw	x, #0x4049
      0000A4 1F 09            [ 2]  148 	ldw	(0x09, sp), x
      0000A6 20 0A            [ 2]  149 	jra	00112$
      0000A8                        150 00111$:
      0000A8 AE 0F DB         [ 2]  151 	ldw	x, #0x0fdb
      0000AB 1F 0B            [ 2]  152 	ldw	(0x0b, sp), x
      0000AD AE C0 49         [ 2]  153 	ldw	x, #0xc049
      0000B0 1F 09            [ 2]  154 	ldw	(0x09, sp), x
      0000B2                        155 00112$:
      0000B2 1E 0B            [ 2]  156 	ldw	x, (0x0b, sp)
      0000B4 89               [ 2]  157 	pushw	x
      0000B5 1E 0B            [ 2]  158 	ldw	x, (0x0b, sp)
      0000B7 89               [ 2]  159 	pushw	x
      0000B8 1E 13            [ 2]  160 	ldw	x, (0x13, sp)
      0000BA 89               [ 2]  161 	pushw	x
      0000BB 1E 13            [ 2]  162 	ldw	x, (0x13, sp)
      0000BD 89               [ 2]  163 	pushw	x
      0000BE CDr00r00         [ 4]  164 	call	___fsadd
      0000C1 5B 08            [ 2]  165 	addw	sp, #8
      0000C3 1F 0F            [ 2]  166 	ldw	(0x0f, sp), x
      0000C5 17 0D            [ 2]  167 	ldw	(0x0d, sp), y
      0000C7 20 50            [ 2]  168 	jra	00108$
      0000C9                        169 00107$:
                                    170 ;	../atan2f.c: 51: r=-atanf(y/x);
      0000C9 1E 23            [ 2]  171 	ldw	x, (0x23, sp)
      0000CB 89               [ 2]  172 	pushw	x
      0000CC 1E 23            [ 2]  173 	ldw	x, (0x23, sp)
      0000CE 89               [ 2]  174 	pushw	x
      0000CF 1E 2B            [ 2]  175 	ldw	x, (0x2b, sp)
      0000D1 89               [ 2]  176 	pushw	x
      0000D2 1E 2B            [ 2]  177 	ldw	x, (0x2b, sp)
      0000D4 89               [ 2]  178 	pushw	x
      0000D5 CDr00r00         [ 4]  179 	call	___fsdiv
      0000D8 5B 08            [ 2]  180 	addw	sp, #8
      0000DA 89               [ 2]  181 	pushw	x
      0000DB 90 89            [ 2]  182 	pushw	y
      0000DD CDr00r00         [ 4]  183 	call	_atanf
      0000E0 5B 04            [ 2]  184 	addw	sp, #4
      0000E2 51               [ 1]  185 	exgw	x, y
      0000E3 58               [ 2]  186 	sllw	x
      0000E4 8C               [ 1]  187 	ccf
      0000E5 56               [ 2]  188 	rrcw	x
      0000E6 17 03            [ 2]  189 	ldw	(0x03, sp), y
      0000E8 1F 01            [ 2]  190 	ldw	(0x01, sp), x
                                    191 ;	../atan2f.c: 52: r+=(x<0.0?-HALF_PI:HALF_PI);
      0000EA 0D 1A            [ 1]  192 	tnz	(0x1a, sp)
      0000EC 27 0B            [ 1]  193 	jreq	00113$
      0000EE AE 0F DB         [ 2]  194 	ldw	x, #0x0fdb
      0000F1 90 AE BF C9      [ 2]  195 	ldw	y, #0xbfc9
      0000F5 17 05            [ 2]  196 	ldw	(0x05, sp), y
      0000F7 20 09            [ 2]  197 	jra	00114$
      0000F9                        198 00113$:
      0000F9 AE 0F DB         [ 2]  199 	ldw	x, #0x0fdb
      0000FC 90 AE 3F C9      [ 2]  200 	ldw	y, #0x3fc9
      000100 17 05            [ 2]  201 	ldw	(0x05, sp), y
      000102                        202 00114$:
      000102 89               [ 2]  203 	pushw	x
      000103 1E 07            [ 2]  204 	ldw	x, (0x07, sp)
      000105 89               [ 2]  205 	pushw	x
      000106 1E 07            [ 2]  206 	ldw	x, (0x07, sp)
      000108 89               [ 2]  207 	pushw	x
      000109 1E 07            [ 2]  208 	ldw	x, (0x07, sp)
      00010B 89               [ 2]  209 	pushw	x
      00010C CDr00r00         [ 4]  210 	call	___fsadd
      00010F 5B 08            [ 2]  211 	addw	sp, #8
      000111 1F 14            [ 2]  212 	ldw	(0x14, sp), x
      000113 17 0D            [ 2]  213 	ldw	(0x0d, sp), y
      000115 16 14            [ 2]  214 	ldw	y, (0x14, sp)
      000117 17 0F            [ 2]  215 	ldw	(0x0f, sp), y
      000119                        216 00108$:
                                    217 ;	../atan2f.c: 54: return r;
      000119 1E 0F            [ 2]  218 	ldw	x, (0x0f, sp)
      00011B 16 0D            [ 2]  219 	ldw	y, (0x0d, sp)
      00011D                        220 00109$:
      00011D 5B 1E            [ 2]  221 	addw	sp, #30
      00011F 81               [ 4]  222 	ret
                                    223 	.area CODE
                                    224 	.area INITIALIZER
                                    225 	.area CABS (ABS)
