                              1 ;--------------------------------------------------------
                              2 ; File Created by SDCC : free open source ANSI-C Compiler
                              3 ; Version 3.5.0 #9253 (Apr  4 2022) (Linux)
                              4 ; This file was generated Mon Apr  4 14:15:27 2022
                              5 ;--------------------------------------------------------
                              6 	.module _strncmp
                              7 	.optsdcc -mz80
                              8 	
                              9 ;--------------------------------------------------------
                             10 ; Public variables in this module
                             11 ;--------------------------------------------------------
                             12 	.globl _strncmp
                             13 ;--------------------------------------------------------
                             14 ; special function registers
                             15 ;--------------------------------------------------------
                             16 ;--------------------------------------------------------
                             17 ; ram data
                             18 ;--------------------------------------------------------
                             19 	.area _DATA
                             20 ;--------------------------------------------------------
                             21 ; ram data
                             22 ;--------------------------------------------------------
                             23 	.area _INITIALIZED
                             24 ;--------------------------------------------------------
                             25 ; absolute external ram data
                             26 ;--------------------------------------------------------
                             27 	.area _DABS (ABS)
                             28 ;--------------------------------------------------------
                             29 ; global & static initialisations
                             30 ;--------------------------------------------------------
                             31 	.area _HOME
                             32 	.area _GSINIT
                             33 	.area _GSFINAL
                             34 	.area _GSINIT
                             35 ;--------------------------------------------------------
                             36 ; Home
                             37 ;--------------------------------------------------------
                             38 	.area _HOME
                             39 	.area _HOME
                             40 ;--------------------------------------------------------
                             41 ; code
                             42 ;--------------------------------------------------------
                             43 	.area _CODE
                             44 ;../_strncmp.c:31: int strncmp ( const char * first, const char * last, size_t count )
                             45 ;	---------------------------------
                             46 ; Function strncmp
                             47 ; ---------------------------------
   0000                      48 _strncmp::
   0000 DD E5         [15]   49 	push	ix
   0002 DD 21 00 00   [14]   50 	ld	ix,#0
   0006 DD 39         [15]   51 	add	ix,sp
   0008 21 FA FF      [10]   52 	ld	hl,#-6
   000B 39            [11]   53 	add	hl,sp
   000C F9            [ 6]   54 	ld	sp,hl
                             55 ;../_strncmp.c:33: if (!count)
   000D DD 7E 09      [19]   56 	ld	a,9 (ix)
   0010 DD B6 08      [19]   57 	or	a,8 (ix)
   0013 20 05         [12]   58 	jr	NZ,00114$
                             59 ;../_strncmp.c:34: return(0);
   0015 21 00 00      [10]   60 	ld	hl,#0x0000
   0018 18 64         [12]   61 	jr	00108$
                             62 ;../_strncmp.c:36: while (--count && *first && *first == *last) {
   001A                      63 00114$:
   001A DD 7E 04      [19]   64 	ld	a,4 (ix)
   001D DD 77 FC      [19]   65 	ld	-4 (ix),a
   0020 DD 7E 05      [19]   66 	ld	a,5 (ix)
   0023 DD 77 FD      [19]   67 	ld	-3 (ix),a
   0026 DD 7E 06      [19]   68 	ld	a,6 (ix)
   0029 DD 77 FE      [19]   69 	ld	-2 (ix),a
   002C DD 7E 07      [19]   70 	ld	a,7 (ix)
   002F DD 77 FF      [19]   71 	ld	-1 (ix),a
   0032 DD 7E 08      [19]   72 	ld	a,8 (ix)
   0035 DD 77 FA      [19]   73 	ld	-6 (ix),a
   0038 DD 7E 09      [19]   74 	ld	a,9 (ix)
   003B DD 77 FB      [19]   75 	ld	-5 (ix),a
   003E                      76 00105$:
   003E E1            [10]   77 	pop	hl
   003F E5            [11]   78 	push	hl
   0040 2B            [ 6]   79 	dec	hl
   0041 E3            [19]   80 	ex	(sp), hl
   0042 DD 6E FC      [19]   81 	ld	l,-4 (ix)
   0045 DD 66 FD      [19]   82 	ld	h,-3 (ix)
   0048 5E            [ 7]   83 	ld	e,(hl)
   0049 DD 6E FE      [19]   84 	ld	l,-2 (ix)
   004C DD 66 FF      [19]   85 	ld	h,-1 (ix)
   004F 4E            [ 7]   86 	ld	c,(hl)
   0050 DD 7E FB      [19]   87 	ld	a,-5 (ix)
   0053 DD B6 FA      [19]   88 	or	a,-6 (ix)
   0056 28 1A         [12]   89 	jr	Z,00107$
   0058 7B            [ 4]   90 	ld	a,e
   0059 B7            [ 4]   91 	or	a, a
   005A 28 16         [12]   92 	jr	Z,00107$
   005C 7B            [ 4]   93 	ld	a,e
   005D 91            [ 4]   94 	sub	a, c
   005E 20 12         [12]   95 	jr	NZ,00107$
                             96 ;../_strncmp.c:37: first++;
   0060 DD 34 FC      [23]   97 	inc	-4 (ix)
   0063 20 03         [12]   98 	jr	NZ,00133$
   0065 DD 34 FD      [23]   99 	inc	-3 (ix)
   0068                     100 00133$:
                            101 ;../_strncmp.c:38: last++;
   0068 DD 34 FE      [23]  102 	inc	-2 (ix)
   006B 20 D1         [12]  103 	jr	NZ,00105$
   006D DD 34 FF      [23]  104 	inc	-1 (ix)
   0070 18 CC         [12]  105 	jr	00105$
   0072                     106 00107$:
                            107 ;../_strncmp.c:41: return( *first - *last );
   0072 7B            [ 4]  108 	ld	a,e
   0073 6F            [ 4]  109 	ld	l,a
   0074 17            [ 4]  110 	rla
   0075 9F            [ 4]  111 	sbc	a, a
   0076 67            [ 4]  112 	ld	h,a
   0077 79            [ 4]  113 	ld	a,c
   0078 17            [ 4]  114 	rla
   0079 9F            [ 4]  115 	sbc	a, a
   007A 47            [ 4]  116 	ld	b,a
   007B BF            [ 4]  117 	cp	a, a
   007C ED 42         [15]  118 	sbc	hl, bc
   007E                     119 00108$:
   007E DD F9         [10]  120 	ld	sp, ix
   0080 DD E1         [14]  121 	pop	ix
   0082 C9            [10]  122 	ret
                            123 	.area _CODE
                            124 	.area _INITIALIZER
                            125 	.area _CABS (ABS)
