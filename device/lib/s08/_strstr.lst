                              1 ;--------------------------------------------------------
                              2 ; File Created by SDCC : free open source ANSI-C Compiler
                              3 ; Version 3.5.0 #9253 (Apr  4 2022) (Linux)
                              4 ; This file was generated Mon Apr  4 14:10:37 2022
                              5 ;--------------------------------------------------------
                              6 	.cs08
                              7 	.module _strstr
                              8 	.optsdcc -ms08
                              9 	
                             10 	.area HOME    (CODE)
                             11 	.area GSINIT0 (CODE)
                             12 	.area GSINIT  (CODE)
                             13 	.area GSFINAL (CODE)
                             14 	.area CSEG    (CODE)
                             15 	.area XINIT   (CODE)
                             16 	.area CONST   (CODE)
                             17 	.area DSEG    (PAG)
                             18 	.area OSEG    (PAG, OVR)
                             19 	.area XSEG
                             20 	.area XISEG
                             21 ;--------------------------------------------------------
                             22 ; Public variables in this module
                             23 ;--------------------------------------------------------
                             24 	.globl _strstr_PARM_2
                             25 	.globl _strstr
                             26 ;--------------------------------------------------------
                             27 ; ram data
                             28 ;--------------------------------------------------------
                             29 	.area DSEG    (PAG)
                             30 ;--------------------------------------------------------
                             31 ; overlayable items in ram 
                             32 ;--------------------------------------------------------
                             33 	.area	OSEG    (PAG, OVR)
   0000                      34 _strstr_sloc0_1_0:
   0000                      35 	.ds 2
   0002                      36 _strstr_sloc1_1_0:
   0002                      37 	.ds 2
   0004                      38 _strstr_sloc2_1_0:
   0004                      39 	.ds 2
   0006                      40 _strstr_sloc3_1_0:
   0006                      41 	.ds 2
   0008                      42 _strstr_sloc4_1_0:
   0008                      43 	.ds 2
   000A                      44 _strstr_sloc5_1_0:
   000A                      45 	.ds 2
                             46 ;--------------------------------------------------------
                             47 ; absolute ram data
                             48 ;--------------------------------------------------------
                             49 	.area IABS    (ABS)
                             50 	.area IABS    (ABS)
                             51 ;--------------------------------------------------------
                             52 ; absolute external ram data
                             53 ;--------------------------------------------------------
                             54 	.area XABS    (ABS)
                             55 ;--------------------------------------------------------
                             56 ; external initialized ram data
                             57 ;--------------------------------------------------------
                             58 	.area XISEG
                             59 ;--------------------------------------------------------
                             60 ; extended address mode data
                             61 ;--------------------------------------------------------
                             62 	.area XSEG
   0000                      63 _strstr_PARM_2:
   0000                      64 	.ds 2
   0002                      65 _strstr_str1_1_21:
   0002                      66 	.ds 2
   0004                      67 _strstr_cp_1_22:
   0004                      68 	.ds 2
                             69 ;--------------------------------------------------------
                             70 ; global & static initialisations
                             71 ;--------------------------------------------------------
                             72 	.area HOME    (CODE)
                             73 	.area GSINIT  (CODE)
                             74 	.area GSFINAL (CODE)
                             75 	.area GSINIT  (CODE)
                             76 ;--------------------------------------------------------
                             77 ; Home
                             78 ;--------------------------------------------------------
                             79 	.area HOME    (CODE)
                             80 	.area HOME    (CODE)
                             81 ;--------------------------------------------------------
                             82 ; code
                             83 ;--------------------------------------------------------
                             84 	.area CSEG    (CODE)
                             85 ;------------------------------------------------------------
                             86 ;Allocation info for local variables in function 'strstr'
                             87 ;------------------------------------------------------------
                             88 ;str2                      Allocated with name '_strstr_PARM_2'
                             89 ;str1                      Allocated with name '_strstr_str1_1_21'
                             90 ;cp                        Allocated with name '_strstr_cp_1_22'
                             91 ;s1                        Allocated to registers 
                             92 ;s2                        Allocated to registers 
                             93 ;sloc0                     Allocated with name '_strstr_sloc0_1_0'
                             94 ;sloc1                     Allocated with name '_strstr_sloc1_1_0'
                             95 ;sloc2                     Allocated with name '_strstr_sloc2_1_0'
                             96 ;sloc3                     Allocated with name '_strstr_sloc3_1_0'
                             97 ;sloc4                     Allocated with name '_strstr_sloc4_1_0'
                             98 ;sloc5                     Allocated with name '_strstr_sloc5_1_0'
                             99 ;------------------------------------------------------------
                            100 ;../_strstr.c:31: char * strstr ( const char * str1, const char * str2 )
                            101 ;	-----------------------------------------
                            102 ;	 function strstr
                            103 ;	-----------------------------------------
                            104 ;	Register assignment might be sub-optimal.
                            105 ;	Stack space usage: 0 bytes.
   0000                     106 _strstr:
   0000 C7r00r03      [ 4]  107 	sta	(_strstr_str1_1_21 + 1)
   0003 CFr00r02      [ 4]  108 	stx	_strstr_str1_1_21
                            109 ;../_strstr.c:33: const char * cp = str1;
   0006 32r00r02      [ 5]  110 	ldhx	_strstr_str1_1_21
   0009 96r00r04      [ 5]  111 	sthx	_strstr_cp_1_22
                            112 ;../_strstr.c:37: if ( !*str2 )
   000C 32r00r00      [ 5]  113 	ldhx	_strstr_PARM_2
   000F 35*00         [ 4]  114 	sthx	*_strstr_sloc0_1_0
   0011 55*00         [ 4]  115 	ldhx	*_strstr_sloc0_1_0
   0013 FE            [ 3]  116 	ldx	,x
   0014 26 07         [ 3]  117 	bne	00122$
                            118 ;../_strstr.c:38: return str1;
   0016 CEr00r02      [ 4]  119 	ldx	_strstr_str1_1_21
   0019 C6r00r03      [ 4]  120 	lda	(_strstr_str1_1_21 + 1)
   001C 81            [ 6]  121 	rts
                            122 ;../_strstr.c:40: while (*cp)
   001D                     123 00122$:
   001D 32r00r02      [ 5]  124 	ldhx	_strstr_str1_1_21
   0020 35*02         [ 4]  125 	sthx	*_strstr_sloc1_1_0
   0022                     126 00110$:
   0022 55*02         [ 4]  127 	ldhx	*_strstr_sloc1_1_0
   0024 FE            [ 3]  128 	ldx	,x
   0025 27 65         [ 3]  129 	beq	00112$
                            130 ;../_strstr.c:43: s2 = str2;
   0027 4E*00*04      [ 6]  131 	mov	*_strstr_sloc0_1_0,*_strstr_sloc2_1_0
   002A 4E*01*05      [ 6]  132 	mov	*(_strstr_sloc0_1_0 + 1),*(_strstr_sloc2_1_0 + 1)
                            133 ;../_strstr.c:45: while ( *s1 && *s2 && !(*s1-*s2) )
   002D 4E*02*06      [ 6]  134 	mov	*_strstr_sloc1_1_0,*_strstr_sloc3_1_0
   0030 4E*03*07      [ 6]  135 	mov	*(_strstr_sloc1_1_0 + 1),*(_strstr_sloc3_1_0 + 1)
   0033                     136 00105$:
   0033 55*06         [ 4]  137 	ldhx	*_strstr_sloc3_1_0
   0035 F6            [ 3]  138 	lda	,x
   0036 55*04         [ 4]  139 	ldhx	*_strstr_sloc2_1_0
   0038 FE            [ 3]  140 	ldx	,x
   0039 4D            [ 1]  141 	tsta
   003A 27 34         [ 3]  142 	beq	00107$
   003C 5D            [ 1]  143 	tstx
   003D 27 31         [ 3]  144 	beq	00107$
   003F B7*09         [ 3]  145 	sta	*(_strstr_sloc4_1_0 + 1)
   0041 49            [ 1]  146 	rola	
   0042 4F            [ 1]  147 	clra	
   0043 A2 00         [ 2]  148 	sbc	#0x00
   0045 B7*08         [ 3]  149 	sta	*_strstr_sloc4_1_0
   0047 9F            [ 1]  150 	txa
   0048 B7*0B         [ 3]  151 	sta	*(_strstr_sloc5_1_0 + 1)
   004A 49            [ 1]  152 	rola	
   004B 4F            [ 1]  153 	clra	
   004C A2 00         [ 2]  154 	sbc	#0x00
   004E B7*0A         [ 3]  155 	sta	*_strstr_sloc5_1_0
   0050 B6*09         [ 3]  156 	lda	*(_strstr_sloc4_1_0 + 1)
   0052 B0*0B         [ 3]  157 	sub	*(_strstr_sloc5_1_0 + 1)
   0054 B7*0B         [ 3]  158 	sta	*(_strstr_sloc5_1_0 + 1)
   0056 B6*08         [ 3]  159 	lda	*_strstr_sloc4_1_0
   0058 B2*0A         [ 3]  160 	sbc	*_strstr_sloc5_1_0
   005A B7*0A         [ 3]  161 	sta	*_strstr_sloc5_1_0
   005C B6*0B         [ 3]  162 	lda	*(_strstr_sloc5_1_0 + 1)
   005E BA*0A         [ 3]  163 	ora	*_strstr_sloc5_1_0
   0060 26 0E         [ 3]  164 	bne	00107$
                            165 ;../_strstr.c:46: s1++, s2++;
   0062 55*06         [ 4]  166 	ldhx	*_strstr_sloc3_1_0
   0064 AF 01         [ 2]  167 	aix	#1
   0066 35*06         [ 4]  168 	sthx	*_strstr_sloc3_1_0
   0068 55*04         [ 4]  169 	ldhx	*_strstr_sloc2_1_0
   006A AF 01         [ 2]  170 	aix	#1
   006C 35*04         [ 4]  171 	sthx	*_strstr_sloc2_1_0
   006E 20 C3         [ 3]  172 	bra	00105$
   0070                     173 00107$:
                            174 ;../_strstr.c:48: if (!*s2)
   0070 5D            [ 1]  175 	tstx
   0071 26 07         [ 3]  176 	bne	00109$
                            177 ;../_strstr.c:49: return( (char*)cp );
   0073 CEr00r04      [ 4]  178 	ldx	_strstr_cp_1_22
   0076 C6r00r05      [ 4]  179 	lda	(_strstr_cp_1_22 + 1)
   0079 81            [ 6]  180 	rts
   007A                     181 00109$:
                            182 ;../_strstr.c:51: cp++;
   007A 55*02         [ 4]  183 	ldhx	*_strstr_sloc1_1_0
   007C AF 01         [ 2]  184 	aix	#1
   007E 35*02         [ 4]  185 	sthx	*_strstr_sloc1_1_0
   0080 B6*02         [ 3]  186 	lda	*_strstr_sloc1_1_0
   0082 C7r00r04      [ 4]  187 	sta	_strstr_cp_1_22
   0085 B6*03         [ 3]  188 	lda	*(_strstr_sloc1_1_0 + 1)
   0087 C7r00r05      [ 4]  189 	sta	(_strstr_cp_1_22 + 1)
   008A 20 96         [ 3]  190 	bra	00110$
   008C                     191 00112$:
                            192 ;../_strstr.c:54: return (NULL) ;
   008C 4F            [ 1]  193 	clra
   008D 97            [ 1]  194 	tax
   008E 81            [ 6]  195 	rts
                            196 	.area CSEG    (CODE)
                            197 	.area CONST   (CODE)
                            198 	.area XINIT   (CODE)
                            199 	.area CABS    (ABS,CODE)
