                                      1 ;--------------------------------------------------------
                                      2 ; File Created by SDCC : free open source ANSI-C Compiler
                                      3 ; Version 3.5.0 #9253 (Apr  4 2022) (Linux)
                                      4 ; This file was generated Mon Apr  4 14:16:53 2022
                                      5 ;--------------------------------------------------------
                                      6 	.module _atof
                                      7 	.optsdcc -mstm8
                                      8 	
                                      9 ;--------------------------------------------------------
                                     10 ; Public variables in this module
                                     11 ;--------------------------------------------------------
                                     12 	.globl _atoi
                                     13 	.globl _toupper
                                     14 	.globl _isspace
                                     15 	.globl _atof
                                     16 ;--------------------------------------------------------
                                     17 ; ram data
                                     18 ;--------------------------------------------------------
                                     19 	.area DATA
                                     20 ;--------------------------------------------------------
                                     21 ; ram data
                                     22 ;--------------------------------------------------------
                                     23 	.area INITIALIZED
                                     24 ;--------------------------------------------------------
                                     25 ; absolute external ram data
                                     26 ;--------------------------------------------------------
                                     27 	.area DABS (ABS)
                                     28 ;--------------------------------------------------------
                                     29 ; global & static initialisations
                                     30 ;--------------------------------------------------------
                                     31 	.area HOME
                                     32 	.area GSINIT
                                     33 	.area GSFINAL
                                     34 	.area GSINIT
                                     35 ;--------------------------------------------------------
                                     36 ; Home
                                     37 ;--------------------------------------------------------
                                     38 	.area HOME
                                     39 	.area HOME
                                     40 ;--------------------------------------------------------
                                     41 ; code
                                     42 ;--------------------------------------------------------
                                     43 	.area CODE
                                     44 ;	../_atof.c: 33: float atof(const char * s)
                                     45 ;	-----------------------------------------
                                     46 ;	 function atof
                                     47 ;	-----------------------------------------
      000000                         48 _atof:
      000000 52 1F            [ 2]   49 	sub	sp, #31
                                     50 ;	../_atof.c: 40: while (isspace(*s)) s++;
      000002 16 22            [ 2]   51 	ldw	y, (0x22, sp)
      000004 17 1C            [ 2]   52 	ldw	(0x1c, sp), y
      000006                         53 00101$:
      000006 1E 1C            [ 2]   54 	ldw	x, (0x1c, sp)
      000008 F6               [ 1]   55 	ld	a, (x)
      000009 97               [ 1]   56 	ld	xl, a
      00000A 49               [ 1]   57 	rlc	a
      00000B 4F               [ 1]   58 	clr	a
      00000C A2 00            [ 1]   59 	sbc	a, #0x00
      00000E 95               [ 1]   60 	ld	xh, a
      00000F 89               [ 2]   61 	pushw	x
      000010 CDr00r00         [ 4]   62 	call	_isspace
      000013 5B 02            [ 2]   63 	addw	sp, #2
      000015 16 1C            [ 2]   64 	ldw	y, (0x1c, sp)
      000017 90 5C            [ 2]   65 	incw	y
      000019 5D               [ 2]   66 	tnzw	x
      00001A 27 04            [ 1]   67 	jreq	00145$
      00001C 17 1C            [ 2]   68 	ldw	(0x1c, sp), y
      00001E 20 E6            [ 2]   69 	jra	00101$
      000020                         70 00145$:
      000020 1E 1C            [ 2]   71 	ldw	x, (0x1c, sp)
      000022 1F 22            [ 2]   72 	ldw	(0x22, sp), x
                                     73 ;	../_atof.c: 43: if (*s == '-')
      000024 1E 1C            [ 2]   74 	ldw	x, (0x1c, sp)
      000026 F6               [ 1]   75 	ld	a, (x)
      000027 A1 2D            [ 1]   76 	cp	a, #0x2d
      000029 26 08            [ 1]   77 	jrne	00107$
                                     78 ;	../_atof.c: 45: sign=1;
      00002B A6 01            [ 1]   79 	ld	a, #0x01
      00002D 6B 01            [ 1]   80 	ld	(0x01, sp), a
                                     81 ;	../_atof.c: 46: s++;
      00002F 17 22            [ 2]   82 	ldw	(0x22, sp), y
      000031 20 08            [ 2]   83 	jra	00108$
      000033                         84 00107$:
                                     85 ;	../_atof.c: 50: sign=0;
      000033 0F 01            [ 1]   86 	clr	(0x01, sp)
                                     87 ;	../_atof.c: 51: if (*s == '+') s++;
      000035 A1 2B            [ 1]   88 	cp	a, #0x2b
      000037 26 02            [ 1]   89 	jrne	00108$
      000039 17 22            [ 2]   90 	ldw	(0x22, sp), y
      00003B                         91 00108$:
                                     92 ;	../_atof.c: 55: for (value=0.0; isdigit(*s); s++)
      00003B 5F               [ 1]   93 	clrw	x
      00003C 1F 09            [ 2]   94 	ldw	(0x09, sp), x
      00003E 1F 07            [ 2]   95 	ldw	(0x07, sp), x
      000040 16 22            [ 2]   96 	ldw	y, (0x22, sp)
      000042 17 14            [ 2]   97 	ldw	(0x14, sp), y
      000044                         98 00124$:
      000044 1E 14            [ 2]   99 	ldw	x, (0x14, sp)
      000046 F6               [ 1]  100 	ld	a, (x)
      000047 97               [ 1]  101 	ld	xl, a
      000048 49               [ 1]  102 	rlc	a
      000049 4F               [ 1]  103 	clr	a
      00004A A2 00            [ 1]  104 	sbc	a, #0x00
      00004C 95               [ 1]  105 	ld	xh, a
      00004D 89               [ 2]  106 	pushw	x
      00004E CDr00r00         [ 4]  107 	call	_isdigit
      000051 5B 02            [ 2]  108 	addw	sp, #2
      000053 1F 1A            [ 2]  109 	ldw	(0x1a, sp), x
      000055 1E 14            [ 2]  110 	ldw	x, (0x14, sp)
      000057 F6               [ 1]  111 	ld	a, (x)
      000058 6B 0D            [ 1]  112 	ld	(0x0d, sp), a
      00005A 1E 14            [ 2]  113 	ldw	x, (0x14, sp)
      00005C 5C               [ 2]  114 	incw	x
      00005D 1F 1E            [ 2]  115 	ldw	(0x1e, sp), x
      00005F 1E 1A            [ 2]  116 	ldw	x, (0x1a, sp)
      000061 27 3E            [ 1]  117 	jreq	00146$
                                    118 ;	../_atof.c: 57: value=10.0*value+(*s-'0');
      000063 1E 09            [ 2]  119 	ldw	x, (0x09, sp)
      000065 89               [ 2]  120 	pushw	x
      000066 1E 09            [ 2]  121 	ldw	x, (0x09, sp)
      000068 89               [ 2]  122 	pushw	x
      000069 5F               [ 1]  123 	clrw	x
      00006A 89               [ 2]  124 	pushw	x
      00006B 4B 20            [ 1]  125 	push	#0x20
      00006D 4B 41            [ 1]  126 	push	#0x41
      00006F CDr00r00         [ 4]  127 	call	___fsmul
      000072 5B 08            [ 2]  128 	addw	sp, #8
      000074 1F 18            [ 2]  129 	ldw	(0x18, sp), x
      000076 17 16            [ 2]  130 	ldw	(0x16, sp), y
      000078 7B 0D            [ 1]  131 	ld	a, (0x0d, sp)
      00007A 97               [ 1]  132 	ld	xl, a
      00007B 49               [ 1]  133 	rlc	a
      00007C 4F               [ 1]  134 	clr	a
      00007D A2 00            [ 1]  135 	sbc	a, #0x00
      00007F 95               [ 1]  136 	ld	xh, a
      000080 1D 00 30         [ 2]  137 	subw	x, #0x0030
      000083 89               [ 2]  138 	pushw	x
      000084 CDr00r00         [ 4]  139 	call	___sint2fs
      000087 5B 02            [ 2]  140 	addw	sp, #2
      000089 89               [ 2]  141 	pushw	x
      00008A 90 89            [ 2]  142 	pushw	y
      00008C 1E 1C            [ 2]  143 	ldw	x, (0x1c, sp)
      00008E 89               [ 2]  144 	pushw	x
      00008F 1E 1C            [ 2]  145 	ldw	x, (0x1c, sp)
      000091 89               [ 2]  146 	pushw	x
      000092 CDr00r00         [ 4]  147 	call	___fsadd
      000095 5B 08            [ 2]  148 	addw	sp, #8
      000097 1F 09            [ 2]  149 	ldw	(0x09, sp), x
      000099 17 07            [ 2]  150 	ldw	(0x07, sp), y
                                    151 ;	../_atof.c: 55: for (value=0.0; isdigit(*s); s++)
      00009B 16 1E            [ 2]  152 	ldw	y, (0x1e, sp)
      00009D 17 14            [ 2]  153 	ldw	(0x14, sp), y
      00009F 20 A3            [ 2]  154 	jra	00124$
      0000A1                        155 00146$:
      0000A1 16 14            [ 2]  156 	ldw	y, (0x14, sp)
      0000A3 17 22            [ 2]  157 	ldw	(0x22, sp), y
                                    158 ;	../_atof.c: 61: if (*s == '.')
      0000A5 7B 0D            [ 1]  159 	ld	a, (0x0d, sp)
      0000A7 A1 2E            [ 1]  160 	cp	a, #0x2e
      0000A9 26 78            [ 1]  161 	jrne	00112$
                                    162 ;	../_atof.c: 64: for (fraction=0.1; isdigit(*s); s++)
      0000AB AE CC CD         [ 2]  163 	ldw	x, #0xcccd
      0000AE 1F 05            [ 2]  164 	ldw	(0x05, sp), x
      0000B0 AE 3D CC         [ 2]  165 	ldw	x, #0x3dcc
      0000B3 1F 03            [ 2]  166 	ldw	(0x03, sp), x
      0000B5 16 1E            [ 2]  167 	ldw	y, (0x1e, sp)
      0000B7 17 0B            [ 2]  168 	ldw	(0x0b, sp), y
      0000B9                        169 00127$:
      0000B9 1E 0B            [ 2]  170 	ldw	x, (0x0b, sp)
      0000BB F6               [ 1]  171 	ld	a, (x)
      0000BC 97               [ 1]  172 	ld	xl, a
      0000BD 49               [ 1]  173 	rlc	a
      0000BE 4F               [ 1]  174 	clr	a
      0000BF A2 00            [ 1]  175 	sbc	a, #0x00
      0000C1 95               [ 1]  176 	ld	xh, a
      0000C2 89               [ 2]  177 	pushw	x
      0000C3 CDr00r00         [ 4]  178 	call	_isdigit
      0000C6 5B 02            [ 2]  179 	addw	sp, #2
      0000C8 5D               [ 2]  180 	tnzw	x
      0000C9 27 54            [ 1]  181 	jreq	00147$
                                    182 ;	../_atof.c: 66: value+=(*s-'0')*fraction;
      0000CB 1E 0B            [ 2]  183 	ldw	x, (0x0b, sp)
      0000CD F6               [ 1]  184 	ld	a, (x)
      0000CE 97               [ 1]  185 	ld	xl, a
      0000CF 49               [ 1]  186 	rlc	a
      0000D0 4F               [ 1]  187 	clr	a
      0000D1 A2 00            [ 1]  188 	sbc	a, #0x00
      0000D3 95               [ 1]  189 	ld	xh, a
      0000D4 1D 00 30         [ 2]  190 	subw	x, #0x0030
      0000D7 89               [ 2]  191 	pushw	x
      0000D8 CDr00r00         [ 4]  192 	call	___sint2fs
      0000DB 5B 02            [ 2]  193 	addw	sp, #2
      0000DD 1F 12            [ 2]  194 	ldw	(0x12, sp), x
      0000DF 1E 05            [ 2]  195 	ldw	x, (0x05, sp)
      0000E1 89               [ 2]  196 	pushw	x
      0000E2 1E 05            [ 2]  197 	ldw	x, (0x05, sp)
      0000E4 89               [ 2]  198 	pushw	x
      0000E5 1E 16            [ 2]  199 	ldw	x, (0x16, sp)
      0000E7 89               [ 2]  200 	pushw	x
      0000E8 90 89            [ 2]  201 	pushw	y
      0000EA CDr00r00         [ 4]  202 	call	___fsmul
      0000ED 5B 08            [ 2]  203 	addw	sp, #8
      0000EF 89               [ 2]  204 	pushw	x
      0000F0 90 89            [ 2]  205 	pushw	y
      0000F2 1E 0D            [ 2]  206 	ldw	x, (0x0d, sp)
      0000F4 89               [ 2]  207 	pushw	x
      0000F5 1E 0D            [ 2]  208 	ldw	x, (0x0d, sp)
      0000F7 89               [ 2]  209 	pushw	x
      0000F8 CDr00r00         [ 4]  210 	call	___fsadd
      0000FB 5B 08            [ 2]  211 	addw	sp, #8
      0000FD 1F 09            [ 2]  212 	ldw	(0x09, sp), x
      0000FF 17 07            [ 2]  213 	ldw	(0x07, sp), y
                                    214 ;	../_atof.c: 67: fraction*=0.1;
      000101 1E 05            [ 2]  215 	ldw	x, (0x05, sp)
      000103 89               [ 2]  216 	pushw	x
      000104 1E 05            [ 2]  217 	ldw	x, (0x05, sp)
      000106 89               [ 2]  218 	pushw	x
      000107 4B CD            [ 1]  219 	push	#0xcd
      000109 4B CC            [ 1]  220 	push	#0xcc
      00010B 4B CC            [ 1]  221 	push	#0xcc
      00010D 4B 3D            [ 1]  222 	push	#0x3d
      00010F CDr00r00         [ 4]  223 	call	___fsmul
      000112 5B 08            [ 2]  224 	addw	sp, #8
      000114 1F 05            [ 2]  225 	ldw	(0x05, sp), x
      000116 17 03            [ 2]  226 	ldw	(0x03, sp), y
                                    227 ;	../_atof.c: 64: for (fraction=0.1; isdigit(*s); s++)
      000118 1E 0B            [ 2]  228 	ldw	x, (0x0b, sp)
      00011A 5C               [ 2]  229 	incw	x
      00011B 1F 0B            [ 2]  230 	ldw	(0x0b, sp), x
      00011D 20 9A            [ 2]  231 	jra	00127$
      00011F                        232 00147$:
      00011F 16 0B            [ 2]  233 	ldw	y, (0x0b, sp)
      000121 17 22            [ 2]  234 	ldw	(0x22, sp), y
      000123                        235 00112$:
                                    236 ;	../_atof.c: 72: if (toupper(*s)=='E')
      000123 16 22            [ 2]  237 	ldw	y, (0x22, sp)
      000125 17 0E            [ 2]  238 	ldw	(0x0e, sp), y
      000127 1E 0E            [ 2]  239 	ldw	x, (0x0e, sp)
      000129 F6               [ 1]  240 	ld	a, (x)
      00012A 97               [ 1]  241 	ld	xl, a
      00012B 49               [ 1]  242 	rlc	a
      00012C 4F               [ 1]  243 	clr	a
      00012D A2 00            [ 1]  244 	sbc	a, #0x00
      00012F 95               [ 1]  245 	ld	xh, a
      000130 89               [ 2]  246 	pushw	x
      000131 CDr00r00         [ 4]  247 	call	_toupper
      000134 5B 02            [ 2]  248 	addw	sp, #2
      000136 A3 00 45         [ 2]  249 	cpw	x, #0x0045
      000139 26 52            [ 1]  250 	jrne	00120$
                                    251 ;	../_atof.c: 74: s++;
      00013B 1E 0E            [ 2]  252 	ldw	x, (0x0e, sp)
      00013D 5C               [ 2]  253 	incw	x
      00013E 1F 22            [ 2]  254 	ldw	(0x22, sp), x
                                    255 ;	../_atof.c: 75: iexp=(signed char)atoi(s);
      000140 1E 22            [ 2]  256 	ldw	x, (0x22, sp)
      000142 89               [ 2]  257 	pushw	x
      000143 CDr00r00         [ 4]  258 	call	_atoi
      000146 5B 02            [ 2]  259 	addw	sp, #2
      000148 9F               [ 1]  260 	ld	a, xl
      000149 6B 02            [ 1]  261 	ld	(0x02, sp), a
                                    262 ;	../_atof.c: 77: while(iexp!=0)
      00014B                        263 00116$:
      00014B 0D 02            [ 1]  264 	tnz	(0x02, sp)
      00014D 27 3E            [ 1]  265 	jreq	00120$
                                    266 ;	../_atof.c: 79: if(iexp<0)
      00014F 0D 02            [ 1]  267 	tnz	(0x02, sp)
      000151 2A 1E            [ 1]  268 	jrpl	00114$
                                    269 ;	../_atof.c: 81: value*=0.1;
      000153 1E 09            [ 2]  270 	ldw	x, (0x09, sp)
      000155 89               [ 2]  271 	pushw	x
      000156 1E 09            [ 2]  272 	ldw	x, (0x09, sp)
      000158 89               [ 2]  273 	pushw	x
      000159 4B CD            [ 1]  274 	push	#0xcd
      00015B 4B CC            [ 1]  275 	push	#0xcc
      00015D 4B CC            [ 1]  276 	push	#0xcc
      00015F 4B 3D            [ 1]  277 	push	#0x3d
      000161 CDr00r00         [ 4]  278 	call	___fsmul
      000164 5B 08            [ 2]  279 	addw	sp, #8
      000166 1F 09            [ 2]  280 	ldw	(0x09, sp), x
      000168 17 07            [ 2]  281 	ldw	(0x07, sp), y
                                    282 ;	../_atof.c: 82: iexp++;
      00016A 7B 02            [ 1]  283 	ld	a, (0x02, sp)
      00016C 4C               [ 1]  284 	inc	a
      00016D 6B 02            [ 1]  285 	ld	(0x02, sp), a
      00016F 20 DA            [ 2]  286 	jra	00116$
      000171                        287 00114$:
                                    288 ;	../_atof.c: 86: value*=10.0;
      000171 1E 09            [ 2]  289 	ldw	x, (0x09, sp)
      000173 89               [ 2]  290 	pushw	x
      000174 1E 09            [ 2]  291 	ldw	x, (0x09, sp)
      000176 89               [ 2]  292 	pushw	x
      000177 5F               [ 1]  293 	clrw	x
      000178 89               [ 2]  294 	pushw	x
      000179 4B 20            [ 1]  295 	push	#0x20
      00017B 4B 41            [ 1]  296 	push	#0x41
      00017D CDr00r00         [ 4]  297 	call	___fsmul
      000180 5B 08            [ 2]  298 	addw	sp, #8
      000182 1F 09            [ 2]  299 	ldw	(0x09, sp), x
      000184 17 07            [ 2]  300 	ldw	(0x07, sp), y
                                    301 ;	../_atof.c: 87: iexp--;
      000186 7B 02            [ 1]  302 	ld	a, (0x02, sp)
      000188 4A               [ 1]  303 	dec	a
      000189 6B 02            [ 1]  304 	ld	(0x02, sp), a
      00018B 20 BE            [ 2]  305 	jra	00116$
      00018D                        306 00120$:
                                    307 ;	../_atof.c: 93: if(sign) value*=-1.0;
      00018D 0D 01            [ 1]  308 	tnz	(0x01, sp)
      00018F 27 0B            [ 1]  309 	jreq	00122$
      000191 16 09            [ 2]  310 	ldw	y, (0x09, sp)
      000193 1E 07            [ 2]  311 	ldw	x, (0x07, sp)
      000195 58               [ 2]  312 	sllw	x
      000196 8C               [ 1]  313 	ccf
      000197 56               [ 2]  314 	rrcw	x
      000198 17 09            [ 2]  315 	ldw	(0x09, sp), y
      00019A 1F 07            [ 2]  316 	ldw	(0x07, sp), x
      00019C                        317 00122$:
                                    318 ;	../_atof.c: 94: return (value);
      00019C 1E 09            [ 2]  319 	ldw	x, (0x09, sp)
      00019E 16 07            [ 2]  320 	ldw	y, (0x07, sp)
      0001A0 5B 1F            [ 2]  321 	addw	sp, #31
      0001A2 81               [ 4]  322 	ret
                                    323 	.area CODE
                                    324 	.area INITIALIZER
                                    325 	.area CABS (ABS)
