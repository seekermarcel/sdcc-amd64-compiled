                                      1 ;--------------------------------------------------------
                                      2 ; File Created by SDCC : free open source ANSI-C Compiler
                                      3 ; Version 3.5.0 #9253 (Apr  4 2022) (Linux)
                                      4 ; This file was generated Mon Apr  4 14:10:47 2022
                                      5 ;--------------------------------------------------------
                                      6 	.module time
                                      7 	.optsdcc -mmcs51 --model-large
                                      8 	
                                      9 ;--------------------------------------------------------
                                     10 ; Public variables in this module
                                     11 ;--------------------------------------------------------
                                     12 	.globl ___day
                                     13 	.globl ___month
                                     14 	.globl _RtcRead
                                     15 	.globl _sprintf
                                     16 	.globl _time
                                     17 	.globl _asctime
                                     18 	.globl _ctime
                                     19 	.globl _localtime
                                     20 	.globl _gmtime
                                     21 	.globl _mktime
                                     22 ;--------------------------------------------------------
                                     23 ; special function registers
                                     24 ;--------------------------------------------------------
                                     25 	.area RSEG    (ABS,DATA)
      000000                         26 	.org 0x0000
                                     27 ;--------------------------------------------------------
                                     28 ; special function bits
                                     29 ;--------------------------------------------------------
                                     30 	.area RSEG    (ABS,DATA)
      000000                         31 	.org 0x0000
                                     32 ;--------------------------------------------------------
                                     33 ; overlayable register banks
                                     34 ;--------------------------------------------------------
                                     35 	.area REG_BANK_0	(REL,OVR,DATA)
      000000                         36 	.ds 8
                                     37 ;--------------------------------------------------------
                                     38 ; internal ram data
                                     39 ;--------------------------------------------------------
                                     40 	.area DSEG    (DATA)
      000000                         41 _asctime_sloc0_1_0:
      000000                         42 	.ds 2
      000002                         43 _asctime_sloc1_1_0:
      000002                         44 	.ds 2
      000004                         45 _asctime_sloc2_1_0:
      000004                         46 	.ds 2
      000006                         47 _asctime_sloc3_1_0:
      000006                         48 	.ds 2
      000008                         49 _gmtime_sloc0_1_0:
      000008                         50 	.ds 2
      00000A                         51 _gmtime_sloc1_1_0:
      00000A                         52 	.ds 4
      00000E                         53 _gmtime_sloc2_1_0:
      00000E                         54 	.ds 2
      000010                         55 _gmtime_sloc3_1_0:
      000010                         56 	.ds 4
      000014                         57 _mktime_sloc0_1_0:
      000014                         58 	.ds 2
      000016                         59 _mktime_sloc1_1_0:
      000016                         60 	.ds 4
      00001A                         61 _mktime_sloc2_1_0:
      00001A                         62 	.ds 3
      00001D                         63 _mktime_sloc3_1_0:
      00001D                         64 	.ds 4
                                     65 ;--------------------------------------------------------
                                     66 ; overlayable items in internal ram 
                                     67 ;--------------------------------------------------------
                                     68 ;--------------------------------------------------------
                                     69 ; indirectly addressable internal ram data
                                     70 ;--------------------------------------------------------
                                     71 	.area ISEG    (DATA)
                                     72 ;--------------------------------------------------------
                                     73 ; absolute internal ram data
                                     74 ;--------------------------------------------------------
                                     75 	.area IABS    (ABS,DATA)
                                     76 	.area IABS    (ABS,DATA)
                                     77 ;--------------------------------------------------------
                                     78 ; bit data
                                     79 ;--------------------------------------------------------
                                     80 	.area BSEG    (BIT)
                                     81 ;--------------------------------------------------------
                                     82 ; paged external ram data
                                     83 ;--------------------------------------------------------
                                     84 	.area PSEG    (PAG,XDATA)
                                     85 ;--------------------------------------------------------
                                     86 ; external ram data
                                     87 ;--------------------------------------------------------
                                     88 	.area XSEG    (XDATA)
      000000                         89 _time_timeptr_1_23:
      000000                         90 	.ds 3
      000003                         91 _time_now_1_24:
      000003                         92 	.ds 12
      00000F                         93 _time_t_1_24:
      00000F                         94 	.ds 4
      000013                         95 _ascTimeBuffer:
      000013                         96 	.ds 32
      000033                         97 _CheckTime_timeptr_1_27:
      000033                         98 	.ds 3
      000036                         99 _asctime_timeptr_1_29:
      000036                        100 	.ds 3
      000039                        101 _ctime_timep_1_31:
      000039                        102 	.ds 3
      00003C                        103 _lastTime:
      00003C                        104 	.ds 12
      000048                        105 _localtime_timep_1_33:
      000048                        106 	.ds 3
      00004B                        107 _gmtime_timep_1_35:
      00004B                        108 	.ds 3
      00004E                        109 _gmtime_epoch_1_36:
      00004E                        110 	.ds 4
      000052                        111 _gmtime_monthLength_1_36:
      000052                        112 	.ds 1
      000053                        113 _gmtime_days_1_36:
      000053                        114 	.ds 4
      000057                        115 _mktime_timeptr_1_45:
      000057                        116 	.ds 3
      00005A                        117 _mktime_seconds_1_46:
      00005A                        118 	.ds 4
                                    119 ;--------------------------------------------------------
                                    120 ; absolute external ram data
                                    121 ;--------------------------------------------------------
                                    122 	.area XABS    (ABS,XDATA)
                                    123 ;--------------------------------------------------------
                                    124 ; external initialized ram data
                                    125 ;--------------------------------------------------------
                                    126 	.area XISEG   (XDATA)
                                    127 	.area HOME    (CODE)
                                    128 	.area GSINIT0 (CODE)
                                    129 	.area GSINIT1 (CODE)
                                    130 	.area GSINIT2 (CODE)
                                    131 	.area GSINIT3 (CODE)
                                    132 	.area GSINIT4 (CODE)
                                    133 	.area GSINIT5 (CODE)
                                    134 	.area GSINIT  (CODE)
                                    135 	.area GSFINAL (CODE)
                                    136 	.area CSEG    (CODE)
                                    137 ;--------------------------------------------------------
                                    138 ; global & static initialisations
                                    139 ;--------------------------------------------------------
                                    140 	.area HOME    (CODE)
                                    141 	.area GSINIT  (CODE)
                                    142 	.area GSFINAL (CODE)
                                    143 	.area GSINIT  (CODE)
                                    144 ;--------------------------------------------------------
                                    145 ; Home
                                    146 ;--------------------------------------------------------
                                    147 	.area HOME    (CODE)
                                    148 	.area HOME    (CODE)
                                    149 ;--------------------------------------------------------
                                    150 ; code
                                    151 ;--------------------------------------------------------
                                    152 	.area CSEG    (CODE)
                                    153 ;------------------------------------------------------------
                                    154 ;Allocation info for local variables in function 'RtcRead'
                                    155 ;------------------------------------------------------------
                                    156 ;timeptr                   Allocated with name '_RtcRead_timeptr_1_21'
                                    157 ;------------------------------------------------------------
                                    158 ;	time.c:42: unsigned char RtcRead(struct tm *timeptr) {
                                    159 ;	-----------------------------------------
                                    160 ;	 function RtcRead
                                    161 ;	-----------------------------------------
      000000                        162 _RtcRead:
                           000007   163 	ar7 = 0x07
                           000006   164 	ar6 = 0x06
                           000005   165 	ar5 = 0x05
                           000004   166 	ar4 = 0x04
                           000003   167 	ar3 = 0x03
                           000002   168 	ar2 = 0x02
                           000001   169 	ar1 = 0x01
                           000000   170 	ar0 = 0x00
                                    171 ;	time.c:45: return 0;
      000000 75 82 00         [24]  172 	mov	dpl,#0x00
      000003 22               [24]  173 	ret
                                    174 ;------------------------------------------------------------
                                    175 ;Allocation info for local variables in function 'time'
                                    176 ;------------------------------------------------------------
                                    177 ;timeptr                   Allocated with name '_time_timeptr_1_23'
                                    178 ;now                       Allocated with name '_time_now_1_24'
                                    179 ;t                         Allocated with name '_time_t_1_24'
                                    180 ;------------------------------------------------------------
                                    181 ;	time.c:50: time_t time(time_t *timeptr) {
                                    182 ;	-----------------------------------------
                                    183 ;	 function time
                                    184 ;	-----------------------------------------
      000004                        185 _time:
      000004 AF F0            [24]  186 	mov	r7,b
      000006 AE 83            [24]  187 	mov	r6,dph
      000008 E5 82            [12]  188 	mov	a,dpl
      00000A 90r00r00         [24]  189 	mov	dptr,#_time_timeptr_1_23
      00000D F0               [24]  190 	movx	@dptr,a
      00000E EE               [12]  191 	mov	a,r6
      00000F A3               [24]  192 	inc	dptr
      000010 F0               [24]  193 	movx	@dptr,a
      000011 EF               [12]  194 	mov	a,r7
      000012 A3               [24]  195 	inc	dptr
      000013 F0               [24]  196 	movx	@dptr,a
                                    197 ;	time.c:52: time_t t=(time_t) -1;
      000014 90r00r0F         [24]  198 	mov	dptr,#_time_t_1_24
      000017 74 FF            [12]  199 	mov	a,#0xFF
      000019 F0               [24]  200 	movx	@dptr,a
      00001A A3               [24]  201 	inc	dptr
      00001B F0               [24]  202 	movx	@dptr,a
      00001C A3               [24]  203 	inc	dptr
      00001D F0               [24]  204 	movx	@dptr,a
      00001E A3               [24]  205 	inc	dptr
      00001F F0               [24]  206 	movx	@dptr,a
                                    207 ;	time.c:54: if (RtcRead(&now)) {
      000020 90r00r03         [24]  208 	mov	dptr,#_time_now_1_24
      000023 75 F0 00         [24]  209 	mov	b,#0x00
      000026 12r00r00         [24]  210 	lcall	_RtcRead
      000029 E5 82            [12]  211 	mov	a,dpl
      00002B 60 1E            [24]  212 	jz	00102$
                                    213 ;	time.c:55: t=mktime(&now);
      00002D 90r00r03         [24]  214 	mov	dptr,#_time_now_1_24
      000030 75 F0 00         [24]  215 	mov	b,#0x00
      000033 12r06r35         [24]  216 	lcall	_mktime
      000036 AC 82            [24]  217 	mov	r4,dpl
      000038 AD 83            [24]  218 	mov	r5,dph
      00003A AE F0            [24]  219 	mov	r6,b
      00003C FF               [12]  220 	mov	r7,a
      00003D 90r00r0F         [24]  221 	mov	dptr,#_time_t_1_24
      000040 EC               [12]  222 	mov	a,r4
      000041 F0               [24]  223 	movx	@dptr,a
      000042 ED               [12]  224 	mov	a,r5
      000043 A3               [24]  225 	inc	dptr
      000044 F0               [24]  226 	movx	@dptr,a
      000045 EE               [12]  227 	mov	a,r6
      000046 A3               [24]  228 	inc	dptr
      000047 F0               [24]  229 	movx	@dptr,a
      000048 EF               [12]  230 	mov	a,r7
      000049 A3               [24]  231 	inc	dptr
      00004A F0               [24]  232 	movx	@dptr,a
      00004B                        233 00102$:
                                    234 ;	time.c:57: if (timeptr) {
      00004B 90r00r00         [24]  235 	mov	dptr,#_time_timeptr_1_23
      00004E E0               [24]  236 	movx	a,@dptr
      00004F FD               [12]  237 	mov	r5,a
      000050 A3               [24]  238 	inc	dptr
      000051 E0               [24]  239 	movx	a,@dptr
      000052 FE               [12]  240 	mov	r6,a
      000053 A3               [24]  241 	inc	dptr
      000054 E0               [24]  242 	movx	a,@dptr
      000055 FF               [12]  243 	mov	r7,a
      000056 90r00r00         [24]  244 	mov	dptr,#_time_timeptr_1_23
      000059 E0               [24]  245 	movx	a,@dptr
      00005A F5 F0            [12]  246 	mov	b,a
      00005C A3               [24]  247 	inc	dptr
      00005D E0               [24]  248 	movx	a,@dptr
      00005E 45 F0            [12]  249 	orl	a,b
      000060 60 27            [24]  250 	jz	00104$
                                    251 ;	time.c:58: *timeptr=t;
      000062 90r00r0F         [24]  252 	mov	dptr,#_time_t_1_24
      000065 E0               [24]  253 	movx	a,@dptr
      000066 F9               [12]  254 	mov	r1,a
      000067 A3               [24]  255 	inc	dptr
      000068 E0               [24]  256 	movx	a,@dptr
      000069 FA               [12]  257 	mov	r2,a
      00006A A3               [24]  258 	inc	dptr
      00006B E0               [24]  259 	movx	a,@dptr
      00006C FB               [12]  260 	mov	r3,a
      00006D A3               [24]  261 	inc	dptr
      00006E E0               [24]  262 	movx	a,@dptr
      00006F FC               [12]  263 	mov	r4,a
      000070 8D 82            [24]  264 	mov	dpl,r5
      000072 8E 83            [24]  265 	mov	dph,r6
      000074 8F F0            [24]  266 	mov	b,r7
      000076 E9               [12]  267 	mov	a,r1
      000077 12r00r00         [24]  268 	lcall	__gptrput
      00007A A3               [24]  269 	inc	dptr
      00007B EA               [12]  270 	mov	a,r2
      00007C 12r00r00         [24]  271 	lcall	__gptrput
      00007F A3               [24]  272 	inc	dptr
      000080 EB               [12]  273 	mov	a,r3
      000081 12r00r00         [24]  274 	lcall	__gptrput
      000084 A3               [24]  275 	inc	dptr
      000085 EC               [12]  276 	mov	a,r4
      000086 12r00r00         [24]  277 	lcall	__gptrput
      000089                        278 00104$:
                                    279 ;	time.c:60: return t;
      000089 90r00r0F         [24]  280 	mov	dptr,#_time_t_1_24
      00008C E0               [24]  281 	movx	a,@dptr
      00008D FC               [12]  282 	mov	r4,a
      00008E A3               [24]  283 	inc	dptr
      00008F E0               [24]  284 	movx	a,@dptr
      000090 FD               [12]  285 	mov	r5,a
      000091 A3               [24]  286 	inc	dptr
      000092 E0               [24]  287 	movx	a,@dptr
      000093 FE               [12]  288 	mov	r6,a
      000094 A3               [24]  289 	inc	dptr
      000095 E0               [24]  290 	movx	a,@dptr
      000096 8C 82            [24]  291 	mov	dpl,r4
      000098 8D 83            [24]  292 	mov	dph,r5
      00009A 8E F0            [24]  293 	mov	b,r6
      00009C 22               [24]  294 	ret
                                    295 ;------------------------------------------------------------
                                    296 ;Allocation info for local variables in function 'CheckTime'
                                    297 ;------------------------------------------------------------
                                    298 ;timeptr                   Allocated with name '_CheckTime_timeptr_1_27'
                                    299 ;------------------------------------------------------------
                                    300 ;	time.c:73: static void CheckTime(struct tm *timeptr) {
                                    301 ;	-----------------------------------------
                                    302 ;	 function CheckTime
                                    303 ;	-----------------------------------------
      00009D                        304 _CheckTime:
      00009D AF F0            [24]  305 	mov	r7,b
      00009F AE 83            [24]  306 	mov	r6,dph
      0000A1 E5 82            [12]  307 	mov	a,dpl
      0000A3 90r00r33         [24]  308 	mov	dptr,#_CheckTime_timeptr_1_27
      0000A6 F0               [24]  309 	movx	@dptr,a
      0000A7 EE               [12]  310 	mov	a,r6
      0000A8 A3               [24]  311 	inc	dptr
      0000A9 F0               [24]  312 	movx	@dptr,a
      0000AA EF               [12]  313 	mov	a,r7
      0000AB A3               [24]  314 	inc	dptr
      0000AC F0               [24]  315 	movx	@dptr,a
                                    316 ;	time.c:84: if (timeptr->tm_sec>59) timeptr->tm_sec=59;
      0000AD 90r00r33         [24]  317 	mov	dptr,#_CheckTime_timeptr_1_27
      0000B0 E0               [24]  318 	movx	a,@dptr
      0000B1 FD               [12]  319 	mov	r5,a
      0000B2 A3               [24]  320 	inc	dptr
      0000B3 E0               [24]  321 	movx	a,@dptr
      0000B4 FE               [12]  322 	mov	r6,a
      0000B5 A3               [24]  323 	inc	dptr
      0000B6 E0               [24]  324 	movx	a,@dptr
      0000B7 FF               [12]  325 	mov	r7,a
      0000B8 8D 82            [24]  326 	mov	dpl,r5
      0000BA 8E 83            [24]  327 	mov	dph,r6
      0000BC 8F F0            [24]  328 	mov	b,r7
      0000BE 12r00r00         [24]  329 	lcall	__gptrget
      0000C1 FC               [12]  330 	mov  r4,a
      0000C2 24 C4            [12]  331 	add	a,#0xff - 0x3B
      0000C4 50 0B            [24]  332 	jnc	00102$
      0000C6 8D 82            [24]  333 	mov	dpl,r5
      0000C8 8E 83            [24]  334 	mov	dph,r6
      0000CA 8F F0            [24]  335 	mov	b,r7
      0000CC 74 3B            [12]  336 	mov	a,#0x3B
      0000CE 12r00r00         [24]  337 	lcall	__gptrput
      0000D1                        338 00102$:
                                    339 ;	time.c:85: if (timeptr->tm_min>59) timeptr->tm_min=59;
      0000D1 74 01            [12]  340 	mov	a,#0x01
      0000D3 2D               [12]  341 	add	a,r5
      0000D4 FA               [12]  342 	mov	r2,a
      0000D5 E4               [12]  343 	clr	a
      0000D6 3E               [12]  344 	addc	a,r6
      0000D7 FB               [12]  345 	mov	r3,a
      0000D8 8F 04            [24]  346 	mov	ar4,r7
      0000DA 8A 82            [24]  347 	mov	dpl,r2
      0000DC 8B 83            [24]  348 	mov	dph,r3
      0000DE 8C F0            [24]  349 	mov	b,r4
      0000E0 12r00r00         [24]  350 	lcall	__gptrget
      0000E3 F9               [12]  351 	mov  r1,a
      0000E4 24 C4            [12]  352 	add	a,#0xff - 0x3B
      0000E6 50 0B            [24]  353 	jnc	00104$
      0000E8 8A 82            [24]  354 	mov	dpl,r2
      0000EA 8B 83            [24]  355 	mov	dph,r3
      0000EC 8C F0            [24]  356 	mov	b,r4
      0000EE 74 3B            [12]  357 	mov	a,#0x3B
      0000F0 12r00r00         [24]  358 	lcall	__gptrput
      0000F3                        359 00104$:
                                    360 ;	time.c:86: if (timeptr->tm_hour>23) timeptr->tm_hour=23;
      0000F3 74 02            [12]  361 	mov	a,#0x02
      0000F5 2D               [12]  362 	add	a,r5
      0000F6 FA               [12]  363 	mov	r2,a
      0000F7 E4               [12]  364 	clr	a
      0000F8 3E               [12]  365 	addc	a,r6
      0000F9 FB               [12]  366 	mov	r3,a
      0000FA 8F 04            [24]  367 	mov	ar4,r7
      0000FC 8A 82            [24]  368 	mov	dpl,r2
      0000FE 8B 83            [24]  369 	mov	dph,r3
      000100 8C F0            [24]  370 	mov	b,r4
      000102 12r00r00         [24]  371 	lcall	__gptrget
      000105 F9               [12]  372 	mov  r1,a
      000106 24 E8            [12]  373 	add	a,#0xff - 0x17
      000108 50 0B            [24]  374 	jnc	00106$
      00010A 8A 82            [24]  375 	mov	dpl,r2
      00010C 8B 83            [24]  376 	mov	dph,r3
      00010E 8C F0            [24]  377 	mov	b,r4
      000110 74 17            [12]  378 	mov	a,#0x17
      000112 12r00r00         [24]  379 	lcall	__gptrput
      000115                        380 00106$:
                                    381 ;	time.c:87: if (timeptr->tm_wday>6) timeptr->tm_wday=6;
      000115 74 07            [12]  382 	mov	a,#0x07
      000117 2D               [12]  383 	add	a,r5
      000118 FA               [12]  384 	mov	r2,a
      000119 E4               [12]  385 	clr	a
      00011A 3E               [12]  386 	addc	a,r6
      00011B FB               [12]  387 	mov	r3,a
      00011C 8F 04            [24]  388 	mov	ar4,r7
      00011E 8A 82            [24]  389 	mov	dpl,r2
      000120 8B 83            [24]  390 	mov	dph,r3
      000122 8C F0            [24]  391 	mov	b,r4
      000124 12r00r00         [24]  392 	lcall	__gptrget
      000127 F9               [12]  393 	mov  r1,a
      000128 24 F9            [12]  394 	add	a,#0xff - 0x06
      00012A 50 0B            [24]  395 	jnc	00108$
      00012C 8A 82            [24]  396 	mov	dpl,r2
      00012E 8B 83            [24]  397 	mov	dph,r3
      000130 8C F0            [24]  398 	mov	b,r4
      000132 74 06            [12]  399 	mov	a,#0x06
      000134 12r00r00         [24]  400 	lcall	__gptrput
      000137                        401 00108$:
                                    402 ;	time.c:88: if (timeptr->tm_mday<1) timeptr->tm_mday=1;
      000137 74 03            [12]  403 	mov	a,#0x03
      000139 2D               [12]  404 	add	a,r5
      00013A FA               [12]  405 	mov	r2,a
      00013B E4               [12]  406 	clr	a
      00013C 3E               [12]  407 	addc	a,r6
      00013D FB               [12]  408 	mov	r3,a
      00013E 8F 04            [24]  409 	mov	ar4,r7
      000140 8A 82            [24]  410 	mov	dpl,r2
      000142 8B 83            [24]  411 	mov	dph,r3
      000144 8C F0            [24]  412 	mov	b,r4
      000146 12r00r00         [24]  413 	lcall	__gptrget
      000149 F9               [12]  414 	mov	r1,a
      00014A B9 01 00         [24]  415 	cjne	r1,#0x01,00148$
      00014D                        416 00148$:
      00014D 50 0D            [24]  417 	jnc	00112$
      00014F 8A 82            [24]  418 	mov	dpl,r2
      000151 8B 83            [24]  419 	mov	dph,r3
      000153 8C F0            [24]  420 	mov	b,r4
      000155 74 01            [12]  421 	mov	a,#0x01
      000157 12r00r00         [24]  422 	lcall	__gptrput
      00015A 80 10            [24]  423 	sjmp	00113$
      00015C                        424 00112$:
                                    425 ;	time.c:89: else if (timeptr->tm_mday>31) timeptr->tm_mday=31;
      00015C E9               [12]  426 	mov	a,r1
      00015D 24 E0            [12]  427 	add	a,#0xff - 0x1F
      00015F 50 0B            [24]  428 	jnc	00113$
      000161 8A 82            [24]  429 	mov	dpl,r2
      000163 8B 83            [24]  430 	mov	dph,r3
      000165 8C F0            [24]  431 	mov	b,r4
      000167 74 1F            [12]  432 	mov	a,#0x1F
      000169 12r00r00         [24]  433 	lcall	__gptrput
      00016C                        434 00113$:
                                    435 ;	time.c:90: if (timeptr->tm_mon>11) timeptr->tm_mon=11;
      00016C 74 04            [12]  436 	mov	a,#0x04
      00016E 2D               [12]  437 	add	a,r5
      00016F FA               [12]  438 	mov	r2,a
      000170 E4               [12]  439 	clr	a
      000171 3E               [12]  440 	addc	a,r6
      000172 FB               [12]  441 	mov	r3,a
      000173 8F 04            [24]  442 	mov	ar4,r7
      000175 8A 82            [24]  443 	mov	dpl,r2
      000177 8B 83            [24]  444 	mov	dph,r3
      000179 8C F0            [24]  445 	mov	b,r4
      00017B 12r00r00         [24]  446 	lcall	__gptrget
      00017E F9               [12]  447 	mov  r1,a
      00017F 24 F4            [12]  448 	add	a,#0xff - 0x0B
      000181 50 0B            [24]  449 	jnc	00115$
      000183 8A 82            [24]  450 	mov	dpl,r2
      000185 8B 83            [24]  451 	mov	dph,r3
      000187 8C F0            [24]  452 	mov	b,r4
      000189 74 0B            [12]  453 	mov	a,#0x0B
      00018B 12r00r00         [24]  454 	lcall	__gptrput
      00018E                        455 00115$:
                                    456 ;	time.c:91: if (timeptr->tm_year<0) timeptr->tm_year=0;
      00018E 74 05            [12]  457 	mov	a,#0x05
      000190 2D               [12]  458 	add	a,r5
      000191 FD               [12]  459 	mov	r5,a
      000192 E4               [12]  460 	clr	a
      000193 3E               [12]  461 	addc	a,r6
      000194 FE               [12]  462 	mov	r6,a
      000195 8D 82            [24]  463 	mov	dpl,r5
      000197 8E 83            [24]  464 	mov	dph,r6
      000199 8F F0            [24]  465 	mov	b,r7
      00019B 12r00r00         [24]  466 	lcall	__gptrget
      00019E FB               [12]  467 	mov	r3,a
      00019F A3               [24]  468 	inc	dptr
      0001A0 12r00r00         [24]  469 	lcall	__gptrget
      0001A3 FC               [12]  470 	mov	r4,a
      0001A4 30 E7 0E         [24]  471 	jnb	acc.7,00118$
      0001A7 8D 82            [24]  472 	mov	dpl,r5
      0001A9 8E 83            [24]  473 	mov	dph,r6
      0001AB 8F F0            [24]  474 	mov	b,r7
      0001AD E4               [12]  475 	clr	a
      0001AE 12r00r00         [24]  476 	lcall	__gptrput
      0001B1 A3               [24]  477 	inc	dptr
      0001B2 02r00r00         [24]  478 	ljmp	__gptrput
      0001B5                        479 00118$:
      0001B5 22               [24]  480 	ret
                                    481 ;------------------------------------------------------------
                                    482 ;Allocation info for local variables in function 'asctime'
                                    483 ;------------------------------------------------------------
                                    484 ;sloc0                     Allocated with name '_asctime_sloc0_1_0'
                                    485 ;sloc1                     Allocated with name '_asctime_sloc1_1_0'
                                    486 ;sloc2                     Allocated with name '_asctime_sloc2_1_0'
                                    487 ;sloc3                     Allocated with name '_asctime_sloc3_1_0'
                                    488 ;timeptr                   Allocated with name '_asctime_timeptr_1_29'
                                    489 ;------------------------------------------------------------
                                    490 ;	time.c:95: char *asctime(struct tm *timeptr) {
                                    491 ;	-----------------------------------------
                                    492 ;	 function asctime
                                    493 ;	-----------------------------------------
      0001B6                        494 _asctime:
      0001B6 AF F0            [24]  495 	mov	r7,b
      0001B8 AE 83            [24]  496 	mov	r6,dph
      0001BA E5 82            [12]  497 	mov	a,dpl
      0001BC 90r00r36         [24]  498 	mov	dptr,#_asctime_timeptr_1_29
      0001BF F0               [24]  499 	movx	@dptr,a
      0001C0 EE               [12]  500 	mov	a,r6
      0001C1 A3               [24]  501 	inc	dptr
      0001C2 F0               [24]  502 	movx	@dptr,a
      0001C3 EF               [12]  503 	mov	a,r7
      0001C4 A3               [24]  504 	inc	dptr
      0001C5 F0               [24]  505 	movx	@dptr,a
                                    506 ;	time.c:96: CheckTime(timeptr);
      0001C6 90r00r36         [24]  507 	mov	dptr,#_asctime_timeptr_1_29
      0001C9 E0               [24]  508 	movx	a,@dptr
      0001CA FD               [12]  509 	mov	r5,a
      0001CB A3               [24]  510 	inc	dptr
      0001CC E0               [24]  511 	movx	a,@dptr
      0001CD FE               [12]  512 	mov	r6,a
      0001CE A3               [24]  513 	inc	dptr
      0001CF E0               [24]  514 	movx	a,@dptr
      0001D0 FF               [12]  515 	mov	r7,a
      0001D1 8D 82            [24]  516 	mov	dpl,r5
      0001D3 8E 83            [24]  517 	mov	dph,r6
      0001D5 8F F0            [24]  518 	mov	b,r7
      0001D7 12r00r9D         [24]  519 	lcall	_CheckTime
                                    520 ;	time.c:100: timeptr->tm_year+1900);
      0001DA 90r00r36         [24]  521 	mov	dptr,#_asctime_timeptr_1_29
      0001DD E0               [24]  522 	movx	a,@dptr
      0001DE FD               [12]  523 	mov	r5,a
      0001DF A3               [24]  524 	inc	dptr
      0001E0 E0               [24]  525 	movx	a,@dptr
      0001E1 FE               [12]  526 	mov	r6,a
      0001E2 A3               [24]  527 	inc	dptr
      0001E3 E0               [24]  528 	movx	a,@dptr
      0001E4 FF               [12]  529 	mov	r7,a
      0001E5 74 05            [12]  530 	mov	a,#0x05
      0001E7 2D               [12]  531 	add	a,r5
      0001E8 FA               [12]  532 	mov	r2,a
      0001E9 E4               [12]  533 	clr	a
      0001EA 3E               [12]  534 	addc	a,r6
      0001EB FB               [12]  535 	mov	r3,a
      0001EC 8F 04            [24]  536 	mov	ar4,r7
      0001EE 8A 82            [24]  537 	mov	dpl,r2
      0001F0 8B 83            [24]  538 	mov	dph,r3
      0001F2 8C F0            [24]  539 	mov	b,r4
      0001F4 12r00r00         [24]  540 	lcall	__gptrget
      0001F7 FA               [12]  541 	mov	r2,a
      0001F8 A3               [24]  542 	inc	dptr
      0001F9 12r00r00         [24]  543 	lcall	__gptrget
      0001FC FB               [12]  544 	mov	r3,a
      0001FD 74 6C            [12]  545 	mov	a,#0x6C
      0001FF 2A               [12]  546 	add	a,r2
      000200 FA               [12]  547 	mov	r2,a
      000201 74 07            [12]  548 	mov	a,#0x07
      000203 3B               [12]  549 	addc	a,r3
      000204 FB               [12]  550 	mov	r3,a
                                    551 ;	time.c:99: timeptr->tm_hour, timeptr->tm_min, timeptr->tm_sec, 
      000205 8D 82            [24]  552 	mov	dpl,r5
      000207 8E 83            [24]  553 	mov	dph,r6
      000209 8F F0            [24]  554 	mov	b,r7
      00020B 12r00r00         [24]  555 	lcall	__gptrget
      00020E FC               [12]  556 	mov	r4,a
      00020F 8C*00            [24]  557 	mov	_asctime_sloc0_1_0,r4
      000211 75*01 00         [24]  558 	mov	(_asctime_sloc0_1_0 + 1),#0x00
      000214 74 01            [12]  559 	mov	a,#0x01
      000216 2D               [12]  560 	add	a,r5
      000217 F8               [12]  561 	mov	r0,a
      000218 E4               [12]  562 	clr	a
      000219 3E               [12]  563 	addc	a,r6
      00021A F9               [12]  564 	mov	r1,a
      00021B 8F 04            [24]  565 	mov	ar4,r7
      00021D 88 82            [24]  566 	mov	dpl,r0
      00021F 89 83            [24]  567 	mov	dph,r1
      000221 8C F0            [24]  568 	mov	b,r4
      000223 12r00r00         [24]  569 	lcall	__gptrget
      000226 F8               [12]  570 	mov	r0,a
      000227 88*02            [24]  571 	mov	_asctime_sloc1_1_0,r0
      000229 75*03 00         [24]  572 	mov	(_asctime_sloc1_1_0 + 1),#0x00
      00022C 74 02            [12]  573 	mov	a,#0x02
      00022E 2D               [12]  574 	add	a,r5
      00022F F8               [12]  575 	mov	r0,a
      000230 E4               [12]  576 	clr	a
      000231 3E               [12]  577 	addc	a,r6
      000232 F9               [12]  578 	mov	r1,a
      000233 8F 04            [24]  579 	mov	ar4,r7
      000235 88 82            [24]  580 	mov	dpl,r0
      000237 89 83            [24]  581 	mov	dph,r1
      000239 8C F0            [24]  582 	mov	b,r4
      00023B 12r00r00         [24]  583 	lcall	__gptrget
      00023E F8               [12]  584 	mov	r0,a
      00023F 88*04            [24]  585 	mov	_asctime_sloc2_1_0,r0
      000241 75*05 00         [24]  586 	mov	(_asctime_sloc2_1_0 + 1),#0x00
                                    587 ;	time.c:98: __day[timeptr->tm_wday], __month[timeptr->tm_mon], timeptr->tm_mday,
      000244 74 03            [12]  588 	mov	a,#0x03
      000246 2D               [12]  589 	add	a,r5
      000247 F8               [12]  590 	mov	r0,a
      000248 E4               [12]  591 	clr	a
      000249 3E               [12]  592 	addc	a,r6
      00024A F9               [12]  593 	mov	r1,a
      00024B 8F 04            [24]  594 	mov	ar4,r7
      00024D 88 82            [24]  595 	mov	dpl,r0
      00024F 89 83            [24]  596 	mov	dph,r1
      000251 8C F0            [24]  597 	mov	b,r4
      000253 12r00r00         [24]  598 	lcall	__gptrget
      000256 F8               [12]  599 	mov	r0,a
      000257 88*06            [24]  600 	mov	_asctime_sloc3_1_0,r0
      000259 75*07 00         [24]  601 	mov	(_asctime_sloc3_1_0 + 1),#0x00
      00025C 74 04            [12]  602 	mov	a,#0x04
      00025E 2D               [12]  603 	add	a,r5
      00025F F8               [12]  604 	mov	r0,a
      000260 E4               [12]  605 	clr	a
      000261 3E               [12]  606 	addc	a,r6
      000262 F9               [12]  607 	mov	r1,a
      000263 8F 04            [24]  608 	mov	ar4,r7
      000265 88 82            [24]  609 	mov	dpl,r0
      000267 89 83            [24]  610 	mov	dph,r1
      000269 8C F0            [24]  611 	mov	b,r4
      00026B 12r00r00         [24]  612 	lcall	__gptrget
      00026E 75 F0 02         [24]  613 	mov	b,#0x02
      000271 A4               [48]  614 	mul	ab
      000272 24r0C            [12]  615 	add	a,#___month
      000274 F5 82            [12]  616 	mov	dpl,a
      000276 74s00            [12]  617 	mov	a,#(___month >> 8)
      000278 35 F0            [12]  618 	addc	a,b
      00027A F5 83            [12]  619 	mov	dph,a
      00027C E4               [12]  620 	clr	a
      00027D 93               [24]  621 	movc	a,@a+dptr
      00027E F9               [12]  622 	mov	r1,a
      00027F A3               [24]  623 	inc	dptr
      000280 E4               [12]  624 	clr	a
      000281 93               [24]  625 	movc	a,@a+dptr
      000282 F8               [12]  626 	mov	r0,a
      000283 7C 80            [12]  627 	mov	r4,#0x80
      000285 74 07            [12]  628 	mov	a,#0x07
      000287 2D               [12]  629 	add	a,r5
      000288 FD               [12]  630 	mov	r5,a
      000289 E4               [12]  631 	clr	a
      00028A 3E               [12]  632 	addc	a,r6
      00028B FE               [12]  633 	mov	r6,a
      00028C 8D 82            [24]  634 	mov	dpl,r5
      00028E 8E 83            [24]  635 	mov	dph,r6
      000290 8F F0            [24]  636 	mov	b,r7
      000292 12r00r00         [24]  637 	lcall	__gptrget
      000295 75 F0 02         [24]  638 	mov	b,#0x02
      000298 A4               [48]  639 	mul	ab
      000299 24r24            [12]  640 	add	a,#___day
      00029B F5 82            [12]  641 	mov	dpl,a
      00029D 74s00            [12]  642 	mov	a,#(___day >> 8)
      00029F 35 F0            [12]  643 	addc	a,b
      0002A1 F5 83            [12]  644 	mov	dph,a
      0002A3 E4               [12]  645 	clr	a
      0002A4 93               [24]  646 	movc	a,@a+dptr
      0002A5 FE               [12]  647 	mov	r6,a
      0002A6 A3               [24]  648 	inc	dptr
      0002A7 E4               [12]  649 	clr	a
      0002A8 93               [24]  650 	movc	a,@a+dptr
      0002A9 FF               [12]  651 	mov	r7,a
      0002AA 7D 80            [12]  652 	mov	r5,#0x80
                                    653 ;	time.c:97: sprintf (ascTimeBuffer, "%s %s %2d %02d:%02d:%02d %04d\n",
      0002AC C0 02            [24]  654 	push	ar2
      0002AE C0 03            [24]  655 	push	ar3
      0002B0 C0*00            [24]  656 	push	_asctime_sloc0_1_0
      0002B2 C0*01            [24]  657 	push	(_asctime_sloc0_1_0 + 1)
      0002B4 C0*02            [24]  658 	push	_asctime_sloc1_1_0
      0002B6 C0*03            [24]  659 	push	(_asctime_sloc1_1_0 + 1)
      0002B8 C0*04            [24]  660 	push	_asctime_sloc2_1_0
      0002BA C0*05            [24]  661 	push	(_asctime_sloc2_1_0 + 1)
      0002BC C0*06            [24]  662 	push	_asctime_sloc3_1_0
      0002BE C0*07            [24]  663 	push	(_asctime_sloc3_1_0 + 1)
      0002C0 C0 01            [24]  664 	push	ar1
      0002C2 C0 00            [24]  665 	push	ar0
      0002C4 C0 04            [24]  666 	push	ar4
      0002C6 C0 06            [24]  667 	push	ar6
      0002C8 C0 07            [24]  668 	push	ar7
      0002CA C0 05            [24]  669 	push	ar5
      0002CC 74r32            [12]  670 	mov	a,#___str_0
      0002CE C0 E0            [24]  671 	push	acc
      0002D0 74s00            [12]  672 	mov	a,#(___str_0 >> 8)
      0002D2 C0 E0            [24]  673 	push	acc
      0002D4 ED               [12]  674 	mov	a,r5
      0002D5 C0 E0            [24]  675 	push	acc
      0002D7 74r13            [12]  676 	mov	a,#_ascTimeBuffer
      0002D9 C0 E0            [24]  677 	push	acc
      0002DB 74s00            [12]  678 	mov	a,#(_ascTimeBuffer >> 8)
      0002DD C0 E0            [24]  679 	push	acc
      0002DF E4               [12]  680 	clr	a
      0002E0 C0 E0            [24]  681 	push	acc
      0002E2 12r00r00         [24]  682 	lcall	_sprintf
      0002E5 E5 81            [12]  683 	mov	a,sp
      0002E7 24 EA            [12]  684 	add	a,#0xea
      0002E9 F5 81            [12]  685 	mov	sp,a
                                    686 ;	time.c:101: return ascTimeBuffer;
      0002EB 90r00r13         [24]  687 	mov	dptr,#_ascTimeBuffer
      0002EE 75 F0 00         [24]  688 	mov	b,#0x00
      0002F1 22               [24]  689 	ret
                                    690 ;------------------------------------------------------------
                                    691 ;Allocation info for local variables in function 'ctime'
                                    692 ;------------------------------------------------------------
                                    693 ;timep                     Allocated with name '_ctime_timep_1_31'
                                    694 ;------------------------------------------------------------
                                    695 ;	time.c:104: char *ctime(time_t *timep) {
                                    696 ;	-----------------------------------------
                                    697 ;	 function ctime
                                    698 ;	-----------------------------------------
      0002F2                        699 _ctime:
      0002F2 AF F0            [24]  700 	mov	r7,b
      0002F4 AE 83            [24]  701 	mov	r6,dph
      0002F6 E5 82            [12]  702 	mov	a,dpl
      0002F8 90r00r39         [24]  703 	mov	dptr,#_ctime_timep_1_31
      0002FB F0               [24]  704 	movx	@dptr,a
      0002FC EE               [12]  705 	mov	a,r6
      0002FD A3               [24]  706 	inc	dptr
      0002FE F0               [24]  707 	movx	@dptr,a
      0002FF EF               [12]  708 	mov	a,r7
      000300 A3               [24]  709 	inc	dptr
      000301 F0               [24]  710 	movx	@dptr,a
                                    711 ;	time.c:105: return asctime(localtime(timep));
      000302 90r00r39         [24]  712 	mov	dptr,#_ctime_timep_1_31
      000305 E0               [24]  713 	movx	a,@dptr
      000306 FD               [12]  714 	mov	r5,a
      000307 A3               [24]  715 	inc	dptr
      000308 E0               [24]  716 	movx	a,@dptr
      000309 FE               [12]  717 	mov	r6,a
      00030A A3               [24]  718 	inc	dptr
      00030B E0               [24]  719 	movx	a,@dptr
      00030C FF               [12]  720 	mov	r7,a
      00030D 8D 82            [24]  721 	mov	dpl,r5
      00030F 8E 83            [24]  722 	mov	dph,r6
      000311 8F F0            [24]  723 	mov	b,r7
      000313 12r03r19         [24]  724 	lcall	_localtime
      000316 02r01rB6         [24]  725 	ljmp	_asctime
                                    726 ;------------------------------------------------------------
                                    727 ;Allocation info for local variables in function 'localtime'
                                    728 ;------------------------------------------------------------
                                    729 ;timep                     Allocated with name '_localtime_timep_1_33'
                                    730 ;------------------------------------------------------------
                                    731 ;	time.c:121: struct tm *localtime(time_t *timep) {
                                    732 ;	-----------------------------------------
                                    733 ;	 function localtime
                                    734 ;	-----------------------------------------
      000319                        735 _localtime:
      000319 AF F0            [24]  736 	mov	r7,b
      00031B AE 83            [24]  737 	mov	r6,dph
      00031D E5 82            [12]  738 	mov	a,dpl
      00031F 90r00r48         [24]  739 	mov	dptr,#_localtime_timep_1_33
      000322 F0               [24]  740 	movx	@dptr,a
      000323 EE               [12]  741 	mov	a,r6
      000324 A3               [24]  742 	inc	dptr
      000325 F0               [24]  743 	movx	@dptr,a
      000326 EF               [12]  744 	mov	a,r7
      000327 A3               [24]  745 	inc	dptr
      000328 F0               [24]  746 	movx	@dptr,a
                                    747 ;	time.c:122: return gmtime(timep);
      000329 90r00r48         [24]  748 	mov	dptr,#_localtime_timep_1_33
      00032C E0               [24]  749 	movx	a,@dptr
      00032D FD               [12]  750 	mov	r5,a
      00032E A3               [24]  751 	inc	dptr
      00032F E0               [24]  752 	movx	a,@dptr
      000330 FE               [12]  753 	mov	r6,a
      000331 A3               [24]  754 	inc	dptr
      000332 E0               [24]  755 	movx	a,@dptr
      000333 FF               [12]  756 	mov	r7,a
      000334 8D 82            [24]  757 	mov	dpl,r5
      000336 8E 83            [24]  758 	mov	dph,r6
      000338 8F F0            [24]  759 	mov	b,r7
      00033A 02r03r3D         [24]  760 	ljmp	_gmtime
                                    761 ;------------------------------------------------------------
                                    762 ;Allocation info for local variables in function 'gmtime'
                                    763 ;------------------------------------------------------------
                                    764 ;sloc0                     Allocated with name '_gmtime_sloc0_1_0'
                                    765 ;sloc1                     Allocated with name '_gmtime_sloc1_1_0'
                                    766 ;sloc2                     Allocated with name '_gmtime_sloc2_1_0'
                                    767 ;sloc3                     Allocated with name '_gmtime_sloc3_1_0'
                                    768 ;timep                     Allocated with name '_gmtime_timep_1_35'
                                    769 ;epoch                     Allocated with name '_gmtime_epoch_1_36'
                                    770 ;year                      Allocated with name '_gmtime_year_1_36'
                                    771 ;month                     Allocated with name '_gmtime_month_1_36'
                                    772 ;monthLength               Allocated with name '_gmtime_monthLength_1_36'
                                    773 ;days                      Allocated with name '_gmtime_days_1_36'
                                    774 ;------------------------------------------------------------
                                    775 ;	time.c:125: struct tm *gmtime(time_t *timep) {
                                    776 ;	-----------------------------------------
                                    777 ;	 function gmtime
                                    778 ;	-----------------------------------------
      00033D                        779 _gmtime:
      00033D AF F0            [24]  780 	mov	r7,b
      00033F AE 83            [24]  781 	mov	r6,dph
      000341 E5 82            [12]  782 	mov	a,dpl
      000343 90r00r4B         [24]  783 	mov	dptr,#_gmtime_timep_1_35
      000346 F0               [24]  784 	movx	@dptr,a
      000347 EE               [12]  785 	mov	a,r6
      000348 A3               [24]  786 	inc	dptr
      000349 F0               [24]  787 	movx	@dptr,a
      00034A EF               [12]  788 	mov	a,r7
      00034B A3               [24]  789 	inc	dptr
      00034C F0               [24]  790 	movx	@dptr,a
                                    791 ;	time.c:126: unsigned long epoch=*timep;
      00034D 90r00r4B         [24]  792 	mov	dptr,#_gmtime_timep_1_35
      000350 E0               [24]  793 	movx	a,@dptr
      000351 FD               [12]  794 	mov	r5,a
      000352 A3               [24]  795 	inc	dptr
      000353 E0               [24]  796 	movx	a,@dptr
      000354 FE               [12]  797 	mov	r6,a
      000355 A3               [24]  798 	inc	dptr
      000356 E0               [24]  799 	movx	a,@dptr
      000357 FF               [12]  800 	mov	r7,a
      000358 8D 82            [24]  801 	mov	dpl,r5
      00035A 8E 83            [24]  802 	mov	dph,r6
      00035C 8F F0            [24]  803 	mov	b,r7
      00035E 12r00r00         [24]  804 	lcall	__gptrget
      000361 FD               [12]  805 	mov	r5,a
      000362 A3               [24]  806 	inc	dptr
      000363 12r00r00         [24]  807 	lcall	__gptrget
      000366 FE               [12]  808 	mov	r6,a
      000367 A3               [24]  809 	inc	dptr
      000368 12r00r00         [24]  810 	lcall	__gptrget
      00036B FF               [12]  811 	mov	r7,a
      00036C A3               [24]  812 	inc	dptr
      00036D 12r00r00         [24]  813 	lcall	__gptrget
      000370 FC               [12]  814 	mov	r4,a
                                    815 ;	time.c:131: lastTime.tm_sec=epoch%60;
      000371 90r00r00         [24]  816 	mov	dptr,#__modulong_PARM_2
      000374 74 3C            [12]  817 	mov	a,#0x3C
      000376 F0               [24]  818 	movx	@dptr,a
      000377 E4               [12]  819 	clr	a
      000378 A3               [24]  820 	inc	dptr
      000379 F0               [24]  821 	movx	@dptr,a
      00037A A3               [24]  822 	inc	dptr
      00037B F0               [24]  823 	movx	@dptr,a
      00037C A3               [24]  824 	inc	dptr
      00037D F0               [24]  825 	movx	@dptr,a
      00037E 8D 82            [24]  826 	mov	dpl,r5
      000380 8E 83            [24]  827 	mov	dph,r6
      000382 8F F0            [24]  828 	mov	b,r7
      000384 EC               [12]  829 	mov	a,r4
      000385 C0 07            [24]  830 	push	ar7
      000387 C0 06            [24]  831 	push	ar6
      000389 C0 05            [24]  832 	push	ar5
      00038B C0 04            [24]  833 	push	ar4
      00038D 12r00r00         [24]  834 	lcall	__modulong
      000390 A8 82            [24]  835 	mov	r0,dpl
      000392 D0 04            [24]  836 	pop	ar4
      000394 D0 05            [24]  837 	pop	ar5
      000396 D0 06            [24]  838 	pop	ar6
      000398 D0 07            [24]  839 	pop	ar7
      00039A 90r00r3C         [24]  840 	mov	dptr,#_lastTime
      00039D E8               [12]  841 	mov	a,r0
      00039E F0               [24]  842 	movx	@dptr,a
                                    843 ;	time.c:132: epoch/=60; // now it is minutes
      00039F 90r00r00         [24]  844 	mov	dptr,#__divulong_PARM_2
      0003A2 74 3C            [12]  845 	mov	a,#0x3C
      0003A4 F0               [24]  846 	movx	@dptr,a
      0003A5 E4               [12]  847 	clr	a
      0003A6 A3               [24]  848 	inc	dptr
      0003A7 F0               [24]  849 	movx	@dptr,a
      0003A8 A3               [24]  850 	inc	dptr
      0003A9 F0               [24]  851 	movx	@dptr,a
      0003AA A3               [24]  852 	inc	dptr
      0003AB F0               [24]  853 	movx	@dptr,a
                                    854 ;	time.c:133: lastTime.tm_min=epoch%60;
      0003AC 8D 82            [24]  855 	mov	dpl,r5
      0003AE 8E 83            [24]  856 	mov	dph,r6
      0003B0 8F F0            [24]  857 	mov	b,r7
      0003B2 EC               [12]  858 	mov	a,r4
      0003B3 12r00r00         [24]  859 	lcall	__divulong
      0003B6 AC 82            [24]  860 	mov	r4,dpl
      0003B8 AD 83            [24]  861 	mov	r5,dph
      0003BA AE F0            [24]  862 	mov	r6,b
      0003BC FF               [12]  863 	mov	r7,a
      0003BD 90r00r00         [24]  864 	mov	dptr,#__modulong_PARM_2
      0003C0 74 3C            [12]  865 	mov	a,#0x3C
      0003C2 F0               [24]  866 	movx	@dptr,a
      0003C3 E4               [12]  867 	clr	a
      0003C4 A3               [24]  868 	inc	dptr
      0003C5 F0               [24]  869 	movx	@dptr,a
      0003C6 A3               [24]  870 	inc	dptr
      0003C7 F0               [24]  871 	movx	@dptr,a
      0003C8 A3               [24]  872 	inc	dptr
      0003C9 F0               [24]  873 	movx	@dptr,a
      0003CA 8C 82            [24]  874 	mov	dpl,r4
      0003CC 8D 83            [24]  875 	mov	dph,r5
      0003CE 8E F0            [24]  876 	mov	b,r6
      0003D0 EF               [12]  877 	mov	a,r7
      0003D1 C0 07            [24]  878 	push	ar7
      0003D3 C0 06            [24]  879 	push	ar6
      0003D5 C0 05            [24]  880 	push	ar5
      0003D7 C0 04            [24]  881 	push	ar4
      0003D9 12r00r00         [24]  882 	lcall	__modulong
      0003DC A8 82            [24]  883 	mov	r0,dpl
      0003DE D0 04            [24]  884 	pop	ar4
      0003E0 D0 05            [24]  885 	pop	ar5
      0003E2 D0 06            [24]  886 	pop	ar6
      0003E4 D0 07            [24]  887 	pop	ar7
      0003E6 90r00r3D         [24]  888 	mov	dptr,#(_lastTime + 0x0001)
      0003E9 E8               [12]  889 	mov	a,r0
      0003EA F0               [24]  890 	movx	@dptr,a
                                    891 ;	time.c:134: epoch/=60; // now it is hours
      0003EB 90r00r00         [24]  892 	mov	dptr,#__divulong_PARM_2
      0003EE 74 3C            [12]  893 	mov	a,#0x3C
      0003F0 F0               [24]  894 	movx	@dptr,a
      0003F1 E4               [12]  895 	clr	a
      0003F2 A3               [24]  896 	inc	dptr
      0003F3 F0               [24]  897 	movx	@dptr,a
      0003F4 A3               [24]  898 	inc	dptr
      0003F5 F0               [24]  899 	movx	@dptr,a
      0003F6 A3               [24]  900 	inc	dptr
      0003F7 F0               [24]  901 	movx	@dptr,a
                                    902 ;	time.c:135: lastTime.tm_hour=epoch%24;
      0003F8 8C 82            [24]  903 	mov	dpl,r4
      0003FA 8D 83            [24]  904 	mov	dph,r5
      0003FC 8E F0            [24]  905 	mov	b,r6
      0003FE EF               [12]  906 	mov	a,r7
      0003FF 12r00r00         [24]  907 	lcall	__divulong
      000402 AC 82            [24]  908 	mov	r4,dpl
      000404 AD 83            [24]  909 	mov	r5,dph
      000406 AE F0            [24]  910 	mov	r6,b
      000408 FF               [12]  911 	mov	r7,a
      000409 90r00r00         [24]  912 	mov	dptr,#__modulong_PARM_2
      00040C 74 18            [12]  913 	mov	a,#0x18
      00040E F0               [24]  914 	movx	@dptr,a
      00040F E4               [12]  915 	clr	a
      000410 A3               [24]  916 	inc	dptr
      000411 F0               [24]  917 	movx	@dptr,a
      000412 A3               [24]  918 	inc	dptr
      000413 F0               [24]  919 	movx	@dptr,a
      000414 A3               [24]  920 	inc	dptr
      000415 F0               [24]  921 	movx	@dptr,a
      000416 8C 82            [24]  922 	mov	dpl,r4
      000418 8D 83            [24]  923 	mov	dph,r5
      00041A 8E F0            [24]  924 	mov	b,r6
      00041C EF               [12]  925 	mov	a,r7
      00041D C0 07            [24]  926 	push	ar7
      00041F C0 06            [24]  927 	push	ar6
      000421 C0 05            [24]  928 	push	ar5
      000423 C0 04            [24]  929 	push	ar4
      000425 12r00r00         [24]  930 	lcall	__modulong
      000428 A8 82            [24]  931 	mov	r0,dpl
      00042A D0 04            [24]  932 	pop	ar4
      00042C D0 05            [24]  933 	pop	ar5
      00042E D0 06            [24]  934 	pop	ar6
      000430 D0 07            [24]  935 	pop	ar7
      000432 90r00r3E         [24]  936 	mov	dptr,#(_lastTime + 0x0002)
      000435 E8               [12]  937 	mov	a,r0
      000436 F0               [24]  938 	movx	@dptr,a
                                    939 ;	time.c:136: epoch/=24; // now it is days
      000437 90r00r00         [24]  940 	mov	dptr,#__divulong_PARM_2
      00043A 74 18            [12]  941 	mov	a,#0x18
      00043C F0               [24]  942 	movx	@dptr,a
      00043D E4               [12]  943 	clr	a
      00043E A3               [24]  944 	inc	dptr
      00043F F0               [24]  945 	movx	@dptr,a
      000440 A3               [24]  946 	inc	dptr
      000441 F0               [24]  947 	movx	@dptr,a
      000442 A3               [24]  948 	inc	dptr
      000443 F0               [24]  949 	movx	@dptr,a
                                    950 ;	time.c:137: lastTime.tm_wday=(epoch+4)%7;
      000444 8C 82            [24]  951 	mov	dpl,r4
      000446 8D 83            [24]  952 	mov	dph,r5
      000448 8E F0            [24]  953 	mov	b,r6
      00044A EF               [12]  954 	mov	a,r7
      00044B 12r00r00         [24]  955 	lcall	__divulong
      00044E AC 82            [24]  956 	mov	r4,dpl
      000450 AD 83            [24]  957 	mov	r5,dph
      000452 AE F0            [24]  958 	mov	r6,b
      000454 FF               [12]  959 	mov	r7,a
      000455 74 04            [12]  960 	mov	a,#0x04
      000457 2C               [12]  961 	add	a,r4
      000458 F8               [12]  962 	mov	r0,a
      000459 E4               [12]  963 	clr	a
      00045A 3D               [12]  964 	addc	a,r5
      00045B F9               [12]  965 	mov	r1,a
      00045C E4               [12]  966 	clr	a
      00045D 3E               [12]  967 	addc	a,r6
      00045E FA               [12]  968 	mov	r2,a
      00045F E4               [12]  969 	clr	a
      000460 3F               [12]  970 	addc	a,r7
      000461 FB               [12]  971 	mov	r3,a
      000462 90r00r00         [24]  972 	mov	dptr,#__modulong_PARM_2
      000465 74 07            [12]  973 	mov	a,#0x07
      000467 F0               [24]  974 	movx	@dptr,a
      000468 E4               [12]  975 	clr	a
      000469 A3               [24]  976 	inc	dptr
      00046A F0               [24]  977 	movx	@dptr,a
      00046B A3               [24]  978 	inc	dptr
      00046C F0               [24]  979 	movx	@dptr,a
      00046D A3               [24]  980 	inc	dptr
      00046E F0               [24]  981 	movx	@dptr,a
      00046F 88 82            [24]  982 	mov	dpl,r0
      000471 89 83            [24]  983 	mov	dph,r1
      000473 8A F0            [24]  984 	mov	b,r2
      000475 EB               [12]  985 	mov	a,r3
      000476 C0 07            [24]  986 	push	ar7
      000478 C0 06            [24]  987 	push	ar6
      00047A C0 05            [24]  988 	push	ar5
      00047C C0 04            [24]  989 	push	ar4
      00047E 12r00r00         [24]  990 	lcall	__modulong
      000481 A8 82            [24]  991 	mov	r0,dpl
      000483 A9 83            [24]  992 	mov	r1,dph
      000485 AA F0            [24]  993 	mov	r2,b
      000487 FB               [12]  994 	mov	r3,a
      000488 D0 04            [24]  995 	pop	ar4
      00048A D0 05            [24]  996 	pop	ar5
      00048C D0 06            [24]  997 	pop	ar6
      00048E D0 07            [24]  998 	pop	ar7
      000490 90r00r43         [24]  999 	mov	dptr,#(_lastTime + 0x0007)
      000493 E8               [12] 1000 	mov	a,r0
      000494 F0               [24] 1001 	movx	@dptr,a
                                   1002 ;	time.c:140: days=0;
      000495 90r00r53         [24] 1003 	mov	dptr,#_gmtime_days_1_36
      000498 E4               [12] 1004 	clr	a
      000499 F0               [24] 1005 	movx	@dptr,a
      00049A A3               [24] 1006 	inc	dptr
      00049B F0               [24] 1007 	movx	@dptr,a
      00049C A3               [24] 1008 	inc	dptr
      00049D F0               [24] 1009 	movx	@dptr,a
      00049E A3               [24] 1010 	inc	dptr
      00049F F0               [24] 1011 	movx	@dptr,a
                                   1012 ;	time.c:141: while((days += (LEAP_YEAR(year) ? 366 : 365)) <= epoch) {
      0004A0 8C*0A            [24] 1013 	mov	_gmtime_sloc1_1_0,r4
      0004A2 8D*0B            [24] 1014 	mov	(_gmtime_sloc1_1_0 + 1),r5
      0004A4 8E*0C            [24] 1015 	mov	(_gmtime_sloc1_1_0 + 2),r6
      0004A6 8F*0D            [24] 1016 	mov	(_gmtime_sloc1_1_0 + 3),r7
      0004A8 75*08 B2         [24] 1017 	mov	_gmtime_sloc0_1_0,#0xB2
      0004AB 75*09 07         [24] 1018 	mov	(_gmtime_sloc0_1_0 + 1),#0x07
      0004AE                       1019 00101$:
      0004AE 74 03            [12] 1020 	mov	a,#0x03
      0004B0 55*08            [12] 1021 	anl	a,_gmtime_sloc0_1_0
      0004B2 FA               [12] 1022 	mov	r2,a
      0004B3 7B 00            [12] 1023 	mov	r3,#0x00
      0004B5 4B               [12] 1024 	orl	a,r3
      0004B6 70 08            [24] 1025 	jnz	00118$
      0004B8 75*0E 6E         [24] 1026 	mov	_gmtime_sloc2_1_0,#0x6E
      0004BB 75*0F 01         [24] 1027 	mov	(_gmtime_sloc2_1_0 + 1),#0x01
      0004BE 80 06            [24] 1028 	sjmp	00119$
      0004C0                       1029 00118$:
      0004C0 75*0E 6D         [24] 1030 	mov	_gmtime_sloc2_1_0,#0x6D
      0004C3 75*0F 01         [24] 1031 	mov	(_gmtime_sloc2_1_0 + 1),#0x01
      0004C6                       1032 00119$:
      0004C6 90r00r53         [24] 1033 	mov	dptr,#_gmtime_days_1_36
      0004C9 E0               [24] 1034 	movx	a,@dptr
      0004CA F5*10            [12] 1035 	mov	_gmtime_sloc3_1_0,a
      0004CC A3               [24] 1036 	inc	dptr
      0004CD E0               [24] 1037 	movx	a,@dptr
      0004CE F5*11            [12] 1038 	mov	(_gmtime_sloc3_1_0 + 1),a
      0004D0 A3               [24] 1039 	inc	dptr
      0004D1 E0               [24] 1040 	movx	a,@dptr
      0004D2 F5*12            [12] 1041 	mov	(_gmtime_sloc3_1_0 + 2),a
      0004D4 A3               [24] 1042 	inc	dptr
      0004D5 E0               [24] 1043 	movx	a,@dptr
      0004D6 F5*13            [12] 1044 	mov	(_gmtime_sloc3_1_0 + 3),a
      0004D8 A8*0E            [24] 1045 	mov	r0,_gmtime_sloc2_1_0
      0004DA E5*0F            [12] 1046 	mov	a,(_gmtime_sloc2_1_0 + 1)
      0004DC F9               [12] 1047 	mov	r1,a
      0004DD 33               [12] 1048 	rlc	a
      0004DE 95 E0            [12] 1049 	subb	a,acc
      0004E0 FA               [12] 1050 	mov	r2,a
      0004E1 FB               [12] 1051 	mov	r3,a
      0004E2 E8               [12] 1052 	mov	a,r0
      0004E3 25*10            [12] 1053 	add	a,_gmtime_sloc3_1_0
      0004E5 F8               [12] 1054 	mov	r0,a
      0004E6 E9               [12] 1055 	mov	a,r1
      0004E7 35*11            [12] 1056 	addc	a,(_gmtime_sloc3_1_0 + 1)
      0004E9 F9               [12] 1057 	mov	r1,a
      0004EA EA               [12] 1058 	mov	a,r2
      0004EB 35*12            [12] 1059 	addc	a,(_gmtime_sloc3_1_0 + 2)
      0004ED FA               [12] 1060 	mov	r2,a
      0004EE EB               [12] 1061 	mov	a,r3
      0004EF 35*13            [12] 1062 	addc	a,(_gmtime_sloc3_1_0 + 3)
      0004F1 FB               [12] 1063 	mov	r3,a
      0004F2 90r00r53         [24] 1064 	mov	dptr,#_gmtime_days_1_36
      0004F5 E8               [12] 1065 	mov	a,r0
      0004F6 F0               [24] 1066 	movx	@dptr,a
      0004F7 E9               [12] 1067 	mov	a,r1
      0004F8 A3               [24] 1068 	inc	dptr
      0004F9 F0               [24] 1069 	movx	@dptr,a
      0004FA EA               [12] 1070 	mov	a,r2
      0004FB A3               [24] 1071 	inc	dptr
      0004FC F0               [24] 1072 	movx	@dptr,a
      0004FD EB               [12] 1073 	mov	a,r3
      0004FE A3               [24] 1074 	inc	dptr
      0004FF F0               [24] 1075 	movx	@dptr,a
      000500 C3               [12] 1076 	clr	c
      000501 EC               [12] 1077 	mov	a,r4
      000502 98               [12] 1078 	subb	a,r0
      000503 ED               [12] 1079 	mov	a,r5
      000504 99               [12] 1080 	subb	a,r1
      000505 EE               [12] 1081 	mov	a,r6
      000506 9A               [12] 1082 	subb	a,r2
      000507 EF               [12] 1083 	mov	a,r7
      000508 9B               [12] 1084 	subb	a,r3
      000509 40 0A            [24] 1085 	jc	00103$
                                   1086 ;	time.c:142: year++;
      00050B 05*08            [12] 1087 	inc	_gmtime_sloc0_1_0
      00050D E4               [12] 1088 	clr	a
      00050E B5*08 9D         [24] 1089 	cjne	a,_gmtime_sloc0_1_0,00101$
      000511 05*09            [12] 1090 	inc	(_gmtime_sloc0_1_0 + 1)
      000513 80 99            [24] 1091 	sjmp	00101$
      000515                       1092 00103$:
                                   1093 ;	time.c:144: lastTime.tm_year=year-1900;
      000515 E5*08            [12] 1094 	mov	a,_gmtime_sloc0_1_0
      000517 24 94            [12] 1095 	add	a,#0x94
      000519 FE               [12] 1096 	mov	r6,a
      00051A E5*09            [12] 1097 	mov	a,(_gmtime_sloc0_1_0 + 1)
      00051C 34 F8            [12] 1098 	addc	a,#0xF8
      00051E FF               [12] 1099 	mov	r7,a
      00051F 90r00r41         [24] 1100 	mov	dptr,#(_lastTime + 0x0005)
      000522 EE               [12] 1101 	mov	a,r6
      000523 F0               [24] 1102 	movx	@dptr,a
      000524 EF               [12] 1103 	mov	a,r7
      000525 A3               [24] 1104 	inc	dptr
      000526 F0               [24] 1105 	movx	@dptr,a
                                   1106 ;	time.c:146: days -= LEAP_YEAR(year) ? 366 : 365;
      000527 74 03            [12] 1107 	mov	a,#0x03
      000529 55*08            [12] 1108 	anl	a,_gmtime_sloc0_1_0
      00052B FE               [12] 1109 	mov	r6,a
      00052C 7F 00            [12] 1110 	mov	r7,#0x00
      00052E 4F               [12] 1111 	orl	a,r7
      00052F 70 06            [24] 1112 	jnz	00120$
      000531 7C 6E            [12] 1113 	mov	r4,#0x6E
      000533 7D 01            [12] 1114 	mov	r5,#0x01
      000535 80 04            [24] 1115 	sjmp	00121$
      000537                       1116 00120$:
      000537 7C 6D            [12] 1117 	mov	r4,#0x6D
      000539 7D 01            [12] 1118 	mov	r5,#0x01
      00053B                       1119 00121$:
      00053B C0 06            [24] 1120 	push	ar6
      00053D C0 07            [24] 1121 	push	ar7
      00053F 90r00r53         [24] 1122 	mov	dptr,#_gmtime_days_1_36
      000542 E0               [24] 1123 	movx	a,@dptr
      000543 F8               [12] 1124 	mov	r0,a
      000544 A3               [24] 1125 	inc	dptr
      000545 E0               [24] 1126 	movx	a,@dptr
      000546 F9               [12] 1127 	mov	r1,a
      000547 A3               [24] 1128 	inc	dptr
      000548 E0               [24] 1129 	movx	a,@dptr
      000549 FA               [12] 1130 	mov	r2,a
      00054A A3               [24] 1131 	inc	dptr
      00054B E0               [24] 1132 	movx	a,@dptr
      00054C FB               [12] 1133 	mov	r3,a
      00054D ED               [12] 1134 	mov	a,r5
      00054E 33               [12] 1135 	rlc	a
      00054F 95 E0            [12] 1136 	subb	a,acc
      000551 FE               [12] 1137 	mov	r6,a
      000552 FF               [12] 1138 	mov	r7,a
      000553 90r00r53         [24] 1139 	mov	dptr,#_gmtime_days_1_36
      000556 E8               [12] 1140 	mov	a,r0
      000557 C3               [12] 1141 	clr	c
      000558 9C               [12] 1142 	subb	a,r4
      000559 F0               [24] 1143 	movx	@dptr,a
      00055A E9               [12] 1144 	mov	a,r1
      00055B 9D               [12] 1145 	subb	a,r5
      00055C A3               [24] 1146 	inc	dptr
      00055D F0               [24] 1147 	movx	@dptr,a
      00055E EA               [12] 1148 	mov	a,r2
      00055F 9E               [12] 1149 	subb	a,r6
      000560 A3               [24] 1150 	inc	dptr
      000561 F0               [24] 1151 	movx	@dptr,a
      000562 EB               [12] 1152 	mov	a,r3
      000563 9F               [12] 1153 	subb	a,r7
      000564 A3               [24] 1154 	inc	dptr
      000565 F0               [24] 1155 	movx	@dptr,a
                                   1156 ;	time.c:147: epoch -= days; // now it is days in this year, starting at 0
      000566 90r00r53         [24] 1157 	mov	dptr,#_gmtime_days_1_36
      000569 E0               [24] 1158 	movx	a,@dptr
      00056A FC               [12] 1159 	mov	r4,a
      00056B A3               [24] 1160 	inc	dptr
      00056C E0               [24] 1161 	movx	a,@dptr
      00056D FD               [12] 1162 	mov	r5,a
      00056E A3               [24] 1163 	inc	dptr
      00056F E0               [24] 1164 	movx	a,@dptr
      000570 FE               [12] 1165 	mov	r6,a
      000571 A3               [24] 1166 	inc	dptr
      000572 E0               [24] 1167 	movx	a,@dptr
      000573 FF               [12] 1168 	mov	r7,a
      000574 E5*0A            [12] 1169 	mov	a,_gmtime_sloc1_1_0
      000576 C3               [12] 1170 	clr	c
      000577 9C               [12] 1171 	subb	a,r4
      000578 FC               [12] 1172 	mov	r4,a
      000579 E5*0B            [12] 1173 	mov	a,(_gmtime_sloc1_1_0 + 1)
      00057B 9D               [12] 1174 	subb	a,r5
      00057C FD               [12] 1175 	mov	r5,a
      00057D E5*0C            [12] 1176 	mov	a,(_gmtime_sloc1_1_0 + 2)
      00057F 9E               [12] 1177 	subb	a,r6
      000580 FE               [12] 1178 	mov	r6,a
      000581 E5*0D            [12] 1179 	mov	a,(_gmtime_sloc1_1_0 + 3)
      000583 9F               [12] 1180 	subb	a,r7
      000584 FF               [12] 1181 	mov	r7,a
      000585 90r00r4E         [24] 1182 	mov	dptr,#_gmtime_epoch_1_36
      000588 EC               [12] 1183 	mov	a,r4
      000589 F0               [24] 1184 	movx	@dptr,a
      00058A ED               [12] 1185 	mov	a,r5
      00058B A3               [24] 1186 	inc	dptr
      00058C F0               [24] 1187 	movx	@dptr,a
      00058D EE               [12] 1188 	mov	a,r6
      00058E A3               [24] 1189 	inc	dptr
      00058F F0               [24] 1190 	movx	@dptr,a
      000590 EF               [12] 1191 	mov	a,r7
      000591 A3               [24] 1192 	inc	dptr
      000592 F0               [24] 1193 	movx	@dptr,a
                                   1194 ;	time.c:148: lastTime.tm_yday=epoch;
      000593 90r00r44         [24] 1195 	mov	dptr,#(_lastTime + 0x0008)
      000596 EC               [12] 1196 	mov	a,r4
      000597 F0               [24] 1197 	movx	@dptr,a
      000598 ED               [12] 1198 	mov	a,r5
      000599 A3               [24] 1199 	inc	dptr
      00059A F0               [24] 1200 	movx	@dptr,a
                                   1201 ;	time.c:153: for (month=0; month<12; month++) {
      00059B 75*10 00         [24] 1202 	mov	_gmtime_sloc3_1_0,#0x00
                                   1203 ;	time.c:175: return &lastTime;
      00059E D0 07            [24] 1204 	pop	ar7
      0005A0 D0 06            [24] 1205 	pop	ar6
                                   1206 ;	time.c:153: for (month=0; month<12; month++) {
      0005A2                       1207 00114$:
                                   1208 ;	time.c:154: if (month==1) { // februari
      0005A2 74 01            [12] 1209 	mov	a,#0x01
      0005A4 B5*10 14         [24] 1210 	cjne	a,_gmtime_sloc3_1_0,00108$
                                   1211 ;	time.c:155: if (LEAP_YEAR(year)) {
      0005A7 EE               [12] 1212 	mov	a,r6
      0005A8 4F               [12] 1213 	orl	a,r7
      0005A9 70 08            [24] 1214 	jnz	00105$
                                   1215 ;	time.c:156: monthLength=29;
      0005AB 90r00r52         [24] 1216 	mov	dptr,#_gmtime_monthLength_1_36
      0005AE 74 1D            [12] 1217 	mov	a,#0x1D
      0005B0 F0               [24] 1218 	movx	@dptr,a
      0005B1 80 13            [24] 1219 	sjmp	00109$
      0005B3                       1220 00105$:
                                   1221 ;	time.c:158: monthLength=28;
      0005B3 90r00r52         [24] 1222 	mov	dptr,#_gmtime_monthLength_1_36
      0005B6 74 1C            [12] 1223 	mov	a,#0x1C
      0005B8 F0               [24] 1224 	movx	@dptr,a
      0005B9 80 0B            [24] 1225 	sjmp	00109$
      0005BB                       1226 00108$:
                                   1227 ;	time.c:161: monthLength = monthDays[month];
      0005BB E5*10            [12] 1228 	mov	a,_gmtime_sloc3_1_0
      0005BD 90r00r00         [24] 1229 	mov	dptr,#_monthDays
      0005C0 93               [24] 1230 	movc	a,@a+dptr
      0005C1 FD               [12] 1231 	mov	r5,a
      0005C2 90r00r52         [24] 1232 	mov	dptr,#_gmtime_monthLength_1_36
      0005C5 F0               [24] 1233 	movx	@dptr,a
      0005C6                       1234 00109$:
                                   1235 ;	time.c:164: if (epoch>=monthLength) {
      0005C6 90r00r4E         [24] 1236 	mov	dptr,#_gmtime_epoch_1_36
      0005C9 E0               [24] 1237 	movx	a,@dptr
      0005CA FA               [12] 1238 	mov	r2,a
      0005CB A3               [24] 1239 	inc	dptr
      0005CC E0               [24] 1240 	movx	a,@dptr
      0005CD FB               [12] 1241 	mov	r3,a
      0005CE A3               [24] 1242 	inc	dptr
      0005CF E0               [24] 1243 	movx	a,@dptr
      0005D0 FC               [12] 1244 	mov	r4,a
      0005D1 A3               [24] 1245 	inc	dptr
      0005D2 E0               [24] 1246 	movx	a,@dptr
      0005D3 FD               [12] 1247 	mov	r5,a
      0005D4 90r00r52         [24] 1248 	mov	dptr,#_gmtime_monthLength_1_36
      0005D7 E0               [24] 1249 	movx	a,@dptr
      0005D8 F9               [12] 1250 	mov	r1,a
      0005D9 89*0A            [24] 1251 	mov	_gmtime_sloc1_1_0,r1
      0005DB 75*0B 00         [24] 1252 	mov	(_gmtime_sloc1_1_0 + 1),#0x00
      0005DE 75*0C 00         [24] 1253 	mov	(_gmtime_sloc1_1_0 + 2),#0x00
      0005E1 75*0D 00         [24] 1254 	mov	(_gmtime_sloc1_1_0 + 3),#0x00
      0005E4 C3               [12] 1255 	clr	c
      0005E5 EA               [12] 1256 	mov	a,r2
      0005E6 95*0A            [12] 1257 	subb	a,_gmtime_sloc1_1_0
      0005E8 EB               [12] 1258 	mov	a,r3
      0005E9 95*0B            [12] 1259 	subb	a,(_gmtime_sloc1_1_0 + 1)
      0005EB EC               [12] 1260 	mov	a,r4
      0005EC 95*0C            [12] 1261 	subb	a,(_gmtime_sloc1_1_0 + 2)
      0005EE ED               [12] 1262 	mov	a,r5
      0005EF 95*0D            [12] 1263 	subb	a,(_gmtime_sloc1_1_0 + 3)
      0005F1 40 1F            [24] 1264 	jc	00113$
                                   1265 ;	time.c:165: epoch-=monthLength;
      0005F3 90r00r4E         [24] 1266 	mov	dptr,#_gmtime_epoch_1_36
      0005F6 EA               [12] 1267 	mov	a,r2
      0005F7 C3               [12] 1268 	clr	c
      0005F8 95*0A            [12] 1269 	subb	a,_gmtime_sloc1_1_0
      0005FA F0               [24] 1270 	movx	@dptr,a
      0005FB EB               [12] 1271 	mov	a,r3
      0005FC 95*0B            [12] 1272 	subb	a,(_gmtime_sloc1_1_0 + 1)
      0005FE A3               [24] 1273 	inc	dptr
      0005FF F0               [24] 1274 	movx	@dptr,a
      000600 EC               [12] 1275 	mov	a,r4
      000601 95*0C            [12] 1276 	subb	a,(_gmtime_sloc1_1_0 + 2)
      000603 A3               [24] 1277 	inc	dptr
      000604 F0               [24] 1278 	movx	@dptr,a
      000605 ED               [12] 1279 	mov	a,r5
      000606 95*0D            [12] 1280 	subb	a,(_gmtime_sloc1_1_0 + 3)
      000608 A3               [24] 1281 	inc	dptr
      000609 F0               [24] 1282 	movx	@dptr,a
                                   1283 ;	time.c:153: for (month=0; month<12; month++) {
      00060A 05*10            [12] 1284 	inc	_gmtime_sloc3_1_0
      00060C 74 F4            [12] 1285 	mov	a,#0x100 - 0x0C
      00060E 25*10            [12] 1286 	add	a,_gmtime_sloc3_1_0
      000610 50 90            [24] 1287 	jnc	00114$
      000612                       1288 00113$:
                                   1289 ;	time.c:170: lastTime.tm_mon=month;
      000612 90r00r40         [24] 1290 	mov	dptr,#(_lastTime + 0x0004)
      000615 E5*10            [12] 1291 	mov	a,_gmtime_sloc3_1_0
      000617 F0               [24] 1292 	movx	@dptr,a
                                   1293 ;	time.c:171: lastTime.tm_mday=epoch+1;
      000618 90r00r4E         [24] 1294 	mov	dptr,#_gmtime_epoch_1_36
      00061B E0               [24] 1295 	movx	a,@dptr
      00061C FC               [12] 1296 	mov	r4,a
      00061D A3               [24] 1297 	inc	dptr
      00061E E0               [24] 1298 	movx	a,@dptr
      00061F A3               [24] 1299 	inc	dptr
      000620 E0               [24] 1300 	movx	a,@dptr
      000621 A3               [24] 1301 	inc	dptr
      000622 E0               [24] 1302 	movx	a,@dptr
      000623 0C               [12] 1303 	inc	r4
      000624 90r00r3F         [24] 1304 	mov	dptr,#(_lastTime + 0x0003)
      000627 EC               [12] 1305 	mov	a,r4
      000628 F0               [24] 1306 	movx	@dptr,a
                                   1307 ;	time.c:173: lastTime.tm_isdst=0;
      000629 90r00r46         [24] 1308 	mov	dptr,#(_lastTime + 0x000a)
      00062C E4               [12] 1309 	clr	a
      00062D F0               [24] 1310 	movx	@dptr,a
                                   1311 ;	time.c:175: return &lastTime;
      00062E 90r00r3C         [24] 1312 	mov	dptr,#_lastTime
      000631 75 F0 00         [24] 1313 	mov	b,#0x00
      000634 22               [24] 1314 	ret
                                   1315 ;------------------------------------------------------------
                                   1316 ;Allocation info for local variables in function 'mktime'
                                   1317 ;------------------------------------------------------------
                                   1318 ;sloc0                     Allocated with name '_mktime_sloc0_1_0'
                                   1319 ;sloc1                     Allocated with name '_mktime_sloc1_1_0'
                                   1320 ;sloc2                     Allocated with name '_mktime_sloc2_1_0'
                                   1321 ;sloc3                     Allocated with name '_mktime_sloc3_1_0'
                                   1322 ;timeptr                   Allocated with name '_mktime_timeptr_1_45'
                                   1323 ;year                      Allocated with name '_mktime_year_1_46'
                                   1324 ;month                     Allocated with name '_mktime_month_1_46'
                                   1325 ;i                         Allocated with name '_mktime_i_1_46'
                                   1326 ;seconds                   Allocated with name '_mktime_seconds_1_46'
                                   1327 ;------------------------------------------------------------
                                   1328 ;	time.c:179: time_t mktime(struct tm *timeptr) {
                                   1329 ;	-----------------------------------------
                                   1330 ;	 function mktime
                                   1331 ;	-----------------------------------------
      000635                       1332 _mktime:
      000635 AF F0            [24] 1333 	mov	r7,b
      000637 AE 83            [24] 1334 	mov	r6,dph
      000639 E5 82            [12] 1335 	mov	a,dpl
      00063B 90r00r57         [24] 1336 	mov	dptr,#_mktime_timeptr_1_45
      00063E F0               [24] 1337 	movx	@dptr,a
      00063F EE               [12] 1338 	mov	a,r6
      000640 A3               [24] 1339 	inc	dptr
      000641 F0               [24] 1340 	movx	@dptr,a
      000642 EF               [12] 1341 	mov	a,r7
      000643 A3               [24] 1342 	inc	dptr
      000644 F0               [24] 1343 	movx	@dptr,a
                                   1344 ;	time.c:180: int year=timeptr->tm_year+1900, month=timeptr->tm_mon, i;
      000645 90r00r57         [24] 1345 	mov	dptr,#_mktime_timeptr_1_45
      000648 E0               [24] 1346 	movx	a,@dptr
      000649 F5*1A            [12] 1347 	mov	_mktime_sloc2_1_0,a
      00064B A3               [24] 1348 	inc	dptr
      00064C E0               [24] 1349 	movx	a,@dptr
      00064D F5*1B            [12] 1350 	mov	(_mktime_sloc2_1_0 + 1),a
      00064F A3               [24] 1351 	inc	dptr
      000650 E0               [24] 1352 	movx	a,@dptr
      000651 F5*1C            [12] 1353 	mov	(_mktime_sloc2_1_0 + 2),a
      000653 74 05            [12] 1354 	mov	a,#0x05
      000655 25*1A            [12] 1355 	add	a,_mktime_sloc2_1_0
      000657 FA               [12] 1356 	mov	r2,a
      000658 E4               [12] 1357 	clr	a
      000659 35*1B            [12] 1358 	addc	a,(_mktime_sloc2_1_0 + 1)
      00065B FB               [12] 1359 	mov	r3,a
      00065C AC*1C            [24] 1360 	mov	r4,(_mktime_sloc2_1_0 + 2)
      00065E 8A 82            [24] 1361 	mov	dpl,r2
      000660 8B 83            [24] 1362 	mov	dph,r3
      000662 8C F0            [24] 1363 	mov	b,r4
      000664 12r00r00         [24] 1364 	lcall	__gptrget
      000667 FA               [12] 1365 	mov	r2,a
      000668 A3               [24] 1366 	inc	dptr
      000669 12r00r00         [24] 1367 	lcall	__gptrget
      00066C FB               [12] 1368 	mov	r3,a
      00066D 74 6C            [12] 1369 	mov	a,#0x6C
      00066F 2A               [12] 1370 	add	a,r2
      000670 FC               [12] 1371 	mov	r4,a
      000671 74 07            [12] 1372 	mov	a,#0x07
      000673 3B               [12] 1373 	addc	a,r3
      000674 FB               [12] 1374 	mov	r3,a
      000675 74 04            [12] 1375 	mov	a,#0x04
      000677 25*1A            [12] 1376 	add	a,_mktime_sloc2_1_0
      000679 F8               [12] 1377 	mov	r0,a
      00067A E4               [12] 1378 	clr	a
      00067B 35*1B            [12] 1379 	addc	a,(_mktime_sloc2_1_0 + 1)
      00067D F9               [12] 1380 	mov	r1,a
      00067E AA*1C            [24] 1381 	mov	r2,(_mktime_sloc2_1_0 + 2)
      000680 88 82            [24] 1382 	mov	dpl,r0
      000682 89 83            [24] 1383 	mov	dph,r1
      000684 8A F0            [24] 1384 	mov	b,r2
      000686 12r00r00         [24] 1385 	lcall	__gptrget
      000689 F8               [12] 1386 	mov	r0,a
      00068A 88*14            [24] 1387 	mov	_mktime_sloc0_1_0,r0
      00068C 75*15 00         [24] 1388 	mov	(_mktime_sloc0_1_0 + 1),#0x00
                                   1389 ;	time.c:183: CheckTime(timeptr);
      00068F 85*1A 82         [24] 1390 	mov	dpl,_mktime_sloc2_1_0
      000692 85*1B 83         [24] 1391 	mov	dph,(_mktime_sloc2_1_0 + 1)
      000695 85*1C F0         [24] 1392 	mov	b,(_mktime_sloc2_1_0 + 2)
      000698 C0 04            [24] 1393 	push	ar4
      00069A C0 03            [24] 1394 	push	ar3
      00069C 12r00r9D         [24] 1395 	lcall	_CheckTime
      00069F D0 03            [24] 1396 	pop	ar3
      0006A1 D0 04            [24] 1397 	pop	ar4
                                   1398 ;	time.c:186: seconds= (year-1970)*(60*60*24L*365);
      0006A3 EC               [12] 1399 	mov	a,r4
      0006A4 24 4E            [12] 1400 	add	a,#0x4E
      0006A6 F9               [12] 1401 	mov	r1,a
      0006A7 EB               [12] 1402 	mov	a,r3
      0006A8 34 F8            [12] 1403 	addc	a,#0xF8
      0006AA FA               [12] 1404 	mov	r2,a
      0006AB 90r00r00         [24] 1405 	mov	dptr,#__mullong_PARM_2
      0006AE E9               [12] 1406 	mov	a,r1
      0006AF F0               [24] 1407 	movx	@dptr,a
      0006B0 EA               [12] 1408 	mov	a,r2
      0006B1 A3               [24] 1409 	inc	dptr
      0006B2 F0               [24] 1410 	movx	@dptr,a
      0006B3 EA               [12] 1411 	mov	a,r2
      0006B4 33               [12] 1412 	rlc	a
      0006B5 95 E0            [12] 1413 	subb	a,acc
      0006B7 A3               [24] 1414 	inc	dptr
      0006B8 F0               [24] 1415 	movx	@dptr,a
      0006B9 A3               [24] 1416 	inc	dptr
      0006BA F0               [24] 1417 	movx	@dptr,a
                                   1418 ;	time.c:189: for (i=1970; i<year; i++) {
      0006BB 90 33 80         [24] 1419 	mov	dptr,#0x3380
      0006BE 75 F0 E1         [24] 1420 	mov	b,#0xE1
      0006C1 74 01            [12] 1421 	mov	a,#0x01
      0006C3 C0 04            [24] 1422 	push	ar4
      0006C5 C0 03            [24] 1423 	push	ar3
      0006C7 12r00r00         [24] 1424 	lcall	__mullong
      0006CA 85 82*16         [24] 1425 	mov	_mktime_sloc1_1_0,dpl
      0006CD 85 83*17         [24] 1426 	mov	(_mktime_sloc1_1_0 + 1),dph
      0006D0 85 F0*18         [24] 1427 	mov	(_mktime_sloc1_1_0 + 2),b
      0006D3 F5*19            [12] 1428 	mov	(_mktime_sloc1_1_0 + 3),a
      0006D5 D0 03            [24] 1429 	pop	ar3
      0006D7 D0 04            [24] 1430 	pop	ar4
      0006D9 79 B2            [12] 1431 	mov	r1,#0xB2
      0006DB 7A 07            [12] 1432 	mov	r2,#0x07
      0006DD                       1433 00110$:
      0006DD C3               [12] 1434 	clr	c
      0006DE E9               [12] 1435 	mov	a,r1
      0006DF 9C               [12] 1436 	subb	a,r4
      0006E0 EA               [12] 1437 	mov	a,r2
      0006E1 64 80            [12] 1438 	xrl	a,#0x80
      0006E3 8B F0            [24] 1439 	mov	b,r3
      0006E5 63 F0 80         [24] 1440 	xrl	b,#0x80
      0006E8 95 F0            [12] 1441 	subb	a,b
      0006EA 50 47            [24] 1442 	jnc	00124$
                                   1443 ;	time.c:190: if (LEAP_YEAR(i)) {
      0006EC 90r00r00         [24] 1444 	mov	dptr,#__modsint_PARM_2
      0006EF 74 04            [12] 1445 	mov	a,#0x04
      0006F1 F0               [24] 1446 	movx	@dptr,a
      0006F2 E4               [12] 1447 	clr	a
      0006F3 A3               [24] 1448 	inc	dptr
      0006F4 F0               [24] 1449 	movx	@dptr,a
      0006F5 89 82            [24] 1450 	mov	dpl,r1
      0006F7 8A 83            [24] 1451 	mov	dph,r2
      0006F9 C0 04            [24] 1452 	push	ar4
      0006FB C0 03            [24] 1453 	push	ar3
      0006FD C0 02            [24] 1454 	push	ar2
      0006FF C0 01            [24] 1455 	push	ar1
      000701 12r00r00         [24] 1456 	lcall	__modsint
      000704 E5 82            [12] 1457 	mov	a,dpl
      000706 85 83 F0         [24] 1458 	mov	b,dph
      000709 D0 01            [24] 1459 	pop	ar1
      00070B D0 02            [24] 1460 	pop	ar2
      00070D D0 03            [24] 1461 	pop	ar3
      00070F D0 04            [24] 1462 	pop	ar4
      000711 45 F0            [12] 1463 	orl	a,b
      000713 70 17            [24] 1464 	jnz	00111$
                                   1465 ;	time.c:191: seconds+= 60*60*24L;
      000715 74 80            [12] 1466 	mov	a,#0x80
      000717 25*16            [12] 1467 	add	a,_mktime_sloc1_1_0
      000719 F5*16            [12] 1468 	mov	_mktime_sloc1_1_0,a
      00071B 74 51            [12] 1469 	mov	a,#0x51
      00071D 35*17            [12] 1470 	addc	a,(_mktime_sloc1_1_0 + 1)
      00071F F5*17            [12] 1471 	mov	(_mktime_sloc1_1_0 + 1),a
      000721 74 01            [12] 1472 	mov	a,#0x01
      000723 35*18            [12] 1473 	addc	a,(_mktime_sloc1_1_0 + 2)
      000725 F5*18            [12] 1474 	mov	(_mktime_sloc1_1_0 + 2),a
      000727 E4               [12] 1475 	clr	a
      000728 35*19            [12] 1476 	addc	a,(_mktime_sloc1_1_0 + 3)
      00072A F5*19            [12] 1477 	mov	(_mktime_sloc1_1_0 + 3),a
      00072C                       1478 00111$:
                                   1479 ;	time.c:189: for (i=1970; i<year; i++) {
      00072C 09               [12] 1480 	inc	r1
      00072D B9 00 AD         [24] 1481 	cjne	r1,#0x00,00110$
      000730 0A               [12] 1482 	inc	r2
      000731 80 AA            [24] 1483 	sjmp	00110$
      000733                       1484 00124$:
      000733 90r00r5A         [24] 1485 	mov	dptr,#_mktime_seconds_1_46
      000736 E5*16            [12] 1486 	mov	a,_mktime_sloc1_1_0
      000738 F0               [24] 1487 	movx	@dptr,a
      000739 E5*17            [12] 1488 	mov	a,(_mktime_sloc1_1_0 + 1)
      00073B A3               [24] 1489 	inc	dptr
      00073C F0               [24] 1490 	movx	@dptr,a
      00073D E5*18            [12] 1491 	mov	a,(_mktime_sloc1_1_0 + 2)
      00073F A3               [24] 1492 	inc	dptr
      000740 F0               [24] 1493 	movx	@dptr,a
      000741 E5*19            [12] 1494 	mov	a,(_mktime_sloc1_1_0 + 3)
      000743 A3               [24] 1495 	inc	dptr
      000744 F0               [24] 1496 	movx	@dptr,a
                                   1497 ;	time.c:196: for (i=0; i<month; i++) {
      000745 90r00r00         [24] 1498 	mov	dptr,#__modsint_PARM_2
      000748 74 04            [12] 1499 	mov	a,#0x04
      00074A F0               [24] 1500 	movx	@dptr,a
      00074B E4               [12] 1501 	clr	a
      00074C A3               [24] 1502 	inc	dptr
      00074D F0               [24] 1503 	movx	@dptr,a
      00074E 8C 82            [24] 1504 	mov	dpl,r4
      000750 8B 83            [24] 1505 	mov	dph,r3
      000752 12r00r00         [24] 1506 	lcall	__modsint
      000755 85 82*16         [24] 1507 	mov	_mktime_sloc1_1_0,dpl
      000758 85 83*17         [24] 1508 	mov	(_mktime_sloc1_1_0 + 1),dph
      00075B 79 00            [12] 1509 	mov	r1,#0x00
      00075D 7A 00            [12] 1510 	mov	r2,#0x00
      00075F                       1511 00113$:
      00075F C3               [12] 1512 	clr	c
      000760 E9               [12] 1513 	mov	a,r1
      000761 95*14            [12] 1514 	subb	a,_mktime_sloc0_1_0
      000763 EA               [12] 1515 	mov	a,r2
      000764 64 80            [12] 1516 	xrl	a,#0x80
      000766 85*15 F0         [24] 1517 	mov	b,(_mktime_sloc0_1_0 + 1)
      000769 63 F0 80         [24] 1518 	xrl	b,#0x80
      00076C 95 F0            [12] 1519 	subb	a,b
      00076E 40 03            [24] 1520 	jc	00143$
      000770 02r08r08         [24] 1521 	ljmp	00108$
      000773                       1522 00143$:
                                   1523 ;	time.c:197: if (i==1 && LEAP_YEAR(year)) { 
      000773 B9 01 2E         [24] 1524 	cjne	r1,#0x01,00105$
      000776 BA 00 2B         [24] 1525 	cjne	r2,#0x00,00105$
      000779 E5*16            [12] 1526 	mov	a,_mktime_sloc1_1_0
      00077B 45*17            [12] 1527 	orl	a,(_mktime_sloc1_1_0 + 1)
      00077D 70 25            [24] 1528 	jnz	00105$
                                   1529 ;	time.c:198: seconds+= 60*60*24L*29;
      00077F 90r00r5A         [24] 1530 	mov	dptr,#_mktime_seconds_1_46
      000782 E0               [24] 1531 	movx	a,@dptr
      000783 F8               [12] 1532 	mov	r0,a
      000784 A3               [24] 1533 	inc	dptr
      000785 E0               [24] 1534 	movx	a,@dptr
      000786 FB               [12] 1535 	mov	r3,a
      000787 A3               [24] 1536 	inc	dptr
      000788 E0               [24] 1537 	movx	a,@dptr
      000789 FC               [12] 1538 	mov	r4,a
      00078A A3               [24] 1539 	inc	dptr
      00078B E0               [24] 1540 	movx	a,@dptr
      00078C FF               [12] 1541 	mov	r7,a
      00078D 90r00r5A         [24] 1542 	mov	dptr,#_mktime_seconds_1_46
      000790 74 80            [12] 1543 	mov	a,#0x80
      000792 28               [12] 1544 	add	a,r0
      000793 F0               [24] 1545 	movx	@dptr,a
      000794 74 3B            [12] 1546 	mov	a,#0x3B
      000796 3B               [12] 1547 	addc	a,r3
      000797 A3               [24] 1548 	inc	dptr
      000798 F0               [24] 1549 	movx	@dptr,a
      000799 74 26            [12] 1550 	mov	a,#0x26
      00079B 3C               [12] 1551 	addc	a,r4
      00079C A3               [24] 1552 	inc	dptr
      00079D F0               [24] 1553 	movx	@dptr,a
      00079E E4               [12] 1554 	clr	a
      00079F 3F               [12] 1555 	addc	a,r7
      0007A0 A3               [24] 1556 	inc	dptr
      0007A1 F0               [24] 1557 	movx	@dptr,a
      0007A2 80 5C            [24] 1558 	sjmp	00114$
      0007A4                       1559 00105$:
                                   1560 ;	time.c:200: seconds+= 60*60*24L*monthDays[i];
      0007A4 E9               [12] 1561 	mov	a,r1
      0007A5 24r00            [12] 1562 	add	a,#_monthDays
      0007A7 F5 82            [12] 1563 	mov	dpl,a
      0007A9 EA               [12] 1564 	mov	a,r2
      0007AA 34s00            [12] 1565 	addc	a,#(_monthDays >> 8)
      0007AC F5 83            [12] 1566 	mov	dph,a
      0007AE E4               [12] 1567 	clr	a
      0007AF 93               [24] 1568 	movc	a,@a+dptr
      0007B0 FF               [12] 1569 	mov	r7,a
      0007B1 90r00r00         [24] 1570 	mov	dptr,#__mullong_PARM_2
      0007B4 F0               [24] 1571 	movx	@dptr,a
      0007B5 EF               [12] 1572 	mov	a,r7
      0007B6 33               [12] 1573 	rlc	a
      0007B7 95 E0            [12] 1574 	subb	a,acc
      0007B9 A3               [24] 1575 	inc	dptr
      0007BA F0               [24] 1576 	movx	@dptr,a
      0007BB A3               [24] 1577 	inc	dptr
      0007BC F0               [24] 1578 	movx	@dptr,a
      0007BD A3               [24] 1579 	inc	dptr
      0007BE F0               [24] 1580 	movx	@dptr,a
      0007BF 90 51 80         [24] 1581 	mov	dptr,#0x5180
      0007C2 75 F0 01         [24] 1582 	mov	b,#0x01
      0007C5 E4               [12] 1583 	clr	a
      0007C6 C0 02            [24] 1584 	push	ar2
      0007C8 C0 01            [24] 1585 	push	ar1
      0007CA 12r00r00         [24] 1586 	lcall	__mullong
      0007CD 85 82*1D         [24] 1587 	mov	_mktime_sloc3_1_0,dpl
      0007D0 85 83*1E         [24] 1588 	mov	(_mktime_sloc3_1_0 + 1),dph
      0007D3 85 F0*1F         [24] 1589 	mov	(_mktime_sloc3_1_0 + 2),b
      0007D6 F5*20            [12] 1590 	mov	(_mktime_sloc3_1_0 + 3),a
      0007D8 D0 01            [24] 1591 	pop	ar1
      0007DA D0 02            [24] 1592 	pop	ar2
      0007DC 90r00r5A         [24] 1593 	mov	dptr,#_mktime_seconds_1_46
      0007DF E0               [24] 1594 	movx	a,@dptr
      0007E0 FB               [12] 1595 	mov	r3,a
      0007E1 A3               [24] 1596 	inc	dptr
      0007E2 E0               [24] 1597 	movx	a,@dptr
      0007E3 FC               [12] 1598 	mov	r4,a
      0007E4 A3               [24] 1599 	inc	dptr
      0007E5 E0               [24] 1600 	movx	a,@dptr
      0007E6 FE               [12] 1601 	mov	r6,a
      0007E7 A3               [24] 1602 	inc	dptr
      0007E8 E0               [24] 1603 	movx	a,@dptr
      0007E9 FF               [12] 1604 	mov	r7,a
      0007EA 90r00r5A         [24] 1605 	mov	dptr,#_mktime_seconds_1_46
      0007ED E5*1D            [12] 1606 	mov	a,_mktime_sloc3_1_0
      0007EF 2B               [12] 1607 	add	a,r3
      0007F0 F0               [24] 1608 	movx	@dptr,a
      0007F1 E5*1E            [12] 1609 	mov	a,(_mktime_sloc3_1_0 + 1)
      0007F3 3C               [12] 1610 	addc	a,r4
      0007F4 A3               [24] 1611 	inc	dptr
      0007F5 F0               [24] 1612 	movx	@dptr,a
      0007F6 E5*1F            [12] 1613 	mov	a,(_mktime_sloc3_1_0 + 2)
      0007F8 3E               [12] 1614 	addc	a,r6
      0007F9 A3               [24] 1615 	inc	dptr
      0007FA F0               [24] 1616 	movx	@dptr,a
      0007FB E5*20            [12] 1617 	mov	a,(_mktime_sloc3_1_0 + 3)
      0007FD 3F               [12] 1618 	addc	a,r7
      0007FE A3               [24] 1619 	inc	dptr
      0007FF F0               [24] 1620 	movx	@dptr,a
      000800                       1621 00114$:
                                   1622 ;	time.c:196: for (i=0; i<month; i++) {
      000800 09               [12] 1623 	inc	r1
      000801 B9 00 01         [24] 1624 	cjne	r1,#0x00,00147$
      000804 0A               [12] 1625 	inc	r2
      000805                       1626 00147$:
      000805 02r07r5F         [24] 1627 	ljmp	00113$
      000808                       1628 00108$:
                                   1629 ;	time.c:204: seconds+= (timeptr->tm_mday-1)*60*60*24L;
      000808 74 03            [12] 1630 	mov	a,#0x03
      00080A 25*1A            [12] 1631 	add	a,_mktime_sloc2_1_0
      00080C FD               [12] 1632 	mov	r5,a
      00080D E4               [12] 1633 	clr	a
      00080E 35*1B            [12] 1634 	addc	a,(_mktime_sloc2_1_0 + 1)
      000810 FE               [12] 1635 	mov	r6,a
      000811 AF*1C            [24] 1636 	mov	r7,(_mktime_sloc2_1_0 + 2)
      000813 8D 82            [24] 1637 	mov	dpl,r5
      000815 8E 83            [24] 1638 	mov	dph,r6
      000817 8F F0            [24] 1639 	mov	b,r7
      000819 12r00r00         [24] 1640 	lcall	__gptrget
      00081C FD               [12] 1641 	mov	r5,a
      00081D 7F 00            [12] 1642 	mov	r7,#0x00
      00081F 1D               [12] 1643 	dec	r5
      000820 BD FF 01         [24] 1644 	cjne	r5,#0xFF,00148$
      000823 1F               [12] 1645 	dec	r7
      000824                       1646 00148$:
      000824 90r00r00         [24] 1647 	mov	dptr,#__mullong_PARM_2
      000827 ED               [12] 1648 	mov	a,r5
      000828 F0               [24] 1649 	movx	@dptr,a
      000829 EF               [12] 1650 	mov	a,r7
      00082A A3               [24] 1651 	inc	dptr
      00082B F0               [24] 1652 	movx	@dptr,a
      00082C EF               [12] 1653 	mov	a,r7
      00082D 33               [12] 1654 	rlc	a
      00082E 95 E0            [12] 1655 	subb	a,acc
      000830 A3               [24] 1656 	inc	dptr
      000831 F0               [24] 1657 	movx	@dptr,a
      000832 A3               [24] 1658 	inc	dptr
      000833 F0               [24] 1659 	movx	@dptr,a
      000834 90 51 80         [24] 1660 	mov	dptr,#0x5180
      000837 75 F0 01         [24] 1661 	mov	b,#0x01
      00083A E4               [12] 1662 	clr	a
      00083B 12r00r00         [24] 1663 	lcall	__mullong
      00083E AC 82            [24] 1664 	mov	r4,dpl
      000840 AD 83            [24] 1665 	mov	r5,dph
      000842 AE F0            [24] 1666 	mov	r6,b
      000844 FF               [12] 1667 	mov	r7,a
      000845 90r00r5A         [24] 1668 	mov	dptr,#_mktime_seconds_1_46
      000848 E0               [24] 1669 	movx	a,@dptr
      000849 F8               [12] 1670 	mov	r0,a
      00084A A3               [24] 1671 	inc	dptr
      00084B E0               [24] 1672 	movx	a,@dptr
      00084C F9               [12] 1673 	mov	r1,a
      00084D A3               [24] 1674 	inc	dptr
      00084E E0               [24] 1675 	movx	a,@dptr
      00084F FA               [12] 1676 	mov	r2,a
      000850 A3               [24] 1677 	inc	dptr
      000851 E0               [24] 1678 	movx	a,@dptr
      000852 FB               [12] 1679 	mov	r3,a
      000853 90r00r5A         [24] 1680 	mov	dptr,#_mktime_seconds_1_46
      000856 EC               [12] 1681 	mov	a,r4
      000857 28               [12] 1682 	add	a,r0
      000858 F0               [24] 1683 	movx	@dptr,a
      000859 ED               [12] 1684 	mov	a,r5
      00085A 39               [12] 1685 	addc	a,r1
      00085B A3               [24] 1686 	inc	dptr
      00085C F0               [24] 1687 	movx	@dptr,a
      00085D EE               [12] 1688 	mov	a,r6
      00085E 3A               [12] 1689 	addc	a,r2
      00085F A3               [24] 1690 	inc	dptr
      000860 F0               [24] 1691 	movx	@dptr,a
      000861 EF               [12] 1692 	mov	a,r7
      000862 3B               [12] 1693 	addc	a,r3
      000863 A3               [24] 1694 	inc	dptr
      000864 F0               [24] 1695 	movx	@dptr,a
                                   1696 ;	time.c:205: seconds+= timeptr->tm_hour*60*60L;
      000865 74 02            [12] 1697 	mov	a,#0x02
      000867 25*1A            [12] 1698 	add	a,_mktime_sloc2_1_0
      000869 FD               [12] 1699 	mov	r5,a
      00086A E4               [12] 1700 	clr	a
      00086B 35*1B            [12] 1701 	addc	a,(_mktime_sloc2_1_0 + 1)
      00086D FE               [12] 1702 	mov	r6,a
      00086E AF*1C            [24] 1703 	mov	r7,(_mktime_sloc2_1_0 + 2)
      000870 8D 82            [24] 1704 	mov	dpl,r5
      000872 8E 83            [24] 1705 	mov	dph,r6
      000874 8F F0            [24] 1706 	mov	b,r7
      000876 12r00r00         [24] 1707 	lcall	__gptrget
      000879 90r00r00         [24] 1708 	mov	dptr,#__mullong_PARM_2
      00087C F0               [24] 1709 	movx	@dptr,a
      00087D E4               [12] 1710 	clr	a
      00087E A3               [24] 1711 	inc	dptr
      00087F F0               [24] 1712 	movx	@dptr,a
      000880 A3               [24] 1713 	inc	dptr
      000881 F0               [24] 1714 	movx	@dptr,a
      000882 A3               [24] 1715 	inc	dptr
      000883 F0               [24] 1716 	movx	@dptr,a
      000884 90 0E 10         [24] 1717 	mov	dptr,#0x0E10
      000887 E4               [12] 1718 	clr	a
      000888 F5 F0            [12] 1719 	mov	b,a
      00088A 12r00r00         [24] 1720 	lcall	__mullong
      00088D AC 82            [24] 1721 	mov	r4,dpl
      00088F AD 83            [24] 1722 	mov	r5,dph
      000891 AE F0            [24] 1723 	mov	r6,b
      000893 FF               [12] 1724 	mov	r7,a
      000894 90r00r5A         [24] 1725 	mov	dptr,#_mktime_seconds_1_46
      000897 E0               [24] 1726 	movx	a,@dptr
      000898 F8               [12] 1727 	mov	r0,a
      000899 A3               [24] 1728 	inc	dptr
      00089A E0               [24] 1729 	movx	a,@dptr
      00089B F9               [12] 1730 	mov	r1,a
      00089C A3               [24] 1731 	inc	dptr
      00089D E0               [24] 1732 	movx	a,@dptr
      00089E FA               [12] 1733 	mov	r2,a
      00089F A3               [24] 1734 	inc	dptr
      0008A0 E0               [24] 1735 	movx	a,@dptr
      0008A1 FB               [12] 1736 	mov	r3,a
      0008A2 90r00r5A         [24] 1737 	mov	dptr,#_mktime_seconds_1_46
      0008A5 EC               [12] 1738 	mov	a,r4
      0008A6 28               [12] 1739 	add	a,r0
      0008A7 F0               [24] 1740 	movx	@dptr,a
      0008A8 ED               [12] 1741 	mov	a,r5
      0008A9 39               [12] 1742 	addc	a,r1
      0008AA A3               [24] 1743 	inc	dptr
      0008AB F0               [24] 1744 	movx	@dptr,a
      0008AC EE               [12] 1745 	mov	a,r6
      0008AD 3A               [12] 1746 	addc	a,r2
      0008AE A3               [24] 1747 	inc	dptr
      0008AF F0               [24] 1748 	movx	@dptr,a
      0008B0 EF               [12] 1749 	mov	a,r7
      0008B1 3B               [12] 1750 	addc	a,r3
      0008B2 A3               [24] 1751 	inc	dptr
      0008B3 F0               [24] 1752 	movx	@dptr,a
                                   1753 ;	time.c:206: seconds+= timeptr->tm_min*60;
      0008B4 74 01            [12] 1754 	mov	a,#0x01
      0008B6 25*1A            [12] 1755 	add	a,_mktime_sloc2_1_0
      0008B8 FD               [12] 1756 	mov	r5,a
      0008B9 E4               [12] 1757 	clr	a
      0008BA 35*1B            [12] 1758 	addc	a,(_mktime_sloc2_1_0 + 1)
      0008BC FE               [12] 1759 	mov	r6,a
      0008BD AF*1C            [24] 1760 	mov	r7,(_mktime_sloc2_1_0 + 2)
      0008BF 8D 82            [24] 1761 	mov	dpl,r5
      0008C1 8E 83            [24] 1762 	mov	dph,r6
      0008C3 8F F0            [24] 1763 	mov	b,r7
      0008C5 12r00r00         [24] 1764 	lcall	__gptrget
      0008C8 75 F0 3C         [24] 1765 	mov	b,#0x3C
      0008CB A4               [48] 1766 	mul	ab
      0008CC FD               [12] 1767 	mov	r5,a
      0008CD AF F0            [24] 1768 	mov	r7,b
      0008CF 90r00r5A         [24] 1769 	mov	dptr,#_mktime_seconds_1_46
      0008D2 E0               [24] 1770 	movx	a,@dptr
      0008D3 FA               [12] 1771 	mov	r2,a
      0008D4 A3               [24] 1772 	inc	dptr
      0008D5 E0               [24] 1773 	movx	a,@dptr
      0008D6 FB               [12] 1774 	mov	r3,a
      0008D7 A3               [24] 1775 	inc	dptr
      0008D8 E0               [24] 1776 	movx	a,@dptr
      0008D9 FC               [12] 1777 	mov	r4,a
      0008DA A3               [24] 1778 	inc	dptr
      0008DB E0               [24] 1779 	movx	a,@dptr
      0008DC FE               [12] 1780 	mov	r6,a
      0008DD 8D 00            [24] 1781 	mov	ar0,r5
      0008DF EF               [12] 1782 	mov	a,r7
      0008E0 F9               [12] 1783 	mov	r1,a
      0008E1 33               [12] 1784 	rlc	a
      0008E2 95 E0            [12] 1785 	subb	a,acc
      0008E4 FD               [12] 1786 	mov	r5,a
      0008E5 FF               [12] 1787 	mov	r7,a
      0008E6 90r00r5A         [24] 1788 	mov	dptr,#_mktime_seconds_1_46
      0008E9 E8               [12] 1789 	mov	a,r0
      0008EA 2A               [12] 1790 	add	a,r2
      0008EB F0               [24] 1791 	movx	@dptr,a
      0008EC E9               [12] 1792 	mov	a,r1
      0008ED 3B               [12] 1793 	addc	a,r3
      0008EE A3               [24] 1794 	inc	dptr
      0008EF F0               [24] 1795 	movx	@dptr,a
      0008F0 ED               [12] 1796 	mov	a,r5
      0008F1 3C               [12] 1797 	addc	a,r4
      0008F2 A3               [24] 1798 	inc	dptr
      0008F3 F0               [24] 1799 	movx	@dptr,a
      0008F4 EF               [12] 1800 	mov	a,r7
      0008F5 3E               [12] 1801 	addc	a,r6
      0008F6 A3               [24] 1802 	inc	dptr
      0008F7 F0               [24] 1803 	movx	@dptr,a
                                   1804 ;	time.c:207: seconds+= timeptr->tm_sec;
      0008F8 85*1A 82         [24] 1805 	mov	dpl,_mktime_sloc2_1_0
      0008FB 85*1B 83         [24] 1806 	mov	dph,(_mktime_sloc2_1_0 + 1)
      0008FE 85*1C F0         [24] 1807 	mov	b,(_mktime_sloc2_1_0 + 2)
      000901 12r00r00         [24] 1808 	lcall	__gptrget
      000904 FF               [12] 1809 	mov	r7,a
      000905 7E 00            [12] 1810 	mov	r6,#0x00
      000907 90r00r5A         [24] 1811 	mov	dptr,#_mktime_seconds_1_46
      00090A E0               [24] 1812 	movx	a,@dptr
      00090B FA               [12] 1813 	mov	r2,a
      00090C A3               [24] 1814 	inc	dptr
      00090D E0               [24] 1815 	movx	a,@dptr
      00090E FB               [12] 1816 	mov	r3,a
      00090F A3               [24] 1817 	inc	dptr
      000910 E0               [24] 1818 	movx	a,@dptr
      000911 FC               [12] 1819 	mov	r4,a
      000912 A3               [24] 1820 	inc	dptr
      000913 E0               [24] 1821 	movx	a,@dptr
      000914 FD               [12] 1822 	mov	r5,a
      000915 8F 00            [24] 1823 	mov	ar0,r7
      000917 EE               [12] 1824 	mov	a,r6
      000918 F9               [12] 1825 	mov	r1,a
      000919 33               [12] 1826 	rlc	a
      00091A 95 E0            [12] 1827 	subb	a,acc
      00091C FE               [12] 1828 	mov	r6,a
      00091D FF               [12] 1829 	mov	r7,a
      00091E 90r00r5A         [24] 1830 	mov	dptr,#_mktime_seconds_1_46
      000921 E8               [12] 1831 	mov	a,r0
      000922 2A               [12] 1832 	add	a,r2
      000923 F0               [24] 1833 	movx	@dptr,a
      000924 E9               [12] 1834 	mov	a,r1
      000925 3B               [12] 1835 	addc	a,r3
      000926 A3               [24] 1836 	inc	dptr
      000927 F0               [24] 1837 	movx	@dptr,a
      000928 EE               [12] 1838 	mov	a,r6
      000929 3C               [12] 1839 	addc	a,r4
      00092A A3               [24] 1840 	inc	dptr
      00092B F0               [24] 1841 	movx	@dptr,a
      00092C EF               [12] 1842 	mov	a,r7
      00092D 3D               [12] 1843 	addc	a,r5
      00092E A3               [24] 1844 	inc	dptr
      00092F F0               [24] 1845 	movx	@dptr,a
                                   1846 ;	time.c:208: return seconds;
      000930 90r00r5A         [24] 1847 	mov	dptr,#_mktime_seconds_1_46
      000933 E0               [24] 1848 	movx	a,@dptr
      000934 FC               [12] 1849 	mov	r4,a
      000935 A3               [24] 1850 	inc	dptr
      000936 E0               [24] 1851 	movx	a,@dptr
      000937 FD               [12] 1852 	mov	r5,a
      000938 A3               [24] 1853 	inc	dptr
      000939 E0               [24] 1854 	movx	a,@dptr
      00093A FE               [12] 1855 	mov	r6,a
      00093B A3               [24] 1856 	inc	dptr
      00093C E0               [24] 1857 	movx	a,@dptr
      00093D 8C 82            [24] 1858 	mov	dpl,r4
      00093F 8D 83            [24] 1859 	mov	dph,r5
      000941 8E F0            [24] 1860 	mov	b,r6
      000943 22               [24] 1861 	ret
                                   1862 	.area CSEG    (CODE)
                                   1863 	.area CONST   (CODE)
      000000                       1864 _monthDays:
      000000 1F                    1865 	.db #0x1F	;  31
      000001 1C                    1866 	.db #0x1C	;  28
      000002 1F                    1867 	.db #0x1F	;  31
      000003 1E                    1868 	.db #0x1E	;  30
      000004 1F                    1869 	.db #0x1F	;  31
      000005 1E                    1870 	.db #0x1E	;  30
      000006 1F                    1871 	.db #0x1F	;  31
      000007 1F                    1872 	.db #0x1F	;  31
      000008 1E                    1873 	.db #0x1E	;  30
      000009 1F                    1874 	.db #0x1F	;  31
      00000A 1E                    1875 	.db #0x1E	;  30
      00000B 1F                    1876 	.db #0x1F	;  31
      00000C                       1877 ___month:
      00000Cr51s00                 1878 	.byte __str_1, (__str_1 >> 8)
      00000Er55s00                 1879 	.byte __str_2, (__str_2 >> 8)
      000010r59s00                 1880 	.byte __str_3, (__str_3 >> 8)
      000012r5Ds00                 1881 	.byte __str_4, (__str_4 >> 8)
      000014r61s00                 1882 	.byte __str_5, (__str_5 >> 8)
      000016r65s00                 1883 	.byte __str_6, (__str_6 >> 8)
      000018r69s00                 1884 	.byte __str_7, (__str_7 >> 8)
      00001Ar6Ds00                 1885 	.byte __str_8, (__str_8 >> 8)
      00001Cr71s00                 1886 	.byte __str_9, (__str_9 >> 8)
      00001Er75s00                 1887 	.byte __str_10, (__str_10 >> 8)
      000020r79s00                 1888 	.byte __str_11, (__str_11 >> 8)
      000022r7Ds00                 1889 	.byte __str_12, (__str_12 >> 8)
      000024                       1890 ___day:
      000024r81s00                 1891 	.byte __str_13, (__str_13 >> 8)
      000026r85s00                 1892 	.byte __str_14, (__str_14 >> 8)
      000028r89s00                 1893 	.byte __str_15, (__str_15 >> 8)
      00002Ar8Ds00                 1894 	.byte __str_16, (__str_16 >> 8)
      00002Cr91s00                 1895 	.byte __str_17, (__str_17 >> 8)
      00002Er95s00                 1896 	.byte __str_18, (__str_18 >> 8)
      000030r99s00                 1897 	.byte __str_19, (__str_19 >> 8)
      000032                       1898 ___str_0:
      000032 25 73 20 25 73 20 25  1899 	.ascii "%s %s %2d %02d:%02d:%02d %04d"
             32 64 20 25 30 32 64
             3A 25 30 32 64 3A 25
             30 32 64 20 25 30 34
             64
      00004F 0A                    1900 	.db 0x0A
      000050 00                    1901 	.db 0x00
      000051                       1902 __str_1:
      000051 4A 61 6E              1903 	.ascii "Jan"
      000054 00                    1904 	.db 0x00
      000055                       1905 __str_2:
      000055 46 65 62              1906 	.ascii "Feb"
      000058 00                    1907 	.db 0x00
      000059                       1908 __str_3:
      000059 4D 61 72              1909 	.ascii "Mar"
      00005C 00                    1910 	.db 0x00
      00005D                       1911 __str_4:
      00005D 41 70 72              1912 	.ascii "Apr"
      000060 00                    1913 	.db 0x00
      000061                       1914 __str_5:
      000061 4D 61 79              1915 	.ascii "May"
      000064 00                    1916 	.db 0x00
      000065                       1917 __str_6:
      000065 4A 75 6E              1918 	.ascii "Jun"
      000068 00                    1919 	.db 0x00
      000069                       1920 __str_7:
      000069 4A 75 6C              1921 	.ascii "Jul"
      00006C 00                    1922 	.db 0x00
      00006D                       1923 __str_8:
      00006D 41 75 67              1924 	.ascii "Aug"
      000070 00                    1925 	.db 0x00
      000071                       1926 __str_9:
      000071 53 65 70              1927 	.ascii "Sep"
      000074 00                    1928 	.db 0x00
      000075                       1929 __str_10:
      000075 4F 63 74              1930 	.ascii "Oct"
      000078 00                    1931 	.db 0x00
      000079                       1932 __str_11:
      000079 4E 6F 76              1933 	.ascii "Nov"
      00007C 00                    1934 	.db 0x00
      00007D                       1935 __str_12:
      00007D 44 65 63              1936 	.ascii "Dec"
      000080 00                    1937 	.db 0x00
      000081                       1938 __str_13:
      000081 53 75 6E              1939 	.ascii "Sun"
      000084 00                    1940 	.db 0x00
      000085                       1941 __str_14:
      000085 4D 6F 6E              1942 	.ascii "Mon"
      000088 00                    1943 	.db 0x00
      000089                       1944 __str_15:
      000089 54 75 65              1945 	.ascii "Tue"
      00008C 00                    1946 	.db 0x00
      00008D                       1947 __str_16:
      00008D 57 65 64              1948 	.ascii "Wed"
      000090 00                    1949 	.db 0x00
      000091                       1950 __str_17:
      000091 54 68 75              1951 	.ascii "Thu"
      000094 00                    1952 	.db 0x00
      000095                       1953 __str_18:
      000095 46 72 69              1954 	.ascii "Fri"
      000098 00                    1955 	.db 0x00
      000099                       1956 __str_19:
      000099 53 61 74              1957 	.ascii "Sat"
      00009C 00                    1958 	.db 0x00
                                   1959 	.area XINIT   (CODE)
                                   1960 	.area CABS    (ABS,CODE)
