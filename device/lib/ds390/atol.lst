                                      1 ;--------------------------------------------------------
                                      2 ; File Created by SDCC : free open source ANSI-C Compiler
                                      3 ; Version 3.5.0 #9253 (Apr  4 2022) (Linux)
                                      4 ; This file was generated Mon Apr  4 14:10:26 2022
                                      5 ;--------------------------------------------------------
                                      6 	.module atol
                                      7 	.optsdcc -mds390 --model-flat24
                                      8 	
                                      9 ;--------------------------------------------------------
                                     10 ; CPU specific extensions
                                     11 ;--------------------------------------------------------
                                     12 	.DS80C390
                                     13 	.amode	2	; 24 bit flat addressing
                           000082    14 dpl	=	0x82
                           000083    15 dph	=	0x83
                           000084    16 dpl1	=	0x84
                           000085    17 dph1	=	0x85
                           000086    18 dps	=	0x86
                           000093    19 dpx	=	0x93
                           000095    20 dpx1	=	0x95
                           00009B    21 esp	=	0x9B
                           00009C    22 ap	=	0x9C
                           00009C    23 acc1	=	0x9C
                           0000D1    24 mcnt0	=	0xD1
                           0000D2    25 mcnt1	=	0xD2
                           0000D3    26 ma	=	0xD3
                           0000D4    27 mb	=	0xD4
                           0000D5    28 mc	=	0xD5
                           00009D    29 acon	=	0x9D
                           0000D1    30 F1	=	0xD1	; user flag
                                     31 ;--------------------------------------------------------
                                     32 ; Public variables in this module
                                     33 ;--------------------------------------------------------
                                     34 	.globl _atol
                                     35 ;--------------------------------------------------------
                                     36 ; special function registers
                                     37 ;--------------------------------------------------------
                                     38 ;--------------------------------------------------------
                                     39 ; special function bits
                                     40 ;--------------------------------------------------------
                                     41 ;--------------------------------------------------------
                                     42 ; overlayable register banks
                                     43 ;--------------------------------------------------------
                                     44 	.area REG_BANK_0	(REL,OVR,DATA)
      000000                         45 	.ds 8
                                     46 ;--------------------------------------------------------
                                     47 ; internal ram data
                                     48 ;--------------------------------------------------------
                                     49 	.area DSEG    (DATA)
                                     50 ;--------------------------------------------------------
                                     51 ; overlayable items in internal ram 
                                     52 ;--------------------------------------------------------
                                     53 ;--------------------------------------------------------
                                     54 ; indirectly addressable internal ram data
                                     55 ;--------------------------------------------------------
                                     56 	.area ISEG    (DATA)
                                     57 ;--------------------------------------------------------
                                     58 ; absolute internal ram data
                                     59 ;--------------------------------------------------------
                                     60 	.area IABS    (ABS,DATA)
                                     61 	.area IABS    (ABS,DATA)
                                     62 ;--------------------------------------------------------
                                     63 ; bit data
                                     64 ;--------------------------------------------------------
                                     65 	.area BSEG    (BIT)
      000000                         66 _atol_neg_1_37:
      000000                         67 	.ds 1
                                     68 ;--------------------------------------------------------
                                     69 ; paged external ram data
                                     70 ;--------------------------------------------------------
                                     71 	.area PSEG    (PAG,XDATA)
                                     72 ;--------------------------------------------------------
                                     73 ; external ram data
                                     74 ;--------------------------------------------------------
                                     75 	.area XSEG    (XDATA)
      000000                         76 _atol_ret_1_37:
      000000                         77 	.ds 4
      000004                         78 _atol_sloc1_1_0:
      000004                         79 	.ds 4
                                     80 ;--------------------------------------------------------
                                     81 ; absolute external ram data
                                     82 ;--------------------------------------------------------
                                     83 	.area XABS    (ABS,XDATA)
                                     84 ;--------------------------------------------------------
                                     85 ; external initialized ram data
                                     86 ;--------------------------------------------------------
                                     87 	.area XISEG   (XDATA)
                                     88 ;--------------------------------------------------------
                                     89 ; global & static initialisations
                                     90 ;--------------------------------------------------------
                                     91 	.area HOME    (CODE)
                                     92 	.area GSINIT  (CODE)
                                     93 	.area GSFINAL (CODE)
                                     94 	.area GSINIT  (CODE)
                                     95 ;--------------------------------------------------------
                                     96 ; Home
                                     97 ;--------------------------------------------------------
                                     98 	.area HOME    (CODE)
                                     99 	.area HOME    (CODE)
                                    100 ;--------------------------------------------------------
                                    101 ; code
                                    102 ;--------------------------------------------------------
                                    103 	.area CSEG    (CODE)
                                    104 ;------------------------------------------------------------
                                    105 ;Allocation info for local variables in function 'atol'
                                    106 ;------------------------------------------------------------
                                    107 ;nptr                      Allocated to registers r6 r7 r0 r1 
                                    108 ;__00010004                Allocated to registers 
                                    109 ;__00010001                Allocated to registers 
                                    110 ;ret                       Allocated with name '_atol_ret_1_37'
                                    111 ;__00020002                Allocated to registers r6 r7 
                                    112 ;c                         Allocated to registers 
                                    113 ;__00020005                Allocated to registers r6 r7 
                                    114 ;c                         Allocated to registers 
                                    115 ;sloc0                     Allocated with name '_atol_sloc0_1_0'
                                    116 ;sloc1                     Allocated with name '_atol_sloc1_1_0'
                                    117 ;------------------------------------------------------------
                                    118 ;	atol.c:34: long int atol(const char *nptr)
                                    119 ;	-----------------------------------------
                                    120 ;	 function atol
                                    121 ;	-----------------------------------------
      000000                        122 _atol:
                           000002   123 	ar2 = 0x02
                           000003   124 	ar3 = 0x03
                           000004   125 	ar4 = 0x04
                           000005   126 	ar5 = 0x05
                           000006   127 	ar6 = 0x06
                           000007   128 	ar7 = 0x07
                           000000   129 	ar0 = 0x00
                           000001   130 	ar1 = 0x01
      000000 AE 82            [ 8]  131 	mov	r6,dpl
      000002 AF 83            [ 8]  132 	mov	r7,dph
      000004 A8 93            [ 8]  133 	mov	r0,dpx
      000006 A9 F0            [ 8]  134 	mov	r1,b
                                    135 ;	atol.c:36: long int ret = 0;
                                    136 ;	genAssign: resultIsFar = TRUE
      000008 90s00r00r00      [12]  137 	mov	dptr,#_atol_ret_1_37
      00000C E4               [ 4]  138 	clr	a
      00000D F0               [ 8]  139 	movx	@dptr,a
      00000E A3               [12]  140 	inc	dptr
      00000F F0               [ 8]  141 	movx	@dptr,a
      000010 A3               [12]  142 	inc	dptr
      000011 F0               [ 8]  143 	movx	@dptr,a
      000012 A3               [12]  144 	inc	dptr
      000013 F0               [ 8]  145 	movx	@dptr,a
                                    146 ;	atol.c:39: while (isblank (*nptr))
                                    147 ;	genAssign: resultIsFar = FALSE
      000014 8E 02            [ 8]  148 	mov	ar2,r6
      000016 8F 03            [ 8]  149 	mov	ar3,r7
      000018 88 04            [ 8]  150 	mov	ar4,r0
      00001A 89 05            [ 8]  151 	mov	ar5,r1
      00001C                        152 00101$:
      00001C 8A 82            [ 8]  153 	mov	dpl,r2
      00001E 8B 83            [ 8]  154 	mov	dph,r3
      000020 8C 93            [ 8]  155 	mov	dpx,r4
      000022 8D F0            [ 8]  156 	mov	b,r5
      000024 12s00r00r00      [16]  157 	lcall	__gptrget
      000028 FE               [ 4]  158 	mov  r6,a
      000029 33               [ 4]  159 	rlc	a
      00002A 95 E0            [ 8]  160 	subb	a,acc
      00002C FF               [ 4]  161 	mov	r7,a
                                    162 ;	../../device/include/ctype.h:53: return ((unsigned char)c == ' ' || (unsigned char)c == '\t');
      00002D BE 20 02         [16]  163 	cjne	r6,#0x20,00147$
      000030 80 03            [12]  164 	sjmp 00115$
      000032                        165 00147$:
      000032 BE 09 0B         [16]  166 	cjne r6,#0x09,00131$
      000035                        167 00149$:
      000035                        168 00115$:
                                    169 ;	atol.c:40: nptr++;
      000035 0A               [ 4]  170 	inc	r2
      000036 BA 00 05         [16]  171 	cjne	r2,#0x00,00150$
      000039 0B               [ 4]  172 	inc	r3
      00003A BB 00 01         [16]  173 	cjne	r3,#0x00,00150$
      00003D 0C               [ 4]  174 	inc	r4
      00003E                        175 00150$:
      00003E 80 DC            [12]  176 	sjmp 00101$
      000040                        177 00131$:
                                    178 ;	genAssign: resultIsFar = FALSE
      000040 8A 06            [ 8]  179 	mov	ar6,r2
      000042 8B 07            [ 8]  180 	mov	ar7,r3
      000044 8C 00            [ 8]  181 	mov	ar0,r4
      000046 8D 01            [ 8]  182 	mov	ar1,r5
                                    183 ;	atol.c:42: neg = (*nptr == '-');
      000048 8A 82            [ 8]  184 	mov	dpl,r2
      00004A 8B 83            [ 8]  185 	mov	dph,r3
      00004C 8C 93            [ 8]  186 	mov	dpx,r4
      00004E 8D F0            [ 8]  187 	mov	b,r5
      000050 12s00r00r00      [16]  188 	lcall	__gptrget
      000054 FA               [ 4]  189 	mov	r2,a
      000055 E4               [ 4]  190 	clr     a
      000056 BA 2D 01         [16]  191 	cjne    r2,#0x2D,00151$
      000059 04               [ 4]  192 	inc     a
      00005A                        193 00151$:
      00005A                        194 00152$:
      00005A 24 FF            [ 8]  195 	add	a,#0xFF
      00005C 92*00            [ 8]  196 	mov	_atol_neg_1_37,c
                                    197 ;	atol.c:44: if (*nptr == '-' || *nptr == '+')
      00005E BA 2D 02         [16]  198 	cjne	r2,#0x2D,00153$
      000061 80 03            [12]  199 	sjmp 00104$
      000063                        200 00153$:
      000063 BA 2B 09         [16]  201 	cjne r2,#0x2B,00129$
      000066                        202 00155$:
      000066                        203 00104$:
                                    204 ;	atol.c:45: nptr++;
      000066 0E               [ 4]  205 	inc	r6
      000067 BE 00 05         [16]  206 	cjne	r6,#0x00,00156$
      00006A 0F               [ 4]  207 	inc	r7
      00006B BF 00 01         [16]  208 	cjne	r7,#0x00,00156$
      00006E 08               [ 4]  209 	inc	r0
      00006F                        210 00156$:
                                    211 ;	atol.c:47: while (isdigit (*nptr))
      00006F                        212 00129$:
                                    213 ;	genAssign: resultIsFar = FALSE
      00006F 8E 02            [ 8]  214 	mov	ar2,r6
      000071 8F 03            [ 8]  215 	mov	ar3,r7
      000073 88 04            [ 8]  216 	mov	ar4,r0
      000075 89 05            [ 8]  217 	mov	ar5,r1
      000077                        218 00107$:
      000077 8A 82            [ 8]  219 	mov	dpl,r2
      000079 8B 83            [ 8]  220 	mov	dph,r3
      00007B 8C 93            [ 8]  221 	mov	dpx,r4
      00007D 8D F0            [ 8]  222 	mov	b,r5
      00007F 12s00r00r00      [16]  223 	lcall	__gptrget
      000083 FE               [ 4]  224 	mov  r6,a
      000084 33               [ 4]  225 	rlc	a
      000085 95 E0            [ 8]  226 	subb	a,acc
                                    227 ;	../../device/include/ctype.h:62: return ((unsigned char)c >= '0' && (unsigned char)c <= '9');
      000087 8E 07            [ 8]  228 	mov	ar7,r6
      000089 BF 30 00         [16]  229 	cjne	r7,#0x30,00157$
      00008C                        230 00157$:
      00008C 50 04            [12]  231 	jnc	00158$
      00008E 02s00r01r48      [16]  232 	ljmp	00109$
      000092                        233 00158$:
      000092 C3               [ 4]  234 	clr	c
      000093 74 39            [ 8]  235 	mov	a,#0x39
      000095 9F               [ 4]  236 	subb	a,r7
      000096 50 04            [12]  237 	jnc	00159$
      000098 02s00r01r48      [16]  238 	ljmp	00109$
      00009C                        239 00159$:
                                    240 ;	atol.c:48: ret = ret * 10 + (*(nptr++) - '0');
      00009C 90s00r00r00      [12]  241 	mov	dptr,#_atol_ret_1_37
                                    242 ;	genAssign: resultIsFar = TRUE
      0000A0 75 86 21         [12]  243 	mov	dps,#0x21
      0000A3 90s00r00r00      [12]  244 	mov	dptr,#__mullong_PARM_2
      0000A7 E0               [ 8]  245 	movx	a,@dptr
      0000A8 F0               [ 8]  246 	movx	@dptr,a
      0000A9 A3               [12]  247 	inc	dptr
      0000AA A3               [12]  248 	inc	dptr
      0000AB E0               [ 8]  249 	movx	a,@dptr
      0000AC F0               [ 8]  250 	movx	@dptr,a
      0000AD A3               [12]  251 	inc	dptr
      0000AE A3               [12]  252 	inc	dptr
      0000AF E0               [ 8]  253 	movx	a,@dptr
      0000B0 F0               [ 8]  254 	movx	@dptr,a
      0000B1 A3               [12]  255 	inc	dptr
      0000B2 A3               [12]  256 	inc	dptr
      0000B3 E0               [ 8]  257 	movx	a,@dptr
      0000B4 F0               [ 8]  258 	movx	@dptr,a
      0000B5 75 86 00         [12]  259 	mov	dps,#0
      0000B8 C0 02            [ 8]  260 	push	ar2
      0000BA C0 03            [ 8]  261 	push	ar3
      0000BC C0 04            [ 8]  262 	push	ar4
      0000BE C0 05            [ 8]  263 	push	ar5
      0000C0 90 00 00 0A      [12]  264 	mov	dptr,#0x00000A
      0000C4 75 F0 00         [12]  265 	mov	b,#0x00
      0000C7 12s00r00r00      [16]  266 	lcall	__mullong
      0000CB 75 86 01         [12]  267 	mov     dps, #1
      0000CE 90s00r00r04      [12]  268 	mov     dptr, #_atol_sloc1_1_0
      0000D2 E5 82            [ 8]  269 	mov	a,dpl
      0000D4 F0               [ 8]  270 	movx	@dptr,a
      0000D5 A3               [12]  271 	inc	dptr
      0000D6 E5 83            [ 8]  272 	mov	a,dph
      0000D8 F0               [ 8]  273 	movx	@dptr,a
      0000D9 A3               [12]  274 	inc	dptr
      0000DA E5 93            [ 8]  275 	mov	a,dpx
      0000DC F0               [ 8]  276 	movx	@dptr,a
      0000DD A3               [12]  277 	inc	dptr
      0000DE E5 F0            [ 8]  278 	mov	a,b
      0000E0 F0               [ 8]  279 	movx	@dptr,a
      0000E1 75 86 00         [12]  280 	mov	dps,#0
      0000E4 D0 05            [ 8]  281 	pop	ar5
      0000E6 D0 04            [ 8]  282 	pop	ar4
      0000E8 D0 03            [ 8]  283 	pop	ar3
      0000EA D0 02            [ 8]  284 	pop	ar2
      0000EC 8A 82            [ 8]  285 	mov	dpl,r2
      0000EE 8B 83            [ 8]  286 	mov	dph,r3
      0000F0 8C 93            [ 8]  287 	mov	dpx,r4
      0000F2 8D F0            [ 8]  288 	mov	b,r5
      0000F4 12s00r00r00      [16]  289 	lcall	__gptrget
      0000F8 FE               [ 4]  290 	mov	r6,a
      0000F9 A3               [12]  291 	inc	dptr
      0000FA AA 82            [ 8]  292 	mov	r2,dpl
      0000FC AB 83            [ 8]  293 	mov	r3,dph
      0000FE AC 93            [ 8]  294 	mov	r4,dpx
      000100 AD F0            [ 8]  295 	mov	r5,b
      000102 EE               [ 4]  296 	mov	a,r6
      000103 33               [ 4]  297 	rlc	a
      000104 95 E0            [ 8]  298 	subb	a,acc
      000106 FF               [ 4]  299 	mov	r7,a
      000107 EE               [ 4]  300 	mov	a,r6
      000108 24 D0            [ 8]  301 	add	a,#0xD0
      00010A FE               [ 4]  302 	mov	r6,a
      00010B EF               [ 4]  303 	mov	a,r7
      00010C 34 FF            [ 8]  304 	addc	a,#0xFF
      00010E FF               [ 4]  305 	mov  r7,a
      00010F 33               [ 4]  306 	rlc	a
      000110 95 E0            [ 8]  307 	subb	a,acc
      000112 F8               [ 4]  308 	mov	r0,a
      000113 F9               [ 4]  309 	mov	r1,a
      000114 90s00r00r04      [12]  310 	mov	dptr,#_atol_sloc1_1_0
      000118 75 86 01         [12]  311 	mov	dps, #1
      00011B 90s00r00r00      [12]  312 	mov	dptr, #_atol_ret_1_37
      00011F 15 86            [ 8]  313 	dec	dps
      000121 E0               [ 8]  314 	movx	a,@dptr
      000122 2E               [ 4]  315 	add	a,r6
      000123 05 86            [ 8]  316 	inc	dps
      000125 F0               [ 8]  317 	movx	@dptr,a
      000126 15 86            [ 8]  318 	dec	dps
      000128 A3               [12]  319 	inc	dptr
      000129 E0               [ 8]  320 	movx	a,@dptr
      00012A 3F               [ 4]  321 	addc	a,r7
      00012B 05 86            [ 8]  322 	inc	dps
      00012D A3               [12]  323 	inc	dptr
      00012E F0               [ 8]  324 	movx	@dptr,a
      00012F 15 86            [ 8]  325 	dec	dps
      000131 A3               [12]  326 	inc	dptr
      000132 E0               [ 8]  327 	movx	a,@dptr
      000133 38               [ 4]  328 	addc	a,r0
      000134 05 86            [ 8]  329 	inc	dps
      000136 A3               [12]  330 	inc	dptr
      000137 F0               [ 8]  331 	movx	@dptr,a
      000138 15 86            [ 8]  332 	dec	dps
      00013A A3               [12]  333 	inc	dptr
      00013B E0               [ 8]  334 	movx	a,@dptr
      00013C 39               [ 4]  335 	addc	a,r1
      00013D 05 86            [ 8]  336 	inc	dps
      00013F A3               [12]  337 	inc	dptr
      000140 F0               [ 8]  338 	movx	@dptr,a
      000141 75 86 00         [12]  339 	mov	dps,#0
      000144 02s00r00r77      [16]  340 	ljmp	00107$
      000148                        341 00109$:
                                    342 ;	atol.c:50: return (neg ? -ret : ret); // Since -LONG_MIN is LONG_MIN in sdcc, the result value always turns out ok.
      000148 30*00 1E         [12]  343 	jnb  _atol_neg_1_37,00120$
      00014B                        344 00160$:
      00014B 90s00r00r00      [12]  345 	mov	dptr,#_atol_ret_1_37
      00014F E0               [ 8]  346 	movx	a,@dptr
      000150 D3               [ 4]  347 	setb	c
      000151 F4               [ 4]  348 	cpl	a
      000152 34 00            [ 8]  349 	addc	a,#0x00
      000154 FA               [ 4]  350 	mov	r2,a
      000155 A3               [12]  351 	inc	dptr
      000156 E0               [ 8]  352 	movx	a,@dptr
      000157 F4               [ 4]  353 	cpl	a
      000158 34 00            [ 8]  354 	addc	a,#0x00
      00015A FB               [ 4]  355 	mov	r3,a
      00015B A3               [12]  356 	inc	dptr
      00015C E0               [ 8]  357 	movx	a,@dptr
      00015D F4               [ 4]  358 	cpl	a
      00015E 34 00            [ 8]  359 	addc	a,#0x00
      000160 FC               [ 4]  360 	mov	r4,a
      000161 A3               [12]  361 	inc	dptr
      000162 E0               [ 8]  362 	movx	a,@dptr
      000163 F4               [ 4]  363 	cpl	a
      000164 34 00            [ 8]  364 	addc	a,#0x00
      000166 FD               [ 4]  365 	mov	r5,a
      000167 80 0F            [12]  366 	sjmp 00121$
      000169                        367 00120$:
      000169 90s00r00r00      [12]  368 	mov	dptr,#_atol_ret_1_37
                                    369 ;	genAssign: resultIsFar = FALSE
      00016D E0               [ 8]  370 	movx	a,@dptr
      00016E FA               [ 4]  371 	mov	r2,a
      00016F A3               [12]  372 	inc	dptr
      000170 E0               [ 8]  373 	movx	a,@dptr
      000171 FB               [ 4]  374 	mov	r3,a
      000172 A3               [12]  375 	inc	dptr
      000173 E0               [ 8]  376 	movx	a,@dptr
      000174 FC               [ 4]  377 	mov	r4,a
      000175 A3               [12]  378 	inc	dptr
      000176 E0               [ 8]  379 	movx	a,@dptr
      000177 FD               [ 4]  380 	mov	r5,a
      000178                        381 00121$:
      000178 8A 82            [ 8]  382 	mov	dpl,r2
      00017A 8B 83            [ 8]  383 	mov	dph,r3
      00017C 8C 93            [ 8]  384 	mov	dpx,r4
      00017E 8D F0            [ 8]  385 	mov	b,r5
      000180                        386 00112$:
      000180 22               [16]  387 	ret
                                    388 	.area CSEG    (CODE)
                                    389 	.area CONST   (CODE)
                                    390 	.area XINIT   (CODE)
                                    391 	.area CABS    (ABS,CODE)
