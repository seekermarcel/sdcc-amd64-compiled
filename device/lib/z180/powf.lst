                              1 ;--------------------------------------------------------
                              2 ; File Created by SDCC : free open source ANSI-C Compiler
                              3 ; Version 3.5.0 #9253 (Apr  4 2022) (Linux)
                              4 ; This file was generated Mon Apr  4 14:15:38 2022
                              5 ;--------------------------------------------------------
                              6 	.hd64
                              7 	.module powf
                              8 	.optsdcc -mz180
                              9 	
                             10 ;--------------------------------------------------------
                             11 ; Public variables in this module
                             12 ;--------------------------------------------------------
                             13 	.globl _logf
                             14 	.globl _expf
                             15 	.globl _powf
                             16 ;--------------------------------------------------------
                             17 ; special function registers
                             18 ;--------------------------------------------------------
                             19 ;--------------------------------------------------------
                             20 ; ram data
                             21 ;--------------------------------------------------------
                             22 	.area _DATA
                             23 ;--------------------------------------------------------
                             24 ; ram data
                             25 ;--------------------------------------------------------
                             26 	.area _INITIALIZED
                             27 ;--------------------------------------------------------
                             28 ; absolute external ram data
                             29 ;--------------------------------------------------------
                             30 	.area _DABS (ABS)
                             31 ;--------------------------------------------------------
                             32 ; global & static initialisations
                             33 ;--------------------------------------------------------
                             34 	.area _HOME
                             35 	.area _GSINIT
                             36 	.area _GSFINAL
                             37 	.area _GSINIT
                             38 ;--------------------------------------------------------
                             39 ; Home
                             40 ;--------------------------------------------------------
                             41 	.area _HOME
                             42 	.area _HOME
                             43 ;--------------------------------------------------------
                             44 ; code
                             45 ;--------------------------------------------------------
                             46 	.area _CODE
                             47 ;../powf.c:35: float powf(float x, float y)
                             48 ;	---------------------------------
                             49 ; Function powf
                             50 ; ---------------------------------
   0000                      51 _powf::
   0000 DD E5         [14]   52 	push	ix
   0002 DD 21 00 00   [12]   53 	ld	ix,#0
   0006 DD 39         [10]   54 	add	ix,sp
                             55 ;../powf.c:37: if(y == 0.0) return 1.0;
   0008 DD 7E 0B      [14]   56 	ld	a,11 (ix)
   000B CB BF         [ 7]   57 	res	7, a
   000D DD B6 0A      [14]   58 	or	a, 10 (ix)
   0010 DD B6 09      [14]   59 	or	a, 9 (ix)
   0013 DD B6 08      [14]   60 	or	a,8 (ix)
   0016 20 09         [ 8]   61 	jr	NZ,00102$
   0018 21 00 00      [ 9]   62 	ld	hl,#0x0000
   001B 11 80 3F      [ 9]   63 	ld	de,#0x3F80
   001E C3rBBr00      [ 9]   64 	jp	00107$
   0021                      65 00102$:
                             66 ;../powf.c:38: if(y == 1.0) return x;
   0021 21 80 3F      [ 9]   67 	ld	hl,#0x3F80
   0024 E5            [11]   68 	push	hl
   0025 21 00 00      [ 9]   69 	ld	hl,#0x0000
   0028 E5            [11]   70 	push	hl
   0029 DD 6E 0A      [14]   71 	ld	l,10 (ix)
   002C DD 66 0B      [14]   72 	ld	h,11 (ix)
   002F E5            [11]   73 	push	hl
   0030 DD 6E 08      [14]   74 	ld	l,8 (ix)
   0033 DD 66 09      [14]   75 	ld	h,9 (ix)
   0036 E5            [11]   76 	push	hl
   0037 CDr00r00      [16]   77 	call	___fseq
   003A 33            [ 4]   78 	inc	sp
   003B 33            [ 4]   79 	inc	sp
   003C 33            [ 4]   80 	inc	sp
   003D 33            [ 4]   81 	inc	sp
   003E 33            [ 4]   82 	inc	sp
   003F 33            [ 4]   83 	inc	sp
   0040 33            [ 4]   84 	inc	sp
   0041 33            [ 4]   85 	inc	sp
   0042 7D            [ 4]   86 	ld	a,l
   0043 B7            [ 4]   87 	or	a, a
   0044 28 0E         [ 8]   88 	jr	Z,00104$
   0046 DD 6E 04      [14]   89 	ld	l,4 (ix)
   0049 DD 66 05      [14]   90 	ld	h,5 (ix)
   004C DD 5E 06      [14]   91 	ld	e,6 (ix)
   004F DD 56 07      [14]   92 	ld	d,7 (ix)
   0052 18 67         [ 8]   93 	jr	00107$
   0054                      94 00104$:
                             95 ;../powf.c:39: if(x <= 0.0) return 0.0;
   0054 21 00 00      [ 9]   96 	ld	hl,#0x0000
   0057 E5            [11]   97 	push	hl
   0058 21 00 00      [ 9]   98 	ld	hl,#0x0000
   005B E5            [11]   99 	push	hl
   005C DD 6E 06      [14]  100 	ld	l,6 (ix)
   005F DD 66 07      [14]  101 	ld	h,7 (ix)
   0062 E5            [11]  102 	push	hl
   0063 DD 6E 04      [14]  103 	ld	l,4 (ix)
   0066 DD 66 05      [14]  104 	ld	h,5 (ix)
   0069 E5            [11]  105 	push	hl
   006A CDr00r00      [16]  106 	call	___fsgt
   006D 33            [ 4]  107 	inc	sp
   006E 33            [ 4]  108 	inc	sp
   006F 33            [ 4]  109 	inc	sp
   0070 33            [ 4]  110 	inc	sp
   0071 33            [ 4]  111 	inc	sp
   0072 33            [ 4]  112 	inc	sp
   0073 33            [ 4]  113 	inc	sp
   0074 33            [ 4]  114 	inc	sp
   0075 7D            [ 4]  115 	ld	a,l
   0076 B7            [ 4]  116 	or	a, a
   0077 20 07         [ 8]  117 	jr	NZ,00106$
   0079 21 00 00      [ 9]  118 	ld	hl,#0x0000
   007C 5D            [ 4]  119 	ld	e,l
   007D 54            [ 4]  120 	ld	d,h
   007E 18 3B         [ 8]  121 	jr	00107$
   0080                     122 00106$:
                            123 ;../powf.c:40: return expf(logf(x) * y);
   0080 DD 6E 06      [14]  124 	ld	l,6 (ix)
   0083 DD 66 07      [14]  125 	ld	h,7 (ix)
   0086 E5            [11]  126 	push	hl
   0087 DD 6E 04      [14]  127 	ld	l,4 (ix)
   008A DD 66 05      [14]  128 	ld	h,5 (ix)
   008D E5            [11]  129 	push	hl
   008E CDr00r00      [16]  130 	call	_logf
   0091 33            [ 4]  131 	inc	sp
   0092 33            [ 4]  132 	inc	sp
   0093 33            [ 4]  133 	inc	sp
   0094 33            [ 4]  134 	inc	sp
   0095 4D            [ 4]  135 	ld	c,l
   0096 44            [ 4]  136 	ld	b,h
   0097 DD 6E 0A      [14]  137 	ld	l,10 (ix)
   009A DD 66 0B      [14]  138 	ld	h,11 (ix)
   009D E5            [11]  139 	push	hl
   009E DD 6E 08      [14]  140 	ld	l,8 (ix)
   00A1 DD 66 09      [14]  141 	ld	h,9 (ix)
   00A4 E5            [11]  142 	push	hl
   00A5 D5            [11]  143 	push	de
   00A6 C5            [11]  144 	push	bc
   00A7 CDr00r00      [16]  145 	call	___fsmul
   00AA 33            [ 4]  146 	inc	sp
   00AB 33            [ 4]  147 	inc	sp
   00AC 33            [ 4]  148 	inc	sp
   00AD 33            [ 4]  149 	inc	sp
   00AE 33            [ 4]  150 	inc	sp
   00AF 33            [ 4]  151 	inc	sp
   00B0 33            [ 4]  152 	inc	sp
   00B1 33            [ 4]  153 	inc	sp
   00B2 D5            [11]  154 	push	de
   00B3 E5            [11]  155 	push	hl
   00B4 CDr00r00      [16]  156 	call	_expf
   00B7 33            [ 4]  157 	inc	sp
   00B8 33            [ 4]  158 	inc	sp
   00B9 33            [ 4]  159 	inc	sp
   00BA 33            [ 4]  160 	inc	sp
   00BB                     161 00107$:
   00BB DD E1         [12]  162 	pop	ix
   00BD C9            [ 9]  163 	ret
                            164 	.area _CODE
                            165 	.area _INITIALIZER
                            166 	.area _CABS (ABS)
