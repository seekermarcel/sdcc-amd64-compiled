                                      1 ;--------------------------------------------------------
                                      2 ; File Created by SDCC : free open source ANSI-C Compiler
                                      3 ; Version 3.5.0 #9253 (Apr  4 2022) (Linux)
                                      4 ; This file was generated Mon Apr  4 14:10:30 2022
                                      5 ;--------------------------------------------------------
                                      6 	.module _strchr
                                      7 	.optsdcc -mds400 --model-flat24
                                      8 	
                                      9 ;--------------------------------------------------------
                                     10 ; CPU specific extensions
                                     11 ;--------------------------------------------------------
                                     12 	.DS80C390
                                     13 	.amode	2	; 24 bit flat addressing
                           000082    14 dpl	=	0x82
                           000083    15 dph	=	0x83
                           000084    16 dpl1	=	0x84
                           000085    17 dph1	=	0x85
                           000086    18 dps	=	0x86
                           000093    19 dpx	=	0x93
                           000095    20 dpx1	=	0x95
                           00009B    21 esp	=	0x9B
                           00009C    22 ap	=	0x9C
                           00009C    23 acc1	=	0x9C
                           0000D1    24 mcnt0	=	0xD1
                           0000D2    25 mcnt1	=	0xD2
                           0000D3    26 ma	=	0xD3
                           0000D4    27 mb	=	0xD4
                           0000D5    28 mc	=	0xD5
                           00009D    29 acon	=	0x9D
                           0000D1    30 F1	=	0xD1	; user flag
                                     31 ;--------------------------------------------------------
                                     32 ; Public variables in this module
                                     33 ;--------------------------------------------------------
                                     34 	.globl _strchr_PARM_2
                                     35 	.globl _strchr
                                     36 ;--------------------------------------------------------
                                     37 ; special function registers
                                     38 ;--------------------------------------------------------
                                     39 ;--------------------------------------------------------
                                     40 ; special function bits
                                     41 ;--------------------------------------------------------
                                     42 ;--------------------------------------------------------
                                     43 ; overlayable register banks
                                     44 ;--------------------------------------------------------
                                     45 	.area REG_BANK_0	(REL,OVR,DATA)
      000000                         46 	.ds 8
                                     47 	.area REG_BANK_3	(REL,OVR,DATA)
      000000                         48 	.ds 8
                                     49 ;--------------------------------------------------------
                                     50 ; internal ram data
                                     51 ;--------------------------------------------------------
                                     52 	.area DSEG    (DATA)
                                     53 ;--------------------------------------------------------
                                     54 ; overlayable items in internal ram 
                                     55 ;--------------------------------------------------------
                                     56 ;--------------------------------------------------------
                                     57 ; indirectly addressable internal ram data
                                     58 ;--------------------------------------------------------
                                     59 	.area ISEG    (DATA)
                                     60 ;--------------------------------------------------------
                                     61 ; absolute internal ram data
                                     62 ;--------------------------------------------------------
                                     63 	.area IABS    (ABS,DATA)
                                     64 	.area IABS    (ABS,DATA)
                                     65 ;--------------------------------------------------------
                                     66 ; bit data
                                     67 ;--------------------------------------------------------
                                     68 	.area BSEG    (BIT)
                                     69 ;--------------------------------------------------------
                                     70 ; paged external ram data
                                     71 ;--------------------------------------------------------
                                     72 	.area PSEG    (PAG,XDATA)
                                     73 ;--------------------------------------------------------
                                     74 ; external ram data
                                     75 ;--------------------------------------------------------
                                     76 	.area XSEG    (XDATA)
      000000                         77 _strchr_PARM_2:
      000000                         78 	.ds 2
                                     79 ;--------------------------------------------------------
                                     80 ; absolute external ram data
                                     81 ;--------------------------------------------------------
                                     82 	.area XABS    (ABS,XDATA)
                                     83 ;--------------------------------------------------------
                                     84 ; external initialized ram data
                                     85 ;--------------------------------------------------------
                                     86 	.area XISEG   (XDATA)
                                     87 ;--------------------------------------------------------
                                     88 ; global & static initialisations
                                     89 ;--------------------------------------------------------
                                     90 	.area HOME    (CODE)
                                     91 	.area GSINIT  (CODE)
                                     92 	.area GSFINAL (CODE)
                                     93 	.area GSINIT  (CODE)
                                     94 ;--------------------------------------------------------
                                     95 ; Home
                                     96 ;--------------------------------------------------------
                                     97 	.area HOME    (CODE)
                                     98 	.area HOME    (CODE)
                                     99 ;--------------------------------------------------------
                                    100 ; code
                                    101 ;--------------------------------------------------------
                                    102 	.area CSEG    (CODE)
                                    103 ;------------------------------------------------------------
                                    104 ;Allocation info for local variables in function 'strchr'
                                    105 ;------------------------------------------------------------
                                    106 ;ch                        Allocated with name '_strchr_PARM_2'
                                    107 ;string                    Allocated to registers 
                                    108 ;------------------------------------------------------------
                                    109 ;	_strchr.c:36: char * strchr ( const char * string, int ch )
                                    110 ;	-----------------------------------------
                                    111 ;	 function strchr
                                    112 ;	-----------------------------------------
      000000                        113 _strchr:
                           000002   114 	ar2 = 0x02
                           000003   115 	ar3 = 0x03
                           000004   116 	ar4 = 0x04
                           000005   117 	ar5 = 0x05
                           000006   118 	ar6 = 0x06
                           000007   119 	ar7 = 0x07
                           000000   120 	ar0 = 0x00
                           000001   121 	ar1 = 0x01
      000000 AA 82            [ 8]  122 	mov	r2,dpl
      000002 AB 83            [ 8]  123 	mov	r3,dph
      000004 AC 93            [ 8]  124 	mov	r4,dpx
      000006 AD F0            [ 8]  125 	mov	r5,b
                                    126 ;	_strchr.c:39: while (*string && *string != ch)
      000008                        127 00102$:
      000008 8A 82            [ 8]  128 	mov	dpl,r2
      00000A 8B 83            [ 8]  129 	mov	dph,r3
      00000C 8C 93            [ 8]  130 	mov	dpx,r4
      00000E 8D F0            [ 8]  131 	mov	b,r5
      000010 12s00r00r00      [16]  132 	lcall	__gptrget
      000014 FE               [ 4]  133 	mov  r6,a
      000015 60 23            [12]  134 	jz  00104$
      000017                        135 00122$:
      000017 EE               [ 4]  136 	mov	a,r6
      000018 33               [ 4]  137 	rlc	a
      000019 95 E0            [ 8]  138 	subb	a,acc
      00001B FF               [ 4]  139 	mov	r7,a
      00001C 90s00r00r00      [12]  140 	mov	dptr,#_strchr_PARM_2
      000020 8E F0            [ 8]  141 	mov	b,r6
      000022 E0               [ 8]  142 	movx	a,@dptr
      000023 B5 F0 09         [16]  143 	cjne	a,b,00123$
      000026 8F F0            [ 8]  144 	mov	b,r7
      000028 A3               [12]  145 	inc	dptr
      000029 E0               [ 8]  146 	movx	a,@dptr
      00002A B5 F0 02         [16]  147 	cjne	a,b,00123$
      00002D 80 0B            [12]  148 	sjmp 00104$
      00002F                        149 00123$:
                                    150 ;	_strchr.c:40: string++;
      00002F 0A               [ 4]  151 	inc	r2
      000030 BA 00 05         [16]  152 	cjne	r2,#0x00,00124$
      000033 0B               [ 4]  153 	inc	r3
      000034 BB 00 01         [16]  154 	cjne	r3,#0x00,00124$
      000037 0C               [ 4]  155 	inc	r4
      000038                        156 00124$:
      000038 80 CE            [12]  157 	sjmp 00102$
      00003A                        158 00104$:
                                    159 ;	_strchr.c:42: if (*string == ch)
      00003A 8A 82            [ 8]  160 	mov	dpl,r2
      00003C 8B 83            [ 8]  161 	mov	dph,r3
      00003E 8C 93            [ 8]  162 	mov	dpx,r4
      000040 8D F0            [ 8]  163 	mov	b,r5
      000042 12s00r00r00      [16]  164 	lcall	__gptrget
      000046 FE               [ 4]  165 	mov  r6,a
      000047 33               [ 4]  166 	rlc	a
      000048 95 E0            [ 8]  167 	subb	a,acc
      00004A FF               [ 4]  168 	mov	r7,a
      00004B 90s00r00r00      [12]  169 	mov	dptr,#_strchr_PARM_2
      00004F 8E F0            [ 8]  170 	mov	b,r6
      000051 E0               [ 8]  171 	movx	a,@dptr
      000052 B5 F0 09         [16]  172 	cjne	a,b,00125$
      000055 8F F0            [ 8]  173 	mov	b,r7
      000057 A3               [12]  174 	inc	dptr
      000058 E0               [ 8]  175 	movx	a,@dptr
      000059 B5 F0 02         [16]  176 	cjne	a,b,00125$
      00005C 80 02            [12]  177 	sjmp	00126$
      00005E                        178 00125$:
      00005E 80 0A            [12]  179 	sjmp 00106$
      000060                        180 00126$:
                                    181 ;	_strchr.c:43: return(string);
      000060 8A 82            [ 8]  182 	mov	dpl,r2
      000062 8B 83            [ 8]  183 	mov	dph,r3
      000064 8C 93            [ 8]  184 	mov	dpx,r4
      000066 8D F0            [ 8]  185 	mov	b,r5
      000068 80 07            [12]  186 	sjmp 00107$
      00006A                        187 00106$:
                                    188 ;	_strchr.c:44: return ( NULL );
      00006A 90 00 00 00      [12]  189 	mov  dptr,#0x0000
      00006E 75 F0 00         [12]  190 	mov	b,#0x00
      000071                        191 00107$:
      000071 22               [16]  192 	ret
                                    193 	.area CSEG    (CODE)
                                    194 	.area CONST   (CODE)
                                    195 	.area XINIT   (CODE)
                                    196 	.area CABS    (ABS,CODE)
