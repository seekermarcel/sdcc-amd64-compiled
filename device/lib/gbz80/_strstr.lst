                              1 ;--------------------------------------------------------
                              2 ; File Created by SDCC : free open source ANSI-C Compiler
                              3 ; Version 3.5.0 #9253 (Apr  4 2022) (Linux)
                              4 ; This file was generated Mon Apr  4 14:16:48 2022
                              5 ;--------------------------------------------------------
                              6 	.module _strstr
                              7 	.optsdcc -mgbz80
                              8 	
                              9 ;--------------------------------------------------------
                             10 ; Public variables in this module
                             11 ;--------------------------------------------------------
                             12 	.globl _strstr
                             13 ;--------------------------------------------------------
                             14 ; ram data
                             15 ;--------------------------------------------------------
                             16 	.area _DATA
                             17 ;--------------------------------------------------------
                             18 ; absolute external ram data
                             19 ;--------------------------------------------------------
                             20 	.area _DABS (ABS)
                             21 ;--------------------------------------------------------
                             22 ; global & static initialisations
                             23 ;--------------------------------------------------------
                             24 	.area _HOME
                             25 	.area _GSINIT
                             26 	.area _GSFINAL
                             27 	.area _GSINIT
                             28 ;--------------------------------------------------------
                             29 ; Home
                             30 ;--------------------------------------------------------
                             31 	.area _HOME
                             32 	.area _HOME
                             33 ;--------------------------------------------------------
                             34 ; code
                             35 ;--------------------------------------------------------
                             36 	.area _CODE
                             37 ;../_strstr.c:31: char * strstr ( const char * str1, const char * str2 )
                             38 ;	---------------------------------
                             39 ; Function strstr
                             40 ; ---------------------------------
   0000                      41 _strstr::
   0000 E8 F2                42 	add	sp, #-14
                             43 ;../_strstr.c:33: const char * cp = str1;
   0002 F8 10                44 	ldhl	sp,#16
   0004 2A                   45 	ld	a,(hl+)
   0005 5E                   46 	ld	e, (hl)
   0006 F8 02                47 	ldhl	sp,#2
   0008 22                   48 	ld	(hl+),a
   0009 73                   49 	ld	(hl),e
                             50 ;../_strstr.c:37: if ( !*str2 )
   000A F8 12                51 	ldhl	sp,#18
   000C 2A                   52 	ld	a,(hl+)
   000D 5E                   53 	ld	e, (hl)
   000E F8 00                54 	ldhl	sp,#0
   0010 22                   55 	ld	(hl+),a
   0011 73                   56 	ld	(hl),e
   0012 D1                   57 	pop	de
   0013 D5                   58 	push	de
   0014 1A                   59 	ld	a,(de)
   0015 B7                   60 	or	a, a
   0016 20 07                61 	jr	NZ,00122$
                             62 ;../_strstr.c:38: return str1;
   0018 C1                   63 	pop	bc
   0019 D1                   64 	pop	de
   001A D5                   65 	push	de
   001B C5                   66 	push	bc
   001C C3rABr00             67 	jp	00113$
                             68 ;../_strstr.c:40: while (*cp)
   001F                      69 00122$:
   001F D1                   70 	pop	de
   0020 C1                   71 	pop	bc
   0021 C5                   72 	push	bc
   0022 D5                   73 	push	de
   0023                      74 00110$:
   0023 0A                   75 	ld	a,(bc)
   0024 B7                   76 	or	a, a
   0025 CArA8r00             77 	jp	Z,00112$
                             78 ;../_strstr.c:43: s2 = str2;
   0028 F8 00                79 	ldhl	sp,#0
   002A 2A                   80 	ld	a,(hl+)
   002B 5E                   81 	ld	e, (hl)
   002C F8 06                82 	ldhl	sp,#6
   002E 22                   83 	ld	(hl+),a
   002F 73                   84 	ld	(hl),e
                             85 ;../_strstr.c:45: while ( *s1 && *s2 && !(*s1-*s2) )
   0030 23                   86 	inc	hl
   0031 71                   87 	ld	(hl),c
   0032 23                   88 	inc	hl
   0033 70                   89 	ld	(hl),b
   0034                      90 00105$:
   0034 F8 09                91 	ldhl	sp,#9
   0036 2B                   92 	dec	hl
   0037 5E                   93 	ld	e,(hl)
   0038 23                   94 	inc	hl
   0039 56                   95 	ld	d,(hl)
   003A 1A                   96 	ld	a,(de)
   003B F8 05                97 	ldhl	sp,#5
   003D 22                   98 	ld	(hl+),a
   003E 5E                   99 	ld	e,(hl)
   003F 23                  100 	inc	hl
   0040 56                  101 	ld	d,(hl)
   0041 1A                  102 	ld	a,(de)
   0042 F8 04               103 	ldhl	sp,#4
   0044 22                  104 	ld	(hl+),a
   0045 7E                  105 	ld	a,(hl)
   0046 B7                  106 	or	a, a
   0047 CAr93r00            107 	jp	Z,00107$
   004A 2B                  108 	dec	hl
   004B 7E                  109 	ld	a,(hl)
   004C B7                  110 	or	a, a
   004D CAr93r00            111 	jp	Z,00107$
   0050 23                  112 	inc	hl
   0051 7E                  113 	ld	a,(hl)
   0052 F8 0C               114 	ldhl	sp,#12
   0054 77                  115 	ld	(hl),a
   0055 F8 05               116 	ldhl	sp,#5
   0057 7E                  117 	ld	a,(hl)
   0058 17                  118 	rla
   0059 9F                  119 	sbc	a, a
   005A F8 0D               120 	ldhl	sp,#13
   005C 77                  121 	ld	(hl),a
   005D F8 04               122 	ldhl	sp,#4
   005F 7E                  123 	ld	a,(hl)
   0060 F8 0A               124 	ldhl	sp,#10
   0062 77                  125 	ld	(hl),a
   0063 F8 04               126 	ldhl	sp,#4
   0065 7E                  127 	ld	a,(hl)
   0066 17                  128 	rla
   0067 9F                  129 	sbc	a, a
   0068 F8 0B               130 	ldhl	sp,#11
   006A 22                  131 	ld	(hl+),a
   006B 5E                  132 	ld	e,(hl)
   006C 23                  133 	inc	hl
   006D 56                  134 	ld	d,(hl)
   006E F8 0A               135 	ldhl	sp,#10
   0070 2A                  136 	ld	a,(hl+)
   0071 66                  137 	ld	h,(hl)
   0072 6F                  138 	ld	l,a
   0073 7B                  139 	ld	a,e
   0074 95                  140 	sub	a,l
   0075 5F                  141 	ld	e,a
   0076 7A                  142 	ld	a,d
   0077 9C                  143 	sbc	a,h
   0078 F8 0B               144 	ldhl	sp,#11
   007A 32                  145 	ld	(hl-),a
   007B 73                  146 	ld	(hl),e
   007C 23                  147 	inc	hl
   007D 3A                  148 	ld	a,(hl-)
   007E B6                  149 	or	a,(hl)
   007F 20 12               150 	jr	NZ,00107$
                            151 ;../_strstr.c:46: s1++, s2++;
   0081 2B                  152 	dec	hl
   0082 2B                  153 	dec	hl
   0083 34                  154 	inc	(hl)
   0084 20 02               155 	jr	NZ,00148$
   0086 23                  156 	inc	hl
   0087 34                  157 	inc	(hl)
   0088                     158 00148$:
   0088 F8 06               159 	ldhl	sp,#6
   008A 34                  160 	inc	(hl)
   008B C2r34r00            161 	jp	NZ,00105$
   008E 23                  162 	inc	hl
   008F 34                  163 	inc	(hl)
   0090 C3r34r00            164 	jp	00105$
   0093                     165 00107$:
                            166 ;../_strstr.c:48: if (!*s2)
   0093 F8 04               167 	ldhl	sp,#4
   0095 7E                  168 	ld	a,(hl)
   0096 B7                  169 	or	a, a
   0097 20 06               170 	jr	NZ,00109$
                            171 ;../_strstr.c:49: return( (char*)cp );
   0099 C1                  172 	pop	bc
   009A D1                  173 	pop	de
   009B D5                  174 	push	de
   009C C5                  175 	push	bc
   009D 18 0C               176 	jr	00113$
   009F                     177 00109$:
                            178 ;../_strstr.c:51: cp++;
   009F 03                  179 	inc	bc
   00A0 F8 02               180 	ldhl	sp,#2
   00A2 71                  181 	ld	(hl),c
   00A3 23                  182 	inc	hl
   00A4 70                  183 	ld	(hl),b
   00A5 C3r23r00            184 	jp	00110$
   00A8                     185 00112$:
                            186 ;../_strstr.c:54: return (NULL) ;
   00A8 11 00 00            187 	ld	de,#0x0000
   00AB                     188 00113$:
   00AB E8 0E               189 	add	sp, #14
   00AD C9                  190 	ret
                            191 	.area _CODE
                            192 	.area _CABS (ABS)
