                              1 ;--------------------------------------------------------
                              2 ; File Created by SDCC : free open source ANSI-C Compiler
                              3 ; Version 3.5.0 #9253 (Apr  4 2022) (Linux)
                              4 ; This file was generated Mon Apr  4 14:16:07 2022
                              5 ;--------------------------------------------------------
                              6 	.module puts
                              7 	.optsdcc -mr2k
                              8 	
                              9 ;--------------------------------------------------------
                             10 ; Public variables in this module
                             11 ;--------------------------------------------------------
                             12 	.globl _puts
                             13 	.globl _putchar
                             14 ;--------------------------------------------------------
                             15 ; special function registers
                             16 ;--------------------------------------------------------
                             17 ;--------------------------------------------------------
                             18 ; ram data
                             19 ;--------------------------------------------------------
                             20 	.area _DATA
                             21 ;--------------------------------------------------------
                             22 ; ram data
                             23 ;--------------------------------------------------------
                             24 	.area _INITIALIZED
                             25 ;--------------------------------------------------------
                             26 ; absolute external ram data
                             27 ;--------------------------------------------------------
                             28 	.area _DABS (ABS)
                             29 ;--------------------------------------------------------
                             30 ; global & static initialisations
                             31 ;--------------------------------------------------------
                             32 	.area _HOME
                             33 	.area _GSINIT
                             34 	.area _GSFINAL
                             35 	.area _GSINIT
                             36 ;--------------------------------------------------------
                             37 ; Home
                             38 ;--------------------------------------------------------
                             39 	.area _HOME
                             40 	.area _HOME
                             41 ;--------------------------------------------------------
                             42 ; code
                             43 ;--------------------------------------------------------
                             44 	.area _CODE
                             45 ;../puts.c:31: int puts (char *s)
                             46 ;	---------------------------------
                             47 ; Function puts
                             48 ; ---------------------------------
   0000                      49 _puts::
   0000 DD E5                50 	push	ix
                             51 ;../puts.c:34: while (*s){
   0002 C4 04                52 	ld	hl, 4 (sp)
   0004 01 00 00             53 	ld	bc,#0x0000
   0007                      54 00101$:
   0007 56                   55 	ld	d,(hl)
                             56 ;../puts.c:36: i++;
   0008 03                   57 	inc	bc
                             58 ;../puts.c:34: while (*s){
   0009 7A                   59 	ld	a,d
   000A B7                   60 	or	a, a
   000B 28 0D                61 	jr	Z,00103$
                             62 ;../puts.c:35: putchar(*s++);
   000D 23                   63 	inc	hl
   000E E5                   64 	push	hl
   000F C5                   65 	push	bc
   0010 D5                   66 	push	de
   0011 33                   67 	inc	sp
   0012 CDr00r00             68 	call	_putchar
   0015 33                   69 	inc	sp
   0016 C1                   70 	pop	bc
   0017 E1                   71 	pop	hl
                             72 ;../puts.c:36: i++;
   0018 18 ED                73 	jr	00101$
   001A                      74 00103$:
                             75 ;../puts.c:38: putchar('\n');
   001A C5                   76 	push	bc
   001B 3E 0A                77 	ld	a,#0x0A
   001D F5                   78 	push	af
   001E 33                   79 	inc	sp
   001F CDr00r00             80 	call	_putchar
   0022 33                   81 	inc	sp
                             82 ;../puts.c:39: return i+1;
   0023 E1                   83 	pop	hl
   0024 DD E1                84 	pop	ix
   0026 C9                   85 	ret
                             86 	.area _CODE
                             87 	.area _INITIALIZER
                             88 	.area _CABS (ABS)
