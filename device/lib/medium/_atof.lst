                                      1 ;--------------------------------------------------------
                                      2 ; File Created by SDCC : free open source ANSI-C Compiler
                                      3 ; Version 3.5.0 #9253 (Apr  4 2022) (Linux)
                                      4 ; This file was generated Mon Apr  4 14:10:42 2022
                                      5 ;--------------------------------------------------------
                                      6 	.module _atof
                                      7 	.optsdcc -mmcs51 --model-medium
                                      8 	
                                      9 ;--------------------------------------------------------
                                     10 ; Public variables in this module
                                     11 ;--------------------------------------------------------
                                     12 	.globl _atoi
                                     13 	.globl _toupper
                                     14 	.globl _isspace
                                     15 	.globl _atof
                                     16 ;--------------------------------------------------------
                                     17 ; special function registers
                                     18 ;--------------------------------------------------------
                                     19 	.area RSEG    (ABS,DATA)
      000000                         20 	.org 0x0000
                                     21 ;--------------------------------------------------------
                                     22 ; special function bits
                                     23 ;--------------------------------------------------------
                                     24 	.area RSEG    (ABS,DATA)
      000000                         25 	.org 0x0000
                                     26 ;--------------------------------------------------------
                                     27 ; overlayable register banks
                                     28 ;--------------------------------------------------------
                                     29 	.area REG_BANK_0	(REL,OVR,DATA)
      000000                         30 	.ds 8
                                     31 ;--------------------------------------------------------
                                     32 ; internal ram data
                                     33 ;--------------------------------------------------------
                                     34 	.area DSEG    (DATA)
      000000                         35 _atof_sloc0_1_0:
      000000                         36 	.ds 3
      000003                         37 _atof_sloc1_1_0:
      000003                         38 	.ds 2
      000005                         39 _atof_sloc2_1_0:
      000005                         40 	.ds 4
      000009                         41 _atof_sloc3_1_0:
      000009                         42 	.ds 4
                                     43 ;--------------------------------------------------------
                                     44 ; overlayable items in internal ram 
                                     45 ;--------------------------------------------------------
                                     46 ;--------------------------------------------------------
                                     47 ; indirectly addressable internal ram data
                                     48 ;--------------------------------------------------------
                                     49 	.area ISEG    (DATA)
                                     50 ;--------------------------------------------------------
                                     51 ; absolute internal ram data
                                     52 ;--------------------------------------------------------
                                     53 	.area IABS    (ABS,DATA)
                                     54 	.area IABS    (ABS,DATA)
                                     55 ;--------------------------------------------------------
                                     56 ; bit data
                                     57 ;--------------------------------------------------------
                                     58 	.area BSEG    (BIT)
      000000                         59 _atof_sign_1_37:
      000000                         60 	.ds 1
                                     61 ;--------------------------------------------------------
                                     62 ; paged external ram data
                                     63 ;--------------------------------------------------------
                                     64 	.area PSEG    (PAG,XDATA)
      000000                         65 _atof_s_1_36:
      000000                         66 	.ds 3
      000003                         67 _atof_value_1_37:
      000003                         68 	.ds 4
      000007                         69 _atof_fraction_1_37:
      000007                         70 	.ds 4
                                     71 ;--------------------------------------------------------
                                     72 ; external ram data
                                     73 ;--------------------------------------------------------
                                     74 	.area XSEG    (XDATA)
                                     75 ;--------------------------------------------------------
                                     76 ; absolute external ram data
                                     77 ;--------------------------------------------------------
                                     78 	.area XABS    (ABS,XDATA)
                                     79 ;--------------------------------------------------------
                                     80 ; external initialized ram data
                                     81 ;--------------------------------------------------------
                                     82 	.area XISEG   (XDATA)
                                     83 	.area HOME    (CODE)
                                     84 	.area GSINIT0 (CODE)
                                     85 	.area GSINIT1 (CODE)
                                     86 	.area GSINIT2 (CODE)
                                     87 	.area GSINIT3 (CODE)
                                     88 	.area GSINIT4 (CODE)
                                     89 	.area GSINIT5 (CODE)
                                     90 	.area GSINIT  (CODE)
                                     91 	.area GSFINAL (CODE)
                                     92 	.area CSEG    (CODE)
                                     93 ;--------------------------------------------------------
                                     94 ; global & static initialisations
                                     95 ;--------------------------------------------------------
                                     96 	.area HOME    (CODE)
                                     97 	.area GSINIT  (CODE)
                                     98 	.area GSFINAL (CODE)
                                     99 	.area GSINIT  (CODE)
                                    100 ;--------------------------------------------------------
                                    101 ; Home
                                    102 ;--------------------------------------------------------
                                    103 	.area HOME    (CODE)
                                    104 	.area HOME    (CODE)
                                    105 ;--------------------------------------------------------
                                    106 ; code
                                    107 ;--------------------------------------------------------
                                    108 	.area CSEG    (CODE)
                                    109 ;------------------------------------------------------------
                                    110 ;Allocation info for local variables in function 'atof'
                                    111 ;------------------------------------------------------------
                                    112 ;sloc0                     Allocated with name '_atof_sloc0_1_0'
                                    113 ;sloc1                     Allocated with name '_atof_sloc1_1_0'
                                    114 ;sloc2                     Allocated with name '_atof_sloc2_1_0'
                                    115 ;sloc3                     Allocated with name '_atof_sloc3_1_0'
                                    116 ;------------------------------------------------------------
                                    117 ;	_atof.c:33: float atof(const char * s)
                                    118 ;	-----------------------------------------
                                    119 ;	 function atof
                                    120 ;	-----------------------------------------
      000000                        121 _atof:
                           000007   122 	ar7 = 0x07
                           000006   123 	ar6 = 0x06
                           000005   124 	ar5 = 0x05
                           000004   125 	ar4 = 0x04
                           000003   126 	ar3 = 0x03
                           000002   127 	ar2 = 0x02
                           000001   128 	ar1 = 0x01
                           000000   129 	ar0 = 0x00
      000000 AF F0            [24]  130 	mov	r7,b
      000002 AE 83            [24]  131 	mov	r6,dph
      000004 E5 82            [12]  132 	mov	a,dpl
      000006 78r00            [12]  133 	mov	r0,#_atof_s_1_36
      000008 F2               [24]  134 	movx	@r0,a
      000009 08               [12]  135 	inc	r0
      00000A EE               [12]  136 	mov	a,r6
      00000B F2               [24]  137 	movx	@r0,a
      00000C 08               [12]  138 	inc	r0
      00000D EF               [12]  139 	mov	a,r7
      00000E F2               [24]  140 	movx	@r0,a
                                    141 ;	_atof.c:40: while (isspace(*s)) s++;
      00000F 78r00            [12]  142 	mov	r0,#_atof_s_1_36
      000011 E2               [24]  143 	movx	a,@r0
      000012 FA               [12]  144 	mov	r2,a
      000013 08               [12]  145 	inc	r0
      000014 E2               [24]  146 	movx	a,@r0
      000015 FB               [12]  147 	mov	r3,a
      000016 08               [12]  148 	inc	r0
      000017 E2               [24]  149 	movx	a,@r0
      000018 FC               [12]  150 	mov	r4,a
      000019                        151 00101$:
      000019 8A 82            [24]  152 	mov	dpl,r2
      00001B 8B 83            [24]  153 	mov	dph,r3
      00001D 8C F0            [24]  154 	mov	b,r4
      00001F 12r00r00         [24]  155 	lcall	__gptrget
      000022 F8               [12]  156 	mov	r0,a
      000023 33               [12]  157 	rlc	a
      000024 95 E0            [12]  158 	subb	a,acc
      000026 F9               [12]  159 	mov	r1,a
      000027 88 82            [24]  160 	mov	dpl,r0
      000029 89 83            [24]  161 	mov	dph,r1
      00002B C0 04            [24]  162 	push	ar4
      00002D C0 03            [24]  163 	push	ar3
      00002F C0 02            [24]  164 	push	ar2
      000031 12r00r00         [24]  165 	lcall	_isspace
      000034 E5 82            [12]  166 	mov	a,dpl
      000036 85 83 F0         [24]  167 	mov	b,dph
      000039 D0 02            [24]  168 	pop	ar2
      00003B D0 03            [24]  169 	pop	ar3
      00003D D0 04            [24]  170 	pop	ar4
      00003F 45 F0            [12]  171 	orl	a,b
      000041 60 07            [24]  172 	jz	00145$
      000043 0A               [12]  173 	inc	r2
      000044 BA 00 D2         [24]  174 	cjne	r2,#0x00,00101$
      000047 0B               [12]  175 	inc	r3
      000048 80 CF            [24]  176 	sjmp	00101$
      00004A                        177 00145$:
      00004A 78r00            [12]  178 	mov	r0,#_atof_s_1_36
      00004C EA               [12]  179 	mov	a,r2
      00004D F2               [24]  180 	movx	@r0,a
      00004E 08               [12]  181 	inc	r0
      00004F EB               [12]  182 	mov	a,r3
      000050 F2               [24]  183 	movx	@r0,a
      000051 08               [12]  184 	inc	r0
      000052 EC               [12]  185 	mov	a,r4
      000053 F2               [24]  186 	movx	@r0,a
                                    187 ;	_atof.c:43: if (*s == '-')
      000054 8A 82            [24]  188 	mov	dpl,r2
      000056 8B 83            [24]  189 	mov	dph,r3
      000058 8C F0            [24]  190 	mov	b,r4
      00005A 12r00r00         [24]  191 	lcall	__gptrget
      00005D F9               [12]  192 	mov	r1,a
      00005E B9 2D 11         [24]  193 	cjne	r1,#0x2D,00107$
                                    194 ;	_atof.c:45: sign=1;
      000061 D2*00            [12]  195 	setb	_atof_sign_1_37
                                    196 ;	_atof.c:46: s++;
      000063 78r00            [12]  197 	mov	r0,#_atof_s_1_36
      000065 74 01            [12]  198 	mov	a,#0x01
      000067 2A               [12]  199 	add	a,r2
      000068 F2               [24]  200 	movx	@r0,a
      000069 E4               [12]  201 	clr	a
      00006A 3B               [12]  202 	addc	a,r3
      00006B 08               [12]  203 	inc	r0
      00006C F2               [24]  204 	movx	@r0,a
      00006D 08               [12]  205 	inc	r0
      00006E EC               [12]  206 	mov	a,r4
      00006F F2               [24]  207 	movx	@r0,a
      000070 80 12            [24]  208 	sjmp	00108$
      000072                        209 00107$:
                                    210 ;	_atof.c:50: sign=0;
      000072 C2*00            [12]  211 	clr	_atof_sign_1_37
                                    212 ;	_atof.c:51: if (*s == '+') s++;
      000074 B9 2B 0D         [24]  213 	cjne	r1,#0x2B,00108$
      000077 78r00            [12]  214 	mov	r0,#_atof_s_1_36
      000079 74 01            [12]  215 	mov	a,#0x01
      00007B 2A               [12]  216 	add	a,r2
      00007C F2               [24]  217 	movx	@r0,a
      00007D E4               [12]  218 	clr	a
      00007E 3B               [12]  219 	addc	a,r3
      00007F 08               [12]  220 	inc	r0
      000080 F2               [24]  221 	movx	@r0,a
      000081 08               [12]  222 	inc	r0
      000082 EC               [12]  223 	mov	a,r4
      000083 F2               [24]  224 	movx	@r0,a
      000084                        225 00108$:
                                    226 ;	_atof.c:55: for (value=0.0; isdigit(*s); s++)
      000084 78r03            [12]  227 	mov	r0,#_atof_value_1_37
      000086 E4               [12]  228 	clr	a
      000087 F2               [24]  229 	movx	@r0,a
      000088 08               [12]  230 	inc	r0
      000089 F2               [24]  231 	movx	@r0,a
      00008A 08               [12]  232 	inc	r0
      00008B F2               [24]  233 	movx	@r0,a
      00008C 08               [12]  234 	inc	r0
      00008D F2               [24]  235 	movx	@r0,a
      00008E 78r00            [12]  236 	mov	r0,#_atof_s_1_36
      000090 E2               [24]  237 	movx	a,@r0
      000091 F5*00            [12]  238 	mov	_atof_sloc0_1_0,a
      000093 08               [12]  239 	inc	r0
      000094 E2               [24]  240 	movx	a,@r0
      000095 F5*01            [12]  241 	mov	(_atof_sloc0_1_0 + 1),a
      000097 08               [12]  242 	inc	r0
      000098 E2               [24]  243 	movx	a,@r0
      000099 F5*02            [12]  244 	mov	(_atof_sloc0_1_0 + 2),a
      00009B                        245 00124$:
      00009B 85*00 82         [24]  246 	mov	dpl,_atof_sloc0_1_0
      00009E 85*01 83         [24]  247 	mov	dph,(_atof_sloc0_1_0 + 1)
      0000A1 85*02 F0         [24]  248 	mov	b,(_atof_sloc0_1_0 + 2)
      0000A4 12r00r00         [24]  249 	lcall	__gptrget
      0000A7 FA               [12]  250 	mov	r2,a
      0000A8 8A*03            [24]  251 	mov	_atof_sloc1_1_0,r2
      0000AA 33               [12]  252 	rlc	a
      0000AB 95 E0            [12]  253 	subb	a,acc
      0000AD F5*04            [12]  254 	mov	(_atof_sloc1_1_0 + 1),a
      0000AF 85*03 82         [24]  255 	mov	dpl,_atof_sloc1_1_0
      0000B2 85*04 83         [24]  256 	mov	dph,(_atof_sloc1_1_0 + 1)
      0000B5 12r00r00         [24]  257 	lcall	_isdigit
      0000B8 E5 82            [12]  258 	mov	a,dpl
      0000BA 85 83 F0         [24]  259 	mov	b,dph
      0000BD 45 F0            [12]  260 	orl	a,b
      0000BF 70 03            [24]  261 	jnz	00182$
      0000C1 02r01r59         [24]  262 	ljmp	00146$
      0000C4                        263 00182$:
                                    264 ;	_atof.c:57: value=10.0*value+(*s-'0');
      0000C4 78r03            [12]  265 	mov	r0,#_atof_value_1_37
      0000C6 E2               [24]  266 	movx	a,@r0
      0000C7 C0 E0            [24]  267 	push	acc
      0000C9 08               [12]  268 	inc	r0
      0000CA E2               [24]  269 	movx	a,@r0
      0000CB C0 E0            [24]  270 	push	acc
      0000CD 08               [12]  271 	inc	r0
      0000CE E2               [24]  272 	movx	a,@r0
      0000CF C0 E0            [24]  273 	push	acc
      0000D1 08               [12]  274 	inc	r0
      0000D2 E2               [24]  275 	movx	a,@r0
      0000D3 C0 E0            [24]  276 	push	acc
      0000D5 90 00 00         [24]  277 	mov	dptr,#0x0000
      0000D8 75 F0 20         [24]  278 	mov	b,#0x20
      0000DB 74 41            [12]  279 	mov	a,#0x41
      0000DD 12r00r00         [24]  280 	lcall	___fsmul
      0000E0 85 82*05         [24]  281 	mov	_atof_sloc2_1_0,dpl
      0000E3 85 83*06         [24]  282 	mov	(_atof_sloc2_1_0 + 1),dph
      0000E6 85 F0*07         [24]  283 	mov	(_atof_sloc2_1_0 + 2),b
      0000E9 F5*08            [12]  284 	mov	(_atof_sloc2_1_0 + 3),a
      0000EB E5 81            [12]  285 	mov	a,sp
      0000ED 24 FC            [12]  286 	add	a,#0xfc
      0000EF F5 81            [12]  287 	mov	sp,a
      0000F1 85*00 82         [24]  288 	mov	dpl,_atof_sloc0_1_0
      0000F4 85*01 83         [24]  289 	mov	dph,(_atof_sloc0_1_0 + 1)
      0000F7 85*02 F0         [24]  290 	mov	b,(_atof_sloc0_1_0 + 2)
      0000FA 12r00r00         [24]  291 	lcall	__gptrget
      0000FD FA               [12]  292 	mov	r2,a
      0000FE A3               [24]  293 	inc	dptr
      0000FF 85 82*00         [24]  294 	mov	_atof_sloc0_1_0,dpl
      000102 85 83*01         [24]  295 	mov	(_atof_sloc0_1_0 + 1),dph
      000105 EA               [12]  296 	mov	a,r2
      000106 F5*03            [12]  297 	mov	_atof_sloc1_1_0,a
      000108 33               [12]  298 	rlc	a
      000109 95 E0            [12]  299 	subb	a,acc
      00010B F5*04            [12]  300 	mov	(_atof_sloc1_1_0 + 1),a
      00010D E5*03            [12]  301 	mov	a,_atof_sloc1_1_0
      00010F 24 D0            [12]  302 	add	a,#0xD0
      000111 F5 82            [12]  303 	mov	dpl,a
      000113 E5*04            [12]  304 	mov	a,(_atof_sloc1_1_0 + 1)
      000115 34 FF            [12]  305 	addc	a,#0xFF
      000117 F5 83            [12]  306 	mov	dph,a
      000119 12r00r00         [24]  307 	lcall	___sint2fs
      00011C 85 82*09         [24]  308 	mov	_atof_sloc3_1_0,dpl
      00011F 85 83*0A         [24]  309 	mov	(_atof_sloc3_1_0 + 1),dph
      000122 85 F0*0B         [24]  310 	mov	(_atof_sloc3_1_0 + 2),b
      000125 F5*0C            [12]  311 	mov	(_atof_sloc3_1_0 + 3),a
      000127 C0*09            [24]  312 	push	_atof_sloc3_1_0
      000129 C0*0A            [24]  313 	push	(_atof_sloc3_1_0 + 1)
      00012B C0*0B            [24]  314 	push	(_atof_sloc3_1_0 + 2)
      00012D C0*0C            [24]  315 	push	(_atof_sloc3_1_0 + 3)
      00012F 85*05 82         [24]  316 	mov	dpl,_atof_sloc2_1_0
      000132 85*06 83         [24]  317 	mov	dph,(_atof_sloc2_1_0 + 1)
      000135 85*07 F0         [24]  318 	mov	b,(_atof_sloc2_1_0 + 2)
      000138 E5*08            [12]  319 	mov	a,(_atof_sloc2_1_0 + 3)
      00013A 12r00r00         [24]  320 	lcall	___fsadd
      00013D 78r03            [12]  321 	mov	r0,#_atof_value_1_37
      00013F C0 E0            [24]  322 	push	acc
      000141 E5 82            [12]  323 	mov	a,dpl
      000143 F2               [24]  324 	movx	@r0,a
      000144 08               [12]  325 	inc	r0
      000145 E5 83            [12]  326 	mov	a,dph
      000147 F2               [24]  327 	movx	@r0,a
      000148 08               [12]  328 	inc	r0
      000149 E5 F0            [12]  329 	mov	a,b
      00014B F2               [24]  330 	movx	@r0,a
      00014C D0 E0            [24]  331 	pop	acc
      00014E 08               [12]  332 	inc	r0
      00014F F2               [24]  333 	movx	@r0,a
      000150 E5 81            [12]  334 	mov	a,sp
      000152 24 FC            [12]  335 	add	a,#0xfc
      000154 F5 81            [12]  336 	mov	sp,a
                                    337 ;	_atof.c:55: for (value=0.0; isdigit(*s); s++)
      000156 02r00r9B         [24]  338 	ljmp	00124$
      000159                        339 00146$:
      000159 78r00            [12]  340 	mov	r0,#_atof_s_1_36
      00015B E5*00            [12]  341 	mov	a,_atof_sloc0_1_0
      00015D F2               [24]  342 	movx	@r0,a
      00015E 08               [12]  343 	inc	r0
      00015F E5*01            [12]  344 	mov	a,(_atof_sloc0_1_0 + 1)
      000161 F2               [24]  345 	movx	@r0,a
      000162 08               [12]  346 	inc	r0
      000163 E5*02            [12]  347 	mov	a,(_atof_sloc0_1_0 + 2)
      000165 F2               [24]  348 	movx	@r0,a
                                    349 ;	_atof.c:61: if (*s == '.')
      000166 85*00 82         [24]  350 	mov	dpl,_atof_sloc0_1_0
      000169 85*01 83         [24]  351 	mov	dph,(_atof_sloc0_1_0 + 1)
      00016C 85*02 F0         [24]  352 	mov	b,(_atof_sloc0_1_0 + 2)
      00016F 12r00r00         [24]  353 	lcall	__gptrget
      000172 FA               [12]  354 	mov	r2,a
      000173 BA 2E 02         [24]  355 	cjne	r2,#0x2E,00183$
      000176 80 03            [24]  356 	sjmp	00184$
      000178                        357 00183$:
      000178 02r02r97         [24]  358 	ljmp	00112$
      00017B                        359 00184$:
                                    360 ;	_atof.c:63: s++;
      00017B 78r00            [12]  361 	mov	r0,#_atof_s_1_36
      00017D 74 01            [12]  362 	mov	a,#0x01
      00017F 25*00            [12]  363 	add	a,_atof_sloc0_1_0
      000181 F2               [24]  364 	movx	@r0,a
      000182 E4               [12]  365 	clr	a
      000183 35*01            [12]  366 	addc	a,(_atof_sloc0_1_0 + 1)
      000185 08               [12]  367 	inc	r0
      000186 F2               [24]  368 	movx	@r0,a
      000187 08               [12]  369 	inc	r0
      000188 E5*02            [12]  370 	mov	a,(_atof_sloc0_1_0 + 2)
      00018A F2               [24]  371 	movx	@r0,a
                                    372 ;	_atof.c:64: for (fraction=0.1; isdigit(*s); s++)
      00018B 78r07            [12]  373 	mov	r0,#_atof_fraction_1_37
      00018D 74 CD            [12]  374 	mov	a,#0xCD
      00018F F2               [24]  375 	movx	@r0,a
      000190 08               [12]  376 	inc	r0
      000191 14               [12]  377 	dec	a
      000192 F2               [24]  378 	movx	@r0,a
      000193 08               [12]  379 	inc	r0
      000194 F2               [24]  380 	movx	@r0,a
      000195 08               [12]  381 	inc	r0
      000196 74 3D            [12]  382 	mov	a,#0x3D
      000198 F2               [24]  383 	movx	@r0,a
      000199 78r00            [12]  384 	mov	r0,#_atof_s_1_36
      00019B E2               [24]  385 	movx	a,@r0
      00019C F5*09            [12]  386 	mov	_atof_sloc3_1_0,a
      00019E 08               [12]  387 	inc	r0
      00019F E2               [24]  388 	movx	a,@r0
      0001A0 F5*0A            [12]  389 	mov	(_atof_sloc3_1_0 + 1),a
      0001A2 08               [12]  390 	inc	r0
      0001A3 E2               [24]  391 	movx	a,@r0
      0001A4 F5*0B            [12]  392 	mov	(_atof_sloc3_1_0 + 2),a
      0001A6                        393 00127$:
      0001A6 85*09 82         [24]  394 	mov	dpl,_atof_sloc3_1_0
      0001A9 85*0A 83         [24]  395 	mov	dph,(_atof_sloc3_1_0 + 1)
      0001AC 85*0B F0         [24]  396 	mov	b,(_atof_sloc3_1_0 + 2)
      0001AF 12r00r00         [24]  397 	lcall	__gptrget
      0001B2 FA               [12]  398 	mov	r2,a
      0001B3 33               [12]  399 	rlc	a
      0001B4 95 E0            [12]  400 	subb	a,acc
      0001B6 FF               [12]  401 	mov	r7,a
      0001B7 8A 82            [24]  402 	mov	dpl,r2
      0001B9 8F 83            [24]  403 	mov	dph,r7
      0001BB 12r00r00         [24]  404 	lcall	_isdigit
      0001BE E5 82            [12]  405 	mov	a,dpl
      0001C0 85 83 F0         [24]  406 	mov	b,dph
      0001C3 45 F0            [12]  407 	orl	a,b
      0001C5 70 03            [24]  408 	jnz	00185$
      0001C7 02r02r8A         [24]  409 	ljmp	00147$
      0001CA                        410 00185$:
                                    411 ;	_atof.c:66: value+=(*s-'0')*fraction;
      0001CA 85*09 82         [24]  412 	mov	dpl,_atof_sloc3_1_0
      0001CD 85*0A 83         [24]  413 	mov	dph,(_atof_sloc3_1_0 + 1)
      0001D0 85*0B F0         [24]  414 	mov	b,(_atof_sloc3_1_0 + 2)
      0001D3 12r00r00         [24]  415 	lcall	__gptrget
      0001D6 FA               [12]  416 	mov	r2,a
      0001D7 A3               [24]  417 	inc	dptr
      0001D8 85 82*09         [24]  418 	mov	_atof_sloc3_1_0,dpl
      0001DB 85 83*0A         [24]  419 	mov	(_atof_sloc3_1_0 + 1),dph
      0001DE EA               [12]  420 	mov	a,r2
      0001DF 33               [12]  421 	rlc	a
      0001E0 95 E0            [12]  422 	subb	a,acc
      0001E2 FF               [12]  423 	mov	r7,a
      0001E3 EA               [12]  424 	mov	a,r2
      0001E4 24 D0            [12]  425 	add	a,#0xD0
      0001E6 F5 82            [12]  426 	mov	dpl,a
      0001E8 EF               [12]  427 	mov	a,r7
      0001E9 34 FF            [12]  428 	addc	a,#0xFF
      0001EB F5 83            [12]  429 	mov	dph,a
      0001ED 12r00r00         [24]  430 	lcall	___sint2fs
      0001F0 AA 82            [24]  431 	mov	r2,dpl
      0001F2 AD 83            [24]  432 	mov	r5,dph
      0001F4 AE F0            [24]  433 	mov	r6,b
      0001F6 FF               [12]  434 	mov	r7,a
      0001F7 78r07            [12]  435 	mov	r0,#_atof_fraction_1_37
      0001F9 E2               [24]  436 	movx	a,@r0
      0001FA C0 E0            [24]  437 	push	acc
      0001FC 08               [12]  438 	inc	r0
      0001FD E2               [24]  439 	movx	a,@r0
      0001FE C0 E0            [24]  440 	push	acc
      000200 08               [12]  441 	inc	r0
      000201 E2               [24]  442 	movx	a,@r0
      000202 C0 E0            [24]  443 	push	acc
      000204 08               [12]  444 	inc	r0
      000205 E2               [24]  445 	movx	a,@r0
      000206 C0 E0            [24]  446 	push	acc
      000208 8A 82            [24]  447 	mov	dpl,r2
      00020A 8D 83            [24]  448 	mov	dph,r5
      00020C 8E F0            [24]  449 	mov	b,r6
      00020E EF               [12]  450 	mov	a,r7
      00020F 12r00r00         [24]  451 	lcall	___fsmul
      000212 AA 82            [24]  452 	mov	r2,dpl
      000214 AD 83            [24]  453 	mov	r5,dph
      000216 AE F0            [24]  454 	mov	r6,b
      000218 FF               [12]  455 	mov	r7,a
      000219 E5 81            [12]  456 	mov	a,sp
      00021B 24 FC            [12]  457 	add	a,#0xfc
      00021D F5 81            [12]  458 	mov	sp,a
      00021F C0 02            [24]  459 	push	ar2
      000221 C0 05            [24]  460 	push	ar5
      000223 C0 06            [24]  461 	push	ar6
      000225 C0 07            [24]  462 	push	ar7
      000227 78r03            [12]  463 	mov	r0,#_atof_value_1_37
      000229 E2               [24]  464 	movx	a,@r0
      00022A F5 82            [12]  465 	mov	dpl,a
      00022C 08               [12]  466 	inc	r0
      00022D E2               [24]  467 	movx	a,@r0
      00022E F5 83            [12]  468 	mov	dph,a
      000230 08               [12]  469 	inc	r0
      000231 E2               [24]  470 	movx	a,@r0
      000232 F5 F0            [12]  471 	mov	b,a
      000234 08               [12]  472 	inc	r0
      000235 E2               [24]  473 	movx	a,@r0
      000236 12r00r00         [24]  474 	lcall	___fsadd
      000239 78r03            [12]  475 	mov	r0,#_atof_value_1_37
      00023B C0 E0            [24]  476 	push	acc
      00023D E5 82            [12]  477 	mov	a,dpl
      00023F F2               [24]  478 	movx	@r0,a
      000240 08               [12]  479 	inc	r0
      000241 E5 83            [12]  480 	mov	a,dph
      000243 F2               [24]  481 	movx	@r0,a
      000244 08               [12]  482 	inc	r0
      000245 E5 F0            [12]  483 	mov	a,b
      000247 F2               [24]  484 	movx	@r0,a
      000248 D0 E0            [24]  485 	pop	acc
      00024A 08               [12]  486 	inc	r0
      00024B F2               [24]  487 	movx	@r0,a
      00024C E5 81            [12]  488 	mov	a,sp
      00024E 24 FC            [12]  489 	add	a,#0xfc
      000250 F5 81            [12]  490 	mov	sp,a
                                    491 ;	_atof.c:67: fraction*=0.1;
      000252 78r07            [12]  492 	mov	r0,#_atof_fraction_1_37
      000254 E2               [24]  493 	movx	a,@r0
      000255 C0 E0            [24]  494 	push	acc
      000257 08               [12]  495 	inc	r0
      000258 E2               [24]  496 	movx	a,@r0
      000259 C0 E0            [24]  497 	push	acc
      00025B 08               [12]  498 	inc	r0
      00025C E2               [24]  499 	movx	a,@r0
      00025D C0 E0            [24]  500 	push	acc
      00025F 08               [12]  501 	inc	r0
      000260 E2               [24]  502 	movx	a,@r0
      000261 C0 E0            [24]  503 	push	acc
      000263 90 CC CD         [24]  504 	mov	dptr,#0xCCCD
      000266 75 F0 CC         [24]  505 	mov	b,#0xCC
      000269 74 3D            [12]  506 	mov	a,#0x3D
      00026B 12r00r00         [24]  507 	lcall	___fsmul
      00026E 78r07            [12]  508 	mov	r0,#_atof_fraction_1_37
      000270 C0 E0            [24]  509 	push	acc
      000272 E5 82            [12]  510 	mov	a,dpl
      000274 F2               [24]  511 	movx	@r0,a
      000275 08               [12]  512 	inc	r0
      000276 E5 83            [12]  513 	mov	a,dph
      000278 F2               [24]  514 	movx	@r0,a
      000279 08               [12]  515 	inc	r0
      00027A E5 F0            [12]  516 	mov	a,b
      00027C F2               [24]  517 	movx	@r0,a
      00027D D0 E0            [24]  518 	pop	acc
      00027F 08               [12]  519 	inc	r0
      000280 F2               [24]  520 	movx	@r0,a
      000281 E5 81            [12]  521 	mov	a,sp
      000283 24 FC            [12]  522 	add	a,#0xfc
      000285 F5 81            [12]  523 	mov	sp,a
                                    524 ;	_atof.c:64: for (fraction=0.1; isdigit(*s); s++)
      000287 02r01rA6         [24]  525 	ljmp	00127$
      00028A                        526 00147$:
      00028A 78r00            [12]  527 	mov	r0,#_atof_s_1_36
      00028C E5*09            [12]  528 	mov	a,_atof_sloc3_1_0
      00028E F2               [24]  529 	movx	@r0,a
      00028F 08               [12]  530 	inc	r0
      000290 E5*0A            [12]  531 	mov	a,(_atof_sloc3_1_0 + 1)
      000292 F2               [24]  532 	movx	@r0,a
      000293 08               [12]  533 	inc	r0
      000294 E5*0B            [12]  534 	mov	a,(_atof_sloc3_1_0 + 2)
      000296 F2               [24]  535 	movx	@r0,a
      000297                        536 00112$:
                                    537 ;	_atof.c:72: if (toupper(*s)=='E')
      000297 78r00            [12]  538 	mov	r0,#_atof_s_1_36
      000299 E2               [24]  539 	movx	a,@r0
      00029A F5 82            [12]  540 	mov	dpl,a
      00029C 08               [12]  541 	inc	r0
      00029D E2               [24]  542 	movx	a,@r0
      00029E F5 83            [12]  543 	mov	dph,a
      0002A0 08               [12]  544 	inc	r0
      0002A1 E2               [24]  545 	movx	a,@r0
      0002A2 F5 F0            [12]  546 	mov	b,a
      0002A4 12r00r00         [24]  547 	lcall	__gptrget
      0002A7 FF               [12]  548 	mov	r7,a
      0002A8 33               [12]  549 	rlc	a
      0002A9 95 E0            [12]  550 	subb	a,acc
      0002AB FE               [12]  551 	mov	r6,a
      0002AC 8F 82            [24]  552 	mov	dpl,r7
      0002AE 8E 83            [24]  553 	mov	dph,r6
      0002B0 12r00r00         [24]  554 	lcall	_toupper
      0002B3 AE 82            [24]  555 	mov	r6,dpl
      0002B5 AF 83            [24]  556 	mov	r7,dph
      0002B7 BE 45 05         [24]  557 	cjne	r6,#0x45,00186$
      0002BA BF 00 02         [24]  558 	cjne	r7,#0x00,00186$
      0002BD 80 03            [24]  559 	sjmp	00187$
      0002BF                        560 00186$:
      0002BF 02r03r64         [24]  561 	ljmp	00120$
      0002C2                        562 00187$:
                                    563 ;	_atof.c:74: s++;
      0002C2 78r00            [12]  564 	mov	r0,#_atof_s_1_36
      0002C4 E2               [24]  565 	movx	a,@r0
      0002C5 24 01            [12]  566 	add	a,#0x01
      0002C7 F2               [24]  567 	movx	@r0,a
      0002C8 08               [12]  568 	inc	r0
      0002C9 E2               [24]  569 	movx	a,@r0
      0002CA 34 00            [12]  570 	addc	a,#0x00
      0002CC F2               [24]  571 	movx	@r0,a
                                    572 ;	_atof.c:75: iexp=(signed char)atoi(s);
      0002CD 78r00            [12]  573 	mov	r0,#_atof_s_1_36
      0002CF E2               [24]  574 	movx	a,@r0
      0002D0 F5 82            [12]  575 	mov	dpl,a
      0002D2 08               [12]  576 	inc	r0
      0002D3 E2               [24]  577 	movx	a,@r0
      0002D4 F5 83            [12]  578 	mov	dph,a
      0002D6 08               [12]  579 	inc	r0
      0002D7 E2               [24]  580 	movx	a,@r0
      0002D8 F5 F0            [12]  581 	mov	b,a
      0002DA 12r00r00         [24]  582 	lcall	_atoi
      0002DD AE 82            [24]  583 	mov	r6,dpl
      0002DF AF 83            [24]  584 	mov	r7,dph
                                    585 ;	_atof.c:77: while(iexp!=0)
      0002E1                        586 00116$:
      0002E1 EE               [12]  587 	mov	a,r6
      0002E2 70 03            [24]  588 	jnz	00188$
      0002E4 02r03r64         [24]  589 	ljmp	00120$
      0002E7                        590 00188$:
                                    591 ;	_atof.c:79: if(iexp<0)
      0002E7 EE               [12]  592 	mov	a,r6
      0002E8 30 E7 3C         [24]  593 	jnb	acc.7,00114$
                                    594 ;	_atof.c:81: value*=0.1;
      0002EB C0 06            [24]  595 	push	ar6
      0002ED 78r03            [12]  596 	mov	r0,#_atof_value_1_37
      0002EF E2               [24]  597 	movx	a,@r0
      0002F0 C0 E0            [24]  598 	push	acc
      0002F2 08               [12]  599 	inc	r0
      0002F3 E2               [24]  600 	movx	a,@r0
      0002F4 C0 E0            [24]  601 	push	acc
      0002F6 08               [12]  602 	inc	r0
      0002F7 E2               [24]  603 	movx	a,@r0
      0002F8 C0 E0            [24]  604 	push	acc
      0002FA 08               [12]  605 	inc	r0
      0002FB E2               [24]  606 	movx	a,@r0
      0002FC C0 E0            [24]  607 	push	acc
      0002FE 90 CC CD         [24]  608 	mov	dptr,#0xCCCD
      000301 75 F0 CC         [24]  609 	mov	b,#0xCC
      000304 74 3D            [12]  610 	mov	a,#0x3D
      000306 12r00r00         [24]  611 	lcall	___fsmul
      000309 78r03            [12]  612 	mov	r0,#_atof_value_1_37
      00030B C0 E0            [24]  613 	push	acc
      00030D E5 82            [12]  614 	mov	a,dpl
      00030F F2               [24]  615 	movx	@r0,a
      000310 08               [12]  616 	inc	r0
      000311 E5 83            [12]  617 	mov	a,dph
      000313 F2               [24]  618 	movx	@r0,a
      000314 08               [12]  619 	inc	r0
      000315 E5 F0            [12]  620 	mov	a,b
      000317 F2               [24]  621 	movx	@r0,a
      000318 D0 E0            [24]  622 	pop	acc
      00031A 08               [12]  623 	inc	r0
      00031B F2               [24]  624 	movx	@r0,a
      00031C E5 81            [12]  625 	mov	a,sp
      00031E 24 FC            [12]  626 	add	a,#0xfc
      000320 F5 81            [12]  627 	mov	sp,a
      000322 D0 06            [24]  628 	pop	ar6
                                    629 ;	_atof.c:82: iexp++;
      000324 0E               [12]  630 	inc	r6
      000325 80 BA            [24]  631 	sjmp	00116$
      000327                        632 00114$:
                                    633 ;	_atof.c:86: value*=10.0;
      000327 C0 06            [24]  634 	push	ar6
      000329 78r03            [12]  635 	mov	r0,#_atof_value_1_37
      00032B E2               [24]  636 	movx	a,@r0
      00032C C0 E0            [24]  637 	push	acc
      00032E 08               [12]  638 	inc	r0
      00032F E2               [24]  639 	movx	a,@r0
      000330 C0 E0            [24]  640 	push	acc
      000332 08               [12]  641 	inc	r0
      000333 E2               [24]  642 	movx	a,@r0
      000334 C0 E0            [24]  643 	push	acc
      000336 08               [12]  644 	inc	r0
      000337 E2               [24]  645 	movx	a,@r0
      000338 C0 E0            [24]  646 	push	acc
      00033A 90 00 00         [24]  647 	mov	dptr,#0x0000
      00033D 75 F0 20         [24]  648 	mov	b,#0x20
      000340 74 41            [12]  649 	mov	a,#0x41
      000342 12r00r00         [24]  650 	lcall	___fsmul
      000345 78r03            [12]  651 	mov	r0,#_atof_value_1_37
      000347 C0 E0            [24]  652 	push	acc
      000349 E5 82            [12]  653 	mov	a,dpl
      00034B F2               [24]  654 	movx	@r0,a
      00034C 08               [12]  655 	inc	r0
      00034D E5 83            [12]  656 	mov	a,dph
      00034F F2               [24]  657 	movx	@r0,a
      000350 08               [12]  658 	inc	r0
      000351 E5 F0            [12]  659 	mov	a,b
      000353 F2               [24]  660 	movx	@r0,a
      000354 D0 E0            [24]  661 	pop	acc
      000356 08               [12]  662 	inc	r0
      000357 F2               [24]  663 	movx	@r0,a
      000358 E5 81            [12]  664 	mov	a,sp
      00035A 24 FC            [12]  665 	add	a,#0xfc
      00035C F5 81            [12]  666 	mov	sp,a
      00035E D0 06            [24]  667 	pop	ar6
                                    668 ;	_atof.c:87: iexp--;
      000360 1E               [12]  669 	dec	r6
      000361 02r02rE1         [24]  670 	ljmp	00116$
      000364                        671 00120$:
                                    672 ;	_atof.c:93: if(sign) value*=-1.0;
      000364 30*00 0F         [24]  673 	jnb	_atof_sign_1_37,00122$
      000367 78r03            [12]  674 	mov	r0,#_atof_value_1_37
      000369 E2               [24]  675 	movx	a,@r0
      00036A F2               [24]  676 	movx	@r0,a
      00036B 08               [12]  677 	inc	r0
      00036C E2               [24]  678 	movx	a,@r0
      00036D F2               [24]  679 	movx	@r0,a
      00036E 08               [12]  680 	inc	r0
      00036F E2               [24]  681 	movx	a,@r0
      000370 F2               [24]  682 	movx	@r0,a
      000371 08               [12]  683 	inc	r0
      000372 E2               [24]  684 	movx	a,@r0
      000373 B2 E7            [12]  685 	cpl	acc.7
      000375 F2               [24]  686 	movx	@r0,a
      000376                        687 00122$:
                                    688 ;	_atof.c:94: return (value);
      000376 78r03            [12]  689 	mov	r0,#_atof_value_1_37
      000378 E2               [24]  690 	movx	a,@r0
      000379 F5 82            [12]  691 	mov	dpl,a
      00037B 08               [12]  692 	inc	r0
      00037C E2               [24]  693 	movx	a,@r0
      00037D F5 83            [12]  694 	mov	dph,a
      00037F 08               [12]  695 	inc	r0
      000380 E2               [24]  696 	movx	a,@r0
      000381 F5 F0            [12]  697 	mov	b,a
      000383 08               [12]  698 	inc	r0
      000384 E2               [24]  699 	movx	a,@r0
      000385 22               [24]  700 	ret
                                    701 	.area CSEG    (CODE)
                                    702 	.area CONST   (CODE)
                                    703 	.area XINIT   (CODE)
                                    704 	.area CABS    (ABS,CODE)
