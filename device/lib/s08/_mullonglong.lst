                              1 ;--------------------------------------------------------
                              2 ; File Created by SDCC : free open source ANSI-C Compiler
                              3 ; Version 3.5.0 #9253 (Apr  4 2022) (Linux)
                              4 ; This file was generated Mon Apr  4 14:10:36 2022
                              5 ;--------------------------------------------------------
                              6 	.cs08
                              7 	.module _mullonglong
                              8 	.optsdcc -ms08
                              9 	
                             10 	.area HOME    (CODE)
                             11 	.area GSINIT0 (CODE)
                             12 	.area GSINIT  (CODE)
                             13 	.area GSFINAL (CODE)
                             14 	.area CSEG    (CODE)
                             15 	.area XINIT   (CODE)
                             16 	.area CONST   (CODE)
                             17 	.area DSEG    (PAG)
                             18 	.area OSEG    (PAG, OVR)
                             19 	.area XSEG
                             20 	.area XISEG
                             21 ;--------------------------------------------------------
                             22 ; Public variables in this module
                             23 ;--------------------------------------------------------
                             24 	.globl __mullonglong_PARM_2
                             25 	.globl __mullonglong_PARM_1
                             26 	.globl __mullonglong
                             27 ;--------------------------------------------------------
                             28 ; ram data
                             29 ;--------------------------------------------------------
                             30 	.area DSEG    (PAG)
   0000                      31 __mullonglong_sloc0_1_0:
   0000                      32 	.ds 1
   0001                      33 __mullonglong_sloc1_1_0:
   0001                      34 	.ds 8
   0009                      35 __mullonglong_sloc2_1_0:
   0009                      36 	.ds 2
   000B                      37 __mullonglong_sloc3_1_0:
   000B                      38 	.ds 8
                             39 ;--------------------------------------------------------
                             40 ; overlayable items in ram 
                             41 ;--------------------------------------------------------
                             42 ;--------------------------------------------------------
                             43 ; absolute ram data
                             44 ;--------------------------------------------------------
                             45 	.area IABS    (ABS)
                             46 	.area IABS    (ABS)
                             47 ;--------------------------------------------------------
                             48 ; absolute external ram data
                             49 ;--------------------------------------------------------
                             50 	.area XABS    (ABS)
                             51 ;--------------------------------------------------------
                             52 ; external initialized ram data
                             53 ;--------------------------------------------------------
                             54 	.area XISEG
                             55 ;--------------------------------------------------------
                             56 ; extended address mode data
                             57 ;--------------------------------------------------------
                             58 	.area XSEG
   0000                      59 __mullonglong_PARM_1:
   0000                      60 	.ds 8
   0008                      61 __mullonglong_PARM_2:
   0008                      62 	.ds 8
   0010                      63 __mullonglong_ret_1_2:
   0010                      64 	.ds 8
   0018                      65 __mullonglong_l_2_3:
   0018                      66 	.ds 1
                             67 ;--------------------------------------------------------
                             68 ; global & static initialisations
                             69 ;--------------------------------------------------------
                             70 	.area HOME    (CODE)
                             71 	.area GSINIT  (CODE)
                             72 	.area GSFINAL (CODE)
                             73 	.area GSINIT  (CODE)
                             74 ;--------------------------------------------------------
                             75 ; Home
                             76 ;--------------------------------------------------------
                             77 	.area HOME    (CODE)
                             78 	.area HOME    (CODE)
                             79 ;--------------------------------------------------------
                             80 ; code
                             81 ;--------------------------------------------------------
                             82 	.area CSEG    (CODE)
                             83 ;------------------------------------------------------------
                             84 ;Allocation info for local variables in function '_mullonglong'
                             85 ;------------------------------------------------------------
                             86 ;sloc0                     Allocated with name '__mullonglong_sloc0_1_0'
                             87 ;sloc1                     Allocated with name '__mullonglong_sloc1_1_0'
                             88 ;sloc2                     Allocated with name '__mullonglong_sloc2_1_0'
                             89 ;sloc3                     Allocated with name '__mullonglong_sloc3_1_0'
                             90 ;ll                        Allocated with name '__mullonglong_PARM_1'
                             91 ;lr                        Allocated with name '__mullonglong_PARM_2'
                             92 ;ret                       Allocated with name '__mullonglong_ret_1_2'
                             93 ;i                         Allocated to registers 
                             94 ;j                         Allocated to registers 
                             95 ;l                         Allocated with name '__mullonglong_l_2_3'
                             96 ;r                         Allocated to registers x 
                             97 ;------------------------------------------------------------
                             98 ;../_mullonglong.c:35: long long _mullonglong(long long ll, long long lr)
                             99 ;	-----------------------------------------
                            100 ;	 function _mullonglong
                            101 ;	-----------------------------------------
                            102 ;	Register assignment might be sub-optimal.
                            103 ;	Stack space usage: 0 bytes.
   0000                     104 __mullonglong:
                            105 ;../_mullonglong.c:37: unsigned long long ret = 0ull;
   0000 8C            [ 1]  106 	clrh
   0001 5F            [ 1]  107 	clrx
   0002 96r00r10      [ 5]  108 	sthx	__mullonglong_ret_1_2
   0005 96r00r12      [ 5]  109 	sthx	(__mullonglong_ret_1_2 + 2)
   0008 96r00r14      [ 5]  110 	sthx	(__mullonglong_ret_1_2 + 4)
   000B 96r00r16      [ 5]  111 	sthx	(__mullonglong_ret_1_2 + 6)
                            112 ;../_mullonglong.c:40: for (i = 0; i < sizeof (long long); i++)
   000E BF*00         [ 3]  113 	stx	*__mullonglong_sloc0_1_0
   0010                     114 00106$:
                            115 ;../_mullonglong.c:42: unsigned char l = ll >> (i * 8);
   0010 B6*00         [ 3]  116 	lda	*__mullonglong_sloc0_1_0
   0012 AE 08         [ 2]  117 	ldx	#0x08
   0014 42            [ 5]  118 	mul
   0015 C7r00r00      [ 4]  119 	sta	__rrslonglong_PARM_2
   0018 32r00r00      [ 5]  120 	ldhx	__mullonglong_PARM_1
   001B 96r00r00      [ 5]  121 	sthx	__rrslonglong_PARM_1
   001E 32r00r02      [ 5]  122 	ldhx	(__mullonglong_PARM_1 + 2)
   0021 96r00r02      [ 5]  123 	sthx	(__rrslonglong_PARM_1 + 2)
   0024 32r00r04      [ 5]  124 	ldhx	(__mullonglong_PARM_1 + 4)
   0027 96r00r04      [ 5]  125 	sthx	(__rrslonglong_PARM_1 + 4)
   002A 32r00r06      [ 5]  126 	ldhx	(__mullonglong_PARM_1 + 6)
   002D 96r00r06      [ 5]  127 	sthx	(__rrslonglong_PARM_1 + 6)
   0030 CDr00r00      [ 6]  128 	jsr	__rrslonglong
   0033 B7*08         [ 3]  129 	sta	*(__mullonglong_sloc1_1_0 + 7)
   0035 BF*07         [ 3]  130 	stx	*(__mullonglong_sloc1_1_0 + 6)
   0037 4E*00*06      [ 6]  131 	mov	*___SDCC_hc08_ret2,*(__mullonglong_sloc1_1_0 + 5)
   003A 4E*00*05      [ 6]  132 	mov	*___SDCC_hc08_ret3,*(__mullonglong_sloc1_1_0 + 4)
   003D 4E*00*04      [ 6]  133 	mov	*___SDCC_hc08_ret4,*(__mullonglong_sloc1_1_0 + 3)
   0040 4E*00*03      [ 6]  134 	mov	*___SDCC_hc08_ret5,*(__mullonglong_sloc1_1_0 + 2)
   0043 4E*00*02      [ 6]  135 	mov	*___SDCC_hc08_ret6,*(__mullonglong_sloc1_1_0 + 1)
   0046 4E*00*01      [ 6]  136 	mov	*___SDCC_hc08_ret7,*__mullonglong_sloc1_1_0
   0049 B6*08         [ 3]  137 	lda	*(__mullonglong_sloc1_1_0 + 7)
   004B C7r00r18      [ 4]  138 	sta	__mullonglong_l_2_3
                            139 ;../_mullonglong.c:43: for(j = 0; (i + j) < sizeof (long long); j++)
   004E 6E 00*01      [ 4]  140 	mov	#0x00,*__mullonglong_sloc1_1_0
   0051                     141 00104$:
   0051 4E*00*0A      [ 6]  142 	mov	*__mullonglong_sloc0_1_0,*(__mullonglong_sloc2_1_0 + 1)
   0054 6E 00*09      [ 4]  143 	mov	#0x00,*__mullonglong_sloc2_1_0
   0057 B6*01         [ 3]  144 	lda	*__mullonglong_sloc1_1_0
   0059 5F            [ 1]  145 	clrx
   005A BB*0A         [ 3]  146 	add	*(__mullonglong_sloc2_1_0 + 1)
   005C B7*0A         [ 3]  147 	sta	*(__mullonglong_sloc2_1_0 + 1)
   005E 9F            [ 1]  148 	txa
   005F B9*09         [ 3]  149 	adc	*__mullonglong_sloc2_1_0
   0061 B7*09         [ 3]  150 	sta	*__mullonglong_sloc2_1_0
   0063 55*09         [ 4]  151 	ldhx	*__mullonglong_sloc2_1_0
   0065 65 00 08      [ 3]  152 	cphx	#0x0008
   0068 91 03         [ 3]  153 	blt	00128$
   006A CCr01r21      [ 4]  154 	jmp	00107$
   006D                     155 00128$:
                            156 ;../_mullonglong.c:45: unsigned char r = lr >> (j * 8);
   006D B6*01         [ 3]  157 	lda	*__mullonglong_sloc1_1_0
   006F AE 08         [ 2]  158 	ldx	#0x08
   0071 42            [ 5]  159 	mul
   0072 C7r00r00      [ 4]  160 	sta	__rrslonglong_PARM_2
   0075 32r00r08      [ 5]  161 	ldhx	__mullonglong_PARM_2
   0078 96r00r00      [ 5]  162 	sthx	__rrslonglong_PARM_1
   007B 32r00r0A      [ 5]  163 	ldhx	(__mullonglong_PARM_2 + 2)
   007E 96r00r02      [ 5]  164 	sthx	(__rrslonglong_PARM_1 + 2)
   0081 32r00r0C      [ 5]  165 	ldhx	(__mullonglong_PARM_2 + 4)
   0084 96r00r04      [ 5]  166 	sthx	(__rrslonglong_PARM_1 + 4)
   0087 32r00r0E      [ 5]  167 	ldhx	(__mullonglong_PARM_2 + 6)
   008A 96r00r06      [ 5]  168 	sthx	(__rrslonglong_PARM_1 + 6)
   008D CDr00r00      [ 6]  169 	jsr	__rrslonglong
   0090 B7*12         [ 3]  170 	sta	*(__mullonglong_sloc3_1_0 + 7)
   0092 BF*11         [ 3]  171 	stx	*(__mullonglong_sloc3_1_0 + 6)
   0094 4E*00*10      [ 6]  172 	mov	*___SDCC_hc08_ret2,*(__mullonglong_sloc3_1_0 + 5)
   0097 4E*00*0F      [ 6]  173 	mov	*___SDCC_hc08_ret3,*(__mullonglong_sloc3_1_0 + 4)
   009A 4E*00*0E      [ 6]  174 	mov	*___SDCC_hc08_ret4,*(__mullonglong_sloc3_1_0 + 3)
   009D 4E*00*0D      [ 6]  175 	mov	*___SDCC_hc08_ret5,*(__mullonglong_sloc3_1_0 + 2)
   00A0 4E*00*0C      [ 6]  176 	mov	*___SDCC_hc08_ret6,*(__mullonglong_sloc3_1_0 + 1)
   00A3 4E*00*0B      [ 6]  177 	mov	*___SDCC_hc08_ret7,*__mullonglong_sloc3_1_0
   00A6 BE*12         [ 3]  178 	ldx	*(__mullonglong_sloc3_1_0 + 7)
                            179 ;../_mullonglong.c:46: ret += (unsigned long long)((unsigned short)(l * r)) << ((i + j) * 8);
   00A8 C6r00r18      [ 4]  180 	lda	__mullonglong_l_2_3
   00AB 42            [ 5]  181 	mul
   00AC 89            [ 2]  182 	pshx
   00AD 8A            [ 3]  183 	pulh
   00AE 97            [ 1]  184 	tax
   00AF CFr00r07      [ 4]  185 	stx	(__rlulonglong_PARM_1 + 7)
   00B2 8B            [ 2]  186 	pshh
   00B3 86            [ 3]  187 	pula
   00B4 C7r00r06      [ 4]  188 	sta	(__rlulonglong_PARM_1 + 6)
   00B7 4F            [ 1]  189 	clra
   00B8 C7r00r05      [ 4]  190 	sta	(__rlulonglong_PARM_1 + 5)
   00BB C7r00r04      [ 4]  191 	sta	(__rlulonglong_PARM_1 + 4)
   00BE C7r00r03      [ 4]  192 	sta	(__rlulonglong_PARM_1 + 3)
   00C1 C7r00r02      [ 4]  193 	sta	(__rlulonglong_PARM_1 + 2)
   00C4 C7r00r01      [ 4]  194 	sta	(__rlulonglong_PARM_1 + 1)
   00C7 C7r00r00      [ 4]  195 	sta	__rlulonglong_PARM_1
   00CA B6*0A         [ 3]  196 	lda	*(__mullonglong_sloc2_1_0 + 1)
   00CC 48            [ 1]  197 	lsla	
   00CD 48            [ 1]  198 	lsla	
   00CE 48            [ 1]  199 	lsla	
   00CF C7r00r00      [ 4]  200 	sta	__rlulonglong_PARM_2
   00D2 CDr00r00      [ 6]  201 	jsr	__rlulonglong
   00D5 B7*12         [ 3]  202 	sta	*(__mullonglong_sloc3_1_0 + 7)
   00D7 BF*11         [ 3]  203 	stx	*(__mullonglong_sloc3_1_0 + 6)
   00D9 4E*00*10      [ 6]  204 	mov	*___SDCC_hc08_ret2,*(__mullonglong_sloc3_1_0 + 5)
   00DC 4E*00*0F      [ 6]  205 	mov	*___SDCC_hc08_ret3,*(__mullonglong_sloc3_1_0 + 4)
   00DF 4E*00*0E      [ 6]  206 	mov	*___SDCC_hc08_ret4,*(__mullonglong_sloc3_1_0 + 3)
   00E2 4E*00*0D      [ 6]  207 	mov	*___SDCC_hc08_ret5,*(__mullonglong_sloc3_1_0 + 2)
   00E5 4E*00*0C      [ 6]  208 	mov	*___SDCC_hc08_ret6,*(__mullonglong_sloc3_1_0 + 1)
   00E8 4E*00*0B      [ 6]  209 	mov	*___SDCC_hc08_ret7,*__mullonglong_sloc3_1_0
   00EB 45r00r10      [ 3]  210 	ldhx	#__mullonglong_ret_1_2
   00EE E6 07         [ 3]  211 	lda	7,x
   00F0 BB*12         [ 3]  212 	add	*(__mullonglong_sloc3_1_0 + 7)
   00F2 E7 07         [ 3]  213 	sta	7,x
   00F4 E6 06         [ 3]  214 	lda	6,x
   00F6 B9*11         [ 3]  215 	adc	*(__mullonglong_sloc3_1_0 + 6)
   00F8 E7 06         [ 3]  216 	sta	6,x
   00FA E6 05         [ 3]  217 	lda	5,x
   00FC B9*10         [ 3]  218 	adc	*(__mullonglong_sloc3_1_0 + 5)
   00FE E7 05         [ 3]  219 	sta	5,x
   0100 E6 04         [ 3]  220 	lda	4,x
   0102 B9*0F         [ 3]  221 	adc	*(__mullonglong_sloc3_1_0 + 4)
   0104 E7 04         [ 3]  222 	sta	4,x
   0106 E6 03         [ 3]  223 	lda	3,x
   0108 B9*0E         [ 3]  224 	adc	*(__mullonglong_sloc3_1_0 + 3)
   010A E7 03         [ 3]  225 	sta	3,x
   010C E6 02         [ 3]  226 	lda	2,x
   010E B9*0D         [ 3]  227 	adc	*(__mullonglong_sloc3_1_0 + 2)
   0110 E7 02         [ 3]  228 	sta	2,x
   0112 E6 01         [ 3]  229 	lda	1,x
   0114 B9*0C         [ 3]  230 	adc	*(__mullonglong_sloc3_1_0 + 1)
   0116 E7 01         [ 3]  231 	sta	1,x
   0118 F6            [ 3]  232 	lda	,x
   0119 B9*0B         [ 3]  233 	adc	*__mullonglong_sloc3_1_0
   011B F7            [ 2]  234 	sta	,x
                            235 ;../_mullonglong.c:43: for(j = 0; (i + j) < sizeof (long long); j++)
   011C 3C*01         [ 5]  236 	inc	*__mullonglong_sloc1_1_0
   011E CCr00r51      [ 4]  237 	jmp	00104$
   0121                     238 00107$:
                            239 ;../_mullonglong.c:40: for (i = 0; i < sizeof (long long); i++)
   0121 3C*00         [ 5]  240 	inc	*__mullonglong_sloc0_1_0
   0123 B6*00         [ 3]  241 	lda	*__mullonglong_sloc0_1_0
   0125 A1 08         [ 2]  242 	cmp	#0x08
   0127 24 03         [ 3]  243 	bcc	00129$
   0129 CCr00r10      [ 4]  244 	jmp	00106$
   012C                     245 00129$:
                            246 ;../_mullonglong.c:50: return(ret);
   012C C6r00r10      [ 4]  247 	lda	__mullonglong_ret_1_2
   012F B7*00         [ 3]  248 	sta	*___SDCC_hc08_ret7
   0131 C6r00r11      [ 4]  249 	lda	(__mullonglong_ret_1_2 + 1)
   0134 B7*00         [ 3]  250 	sta	*___SDCC_hc08_ret6
   0136 C6r00r12      [ 4]  251 	lda	(__mullonglong_ret_1_2 + 2)
   0139 B7*00         [ 3]  252 	sta	*___SDCC_hc08_ret5
   013B C6r00r13      [ 4]  253 	lda	(__mullonglong_ret_1_2 + 3)
   013E B7*00         [ 3]  254 	sta	*___SDCC_hc08_ret4
   0140 C6r00r14      [ 4]  255 	lda	(__mullonglong_ret_1_2 + 4)
   0143 B7*00         [ 3]  256 	sta	*___SDCC_hc08_ret3
   0145 C6r00r15      [ 4]  257 	lda	(__mullonglong_ret_1_2 + 5)
   0148 B7*00         [ 3]  258 	sta	*___SDCC_hc08_ret2
   014A CEr00r16      [ 4]  259 	ldx	(__mullonglong_ret_1_2 + 6)
   014D C6r00r17      [ 4]  260 	lda	(__mullonglong_ret_1_2 + 7)
   0150 81            [ 6]  261 	rts
                            262 	.area CSEG    (CODE)
                            263 	.area CONST   (CODE)
                            264 	.area XINIT   (CODE)
                            265 	.area CABS    (ABS,CODE)
