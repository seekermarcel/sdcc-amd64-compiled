                              1 ;--------------------------------------------------------
                              2 ; File Created by SDCC : free open source ANSI-C Compiler
                              3 ; Version 3.5.0 #9253 (Apr  4 2022) (Linux)
                              4 ; This file was generated Mon Apr  4 14:16:47 2022
                              5 ;--------------------------------------------------------
                              6 	.module atoi
                              7 	.optsdcc -mgbz80
                              8 	
                              9 ;--------------------------------------------------------
                             10 ; Public variables in this module
                             11 ;--------------------------------------------------------
                             12 	.globl _atoi
                             13 ;--------------------------------------------------------
                             14 ; ram data
                             15 ;--------------------------------------------------------
                             16 	.area _DATA
                             17 ;--------------------------------------------------------
                             18 ; absolute external ram data
                             19 ;--------------------------------------------------------
                             20 	.area _DABS (ABS)
                             21 ;--------------------------------------------------------
                             22 ; global & static initialisations
                             23 ;--------------------------------------------------------
                             24 	.area _HOME
                             25 	.area _GSINIT
                             26 	.area _GSFINAL
                             27 	.area _GSINIT
                             28 ;--------------------------------------------------------
                             29 ; Home
                             30 ;--------------------------------------------------------
                             31 	.area _HOME
                             32 	.area _HOME
                             33 ;--------------------------------------------------------
                             34 ; code
                             35 ;--------------------------------------------------------
                             36 	.area _CODE
                             37 ;../atoi.c:34: int atoi(const char *nptr)
                             38 ;	---------------------------------
                             39 ; Function atoi
                             40 ; ---------------------------------
   0000                      41 _atoi::
   0000 E8 F5                42 	add	sp, #-11
                             43 ;../atoi.c:36: int ret = 0;
   0002 F8 03                44 	ldhl	sp,#3
   0004 36 00                45 	ld	(hl),#0x00
   0006 23                   46 	inc	hl
   0007 36 00                47 	ld	(hl),#0x00
                             48 ;../atoi.c:39: while (isblank (*nptr))
   0009 F8 0E                49 	ldhl	sp,#14
   000B 2B                   50 	dec	hl
   000C 4E                   51 	ld	c,(hl)
   000D 23                   52 	inc	hl
   000E 46                   53 	ld	b,(hl)
   000F                      54 00101$:
   000F 0A                   55 	ld	a,(bc)
   0010 57                   56 	ld	d,a
   0011 F8 00                57 	ldhl	sp,#0
   0013 72                   58 	ld	(hl),d
   0014 7A                   59 	ld	a,d
   0015 17                   60 	rla
   0016 9F                   61 	sbc	a, a
   0017 23                   62 	inc	hl
                             63 ;./../../include/ctype.h:53: return ((unsigned char)c == ' ' || (unsigned char)c == '\t');
   0018 32                   64 	ld	(hl-),a
   0019 5E                   65 	ld	e,(hl)
   001A 7B                   66 	ld	a,e
   001B FE 20                67 	cp	a,#0x20
   001D 28 04                68 	jr	Z,00115$
   001F D6 09                69 	sub	a, #0x09
   0021 20 03                70 	jr	NZ,00131$
   0023                      71 00115$:
                             72 ;../atoi.c:40: nptr++;
   0023 03                   73 	inc	bc
   0024 18 E9                74 	jr	00101$
   0026                      75 00131$:
   0026 F8 0D                76 	ldhl	sp,#13
   0028 71                   77 	ld	(hl),c
   0029 23                   78 	inc	hl
   002A 70                   79 	ld	(hl),b
                             80 ;../atoi.c:42: neg = (*nptr == '-');
   002B 7A                   81 	ld	a,d
   002C D6 2D                82 	sub	a, #0x2D
   002E 20 04                83 	jr	NZ,00157$
   0030 3E 01                84 	ld	a,#0x01
   0032 18 01                85 	jr	00158$
   0034                      86 00157$:
   0034 AF                   87 	xor	a,a
   0035                      88 00158$:
   0035 F8 02                89 	ldhl	sp,#2
   0037 77                   90 	ld	(hl),a
                             91 ;../atoi.c:44: if (*nptr == '-' || *nptr == '+')
   0038 CB 47                92 	bit	0,a
   003A 20 05                93 	jr	NZ,00104$
   003C 7A                   94 	ld	a,d
   003D D6 2B                95 	sub	a, #0x2B
   003F 20 06                96 	jr	NZ,00129$
   0041                      97 00104$:
                             98 ;../atoi.c:45: nptr++;
   0041 03                   99 	inc	bc
   0042 F8 0D               100 	ldhl	sp,#13
   0044 71                  101 	ld	(hl),c
   0045 23                  102 	inc	hl
   0046 70                  103 	ld	(hl),b
                            104 ;../atoi.c:47: while (isdigit (*nptr))
   0047                     105 00129$:
   0047 F8 0D               106 	ldhl	sp,#13
   0049 2A                  107 	ld	a,(hl+)
   004A 5E                  108 	ld	e, (hl)
   004B F8 07               109 	ldhl	sp,#7
   004D 22                  110 	ld	(hl+),a
   004E 73                  111 	ld	(hl),e
   004F                     112 00107$:
   004F F8 08               113 	ldhl	sp,#8
   0051 2B                  114 	dec	hl
   0052 5E                  115 	ld	e,(hl)
   0053 23                  116 	inc	hl
   0054 56                  117 	ld	d,(hl)
   0055 1A                  118 	ld	a,(de)
   0056 4F                  119 	ld	c,a
   0057 17                  120 	rla
   0058 9F                  121 	sbc	a, a
   0059 47                  122 	ld	b,a
   005A 51                  123 	ld	d,c
   005B 58                  124 	ld	e,b
                            125 ;./../../include/ctype.h:62: return ((unsigned char)c >= '0' && (unsigned char)c <= '9');
   005C 2B                  126 	dec	hl
   005D 2B                  127 	dec	hl
   005E 72                  128 	ld	(hl),d
   005F 7E                  129 	ld	a,(hl)
   0060 D6 30               130 	sub	a, #0x30
   0062 DAr9Cr00            131 	jp	C,00109$
   0065 3E 39               132 	ld	a,#0x39
   0067 96                  133 	sub	a, (hl)
   0068 DAr9Cr00            134 	jp	C,00109$
                            135 ;../atoi.c:48: ret = ret * 10 + (*(nptr++) - '0');
   006B 2B                  136 	dec	hl
   006C 2B                  137 	dec	hl
   006D 2B                  138 	dec	hl
   006E 5E                  139 	ld	e,(hl)
   006F 23                  140 	inc	hl
   0070 56                  141 	ld	d,(hl)
   0071 6B                  142 	ld	l, e
   0072 62                  143 	ld	h, d
   0073 29                  144 	add	hl, hl
   0074 29                  145 	add	hl, hl
   0075 19                  146 	add	hl, de
   0076 29                  147 	add	hl, hl
   0077 7D                  148 	ld	a,l
   0078 54                  149 	ld	d,h
   0079 F8 09               150 	ldhl	sp,#9
   007B 22                  151 	ld	(hl+),a
   007C 72                  152 	ld	(hl),d
   007D F8 07               153 	ldhl	sp,#7
   007F 34                  154 	inc	(hl)
   0080 20 02               155 	jr	NZ,00161$
   0082 23                  156 	inc	hl
   0083 34                  157 	inc	(hl)
   0084                     158 00161$:
   0084 79                  159 	ld	a,c
   0085 C6 D0               160 	add	a,#0xD0
   0087 4F                  161 	ld	c,a
   0088 78                  162 	ld	a,b
   0089 CE FF               163 	adc	a,#0xFF
   008B 47                  164 	ld	b,a
   008C F8 09               165 	ldhl	sp,#9
   008E 2A                  166 	ld	a,(hl+)
   008F 66                  167 	ld	h,(hl)
   0090 6F                  168 	ld	l,a
   0091 09                  169 	add	hl,bc
   0092 4D                  170 	ld	c,l
   0093 44                  171 	ld	b,h
   0094 F8 03               172 	ldhl	sp,#3
   0096 71                  173 	ld	(hl),c
   0097 23                  174 	inc	hl
   0098 70                  175 	ld	(hl),b
   0099 C3r4Fr00            176 	jp	00107$
   009C                     177 00109$:
                            178 ;../atoi.c:50: return (neg ? -ret : ret); // Since -INT_MIN is INT_MIN in sdcc, the result value always turns out ok.
   009C F8 02               179 	ldhl	sp,#2
   009E CB 46               180 	bit	0,(hl)
   00A0 28 0B               181 	jr	Z,00120$
   00A2 AF                  182 	xor	a, a
   00A3 23                  183 	inc	hl
   00A4 96                  184 	sub	a, (hl)
   00A5 47                  185 	ld	b,a
   00A6 3E 00               186 	ld	a, #0x00
   00A8 23                  187 	inc	hl
   00A9 9E                  188 	sbc	a, (hl)
   00AA 4F                  189 	ld	c,a
   00AB 18 05               190 	jr	00121$
   00AD                     191 00120$:
   00AD F8 03               192 	ldhl	sp,#3
   00AF 46                  193 	ld	b,(hl)
   00B0 23                  194 	inc	hl
   00B1 4E                  195 	ld	c,(hl)
   00B2                     196 00121$:
   00B2 58                  197 	ld	e, b
   00B3 51                  198 	ld	d, c
   00B4 E8 0B               199 	add	sp, #11
   00B6 C9                  200 	ret
                            201 	.area _CODE
                            202 	.area _CABS (ABS)
