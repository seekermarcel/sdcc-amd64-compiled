                                      1 ;--------------------------------------------------------
                                      2 ; File Created by SDCC : free open source ANSI-C Compiler
                                      3 ; Version 3.5.0 #9253 (Apr  4 2022) (Linux)
                                      4 ; This file was generated Mon Apr  4 14:10:49 2022
                                      5 ;--------------------------------------------------------
                                      6 	.module atan2f
                                      7 	.optsdcc -mmcs51 --model-small
                                      8 	
                                      9 ;--------------------------------------------------------
                                     10 ; Public variables in this module
                                     11 ;--------------------------------------------------------
                                     12 	.globl _fabsf
                                     13 	.globl _atanf
                                     14 	.globl _atan2f
                                     15 ;--------------------------------------------------------
                                     16 ; special function registers
                                     17 ;--------------------------------------------------------
                                     18 	.area RSEG    (ABS,DATA)
      000000                         19 	.org 0x0000
                                     20 ;--------------------------------------------------------
                                     21 ; special function bits
                                     22 ;--------------------------------------------------------
                                     23 	.area RSEG    (ABS,DATA)
      000000                         24 	.org 0x0000
                                     25 ;--------------------------------------------------------
                                     26 ; overlayable register banks
                                     27 ;--------------------------------------------------------
                                     28 	.area REG_BANK_0	(REL,OVR,DATA)
      000000                         29 	.ds 8
                                     30 ;--------------------------------------------------------
                                     31 ; internal ram data
                                     32 ;--------------------------------------------------------
                                     33 	.area DSEG    (DATA)
                                     34 ;--------------------------------------------------------
                                     35 ; overlayable items in internal ram 
                                     36 ;--------------------------------------------------------
                                     37 ;--------------------------------------------------------
                                     38 ; indirectly addressable internal ram data
                                     39 ;--------------------------------------------------------
                                     40 	.area ISEG    (DATA)
                                     41 ;--------------------------------------------------------
                                     42 ; absolute internal ram data
                                     43 ;--------------------------------------------------------
                                     44 	.area IABS    (ABS,DATA)
                                     45 	.area IABS    (ABS,DATA)
                                     46 ;--------------------------------------------------------
                                     47 ; bit data
                                     48 ;--------------------------------------------------------
                                     49 	.area BSEG    (BIT)
                                     50 ;--------------------------------------------------------
                                     51 ; paged external ram data
                                     52 ;--------------------------------------------------------
                                     53 	.area PSEG    (PAG,XDATA)
                                     54 ;--------------------------------------------------------
                                     55 ; external ram data
                                     56 ;--------------------------------------------------------
                                     57 	.area XSEG    (XDATA)
                                     58 ;--------------------------------------------------------
                                     59 ; absolute external ram data
                                     60 ;--------------------------------------------------------
                                     61 	.area XABS    (ABS,XDATA)
                                     62 ;--------------------------------------------------------
                                     63 ; external initialized ram data
                                     64 ;--------------------------------------------------------
                                     65 	.area XISEG   (XDATA)
                                     66 	.area HOME    (CODE)
                                     67 	.area GSINIT0 (CODE)
                                     68 	.area GSINIT1 (CODE)
                                     69 	.area GSINIT2 (CODE)
                                     70 	.area GSINIT3 (CODE)
                                     71 	.area GSINIT4 (CODE)
                                     72 	.area GSINIT5 (CODE)
                                     73 	.area GSINIT  (CODE)
                                     74 	.area GSFINAL (CODE)
                                     75 	.area CSEG    (CODE)
                                     76 ;--------------------------------------------------------
                                     77 ; global & static initialisations
                                     78 ;--------------------------------------------------------
                                     79 	.area HOME    (CODE)
                                     80 	.area GSINIT  (CODE)
                                     81 	.area GSFINAL (CODE)
                                     82 	.area GSINIT  (CODE)
                                     83 ;--------------------------------------------------------
                                     84 ; Home
                                     85 ;--------------------------------------------------------
                                     86 	.area HOME    (CODE)
                                     87 	.area HOME    (CODE)
                                     88 ;--------------------------------------------------------
                                     89 ; code
                                     90 ;--------------------------------------------------------
                                     91 	.area CSEG    (CODE)
                                     92 ;------------------------------------------------------------
                                     93 ;Allocation info for local variables in function 'atan2f'
                                     94 ;------------------------------------------------------------
                                     95 ;y                         Allocated to stack - _bp -6
                                     96 ;x                         Allocated to stack - _bp +1
                                     97 ;r                         Allocated to stack - _bp +9
                                     98 ;sloc0                     Allocated to stack - _bp +5
                                     99 ;------------------------------------------------------------
                                    100 ;	atan2f.c:34: float atan2f(float x, float y)
                                    101 ;	-----------------------------------------
                                    102 ;	 function atan2f
                                    103 ;	-----------------------------------------
      000000                        104 _atan2f:
                           000007   105 	ar7 = 0x07
                           000006   106 	ar6 = 0x06
                           000005   107 	ar5 = 0x05
                           000004   108 	ar4 = 0x04
                           000003   109 	ar3 = 0x03
                           000002   110 	ar2 = 0x02
                           000001   111 	ar1 = 0x01
                           000000   112 	ar0 = 0x00
      000000 C0*00            [24]  113 	push	_bp
      000002 85 81*00         [24]  114 	mov	_bp,sp
      000005 C0 82            [24]  115 	push	dpl
      000007 C0 83            [24]  116 	push	dph
      000009 C0 F0            [24]  117 	push	b
      00000B C0 E0            [24]  118 	push	acc
      00000D E5 81            [12]  119 	mov	a,sp
      00000F 24 08            [12]  120 	add	a,#0x08
      000011 F5 81            [12]  121 	mov	sp,a
                                    122 ;	atan2f.c:38: if ((x==0.0) && (y==0.0))
      000013 A8*00            [24]  123 	mov	r0,_bp
      000015 08               [12]  124 	inc	r0
      000016 86 F0            [24]  125 	mov	b,@r0
      000018 08               [12]  126 	inc	r0
      000019 E6               [12]  127 	mov	a,@r0
      00001A 42 F0            [12]  128 	orl	b,a
      00001C 08               [12]  129 	inc	r0
      00001D E6               [12]  130 	mov	a,@r0
      00001E 42 F0            [12]  131 	orl	b,a
      000020 08               [12]  132 	inc	r0
      000021 E6               [12]  133 	mov	a,@r0
      000022 54 7F            [12]  134 	anl	a,#0x7F
      000024 45 F0            [12]  135 	orl	a,b
      000026 70 25            [24]  136 	jnz	00102$
      000028 E5*00            [12]  137 	mov	a,_bp
      00002A 24 FA            [12]  138 	add	a,#0xfa
      00002C F8               [12]  139 	mov	r0,a
      00002D 86 F0            [24]  140 	mov	b,@r0
      00002F 08               [12]  141 	inc	r0
      000030 E6               [12]  142 	mov	a,@r0
      000031 42 F0            [12]  143 	orl	b,a
      000033 08               [12]  144 	inc	r0
      000034 E6               [12]  145 	mov	a,@r0
      000035 42 F0            [12]  146 	orl	b,a
      000037 08               [12]  147 	inc	r0
      000038 E6               [12]  148 	mov	a,@r0
      000039 54 7F            [12]  149 	anl	a,#0x7F
      00003B 45 F0            [12]  150 	orl	a,b
                                    151 ;	atan2f.c:40: errno=EDOM;
      00003D 70 0E            [24]  152 	jnz	00102$
      00003F 75*00 21         [24]  153 	mov	_errno,#0x21
      000042 F5*01            [12]  154 	mov	(_errno + 1),a
                                    155 ;	atan2f.c:41: return 0.0;
      000044 90 00 00         [24]  156 	mov	dptr,#(0x00&0x00ff)
      000047 E4               [12]  157 	clr	a
      000048 F5 F0            [12]  158 	mov	b,a
      00004A 02r02r69         [24]  159 	ljmp	00109$
      00004D                        160 00102$:
                                    161 ;	atan2f.c:44: if(fabsf(y)>=fabsf(x))
      00004D E5*00            [12]  162 	mov	a,_bp
      00004F 24 FA            [12]  163 	add	a,#0xfa
      000051 F8               [12]  164 	mov	r0,a
      000052 86 82            [24]  165 	mov	dpl,@r0
      000054 08               [12]  166 	inc	r0
      000055 86 83            [24]  167 	mov	dph,@r0
      000057 08               [12]  168 	inc	r0
      000058 86 F0            [24]  169 	mov	b,@r0
      00005A 08               [12]  170 	inc	r0
      00005B E6               [12]  171 	mov	a,@r0
      00005C 12r00r00         [24]  172 	lcall	_fabsf
      00005F C8               [12]  173 	xch	a,r0
      000060 E5*00            [12]  174 	mov	a,_bp
      000062 24 05            [12]  175 	add	a,#0x05
      000064 C8               [12]  176 	xch	a,r0
      000065 A6 82            [24]  177 	mov	@r0,dpl
      000067 08               [12]  178 	inc	r0
      000068 A6 83            [24]  179 	mov	@r0,dph
      00006A 08               [12]  180 	inc	r0
      00006B A6 F0            [24]  181 	mov	@r0,b
      00006D 08               [12]  182 	inc	r0
      00006E F6               [12]  183 	mov	@r0,a
      00006F A8*00            [24]  184 	mov	r0,_bp
      000071 08               [12]  185 	inc	r0
      000072 86 82            [24]  186 	mov	dpl,@r0
      000074 08               [12]  187 	inc	r0
      000075 86 83            [24]  188 	mov	dph,@r0
      000077 08               [12]  189 	inc	r0
      000078 86 F0            [24]  190 	mov	b,@r0
      00007A 08               [12]  191 	inc	r0
      00007B E6               [12]  192 	mov	a,@r0
      00007C 12r00r00         [24]  193 	lcall	_fabsf
      00007F AC 82            [24]  194 	mov	r4,dpl
      000081 AD 83            [24]  195 	mov	r5,dph
      000083 AE F0            [24]  196 	mov	r6,b
      000085 FF               [12]  197 	mov	r7,a
      000086 C0 04            [24]  198 	push	ar4
      000088 C0 05            [24]  199 	push	ar5
      00008A C0 06            [24]  200 	push	ar6
      00008C C0 07            [24]  201 	push	ar7
      00008E E5*00            [12]  202 	mov	a,_bp
      000090 24 05            [12]  203 	add	a,#0x05
      000092 F8               [12]  204 	mov	r0,a
      000093 86 82            [24]  205 	mov	dpl,@r0
      000095 08               [12]  206 	inc	r0
      000096 86 83            [24]  207 	mov	dph,@r0
      000098 08               [12]  208 	inc	r0
      000099 86 F0            [24]  209 	mov	b,@r0
      00009B 08               [12]  210 	inc	r0
      00009C E6               [12]  211 	mov	a,@r0
      00009D 12r00r00         [24]  212 	lcall	___fslt
      0000A0 AF 82            [24]  213 	mov	r7,dpl
      0000A2 E5 81            [12]  214 	mov	a,sp
      0000A4 24 FC            [12]  215 	add	a,#0xfc
      0000A6 F5 81            [12]  216 	mov	sp,a
      0000A8 EF               [12]  217 	mov	a,r7
      0000A9 60 03            [24]  218 	jz	00135$
      0000AB 02r01r99         [24]  219 	ljmp	00107$
      0000AE                        220 00135$:
                                    221 ;	atan2f.c:46: r=atanf(x/y);
      0000AE E5*00            [12]  222 	mov	a,_bp
      0000B0 24 FA            [12]  223 	add	a,#0xfa
      0000B2 F8               [12]  224 	mov	r0,a
      0000B3 E6               [12]  225 	mov	a,@r0
      0000B4 C0 E0            [24]  226 	push	acc
      0000B6 08               [12]  227 	inc	r0
      0000B7 E6               [12]  228 	mov	a,@r0
      0000B8 C0 E0            [24]  229 	push	acc
      0000BA 08               [12]  230 	inc	r0
      0000BB E6               [12]  231 	mov	a,@r0
      0000BC C0 E0            [24]  232 	push	acc
      0000BE 08               [12]  233 	inc	r0
      0000BF E6               [12]  234 	mov	a,@r0
      0000C0 C0 E0            [24]  235 	push	acc
      0000C2 A8*00            [24]  236 	mov	r0,_bp
      0000C4 08               [12]  237 	inc	r0
      0000C5 86 82            [24]  238 	mov	dpl,@r0
      0000C7 08               [12]  239 	inc	r0
      0000C8 86 83            [24]  240 	mov	dph,@r0
      0000CA 08               [12]  241 	inc	r0
      0000CB 86 F0            [24]  242 	mov	b,@r0
      0000CD 08               [12]  243 	inc	r0
      0000CE E6               [12]  244 	mov	a,@r0
      0000CF 12r00r00         [24]  245 	lcall	___fsdiv
      0000D2 AC 82            [24]  246 	mov	r4,dpl
      0000D4 AD 83            [24]  247 	mov	r5,dph
      0000D6 AE F0            [24]  248 	mov	r6,b
      0000D8 FF               [12]  249 	mov	r7,a
      0000D9 E5 81            [12]  250 	mov	a,sp
      0000DB 24 FC            [12]  251 	add	a,#0xfc
      0000DD F5 81            [12]  252 	mov	sp,a
      0000DF 8C 82            [24]  253 	mov	dpl,r4
      0000E1 8D 83            [24]  254 	mov	dph,r5
      0000E3 8E F0            [24]  255 	mov	b,r6
      0000E5 EF               [12]  256 	mov	a,r7
      0000E6 12r00r00         [24]  257 	lcall	_atanf
      0000E9 AC 82            [24]  258 	mov	r4,dpl
      0000EB AD 83            [24]  259 	mov	r5,dph
      0000ED AE F0            [24]  260 	mov	r6,b
      0000EF FF               [12]  261 	mov	r7,a
      0000F0 E5*00            [12]  262 	mov	a,_bp
      0000F2 24 09            [12]  263 	add	a,#0x09
      0000F4 F8               [12]  264 	mov	r0,a
      0000F5 A6 04            [24]  265 	mov	@r0,ar4
      0000F7 08               [12]  266 	inc	r0
      0000F8 A6 05            [24]  267 	mov	@r0,ar5
      0000FA 08               [12]  268 	inc	r0
      0000FB A6 06            [24]  269 	mov	@r0,ar6
      0000FD 08               [12]  270 	inc	r0
      0000FE A6 07            [24]  271 	mov	@r0,ar7
                                    272 ;	atan2f.c:47: if(y<0.0) r+=(x>=0?PI:-PI);
      000100 E4               [12]  273 	clr	a
      000101 C0 E0            [24]  274 	push	acc
      000103 C0 E0            [24]  275 	push	acc
      000105 C0 E0            [24]  276 	push	acc
      000107 C0 E0            [24]  277 	push	acc
      000109 E5*00            [12]  278 	mov	a,_bp
      00010B 24 FA            [12]  279 	add	a,#0xfa
      00010D F8               [12]  280 	mov	r0,a
      00010E 86 82            [24]  281 	mov	dpl,@r0
      000110 08               [12]  282 	inc	r0
      000111 86 83            [24]  283 	mov	dph,@r0
      000113 08               [12]  284 	inc	r0
      000114 86 F0            [24]  285 	mov	b,@r0
      000116 08               [12]  286 	inc	r0
      000117 E6               [12]  287 	mov	a,@r0
      000118 12r00r00         [24]  288 	lcall	___fslt
      00011B AB 82            [24]  289 	mov	r3,dpl
      00011D E5 81            [12]  290 	mov	a,sp
      00011F 24 FC            [12]  291 	add	a,#0xfc
      000121 F5 81            [12]  292 	mov	sp,a
      000123 EB               [12]  293 	mov	a,r3
      000124 70 03            [24]  294 	jnz	00136$
      000126 02r02r5A         [24]  295 	ljmp	00108$
      000129                        296 00136$:
      000129 E4               [12]  297 	clr	a
      00012A C0 E0            [24]  298 	push	acc
      00012C C0 E0            [24]  299 	push	acc
      00012E C0 E0            [24]  300 	push	acc
      000130 C0 E0            [24]  301 	push	acc
      000132 A8*00            [24]  302 	mov	r0,_bp
      000134 08               [12]  303 	inc	r0
      000135 86 82            [24]  304 	mov	dpl,@r0
      000137 08               [12]  305 	inc	r0
      000138 86 83            [24]  306 	mov	dph,@r0
      00013A 08               [12]  307 	inc	r0
      00013B 86 F0            [24]  308 	mov	b,@r0
      00013D 08               [12]  309 	inc	r0
      00013E E6               [12]  310 	mov	a,@r0
      00013F 12r00r00         [24]  311 	lcall	___fslt
      000142 AB 82            [24]  312 	mov	r3,dpl
      000144 E5 81            [12]  313 	mov	a,sp
      000146 24 FC            [12]  314 	add	a,#0xfc
      000148 F5 81            [12]  315 	mov	sp,a
      00014A EB               [12]  316 	mov	a,r3
      00014B 70 0A            [24]  317 	jnz	00111$
      00014D 7A DB            [12]  318 	mov	r2,#0xDB
      00014F 7B 0F            [12]  319 	mov	r3,#0x0F
      000151 7E 49            [12]  320 	mov	r6,#0x49
      000153 7F 40            [12]  321 	mov	r7,#0x40
      000155 80 08            [24]  322 	sjmp	00112$
      000157                        323 00111$:
      000157 7A DB            [12]  324 	mov	r2,#0xDB
      000159 7B 0F            [12]  325 	mov	r3,#0x0F
      00015B 7E 49            [12]  326 	mov	r6,#0x49
      00015D 7F C0            [12]  327 	mov	r7,#0xC0
      00015F                        328 00112$:
      00015F C0 02            [24]  329 	push	ar2
      000161 C0 03            [24]  330 	push	ar3
      000163 C0 06            [24]  331 	push	ar6
      000165 C0 07            [24]  332 	push	ar7
      000167 E5*00            [12]  333 	mov	a,_bp
      000169 24 09            [12]  334 	add	a,#0x09
      00016B F8               [12]  335 	mov	r0,a
      00016C 86 82            [24]  336 	mov	dpl,@r0
      00016E 08               [12]  337 	inc	r0
      00016F 86 83            [24]  338 	mov	dph,@r0
      000171 08               [12]  339 	inc	r0
      000172 86 F0            [24]  340 	mov	b,@r0
      000174 08               [12]  341 	inc	r0
      000175 E6               [12]  342 	mov	a,@r0
      000176 12r00r00         [24]  343 	lcall	___fsadd
      000179 AC 82            [24]  344 	mov	r4,dpl
      00017B AD 83            [24]  345 	mov	r5,dph
      00017D AE F0            [24]  346 	mov	r6,b
      00017F FF               [12]  347 	mov	r7,a
      000180 E5 81            [12]  348 	mov	a,sp
      000182 24 FC            [12]  349 	add	a,#0xfc
      000184 F5 81            [12]  350 	mov	sp,a
      000186 E5*00            [12]  351 	mov	a,_bp
      000188 24 09            [12]  352 	add	a,#0x09
      00018A F8               [12]  353 	mov	r0,a
      00018B A6 04            [24]  354 	mov	@r0,ar4
      00018D 08               [12]  355 	inc	r0
      00018E A6 05            [24]  356 	mov	@r0,ar5
      000190 08               [12]  357 	inc	r0
      000191 A6 06            [24]  358 	mov	@r0,ar6
      000193 08               [12]  359 	inc	r0
      000194 A6 07            [24]  360 	mov	@r0,ar7
      000196 02r02r5A         [24]  361 	ljmp	00108$
      000199                        362 00107$:
                                    363 ;	atan2f.c:51: r=-atanf(y/x);
      000199 A8*00            [24]  364 	mov	r0,_bp
      00019B 08               [12]  365 	inc	r0
      00019C E6               [12]  366 	mov	a,@r0
      00019D C0 E0            [24]  367 	push	acc
      00019F 08               [12]  368 	inc	r0
      0001A0 E6               [12]  369 	mov	a,@r0
      0001A1 C0 E0            [24]  370 	push	acc
      0001A3 08               [12]  371 	inc	r0
      0001A4 E6               [12]  372 	mov	a,@r0
      0001A5 C0 E0            [24]  373 	push	acc
      0001A7 08               [12]  374 	inc	r0
      0001A8 E6               [12]  375 	mov	a,@r0
      0001A9 C0 E0            [24]  376 	push	acc
      0001AB E5*00            [12]  377 	mov	a,_bp
      0001AD 24 FA            [12]  378 	add	a,#0xfa
      0001AF F8               [12]  379 	mov	r0,a
      0001B0 86 82            [24]  380 	mov	dpl,@r0
      0001B2 08               [12]  381 	inc	r0
      0001B3 86 83            [24]  382 	mov	dph,@r0
      0001B5 08               [12]  383 	inc	r0
      0001B6 86 F0            [24]  384 	mov	b,@r0
      0001B8 08               [12]  385 	inc	r0
      0001B9 E6               [12]  386 	mov	a,@r0
      0001BA 12r00r00         [24]  387 	lcall	___fsdiv
      0001BD AC 82            [24]  388 	mov	r4,dpl
      0001BF AD 83            [24]  389 	mov	r5,dph
      0001C1 AE F0            [24]  390 	mov	r6,b
      0001C3 FF               [12]  391 	mov	r7,a
      0001C4 E5 81            [12]  392 	mov	a,sp
      0001C6 24 FC            [12]  393 	add	a,#0xfc
      0001C8 F5 81            [12]  394 	mov	sp,a
      0001CA 8C 82            [24]  395 	mov	dpl,r4
      0001CC 8D 83            [24]  396 	mov	dph,r5
      0001CE 8E F0            [24]  397 	mov	b,r6
      0001D0 EF               [12]  398 	mov	a,r7
      0001D1 12r00r00         [24]  399 	lcall	_atanf
      0001D4 AC 82            [24]  400 	mov	r4,dpl
      0001D6 AD 83            [24]  401 	mov	r5,dph
      0001D8 AE F0            [24]  402 	mov	r6,b
      0001DA B2 E7            [12]  403 	cpl	acc.7
      0001DC FF               [12]  404 	mov	r7,a
      0001DD E5*00            [12]  405 	mov	a,_bp
      0001DF 24 09            [12]  406 	add	a,#0x09
      0001E1 F8               [12]  407 	mov	r0,a
      0001E2 A6 04            [24]  408 	mov	@r0,ar4
      0001E4 08               [12]  409 	inc	r0
      0001E5 A6 05            [24]  410 	mov	@r0,ar5
      0001E7 08               [12]  411 	inc	r0
      0001E8 A6 06            [24]  412 	mov	@r0,ar6
      0001EA 08               [12]  413 	inc	r0
      0001EB A6 07            [24]  414 	mov	@r0,ar7
                                    415 ;	atan2f.c:52: r+=(x<0.0?-HALF_PI:HALF_PI);
      0001ED E4               [12]  416 	clr	a
      0001EE C0 E0            [24]  417 	push	acc
      0001F0 C0 E0            [24]  418 	push	acc
      0001F2 C0 E0            [24]  419 	push	acc
      0001F4 C0 E0            [24]  420 	push	acc
      0001F6 A8*00            [24]  421 	mov	r0,_bp
      0001F8 08               [12]  422 	inc	r0
      0001F9 86 82            [24]  423 	mov	dpl,@r0
      0001FB 08               [12]  424 	inc	r0
      0001FC 86 83            [24]  425 	mov	dph,@r0
      0001FE 08               [12]  426 	inc	r0
      0001FF 86 F0            [24]  427 	mov	b,@r0
      000201 08               [12]  428 	inc	r0
      000202 E6               [12]  429 	mov	a,@r0
      000203 12r00r00         [24]  430 	lcall	___fslt
      000206 AF 82            [24]  431 	mov	r7,dpl
      000208 E5 81            [12]  432 	mov	a,sp
      00020A 24 FC            [12]  433 	add	a,#0xfc
      00020C F5 81            [12]  434 	mov	sp,a
      00020E EF               [12]  435 	mov	a,r7
      00020F 60 0A            [24]  436 	jz	00113$
      000211 7C DB            [12]  437 	mov	r4,#0xDB
      000213 7D 0F            [12]  438 	mov	r5,#0x0F
      000215 7E C9            [12]  439 	mov	r6,#0xC9
      000217 7F BF            [12]  440 	mov	r7,#0xBF
      000219 80 08            [24]  441 	sjmp	00114$
      00021B                        442 00113$:
      00021B 7C DB            [12]  443 	mov	r4,#0xDB
      00021D 7D 0F            [12]  444 	mov	r5,#0x0F
      00021F 7E C9            [12]  445 	mov	r6,#0xC9
      000221 7F 3F            [12]  446 	mov	r7,#0x3F
      000223                        447 00114$:
      000223 C0 04            [24]  448 	push	ar4
      000225 C0 05            [24]  449 	push	ar5
      000227 C0 06            [24]  450 	push	ar6
      000229 C0 07            [24]  451 	push	ar7
      00022B E5*00            [12]  452 	mov	a,_bp
      00022D 24 09            [12]  453 	add	a,#0x09
      00022F F8               [12]  454 	mov	r0,a
      000230 86 82            [24]  455 	mov	dpl,@r0
      000232 08               [12]  456 	inc	r0
      000233 86 83            [24]  457 	mov	dph,@r0
      000235 08               [12]  458 	inc	r0
      000236 86 F0            [24]  459 	mov	b,@r0
      000238 08               [12]  460 	inc	r0
      000239 E6               [12]  461 	mov	a,@r0
      00023A 12r00r00         [24]  462 	lcall	___fsadd
      00023D AC 82            [24]  463 	mov	r4,dpl
      00023F AD 83            [24]  464 	mov	r5,dph
      000241 AE F0            [24]  465 	mov	r6,b
      000243 FF               [12]  466 	mov	r7,a
      000244 E5 81            [12]  467 	mov	a,sp
      000246 24 FC            [12]  468 	add	a,#0xfc
      000248 F5 81            [12]  469 	mov	sp,a
      00024A E5*00            [12]  470 	mov	a,_bp
      00024C 24 09            [12]  471 	add	a,#0x09
      00024E F8               [12]  472 	mov	r0,a
      00024F A6 04            [24]  473 	mov	@r0,ar4
      000251 08               [12]  474 	inc	r0
      000252 A6 05            [24]  475 	mov	@r0,ar5
      000254 08               [12]  476 	inc	r0
      000255 A6 06            [24]  477 	mov	@r0,ar6
      000257 08               [12]  478 	inc	r0
      000258 A6 07            [24]  479 	mov	@r0,ar7
      00025A                        480 00108$:
                                    481 ;	atan2f.c:54: return r;
      00025A E5*00            [12]  482 	mov	a,_bp
      00025C 24 09            [12]  483 	add	a,#0x09
      00025E F8               [12]  484 	mov	r0,a
      00025F 86 82            [24]  485 	mov	dpl,@r0
      000261 08               [12]  486 	inc	r0
      000262 86 83            [24]  487 	mov	dph,@r0
      000264 08               [12]  488 	inc	r0
      000265 86 F0            [24]  489 	mov	b,@r0
      000267 08               [12]  490 	inc	r0
      000268 E6               [12]  491 	mov	a,@r0
      000269                        492 00109$:
      000269 85*00 81         [24]  493 	mov	sp,_bp
      00026C D0*00            [24]  494 	pop	_bp
      00026E 22               [24]  495 	ret
                                    496 	.area CSEG    (CODE)
                                    497 	.area CONST   (CODE)
                                    498 	.area XINIT   (CODE)
                                    499 	.area CABS    (ABS,CODE)
