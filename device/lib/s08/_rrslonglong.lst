                              1 ;--------------------------------------------------------
                              2 ; File Created by SDCC : free open source ANSI-C Compiler
                              3 ; Version 3.5.0 #9253 (Apr  4 2022) (Linux)
                              4 ; This file was generated Mon Apr  4 14:10:36 2022
                              5 ;--------------------------------------------------------
                              6 	.cs08
                              7 	.module _rrslonglong
                              8 	.optsdcc -ms08
                              9 	
                             10 	.area HOME    (CODE)
                             11 	.area GSINIT0 (CODE)
                             12 	.area GSINIT  (CODE)
                             13 	.area GSFINAL (CODE)
                             14 	.area CSEG    (CODE)
                             15 	.area XINIT   (CODE)
                             16 	.area CONST   (CODE)
                             17 	.area DSEG    (PAG)
                             18 	.area OSEG    (PAG, OVR)
                             19 	.area XSEG
                             20 	.area XISEG
                             21 ;--------------------------------------------------------
                             22 ; Public variables in this module
                             23 ;--------------------------------------------------------
                             24 	.globl __rrslonglong_PARM_2
                             25 	.globl __rrslonglong_PARM_1
                             26 	.globl __rrslonglong
                             27 ;--------------------------------------------------------
                             28 ; ram data
                             29 ;--------------------------------------------------------
                             30 	.area DSEG    (PAG)
                             31 ;--------------------------------------------------------
                             32 ; overlayable items in ram 
                             33 ;--------------------------------------------------------
                             34 	.area	OSEG    (PAG, OVR)
   0000                      35 __rrslonglong_sloc0_1_0:
   0000                      36 	.ds 1
   0001                      37 __rrslonglong_sloc1_1_0:
   0001                      38 	.ds 4
   0005                      39 __rrslonglong_sloc2_1_0:
   0005                      40 	.ds 4
                             41 ;--------------------------------------------------------
                             42 ; absolute ram data
                             43 ;--------------------------------------------------------
                             44 	.area IABS    (ABS)
                             45 	.area IABS    (ABS)
                             46 ;--------------------------------------------------------
                             47 ; absolute external ram data
                             48 ;--------------------------------------------------------
                             49 	.area XABS    (ABS)
                             50 ;--------------------------------------------------------
                             51 ; external initialized ram data
                             52 ;--------------------------------------------------------
                             53 	.area XISEG
                             54 ;--------------------------------------------------------
                             55 ; extended address mode data
                             56 ;--------------------------------------------------------
                             57 	.area XSEG
   0000                      58 __rrslonglong_PARM_1:
   0000                      59 	.ds 8
   0008                      60 __rrslonglong_PARM_2:
   0008                      61 	.ds 1
                             62 ;--------------------------------------------------------
                             63 ; global & static initialisations
                             64 ;--------------------------------------------------------
                             65 	.area HOME    (CODE)
                             66 	.area GSINIT  (CODE)
                             67 	.area GSFINAL (CODE)
                             68 	.area GSINIT  (CODE)
                             69 ;--------------------------------------------------------
                             70 ; Home
                             71 ;--------------------------------------------------------
                             72 	.area HOME    (CODE)
                             73 	.area HOME    (CODE)
                             74 ;--------------------------------------------------------
                             75 ; code
                             76 ;--------------------------------------------------------
                             77 	.area CSEG    (CODE)
                             78 ;------------------------------------------------------------
                             79 ;Allocation info for local variables in function '_rrslonglong'
                             80 ;------------------------------------------------------------
                             81 ;l                         Allocated with name '__rrslonglong_PARM_1'
                             82 ;s                         Allocated with name '__rrslonglong_PARM_2'
                             83 ;top                       Allocated to registers 
                             84 ;middle                    Allocated to registers 
                             85 ;bottom                    Allocated to registers 
                             86 ;b                         Allocated to registers 
                             87 ;sloc0                     Allocated with name '__rrslonglong_sloc0_1_0'
                             88 ;sloc1                     Allocated with name '__rrslonglong_sloc1_1_0'
                             89 ;sloc2                     Allocated with name '__rrslonglong_sloc2_1_0'
                             90 ;------------------------------------------------------------
                             91 ;../_rrslonglong.c:35: long long _rrslonglong(long long l, signed char s)
                             92 ;	-----------------------------------------
                             93 ;	 function _rrslonglong
                             94 ;	-----------------------------------------
                             95 ;	Register assignment is optimal.
                             96 ;	Stack space usage: 0 bytes.
   0000                      97 __rrslonglong:
                             98 ;../_rrslonglong.c:37: int32_t *top = (uint32_t *)((char *)(&l) + 4);
                             99 ;../_rrslonglong.c:38: uint16_t *middle = (uint16_t *)((char *)(&l) + 3);
                            100 ;../_rrslonglong.c:39: uint32_t *bottom = (uint32_t *)(&l);
                            101 ;../_rrslonglong.c:40: uint16_t *b = (uint16_t *)(&l);
                            102 ;../_rrslonglong.c:50: (*bottom) >>= s;
   0000 C6r00r08      [ 4]  103 	lda	__rrslonglong_PARM_2
   0003 B7*00         [ 3]  104 	sta	*__rrslonglong_sloc0_1_0
   0005                     105 00103$:
                            106 ;../_rrslonglong.c:42: for(;s >= 16; s-= 16)
   0005 B6*00         [ 3]  107 	lda	*__rrslonglong_sloc0_1_0
   0007 A1 10         [ 2]  108 	cmp	#0x10
   0009 91 2D         [ 3]  109 	blt	00101$
                            110 ;../_rrslonglong.c:44: b[0] = b[1];
   000B 32r00r02      [ 5]  111 	ldhx	(__rrslonglong_PARM_1 + 0x0002)
   000E 96r00r00      [ 5]  112 	sthx	__rrslonglong_PARM_1
                            113 ;../_rrslonglong.c:45: b[1] = b[2];
   0011 32r00r04      [ 5]  114 	ldhx	(__rrslonglong_PARM_1 + 0x0004)
   0014 96r00r02      [ 5]  115 	sthx	(__rrslonglong_PARM_1 + 0x0002)
                            116 ;../_rrslonglong.c:46: b[2] = b[3];
   0017 32r00r06      [ 5]  117 	ldhx	(__rrslonglong_PARM_1 + 0x0006)
   001A 96r00r04      [ 5]  118 	sthx	(__rrslonglong_PARM_1 + 0x0004)
                            119 ;../_rrslonglong.c:47: b[3] = (b[3] & 0x8000) ? 0xffff : 0x000000;
   001D C6r00r06      [ 4]  120 	lda	(__rrslonglong_PARM_1 + 0x0006)
   0020 CEr00r07      [ 4]  121 	ldx	((__rrslonglong_PARM_1 + 0x0006) + 1)
   0023 4D            [ 1]  122 	tsta
   0024 2A 05         [ 3]  123 	bpl     00107$
   0026 45 FF FF      [ 3]  124 	ldhx	#0xFFFF
   0029 20 02         [ 3]  125 	bra	00108$
   002B                     126 00107$:
   002B 8C            [ 1]  127 	clrh
   002C 5F            [ 1]  128 	clrx
   002D                     129 00108$:
   002D 96r00r06      [ 5]  130 	sthx	(__rrslonglong_PARM_1 + 0x0006)
                            131 ;../_rrslonglong.c:42: for(;s >= 16; s-= 16)
   0030 B6*00         [ 3]  132 	lda	*__rrslonglong_sloc0_1_0
   0032 A0 10         [ 2]  133 	sub	#0x10
   0034 B7*00         [ 3]  134 	sta	*__rrslonglong_sloc0_1_0
   0036 20 CD         [ 3]  135 	bra	00103$
   0038                     136 00101$:
                            137 ;../_rrslonglong.c:50: (*bottom) >>= s;
   0038 C6r00r00      [ 4]  138 	lda	__rrslonglong_PARM_1
   003B B7*01         [ 3]  139 	sta	*__rrslonglong_sloc1_1_0
   003D C6r00r01      [ 4]  140 	lda	(__rrslonglong_PARM_1 + 1)
   0040 B7*02         [ 3]  141 	sta	*(__rrslonglong_sloc1_1_0 + 1)
   0042 C6r00r02      [ 4]  142 	lda	(__rrslonglong_PARM_1 + 2)
   0045 B7*03         [ 3]  143 	sta	*(__rrslonglong_sloc1_1_0 + 2)
   0047 C6r00r03      [ 4]  144 	lda	(__rrslonglong_PARM_1 + 3)
   004A B7*04         [ 3]  145 	sta	*(__rrslonglong_sloc1_1_0 + 3)
   004C BE*00         [ 3]  146 	ldx	*__rrslonglong_sloc0_1_0
   004E 27 0A         [ 3]  147 	beq	00125$
   0050                     148 00124$:
   0050 34*01         [ 5]  149 	lsr	*__rrslonglong_sloc1_1_0
   0052 36*02         [ 5]  150 	ror	*(__rrslonglong_sloc1_1_0 + 1)
   0054 36*03         [ 5]  151 	ror	*(__rrslonglong_sloc1_1_0 + 2)
   0056 36*04         [ 5]  152 	ror	*(__rrslonglong_sloc1_1_0 + 3)
   0058 5B F6         [ 4]  153 	dbnzx	00124$
   005A                     154 00125$:
   005A B6*01         [ 3]  155 	lda	*__rrslonglong_sloc1_1_0
   005C C7r00r00      [ 4]  156 	sta	__rrslonglong_PARM_1
   005F B6*02         [ 3]  157 	lda	*(__rrslonglong_sloc1_1_0 + 1)
   0061 C7r00r01      [ 4]  158 	sta	(__rrslonglong_PARM_1 + 1)
   0064 B6*03         [ 3]  159 	lda	*(__rrslonglong_sloc1_1_0 + 2)
   0066 C7r00r02      [ 4]  160 	sta	(__rrslonglong_PARM_1 + 2)
   0069 B6*04         [ 3]  161 	lda	*(__rrslonglong_sloc1_1_0 + 3)
   006B C7r00r03      [ 4]  162 	sta	(__rrslonglong_PARM_1 + 3)
                            163 ;../_rrslonglong.c:51: (*bottom) |= ((uint32_t)((*middle) >> s) << 16);
   006E 32r00r03      [ 5]  164 	ldhx	(__rrslonglong_PARM_1 + 0x0003)
   0071 B6*00         [ 3]  165 	lda	*__rrslonglong_sloc0_1_0
   0073 27 08         [ 3]  166 	beq	00127$
   0075                     167 00126$:
   0075 8B            [ 2]  168 	pshh
   0076 9E 64 01      [ 6]  169 	lsr	1,s
   0079 8A            [ 3]  170 	pulh
   007A 56            [ 1]  171 	rorx
   007B 4B F8         [ 4]  172 	dbnza	00126$
   007D                     173 00127$:
   007D BF*08         [ 3]  174 	stx	*(__rrslonglong_sloc2_1_0 + 3)
   007F 8B            [ 2]  175 	pshh
   0080 86            [ 3]  176 	pula
   0081 B7*07         [ 3]  177 	sta	*(__rrslonglong_sloc2_1_0 + 2)
   0083 6E 00*06      [ 4]  178 	mov	#0x00,*(__rrslonglong_sloc2_1_0 + 1)
   0086 6E 00*05      [ 4]  179 	mov	#0x00,*__rrslonglong_sloc2_1_0
   0089 4E*07*05      [ 6]  180 	mov	*(__rrslonglong_sloc2_1_0 + 2),*__rrslonglong_sloc2_1_0
   008C 4E*08*06      [ 6]  181 	mov	*(__rrslonglong_sloc2_1_0 + 3),*(__rrslonglong_sloc2_1_0 + 1)
   008F 6E 00*08      [ 4]  182 	mov	#0x00,*(__rrslonglong_sloc2_1_0 + 3)
   0092 6E 00*07      [ 4]  183 	mov	#0x00,*(__rrslonglong_sloc2_1_0 + 2)
   0095 B6*04         [ 3]  184 	lda	*(__rrslonglong_sloc1_1_0 + 3)
   0097 BA*08         [ 3]  185 	ora	*(__rrslonglong_sloc2_1_0 + 3)
   0099 B7*08         [ 3]  186 	sta	*(__rrslonglong_sloc2_1_0 + 3)
   009B B6*03         [ 3]  187 	lda	*(__rrslonglong_sloc1_1_0 + 2)
   009D BA*07         [ 3]  188 	ora	*(__rrslonglong_sloc2_1_0 + 2)
   009F B7*07         [ 3]  189 	sta	*(__rrslonglong_sloc2_1_0 + 2)
   00A1 B6*02         [ 3]  190 	lda	*(__rrslonglong_sloc1_1_0 + 1)
   00A3 BA*06         [ 3]  191 	ora	*(__rrslonglong_sloc2_1_0 + 1)
   00A5 B7*06         [ 3]  192 	sta	*(__rrslonglong_sloc2_1_0 + 1)
   00A7 B6*01         [ 3]  193 	lda	*__rrslonglong_sloc1_1_0
   00A9 BA*05         [ 3]  194 	ora	*__rrslonglong_sloc2_1_0
   00AB B7*05         [ 3]  195 	sta	*__rrslonglong_sloc2_1_0
   00AD B6*05         [ 3]  196 	lda	*__rrslonglong_sloc2_1_0
   00AF C7r00r00      [ 4]  197 	sta	__rrslonglong_PARM_1
   00B2 B6*06         [ 3]  198 	lda	*(__rrslonglong_sloc2_1_0 + 1)
   00B4 C7r00r01      [ 4]  199 	sta	(__rrslonglong_PARM_1 + 1)
   00B7 B6*07         [ 3]  200 	lda	*(__rrslonglong_sloc2_1_0 + 2)
   00B9 C7r00r02      [ 4]  201 	sta	(__rrslonglong_PARM_1 + 2)
   00BC B6*08         [ 3]  202 	lda	*(__rrslonglong_sloc2_1_0 + 3)
   00BE C7r00r03      [ 4]  203 	sta	(__rrslonglong_PARM_1 + 3)
                            204 ;../_rrslonglong.c:52: (*top) |= (((*middle) & 0xffff0000) >> s);
   00C1 C6r00r04      [ 4]  205 	lda	(__rrslonglong_PARM_1 + 0x0004)
   00C4 B7*05         [ 3]  206 	sta	*__rrslonglong_sloc2_1_0
   00C6 C6r00r05      [ 4]  207 	lda	((__rrslonglong_PARM_1 + 0x0004) + 1)
   00C9 B7*06         [ 3]  208 	sta	*(__rrslonglong_sloc2_1_0 + 1)
   00CB C6r00r06      [ 4]  209 	lda	((__rrslonglong_PARM_1 + 0x0004) + 2)
   00CE B7*07         [ 3]  210 	sta	*(__rrslonglong_sloc2_1_0 + 2)
   00D0 C6r00r07      [ 4]  211 	lda	((__rrslonglong_PARM_1 + 0x0004) + 3)
   00D3 B7*08         [ 3]  212 	sta	*(__rrslonglong_sloc2_1_0 + 3)
   00D5 32r00r03      [ 5]  213 	ldhx	(__rrslonglong_PARM_1 + 0x0003)
   00D8 BF*04         [ 3]  214 	stx	*(__rrslonglong_sloc1_1_0 + 3)
   00DA 8B            [ 2]  215 	pshh
   00DB 86            [ 3]  216 	pula
   00DC B7*03         [ 3]  217 	sta	*(__rrslonglong_sloc1_1_0 + 2)
   00DE 6E 00*02      [ 4]  218 	mov	#0x00,*(__rrslonglong_sloc1_1_0 + 1)
   00E1 6E 00*01      [ 4]  219 	mov	#0x00,*__rrslonglong_sloc1_1_0
   00E4 6E 00*04      [ 4]  220 	mov	#0x00,*(__rrslonglong_sloc1_1_0 + 3)
   00E7 6E 00*03      [ 4]  221 	mov	#0x00,*(__rrslonglong_sloc1_1_0 + 2)
   00EA BE*00         [ 3]  222 	ldx	*__rrslonglong_sloc0_1_0
   00EC 27 0A         [ 3]  223 	beq	00129$
   00EE                     224 00128$:
   00EE 34*01         [ 5]  225 	lsr	*__rrslonglong_sloc1_1_0
   00F0 36*02         [ 5]  226 	ror	*(__rrslonglong_sloc1_1_0 + 1)
   00F2 36*03         [ 5]  227 	ror	*(__rrslonglong_sloc1_1_0 + 2)
   00F4 36*04         [ 5]  228 	ror	*(__rrslonglong_sloc1_1_0 + 3)
   00F6 5B F6         [ 4]  229 	dbnzx	00128$
   00F8                     230 00129$:
   00F8 B6*08         [ 3]  231 	lda	*(__rrslonglong_sloc2_1_0 + 3)
   00FA BA*04         [ 3]  232 	ora	*(__rrslonglong_sloc1_1_0 + 3)
   00FC B7*08         [ 3]  233 	sta	*(__rrslonglong_sloc2_1_0 + 3)
   00FE B6*07         [ 3]  234 	lda	*(__rrslonglong_sloc2_1_0 + 2)
   0100 BA*03         [ 3]  235 	ora	*(__rrslonglong_sloc1_1_0 + 2)
   0102 B7*07         [ 3]  236 	sta	*(__rrslonglong_sloc2_1_0 + 2)
   0104 B6*06         [ 3]  237 	lda	*(__rrslonglong_sloc2_1_0 + 1)
   0106 BA*02         [ 3]  238 	ora	*(__rrslonglong_sloc1_1_0 + 1)
   0108 B7*06         [ 3]  239 	sta	*(__rrslonglong_sloc2_1_0 + 1)
   010A B6*05         [ 3]  240 	lda	*__rrslonglong_sloc2_1_0
   010C BA*01         [ 3]  241 	ora	*__rrslonglong_sloc1_1_0
   010E B7*05         [ 3]  242 	sta	*__rrslonglong_sloc2_1_0
   0110 B6*05         [ 3]  243 	lda	*__rrslonglong_sloc2_1_0
   0112 C7r00r04      [ 4]  244 	sta	(__rrslonglong_PARM_1 + 0x0004)
   0115 B6*06         [ 3]  245 	lda	*(__rrslonglong_sloc2_1_0 + 1)
   0117 C7r00r05      [ 4]  246 	sta	((__rrslonglong_PARM_1 + 0x0004) + 1)
   011A B6*07         [ 3]  247 	lda	*(__rrslonglong_sloc2_1_0 + 2)
   011C C7r00r06      [ 4]  248 	sta	((__rrslonglong_PARM_1 + 0x0004) + 2)
   011F B6*08         [ 3]  249 	lda	*(__rrslonglong_sloc2_1_0 + 3)
   0121 C7r00r07      [ 4]  250 	sta	((__rrslonglong_PARM_1 + 0x0004) + 3)
                            251 ;../_rrslonglong.c:54: return(l);
   0124 C6r00r00      [ 4]  252 	lda	__rrslonglong_PARM_1
   0127 B7*00         [ 3]  253 	sta	*___SDCC_hc08_ret7
   0129 C6r00r01      [ 4]  254 	lda	(__rrslonglong_PARM_1 + 1)
   012C B7*00         [ 3]  255 	sta	*___SDCC_hc08_ret6
   012E C6r00r02      [ 4]  256 	lda	(__rrslonglong_PARM_1 + 2)
   0131 B7*00         [ 3]  257 	sta	*___SDCC_hc08_ret5
   0133 C6r00r03      [ 4]  258 	lda	(__rrslonglong_PARM_1 + 3)
   0136 B7*00         [ 3]  259 	sta	*___SDCC_hc08_ret4
   0138 C6r00r04      [ 4]  260 	lda	(__rrslonglong_PARM_1 + 4)
   013B B7*00         [ 3]  261 	sta	*___SDCC_hc08_ret3
   013D C6r00r05      [ 4]  262 	lda	(__rrslonglong_PARM_1 + 5)
   0140 B7*00         [ 3]  263 	sta	*___SDCC_hc08_ret2
   0142 CEr00r06      [ 4]  264 	ldx	(__rrslonglong_PARM_1 + 6)
   0145 C6r00r07      [ 4]  265 	lda	(__rrslonglong_PARM_1 + 7)
   0148 81            [ 6]  266 	rts
                            267 	.area CSEG    (CODE)
                            268 	.area CONST   (CODE)
                            269 	.area XINIT   (CODE)
                            270 	.area CABS    (ABS,CODE)
