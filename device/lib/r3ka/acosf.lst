                              1 ;--------------------------------------------------------
                              2 ; File Created by SDCC : free open source ANSI-C Compiler
                              3 ; Version 3.5.0 #9253 (Apr  4 2022) (Linux)
                              4 ; This file was generated Mon Apr  4 14:16:15 2022
                              5 ;--------------------------------------------------------
                              6 	.r3k
                              7 	.module acosf
                              8 	.optsdcc -mr3ka
                              9 	
                             10 ;--------------------------------------------------------
                             11 ; Public variables in this module
                             12 ;--------------------------------------------------------
                             13 	.globl _asincosf
                             14 	.globl _acosf
                             15 ;--------------------------------------------------------
                             16 ; special function registers
                             17 ;--------------------------------------------------------
                             18 ;--------------------------------------------------------
                             19 ; ram data
                             20 ;--------------------------------------------------------
                             21 	.area _DATA
                             22 ;--------------------------------------------------------
                             23 ; ram data
                             24 ;--------------------------------------------------------
                             25 	.area _INITIALIZED
                             26 ;--------------------------------------------------------
                             27 ; absolute external ram data
                             28 ;--------------------------------------------------------
                             29 	.area _DABS (ABS)
                             30 ;--------------------------------------------------------
                             31 ; global & static initialisations
                             32 ;--------------------------------------------------------
                             33 	.area _HOME
                             34 	.area _GSINIT
                             35 	.area _GSFINAL
                             36 	.area _GSINIT
                             37 ;--------------------------------------------------------
                             38 ; Home
                             39 ;--------------------------------------------------------
                             40 	.area _HOME
                             41 	.area _HOME
                             42 ;--------------------------------------------------------
                             43 ; code
                             44 ;--------------------------------------------------------
                             45 	.area _CODE
                             46 ;../acosf.c:36: float acosf(float x) _FLOAT_FUNC_REENTRANT
                             47 ;	---------------------------------
                             48 ; Function acosf
                             49 ; ---------------------------------
   0000                      50 _acosf::
                             51 ;../acosf.c:38: if (x == 1.0) return 0.0;
   0000 21 80 3F             52 	ld	hl,#0x3F80
   0003 E5                   53 	push	hl
   0004 21 00 00             54 	ld	hl,#0x0000
   0007 E5                   55 	push	hl
   0008 C4 08                56 	ld	hl, 8 (sp)
   000A E5                   57 	push	hl
   000B C4 08                58 	ld	hl, 8 (sp)
   000D E5                   59 	push	hl
   000E CDr00r00             60 	call	___fseq
   0011 27 08                61 	add	sp, #8
   0013 7D                   62 	ld	a,l
   0014 B7                   63 	or	a, a
   0015 28 06                64 	jr	Z,00108$
   0017 21 00 00             65 	ld	hl,#0x0000
   001A 5D                   66 	ld	e,l
   001B 54                   67 	ld	d,h
   001C C9                   68 	ret
   001D                      69 00108$:
                             70 ;../acosf.c:39: else if (x ==-1.0) return PI;
   001D 21 80 BF             71 	ld	hl,#0xBF80
   0020 E5                   72 	push	hl
   0021 21 00 00             73 	ld	hl,#0x0000
   0024 E5                   74 	push	hl
   0025 C4 08                75 	ld	hl, 8 (sp)
   0027 E5                   76 	push	hl
   0028 C4 08                77 	ld	hl, 8 (sp)
   002A E5                   78 	push	hl
   002B CDr00r00             79 	call	___fseq
   002E 27 08                80 	add	sp, #8
   0030 7D                   81 	ld	a,l
   0031 B7                   82 	or	a, a
   0032 28 07                83 	jr	Z,00105$
   0034 21 DB 0F             84 	ld	hl,#0x0FDB
   0037 11 49 40             85 	ld	de,#0x4049
   003A C9                   86 	ret
   003B                      87 00105$:
                             88 ;../acosf.c:40: else if (x == 0.0) return HALF_PI;
   003B FD 21 02 00          89 	ld	iy,#2
   003F FD 39                90 	add	iy,sp
   0041 FD 7E 03             91 	ld	a,3 (iy)
   0044 CB BF                92 	res	7, a
   0046 FD B6 02             93 	or	a, 2 (iy)
   0049 FD B6 01             94 	or	a, 1 (iy)
   004C FD B6 00             95 	or	a,0 (iy)
   004F 20 07                96 	jr	NZ,00102$
   0051 21 DB 0F             97 	ld	hl,#0x0FDB
   0054 11 C9 3F             98 	ld	de,#0x3FC9
   0057 C9                   99 	ret
   0058                     100 00102$:
                            101 ;../acosf.c:41: else               return asincosf(x, true);
   0058 3E 01               102 	ld	a,#0x01
   005A F5                  103 	push	af
   005B 33                  104 	inc	sp
   005C C4 05               105 	ld	hl, 5 (sp)
   005E E5                  106 	push	hl
   005F C4 05               107 	ld	hl, 5 (sp)
   0061 E5                  108 	push	hl
   0062 CDr00r00            109 	call	_asincosf
   0065 27 05               110 	add	sp, #5
   0067 C9                  111 	ret
                            112 	.area _CODE
                            113 	.area _INITIALIZER
                            114 	.area _CABS (ABS)
