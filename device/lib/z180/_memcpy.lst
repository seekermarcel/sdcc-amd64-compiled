                              1 ;--------------------------------------------------------
                              2 ; File Created by SDCC : free open source ANSI-C Compiler
                              3 ; Version 3.5.0 #9253 (Apr  4 2022) (Linux)
                              4 ; This file was generated Mon Apr  4 14:15:45 2022
                              5 ;--------------------------------------------------------
                              6 	.hd64
                              7 	.module _memcpy
                              8 	.optsdcc -mz180
                              9 	
                             10 ;--------------------------------------------------------
                             11 ; Public variables in this module
                             12 ;--------------------------------------------------------
                             13 	.globl _memcpy
                             14 ;--------------------------------------------------------
                             15 ; special function registers
                             16 ;--------------------------------------------------------
                             17 ;--------------------------------------------------------
                             18 ; ram data
                             19 ;--------------------------------------------------------
                             20 	.area _DATA
                             21 ;--------------------------------------------------------
                             22 ; ram data
                             23 ;--------------------------------------------------------
                             24 	.area _INITIALIZED
                             25 ;--------------------------------------------------------
                             26 ; absolute external ram data
                             27 ;--------------------------------------------------------
                             28 	.area _DABS (ABS)
                             29 ;--------------------------------------------------------
                             30 ; global & static initialisations
                             31 ;--------------------------------------------------------
                             32 	.area _HOME
                             33 	.area _GSINIT
                             34 	.area _GSFINAL
                             35 	.area _GSINIT
                             36 ;--------------------------------------------------------
                             37 ; Home
                             38 ;--------------------------------------------------------
                             39 	.area _HOME
                             40 	.area _HOME
                             41 ;--------------------------------------------------------
                             42 ; code
                             43 ;--------------------------------------------------------
                             44 	.area _CODE
                             45 ;../_memcpy.c:36: void * memcpy (void * dst, const void * src, size_t acount)
                             46 ;	---------------------------------
                             47 ; Function memcpy
                             48 ; ---------------------------------
   0000                      49 _memcpy::
   0000 DD E5         [14]   50 	push	ix
   0002 DD 21 00 00   [12]   51 	ld	ix,#0
   0006 DD 39         [10]   52 	add	ix,sp
   0008 3B            [ 4]   53 	dec	sp
   0009 3B            [ 4]   54 	dec	sp
   000A 3B            [ 4]   55 	dec	sp
   000B 3B            [ 4]   56 	dec	sp
                             57 ;../_memcpy.c:38: void * ret = dst;
   000C DD 7E 04      [14]   58 	ld	a,4 (ix)
   000F DD 77 FC      [15]   59 	ld	-4 (ix),a
   0012 DD 7E 05      [14]   60 	ld	a,5 (ix)
   0015 DD 77 FD      [15]   61 	ld	-3 (ix),a
                             62 ;../_memcpy.c:39: char * d = dst;
   0018 DD 7E 04      [14]   63 	ld	a,4 (ix)
   001B DD 77 FE      [15]   64 	ld	-2 (ix),a
   001E DD 7E 05      [14]   65 	ld	a,5 (ix)
   0021 DD 77 FF      [15]   66 	ld	-1 (ix),a
                             67 ;../_memcpy.c:40: const char * s = src;
   0024 DD 5E 06      [14]   68 	ld	e,6 (ix)
   0027 DD 56 07      [14]   69 	ld	d,7 (ix)
                             70 ;../_memcpy.c:45: while (acount--) {
   002A DD 4E 08      [14]   71 	ld	c,8 (ix)
   002D DD 46 09      [14]   72 	ld	b,9 (ix)
   0030                      73 00101$:
   0030 61            [ 4]   74 	ld	h,c
   0031 68            [ 4]   75 	ld	l,b
   0032 0B            [ 4]   76 	dec	bc
   0033 7D            [ 4]   77 	ld	a,l
   0034 B4            [ 4]   78 	or	a,h
   0035 28 13         [ 8]   79 	jr	Z,00103$
                             80 ;../_memcpy.c:46: *d++ = *s++;
   0037 1A            [ 6]   81 	ld	a,(de)
   0038 13            [ 4]   82 	inc	de
   0039 DD 6E FE      [14]   83 	ld	l,-2 (ix)
   003C DD 66 FF      [14]   84 	ld	h,-1 (ix)
   003F 77            [ 7]   85 	ld	(hl),a
   0040 DD 34 FE      [18]   86 	inc	-2 (ix)
   0043 20 EB         [ 8]   87 	jr	NZ,00101$
   0045 DD 34 FF      [18]   88 	inc	-1 (ix)
   0048 18 E6         [ 8]   89 	jr	00101$
   004A                      90 00103$:
                             91 ;../_memcpy.c:49: return(ret);
   004A E1            [ 9]   92 	pop	hl
   004B E5            [11]   93 	push	hl
   004C DD F9         [ 7]   94 	ld	sp, ix
   004E DD E1         [12]   95 	pop	ix
   0050 C9            [ 9]   96 	ret
                             97 	.area _CODE
                             98 	.area _INITIALIZER
                             99 	.area _CABS (ABS)
