                              1 ;--------------------------------------------------------
                              2 ; File Created by SDCC : free open source ANSI-C Compiler
                              3 ; Version 3.5.0 #9253 (Apr  4 2022) (Linux)
                              4 ; This file was generated Mon Apr  4 14:16:20 2022
                              5 ;--------------------------------------------------------
                              6 	.r3k
                              7 	.module _calloc
                              8 	.optsdcc -mr3ka
                              9 	
                             10 ;--------------------------------------------------------
                             11 ; Public variables in this module
                             12 ;--------------------------------------------------------
                             13 	.globl _malloc
                             14 	.globl _calloc
                             15 ;--------------------------------------------------------
                             16 ; special function registers
                             17 ;--------------------------------------------------------
                             18 ;--------------------------------------------------------
                             19 ; ram data
                             20 ;--------------------------------------------------------
                             21 	.area _DATA
                             22 ;--------------------------------------------------------
                             23 ; ram data
                             24 ;--------------------------------------------------------
                             25 	.area _INITIALIZED
                             26 ;--------------------------------------------------------
                             27 ; absolute external ram data
                             28 ;--------------------------------------------------------
                             29 	.area _DABS (ABS)
                             30 ;--------------------------------------------------------
                             31 ; global & static initialisations
                             32 ;--------------------------------------------------------
                             33 	.area _HOME
                             34 	.area _GSINIT
                             35 	.area _GSFINAL
                             36 	.area _GSINIT
                             37 ;--------------------------------------------------------
                             38 ; Home
                             39 ;--------------------------------------------------------
                             40 	.area _HOME
                             41 	.area _HOME
                             42 ;--------------------------------------------------------
                             43 ; code
                             44 ;--------------------------------------------------------
                             45 	.area _CODE
                             46 ;../_calloc.c:45: void __xdata * calloc (size_t nmemb, size_t size)
                             47 ;	---------------------------------
                             48 ; Function calloc
                             49 ; ---------------------------------
   0000                      50 _calloc::
   0000 DD E5                51 	push	ix
                             52 ;../_calloc.c:49: ptr = malloc(nmemb * size);
   0002 C4 06                53 	ld	hl, 6 (sp)
   0004 E5                   54 	push	hl
   0005 C4 06                55 	ld	hl, 6 (sp)
   0007 E5                   56 	push	hl
   0008 CDr00r00             57 	call	__mulint
   000B 27 04                58 	add	sp, #4
   000D EB                   59 	ex	de,hl
   000E D5                   60 	push	de
   000F D5                   61 	push	de
   0010 CDr00r00             62 	call	_malloc
   0013 27 02                63 	add	sp, #2
   0015 D1                   64 	pop	de
                             65 ;../_calloc.c:50: if (ptr)
   0016 7C                   66 	ld	a,h
   0017 B5                   67 	or	a,l
   0018 28 0D                68 	jr	Z,00102$
                             69 ;../_calloc.c:52: memset(ptr, 0, nmemb * size);
   001A E5                   70 	push	hl
   001B D5                   71 	push	de
   001C 01 00 00             72 	ld	bc,#0x0000
   001F C5                   73 	push	bc
   0020 E5                   74 	push	hl
   0021 CDr00r00             75 	call	_memset
   0024 27 06                76 	add	sp, #6
   0026 E1                   77 	pop	hl
   0027                      78 00102$:
                             79 ;../_calloc.c:54: return ptr;
   0027 DD E1                80 	pop	ix
   0029 C9                   81 	ret
                             82 	.area _CODE
                             83 	.area _INITIALIZER
                             84 	.area _CABS (ABS)
