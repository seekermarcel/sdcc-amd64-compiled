                              1 ;--------------------------------------------------------
                              2 ; File Created by SDCC : free open source ANSI-C Compiler
                              3 ; Version 3.5.0 #9253 (Apr  4 2022) (Linux)
                              4 ; This file was generated Mon Apr  4 14:15:26 2022
                              5 ;--------------------------------------------------------
                              6 	.module atoi
                              7 	.optsdcc -mz80
                              8 	
                              9 ;--------------------------------------------------------
                             10 ; Public variables in this module
                             11 ;--------------------------------------------------------
                             12 	.globl _atoi
                             13 ;--------------------------------------------------------
                             14 ; special function registers
                             15 ;--------------------------------------------------------
                             16 ;--------------------------------------------------------
                             17 ; ram data
                             18 ;--------------------------------------------------------
                             19 	.area _DATA
                             20 ;--------------------------------------------------------
                             21 ; ram data
                             22 ;--------------------------------------------------------
                             23 	.area _INITIALIZED
                             24 ;--------------------------------------------------------
                             25 ; absolute external ram data
                             26 ;--------------------------------------------------------
                             27 	.area _DABS (ABS)
                             28 ;--------------------------------------------------------
                             29 ; global & static initialisations
                             30 ;--------------------------------------------------------
                             31 	.area _HOME
                             32 	.area _GSINIT
                             33 	.area _GSFINAL
                             34 	.area _GSINIT
                             35 ;--------------------------------------------------------
                             36 ; Home
                             37 ;--------------------------------------------------------
                             38 	.area _HOME
                             39 	.area _HOME
                             40 ;--------------------------------------------------------
                             41 ; code
                             42 ;--------------------------------------------------------
                             43 	.area _CODE
                             44 ;../atoi.c:34: int atoi(const char *nptr)
                             45 ;	---------------------------------
                             46 ; Function atoi
                             47 ; ---------------------------------
   0000                      48 _atoi::
   0000 DD E5         [15]   49 	push	ix
   0002 DD 21 00 00   [14]   50 	ld	ix,#0
   0006 DD 39         [15]   51 	add	ix,sp
   0008 F5            [11]   52 	push	af
   0009 F5            [11]   53 	push	af
                             54 ;../atoi.c:36: int ret = 0;
   000A DD 36 FD 00   [19]   55 	ld	-3 (ix),#0x00
   000E DD 36 FE 00   [19]   56 	ld	-2 (ix),#0x00
                             57 ;../atoi.c:39: while (isblank (*nptr))
   0012 DD 5E 04      [19]   58 	ld	e,4 (ix)
   0015 DD 56 05      [19]   59 	ld	d,5 (ix)
   0018                      60 00101$:
   0018 1A            [ 7]   61 	ld	a,(de)
   0019 67            [ 4]   62 	ld	h,a
   001A 6F            [ 4]   63 	ld	l,a
   001B 17            [ 4]   64 	rla
   001C 9F            [ 4]   65 	sbc	a, a
   001D 47            [ 4]   66 	ld	b,a
                             67 ;./../../include/ctype.h:53: return ((unsigned char)c == ' ' || (unsigned char)c == '\t');
   001E 7D            [ 4]   68 	ld	a,l
   001F FE 20         [ 7]   69 	cp	a,#0x20
   0021 28 04         [12]   70 	jr	Z,00115$
   0023 D6 09         [ 7]   71 	sub	a, #0x09
   0025 20 03         [12]   72 	jr	NZ,00131$
   0027                      73 00115$:
                             74 ;../atoi.c:40: nptr++;
   0027 13            [ 6]   75 	inc	de
   0028 18 EE         [12]   76 	jr	00101$
   002A                      77 00131$:
   002A DD 73 04      [19]   78 	ld	4 (ix),e
   002D DD 72 05      [19]   79 	ld	5 (ix),d
                             80 ;../atoi.c:42: neg = (*nptr == '-');
   0030 7C            [ 4]   81 	ld	a,h
   0031 D6 2D         [ 7]   82 	sub	a, #0x2D
   0033 20 04         [12]   83 	jr	NZ,00157$
   0035 3E 01         [ 7]   84 	ld	a,#0x01
   0037 18 01         [12]   85 	jr	00158$
   0039                      86 00157$:
   0039 AF            [ 4]   87 	xor	a,a
   003A                      88 00158$:
   003A DD 77 FC      [19]   89 	ld	-4 (ix),a
                             90 ;../atoi.c:44: if (*nptr == '-' || *nptr == '+')
   003D CB 47         [ 8]   91 	bit	0,a
   003F 20 05         [12]   92 	jr	NZ,00104$
   0041 7C            [ 4]   93 	ld	a,h
   0042 D6 2B         [ 7]   94 	sub	a, #0x2B
   0044 20 07         [12]   95 	jr	NZ,00129$
   0046                      96 00104$:
                             97 ;../atoi.c:45: nptr++;
   0046 13            [ 6]   98 	inc	de
   0047 DD 73 04      [19]   99 	ld	4 (ix),e
   004A DD 72 05      [19]  100 	ld	5 (ix),d
                            101 ;../atoi.c:47: while (isdigit (*nptr))
   004D                     102 00129$:
   004D DD 4E 04      [19]  103 	ld	c,4 (ix)
   0050 DD 46 05      [19]  104 	ld	b,5 (ix)
   0053                     105 00107$:
   0053 0A            [ 7]  106 	ld	a,(bc)
   0054 5F            [ 4]  107 	ld	e,a
   0055 17            [ 4]  108 	rla
   0056 9F            [ 4]  109 	sbc	a, a
   0057 57            [ 4]  110 	ld	d,a
   0058 6B            [ 4]  111 	ld	l, e
                            112 ;./../../include/ctype.h:62: return ((unsigned char)c >= '0' && (unsigned char)c <= '9');
   0059 7D            [ 4]  113 	ld	a,l
   005A D6 30         [ 7]  114 	sub	a, #0x30
   005C 38 25         [12]  115 	jr	C,00109$
   005E 3E 39         [ 7]  116 	ld	a,#0x39
   0060 95            [ 4]  117 	sub	a, l
   0061 38 20         [12]  118 	jr	C,00109$
                            119 ;../atoi.c:48: ret = ret * 10 + (*(nptr++) - '0');
   0063 D5            [11]  120 	push	de
   0064 DD 5E FD      [19]  121 	ld	e,-3 (ix)
   0067 DD 56 FE      [19]  122 	ld	d,-2 (ix)
   006A 6B            [ 4]  123 	ld	l, e
   006B 62            [ 4]  124 	ld	h, d
   006C 29            [11]  125 	add	hl, hl
   006D 29            [11]  126 	add	hl, hl
   006E 19            [11]  127 	add	hl, de
   006F 29            [11]  128 	add	hl, hl
   0070 D1            [10]  129 	pop	de
   0071 03            [ 6]  130 	inc	bc
   0072 7B            [ 4]  131 	ld	a,e
   0073 C6 D0         [ 7]  132 	add	a,#0xD0
   0075 5F            [ 4]  133 	ld	e,a
   0076 7A            [ 4]  134 	ld	a,d
   0077 CE FF         [ 7]  135 	adc	a,#0xFF
   0079 57            [ 4]  136 	ld	d,a
   007A 19            [11]  137 	add	hl,de
   007B DD 75 FD      [19]  138 	ld	-3 (ix),l
   007E DD 74 FE      [19]  139 	ld	-2 (ix),h
   0081 18 D0         [12]  140 	jr	00107$
   0083                     141 00109$:
                            142 ;../atoi.c:50: return (neg ? -ret : ret); // Since -INT_MIN is INT_MIN in sdcc, the result value always turns out ok.
   0083 DD CB FC 46   [20]  143 	bit	0,-4 (ix)
   0087 28 0D         [12]  144 	jr	Z,00120$
   0089 AF            [ 4]  145 	xor	a, a
   008A DD 96 FD      [19]  146 	sub	a, -3 (ix)
   008D 6F            [ 4]  147 	ld	l,a
   008E 3E 00         [ 7]  148 	ld	a, #0x00
   0090 DD 9E FE      [19]  149 	sbc	a, -2 (ix)
   0093 47            [ 4]  150 	ld	b,a
   0094 18 06         [12]  151 	jr	00121$
   0096                     152 00120$:
   0096 DD 6E FD      [19]  153 	ld	l,-3 (ix)
   0099 DD 46 FE      [19]  154 	ld	b,-2 (ix)
   009C                     155 00121$:
   009C 60            [ 4]  156 	ld	h, b
   009D DD F9         [10]  157 	ld	sp, ix
   009F DD E1         [14]  158 	pop	ix
   00A1 C9            [10]  159 	ret
                            160 	.area _CODE
                            161 	.area _INITIALIZER
                            162 	.area _CABS (ABS)
