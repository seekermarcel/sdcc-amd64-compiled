                                      1 ;--------------------------------------------------------
                                      2 ; File Created by SDCC : free open source ANSI-C Compiler
                                      3 ; Version 3.5.0 #9253 (Apr  4 2022) (Linux)
                                      4 ; This file was generated Mon Apr  4 14:10:26 2022
                                      5 ;--------------------------------------------------------
                                      6 	.module _strcmp
                                      7 	.optsdcc -mds390 --model-flat24
                                      8 	
                                      9 ;--------------------------------------------------------
                                     10 ; CPU specific extensions
                                     11 ;--------------------------------------------------------
                                     12 	.DS80C390
                                     13 	.amode	2	; 24 bit flat addressing
                           000082    14 dpl	=	0x82
                           000083    15 dph	=	0x83
                           000084    16 dpl1	=	0x84
                           000085    17 dph1	=	0x85
                           000086    18 dps	=	0x86
                           000093    19 dpx	=	0x93
                           000095    20 dpx1	=	0x95
                           00009B    21 esp	=	0x9B
                           00009C    22 ap	=	0x9C
                           00009C    23 acc1	=	0x9C
                           0000D1    24 mcnt0	=	0xD1
                           0000D2    25 mcnt1	=	0xD2
                           0000D3    26 ma	=	0xD3
                           0000D4    27 mb	=	0xD4
                           0000D5    28 mc	=	0xD5
                           00009D    29 acon	=	0x9D
                           0000D1    30 F1	=	0xD1	; user flag
                                     31 ;--------------------------------------------------------
                                     32 ; Public variables in this module
                                     33 ;--------------------------------------------------------
                                     34 	.globl _strcmp_PARM_2
                                     35 	.globl _strcmp
                                     36 ;--------------------------------------------------------
                                     37 ; special function registers
                                     38 ;--------------------------------------------------------
                                     39 ;--------------------------------------------------------
                                     40 ; special function bits
                                     41 ;--------------------------------------------------------
                                     42 ;--------------------------------------------------------
                                     43 ; overlayable register banks
                                     44 ;--------------------------------------------------------
                                     45 	.area REG_BANK_0	(REL,OVR,DATA)
      000000                         46 	.ds 8
                                     47 ;--------------------------------------------------------
                                     48 ; internal ram data
                                     49 ;--------------------------------------------------------
                                     50 	.area DSEG    (DATA)
                                     51 ;--------------------------------------------------------
                                     52 ; overlayable items in internal ram 
                                     53 ;--------------------------------------------------------
                                     54 	.area	OSEG    (OVR,DATA)
                                     55 ;--------------------------------------------------------
                                     56 ; indirectly addressable internal ram data
                                     57 ;--------------------------------------------------------
                                     58 	.area ISEG    (DATA)
                                     59 ;--------------------------------------------------------
                                     60 ; absolute internal ram data
                                     61 ;--------------------------------------------------------
                                     62 	.area IABS    (ABS,DATA)
                                     63 	.area IABS    (ABS,DATA)
                                     64 ;--------------------------------------------------------
                                     65 ; bit data
                                     66 ;--------------------------------------------------------
                                     67 	.area BSEG    (BIT)
                                     68 ;--------------------------------------------------------
                                     69 ; paged external ram data
                                     70 ;--------------------------------------------------------
                                     71 	.area PSEG    (PAG,XDATA)
                                     72 ;--------------------------------------------------------
                                     73 ; external ram data
                                     74 ;--------------------------------------------------------
                                     75 	.area XSEG    (XDATA)
      000000                         76 _strcmp_PARM_2:
      000000                         77 	.ds 4
      000004                         78 _strcmp_sloc0_1_0:
      000004                         79 	.ds 4
      000008                         80 _strcmp_sloc1_1_0:
      000008                         81 	.ds 2
                                     82 ;--------------------------------------------------------
                                     83 ; absolute external ram data
                                     84 ;--------------------------------------------------------
                                     85 	.area XABS    (ABS,XDATA)
                                     86 ;--------------------------------------------------------
                                     87 ; external initialized ram data
                                     88 ;--------------------------------------------------------
                                     89 	.area XISEG   (XDATA)
                                     90 ;--------------------------------------------------------
                                     91 ; global & static initialisations
                                     92 ;--------------------------------------------------------
                                     93 	.area HOME    (CODE)
                                     94 	.area GSINIT  (CODE)
                                     95 	.area GSFINAL (CODE)
                                     96 	.area GSINIT  (CODE)
                                     97 ;--------------------------------------------------------
                                     98 ; Home
                                     99 ;--------------------------------------------------------
                                    100 	.area HOME    (CODE)
                                    101 	.area HOME    (CODE)
                                    102 ;--------------------------------------------------------
                                    103 ; code
                                    104 ;--------------------------------------------------------
                                    105 	.area CSEG    (CODE)
                                    106 ;------------------------------------------------------------
                                    107 ;Allocation info for local variables in function 'strcmp'
                                    108 ;------------------------------------------------------------
                                    109 ;adst                      Allocated with name '_strcmp_PARM_2'
                                    110 ;asrc                      Allocated to registers 
                                    111 ;sloc0                     Allocated with name '_strcmp_sloc0_1_0'
                                    112 ;sloc1                     Allocated with name '_strcmp_sloc1_1_0'
                                    113 ;ret                       Allocated to registers r4 r5 
                                    114 ;------------------------------------------------------------
                                    115 ;	_strcmp.c:34: int strcmp ( const char * asrc, const char * adst )
                                    116 ;	-----------------------------------------
                                    117 ;	 function strcmp
                                    118 ;	-----------------------------------------
      000000                        119 _strcmp:
                           000002   120 	ar2 = 0x02
                           000003   121 	ar3 = 0x03
                           000004   122 	ar4 = 0x04
                           000005   123 	ar5 = 0x05
                           000006   124 	ar6 = 0x06
                           000007   125 	ar7 = 0x07
                           000000   126 	ar0 = 0x00
                           000001   127 	ar1 = 0x01
      000000 75 86 01         [12]  128 	mov     dps, #1
      000003 90s00r00r04      [12]  129 	mov     dptr, #_strcmp_sloc0_1_0
      000007 E5 82            [ 8]  130 	mov	a,dpl
      000009 F0               [ 8]  131 	movx	@dptr,a
      00000A A3               [12]  132 	inc	dptr
      00000B E5 83            [ 8]  133 	mov	a,dph
      00000D F0               [ 8]  134 	movx	@dptr,a
      00000E A3               [12]  135 	inc	dptr
      00000F E5 93            [ 8]  136 	mov	a,dpx
      000011 F0               [ 8]  137 	movx	@dptr,a
      000012 A3               [12]  138 	inc	dptr
      000013 E5 F0            [ 8]  139 	mov	a,b
      000015 F0               [ 8]  140 	movx	@dptr,a
      000016 75 86 00         [12]  141 	mov	dps,#0
                                    142 ;	_strcmp.c:50: while( ! (ret = *(unsigned char *)asrc - *(unsigned char *)adst) && *adst)
      000019 90s00r00r00      [12]  143 	mov	dptr,#_strcmp_PARM_2
                                    144 ;	genAssign: resultIsFar = FALSE
      00001D E0               [ 8]  145 	movx	a,@dptr
      00001E FE               [ 4]  146 	mov	r6,a
      00001F A3               [12]  147 	inc	dptr
      000020 E0               [ 8]  148 	movx	a,@dptr
      000021 FF               [ 4]  149 	mov	r7,a
      000022 A3               [12]  150 	inc	dptr
      000023 E0               [ 8]  151 	movx	a,@dptr
      000024 F8               [ 4]  152 	mov	r0,a
      000025 A3               [12]  153 	inc	dptr
      000026 E0               [ 8]  154 	movx	a,@dptr
      000027 F9               [ 4]  155 	mov	r1,a
      000028                        156 00102$:
      000028 90s00r00r04      [12]  157 	mov	dptr,#_strcmp_sloc0_1_0
                                    158 ;	genAssign: resultIsFar = FALSE
      00002C E0               [ 8]  159 	movx	a,@dptr
      00002D FA               [ 4]  160 	mov	r2,a
      00002E A3               [12]  161 	inc	dptr
      00002F E0               [ 8]  162 	movx	a,@dptr
      000030 FB               [ 4]  163 	mov	r3,a
      000031 A3               [12]  164 	inc	dptr
      000032 E0               [ 8]  165 	movx	a,@dptr
      000033 FC               [ 4]  166 	mov	r4,a
      000034 A3               [12]  167 	inc	dptr
      000035 E0               [ 8]  168 	movx	a,@dptr
      000036 FD               [ 4]  169 	mov	r5,a
      000037 8A 82            [ 8]  170 	mov	dpl,r2
      000039 8B 83            [ 8]  171 	mov	dph,r3
      00003B 8C 93            [ 8]  172 	mov	dpx,r4
      00003D 8D F0            [ 8]  173 	mov	b,r5
      00003F 12s00r00r00      [16]  174 	lcall	__gptrget
      000043 FA               [ 4]  175 	mov  r2,a
      000044 90s00r00r08      [12]  176 	mov  dptr,#_strcmp_sloc1_1_0
      000048 F0               [ 8]  177 	movx @dptr,a
      000049 A3               [12]  178 	inc	dptr
      00004A E4               [ 4]  179 	clr	a
      00004B F0               [ 8]  180 	movx	@dptr,a
                                    181 ;	genAssign: resultIsFar = FALSE
      00004C 8E 04            [ 8]  182 	mov	ar4,r6
      00004E 8F 05            [ 8]  183 	mov	ar5,r7
      000050 88 02            [ 8]  184 	mov	ar2,r0
      000052 89 03            [ 8]  185 	mov	ar3,r1
      000054 8C 82            [ 8]  186 	mov	dpl,r4
      000056 8D 83            [ 8]  187 	mov	dph,r5
      000058 8A 93            [ 8]  188 	mov	dpx,r2
      00005A 8B F0            [ 8]  189 	mov	b,r3
      00005C 12s00r00r00      [16]  190 	lcall	__gptrget
      000060 FA               [ 4]  191 	mov	r2,a
      000061 7B 00            [ 8]  192 	mov	r3,#0x00
      000063 90s00r00r08      [12]  193 	mov	dptr,#_strcmp_sloc1_1_0
      000067 C3               [ 4]  194 	clr	c
      000068 E0               [ 8]  195 	movx	a,@dptr
      000069 9A               [ 4]  196 	subb	a,r2
      00006A FA               [ 4]  197 	mov	r2,a
      00006B A3               [12]  198 	inc	dptr
      00006C E0               [ 8]  199 	movx	a,@dptr
      00006D 9B               [ 4]  200 	subb	a,r3
      00006E FB               [ 4]  201 	mov	r3,a
                                    202 ;	genAssign: resultIsFar = FALSE
      00006F 8A 04            [ 8]  203 	mov	ar4,r2
      000071 8B 05            [ 8]  204 	mov	ar5,r3
      000073 EA               [ 4]  205 	mov	a,r2
      000074 4B               [ 4]  206 	orl	a,r3
      000075 70 31            [12]  207 	jnz  00104$
      000077                        208 00117$:
      000077 8E 82            [ 8]  209 	mov	dpl,r6
      000079 8F 83            [ 8]  210 	mov	dph,r7
      00007B 88 93            [ 8]  211 	mov	dpx,r0
      00007D 89 F0            [ 8]  212 	mov	b,r1
      00007F 12s00r00r00      [16]  213 	lcall	__gptrget
      000083 FA               [ 4]  214 	mov  r2,a
      000084 60 22            [12]  215 	jz  00104$
      000086                        216 00118$:
                                    217 ;	_strcmp.c:51: ++asrc, ++adst;
      000086 90s00r00r04      [12]  218 	mov	dptr,#_strcmp_sloc0_1_0
      00008A E0               [ 8]  219 	movx	a,@dptr
      00008B 24 01            [ 8]  220 	add	a,#0x01
      00008D F0               [ 8]  221 	movx	@dptr,a
      00008E A3               [12]  222 	inc	dptr
      00008F E0               [ 8]  223 	movx	a,@dptr
      000090 34 00            [ 8]  224 	addc	a,#0x00
      000092 F0               [ 8]  225 	movx	@dptr,a
      000093 A3               [12]  226 	inc	dptr
      000094 E0               [ 8]  227 	movx	a,@dptr
      000095 34 00            [ 8]  228 	addc	a,#0x00
      000097 F0               [ 8]  229 	movx	@dptr,a
      000098 A3               [12]  230 	inc	dptr
      000099 E0               [ 8]  231 	movx	a,@dptr
      00009A F0               [ 8]  232 	movx	@dptr,a
      00009B 0E               [ 4]  233 	inc	r6
      00009C BE 00 05         [16]  234 	cjne	r6,#0x00,00119$
      00009F 0F               [ 4]  235 	inc	r7
      0000A0 BF 00 01         [16]  236 	cjne	r7,#0x00,00119$
      0000A3 08               [ 4]  237 	inc	r0
      0000A4                        238 00119$:
      0000A4 02s00r00r28      [16]  239 	ljmp	00102$
      0000A8                        240 00104$:
                                    241 ;	_strcmp.c:53: return( ret );
      0000A8 8C 82            [ 8]  242 	mov	dpl,r4
      0000AA 8D 83            [ 8]  243 	mov	dph,r5
      0000AC                        244 00105$:
      0000AC 22               [16]  245 	ret
                                    246 	.area CSEG    (CODE)
                                    247 	.area CONST   (CODE)
                                    248 	.area XINIT   (CODE)
                                    249 	.area CABS    (ABS,CODE)
