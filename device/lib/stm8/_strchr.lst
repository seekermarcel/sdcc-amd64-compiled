                                      1 ;--------------------------------------------------------
                                      2 ; File Created by SDCC : free open source ANSI-C Compiler
                                      3 ; Version 3.5.0 #9253 (Apr  4 2022) (Linux)
                                      4 ; This file was generated Mon Apr  4 14:17:15 2022
                                      5 ;--------------------------------------------------------
                                      6 	.module _strchr
                                      7 	.optsdcc -mstm8
                                      8 	
                                      9 ;--------------------------------------------------------
                                     10 ; Public variables in this module
                                     11 ;--------------------------------------------------------
                                     12 	.globl _strchr
                                     13 ;--------------------------------------------------------
                                     14 ; ram data
                                     15 ;--------------------------------------------------------
                                     16 	.area DATA
                                     17 ;--------------------------------------------------------
                                     18 ; ram data
                                     19 ;--------------------------------------------------------
                                     20 	.area INITIALIZED
                                     21 ;--------------------------------------------------------
                                     22 ; absolute external ram data
                                     23 ;--------------------------------------------------------
                                     24 	.area DABS (ABS)
                                     25 ;--------------------------------------------------------
                                     26 ; global & static initialisations
                                     27 ;--------------------------------------------------------
                                     28 	.area HOME
                                     29 	.area GSINIT
                                     30 	.area GSFINAL
                                     31 	.area GSINIT
                                     32 ;--------------------------------------------------------
                                     33 ; Home
                                     34 ;--------------------------------------------------------
                                     35 	.area HOME
                                     36 	.area HOME
                                     37 ;--------------------------------------------------------
                                     38 ; code
                                     39 ;--------------------------------------------------------
                                     40 	.area CODE
                                     41 ;	../_strchr.c: 36: char * strchr ( const char * string, int ch )
                                     42 ;	-----------------------------------------
                                     43 ;	 function strchr
                                     44 ;	-----------------------------------------
      000000                         45 _strchr:
      000000 88               [ 1]   46 	push	a
                                     47 ;	../_strchr.c: 39: while (*string && *string != ch)
      000001 1E 04            [ 2]   48 	ldw	x, (0x04, sp)
      000003                         49 00102$:
      000003 F6               [ 1]   50 	ld	a, (x)
      000004 6B 01            [ 1]   51 	ld	(0x01, sp), a
      000006 7B 01            [ 1]   52 	ld	a, (0x01, sp)
      000008 90 97            [ 1]   53 	ld	yl, a
      00000A 49               [ 1]   54 	rlc	a
      00000B 4F               [ 1]   55 	clr	a
      00000C A2 00            [ 1]   56 	sbc	a, #0x00
      00000E 90 95            [ 1]   57 	ld	yh, a
      000010 51               [ 1]   58 	exgw	x, y
      000011 13 06            [ 2]   59 	cpw	x, (0x06, sp)
      000013 51               [ 1]   60 	exgw	x, y
      000014 26 03            [ 1]   61 	jrne	00127$
      000016 A6 01            [ 1]   62 	ld	a, #0x01
      000018 21                      63 	.byte 0x21
      000019                         64 00127$:
      000019 4F               [ 1]   65 	clr	a
      00001A                         66 00128$:
      00001A 0D 01            [ 1]   67 	tnz	(0x01, sp)
      00001C 27 06            [ 1]   68 	jreq	00104$
      00001E 4D               [ 1]   69 	tnz	a
      00001F 26 03            [ 1]   70 	jrne	00104$
                                     71 ;	../_strchr.c: 40: string++;
      000021 5C               [ 2]   72 	incw	x
      000022 20 DF            [ 2]   73 	jra	00102$
      000024                         74 00104$:
                                     75 ;	../_strchr.c: 42: if (*string == ch)
      000024 4D               [ 1]   76 	tnz	a
                                     77 ;	../_strchr.c: 43: return(string);
      000025 26 01            [ 1]   78 	jrne	00107$
                                     79 ;	../_strchr.c: 44: return ( NULL );
      000027 5F               [ 1]   80 	clrw	x
      000028                         81 00107$:
      000028 84               [ 1]   82 	pop	a
      000029 81               [ 4]   83 	ret
                                     84 	.area CODE
                                     85 	.area INITIALIZER
                                     86 	.area CABS (ABS)
