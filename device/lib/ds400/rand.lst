                                      1 ;--------------------------------------------------------
                                      2 ; File Created by SDCC : free open source ANSI-C Compiler
                                      3 ; Version 3.5.0 #9253 (Apr  4 2022) (Linux)
                                      4 ; This file was generated Mon Apr  4 14:10:30 2022
                                      5 ;--------------------------------------------------------
                                      6 	.module rand
                                      7 	.optsdcc -mds400 --model-flat24
                                      8 	
                                      9 ;--------------------------------------------------------
                                     10 ; CPU specific extensions
                                     11 ;--------------------------------------------------------
                                     12 	.DS80C390
                                     13 	.amode	2	; 24 bit flat addressing
                           000082    14 dpl	=	0x82
                           000083    15 dph	=	0x83
                           000084    16 dpl1	=	0x84
                           000085    17 dph1	=	0x85
                           000086    18 dps	=	0x86
                           000093    19 dpx	=	0x93
                           000095    20 dpx1	=	0x95
                           00009B    21 esp	=	0x9B
                           00009C    22 ap	=	0x9C
                           00009C    23 acc1	=	0x9C
                           0000D1    24 mcnt0	=	0xD1
                           0000D2    25 mcnt1	=	0xD2
                           0000D3    26 ma	=	0xD3
                           0000D4    27 mb	=	0xD4
                           0000D5    28 mc	=	0xD5
                           00009D    29 acon	=	0x9D
                           0000D1    30 F1	=	0xD1	; user flag
                                     31 ;--------------------------------------------------------
                                     32 ; Public variables in this module
                                     33 ;--------------------------------------------------------
                                     34 	.globl _rand
                                     35 	.globl _srand
                                     36 ;--------------------------------------------------------
                                     37 ; special function registers
                                     38 ;--------------------------------------------------------
                                     39 ;--------------------------------------------------------
                                     40 ; special function bits
                                     41 ;--------------------------------------------------------
                                     42 ;--------------------------------------------------------
                                     43 ; overlayable register banks
                                     44 ;--------------------------------------------------------
                                     45 	.area REG_BANK_0	(REL,OVR,DATA)
      000000                         46 	.ds 8
                                     47 	.area REG_BANK_3	(REL,OVR,DATA)
      000000                         48 	.ds 8
                                     49 ;--------------------------------------------------------
                                     50 ; internal ram data
                                     51 ;--------------------------------------------------------
                                     52 	.area DSEG    (DATA)
                                     53 ;--------------------------------------------------------
                                     54 ; overlayable items in internal ram 
                                     55 ;--------------------------------------------------------
                                     56 ;--------------------------------------------------------
                                     57 ; indirectly addressable internal ram data
                                     58 ;--------------------------------------------------------
                                     59 	.area ISEG    (DATA)
                                     60 ;--------------------------------------------------------
                                     61 ; absolute internal ram data
                                     62 ;--------------------------------------------------------
                                     63 	.area IABS    (ABS,DATA)
                                     64 	.area IABS    (ABS,DATA)
                                     65 ;--------------------------------------------------------
                                     66 ; bit data
                                     67 ;--------------------------------------------------------
                                     68 	.area BSEG    (BIT)
                                     69 ;--------------------------------------------------------
                                     70 ; paged external ram data
                                     71 ;--------------------------------------------------------
                                     72 	.area PSEG    (PAG,XDATA)
                                     73 ;--------------------------------------------------------
                                     74 ; external ram data
                                     75 ;--------------------------------------------------------
                                     76 	.area XSEG    (XDATA)
                                     77 ;--------------------------------------------------------
                                     78 ; absolute external ram data
                                     79 ;--------------------------------------------------------
                                     80 	.area XABS    (ABS,XDATA)
                                     81 ;--------------------------------------------------------
                                     82 ; external initialized ram data
                                     83 ;--------------------------------------------------------
                                     84 	.area XISEG   (XDATA)
      000000                         85 _next:
      000000                         86 	.ds 4
                                     87 ;--------------------------------------------------------
                                     88 ; global & static initialisations
                                     89 ;--------------------------------------------------------
                                     90 	.area HOME    (CODE)
                                     91 	.area GSINIT  (CODE)
                                     92 	.area GSFINAL (CODE)
                                     93 	.area GSINIT  (CODE)
                                     94 ;--------------------------------------------------------
                                     95 ; Home
                                     96 ;--------------------------------------------------------
                                     97 	.area HOME    (CODE)
                                     98 	.area HOME    (CODE)
                                     99 ;--------------------------------------------------------
                                    100 ; code
                                    101 ;--------------------------------------------------------
                                    102 	.area CSEG    (CODE)
                                    103 ;------------------------------------------------------------
                                    104 ;Allocation info for local variables in function 'rand'
                                    105 ;------------------------------------------------------------
                                    106 ;	rand.c:33: int rand(void)
                                    107 ;	-----------------------------------------
                                    108 ;	 function rand
                                    109 ;	-----------------------------------------
      000000                        110 _rand:
                           000002   111 	ar2 = 0x02
                           000003   112 	ar3 = 0x03
                           000004   113 	ar4 = 0x04
                           000005   114 	ar5 = 0x05
                           000006   115 	ar6 = 0x06
                           000007   116 	ar7 = 0x07
                           000000   117 	ar0 = 0x00
                           000001   118 	ar1 = 0x01
                                    119 ;	rand.c:35: next = next * 1103515245UL + 12345;
      000000 90s00r00r00      [12]  120 	mov	dptr,#_next
                                    121 ;	genAssign: resultIsFar = TRUE
      000004 75 86 21         [12]  122 	mov	dps,#0x21
      000007 90s00r00r00      [12]  123 	mov	dptr,#__mullong_PARM_2
      00000B E0               [ 8]  124 	movx	a,@dptr
      00000C F0               [ 8]  125 	movx	@dptr,a
      00000D A3               [12]  126 	inc	dptr
      00000E A3               [12]  127 	inc	dptr
      00000F E0               [ 8]  128 	movx	a,@dptr
      000010 F0               [ 8]  129 	movx	@dptr,a
      000011 A3               [12]  130 	inc	dptr
      000012 A3               [12]  131 	inc	dptr
      000013 E0               [ 8]  132 	movx	a,@dptr
      000014 F0               [ 8]  133 	movx	@dptr,a
      000015 A3               [12]  134 	inc	dptr
      000016 A3               [12]  135 	inc	dptr
      000017 E0               [ 8]  136 	movx	a,@dptr
      000018 F0               [ 8]  137 	movx	@dptr,a
      000019 75 86 00         [12]  138 	mov	dps,#0
      00001C 90 C6 4E 6D      [12]  139 	mov	dptr,#0xC64E6D
      000020 75 F0 41         [12]  140 	mov	b,#0x41
      000023 12s00r00r00      [16]  141 	lcall	__mullong
      000027 AA 82            [ 8]  142 	mov	r2,dpl
      000029 AB 83            [ 8]  143 	mov	r3,dph
      00002B AC 93            [ 8]  144 	mov	r4,dpx
      00002D AD F0            [ 8]  145 	mov	r5,b
      00002F 90s00r00r00      [12]  146 	mov	dptr,#_next
      000033 74 39            [ 8]  147 	mov	a,#0x39
      000035 2A               [ 4]  148 	add	a,r2
      000036 F0               [ 8]  149 	movx	@dptr,a
      000037 74 30            [ 8]  150 	mov	a,#0x30
      000039 3B               [ 4]  151 	addc	a,r3
      00003A A3               [12]  152 	inc	dptr
      00003B F0               [ 8]  153 	movx	@dptr,a
      00003C E4               [ 4]  154 	clr	a
      00003D 3C               [ 4]  155 	addc	a,r4
      00003E A3               [12]  156 	inc	dptr
      00003F F0               [ 8]  157 	movx	@dptr,a
      000040 E4               [ 4]  158 	clr	a
      000041 3D               [ 4]  159 	addc	a,r5
      000042 A3               [12]  160 	inc	dptr
      000043 F0               [ 8]  161 	movx	@dptr,a
                                    162 ;	rand.c:36: return (unsigned int)(next/65536) % (RAND_MAX + 1U);
      000044 90s00r00r00      [12]  163 	mov	dptr,#_next
      000048 A3               [12]  164 	inc	dptr
      000049 A3               [12]  165 	inc	dptr
      00004A E0               [ 8]  166 	movx	a,@dptr
      00004B FA               [ 4]  167 	mov	r2,a
      00004C A3               [12]  168 	inc	dptr
      00004D E0               [ 8]  169 	movx	a,@dptr
      00004E FB               [ 4]  170 	mov	r3,a
      00004F 7C 00            [ 8]  171 	mov	r4,#0x00
      000051 7D 00            [ 8]  172 	mov	r5,#0x00
      000053 8A 82            [ 8]  173 	mov	dpl,r2
      000055 74 7F            [ 8]  174 	mov	a,#0x7F
      000057 5B               [ 4]  175 	anl	a,r3
      000058 F5 83            [ 8]  176 	mov	dph,a
      00005A                        177 00101$:
      00005A 22               [16]  178 	ret
                                    179 ;------------------------------------------------------------
                                    180 ;Allocation info for local variables in function 'srand'
                                    181 ;------------------------------------------------------------
                                    182 ;seed                      Allocated to registers r2 r3 
                                    183 ;------------------------------------------------------------
                                    184 ;	rand.c:39: void srand(unsigned int seed)
                                    185 ;	-----------------------------------------
                                    186 ;	 function srand
                                    187 ;	-----------------------------------------
      00005B                        188 _srand:
      00005B 85 82 84         [12]  189 	mov	dpl1,dpl
      00005E 85 83 85         [12]  190 	mov	dph1,dph
                                    191 ;	rand.c:41: next = seed;
      000061 90s00r00r00      [12]  192 	mov	dptr,#_next
      000065 E5 84            [ 8]  193 	mov	a,dpl1
      000067 F0               [ 8]  194 	movx	@dptr,a
      000068 A3               [12]  195 	inc	dptr
      000069 E5 85            [ 8]  196 	mov	a,dph1
      00006B F0               [ 8]  197 	movx	@dptr,a
      00006C A3               [12]  198 	inc	dptr
      00006D E4               [ 4]  199 	clr	a
      00006E F0               [ 8]  200 	movx	@dptr,a
      00006F A3               [12]  201 	inc	dptr
      000070 E4               [ 4]  202 	clr	a
      000071 F0               [ 8]  203 	movx	@dptr,a
      000072                        204 00101$:
      000072 22               [16]  205 	ret
                                    206 	.area CSEG    (CODE)
                                    207 	.area CONST   (CODE)
                                    208 	.area XINIT   (CODE)
      000000                        209 __xinit__next:
      000000 01 00 00 00            210 	.byte #0x01,#0x00,#0x00,#0x00	; 1
                                    211 	.area CABS    (ABS,CODE)
