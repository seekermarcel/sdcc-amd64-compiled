                              1 ;--------------------------------------------------------
                              2 ; File Created by SDCC : free open source ANSI-C Compiler
                              3 ; Version 3.5.0 #9253 (Apr  4 2022) (Linux)
                              4 ; This file was generated Mon Apr  4 14:15:27 2022
                              5 ;--------------------------------------------------------
                              6 	.module _strncat
                              7 	.optsdcc -mz80
                              8 	
                              9 ;--------------------------------------------------------
                             10 ; Public variables in this module
                             11 ;--------------------------------------------------------
                             12 	.globl _strncat
                             13 ;--------------------------------------------------------
                             14 ; special function registers
                             15 ;--------------------------------------------------------
                             16 ;--------------------------------------------------------
                             17 ; ram data
                             18 ;--------------------------------------------------------
                             19 	.area _DATA
                             20 ;--------------------------------------------------------
                             21 ; ram data
                             22 ;--------------------------------------------------------
                             23 	.area _INITIALIZED
                             24 ;--------------------------------------------------------
                             25 ; absolute external ram data
                             26 ;--------------------------------------------------------
                             27 	.area _DABS (ABS)
                             28 ;--------------------------------------------------------
                             29 ; global & static initialisations
                             30 ;--------------------------------------------------------
                             31 	.area _HOME
                             32 	.area _GSINIT
                             33 	.area _GSFINAL
                             34 	.area _GSINIT
                             35 ;--------------------------------------------------------
                             36 ; Home
                             37 ;--------------------------------------------------------
                             38 	.area _HOME
                             39 	.area _HOME
                             40 ;--------------------------------------------------------
                             41 ; code
                             42 ;--------------------------------------------------------
                             43 	.area _CODE
                             44 ;../_strncat.c:31: char * strncat ( char * front, const char * back, size_t count )
                             45 ;	---------------------------------
                             46 ; Function strncat
                             47 ; ---------------------------------
   0000                      48 _strncat::
   0000 DD E5         [15]   49 	push	ix
   0002 DD 21 00 00   [14]   50 	ld	ix,#0
   0006 DD 39         [15]   51 	add	ix,sp
   0008 F5            [11]   52 	push	af
   0009 F5            [11]   53 	push	af
   000A 3B            [ 6]   54 	dec	sp
                             55 ;../_strncat.c:33: char *start = front;
   000B DD 4E 04      [19]   56 	ld	c,4 (ix)
   000E DD 46 05      [19]   57 	ld	b,5 (ix)
                             58 ;../_strncat.c:35: while (*front++);
   0011 69            [ 4]   59 	ld	l, c
   0012 60            [ 4]   60 	ld	h, b
   0013                      61 00101$:
   0013 7E            [ 7]   62 	ld	a,(hl)
   0014 23            [ 6]   63 	inc	hl
   0015 B7            [ 4]   64 	or	a, a
   0016 20 FB         [12]   65 	jr	NZ,00101$
                             66 ;../_strncat.c:37: front--;
   0018 7D            [ 4]   67 	ld	a,l
   0019 C6 FF         [ 7]   68 	add	a,#0xFF
   001B DD 77 04      [19]   69 	ld	4 (ix),a
   001E 7C            [ 4]   70 	ld	a,h
   001F CE FF         [ 7]   71 	adc	a,#0xFF
   0021 DD 77 05      [19]   72 	ld	5 (ix),a
                             73 ;../_strncat.c:39: while (count--)
   0024 DD 5E 06      [19]   74 	ld	e,6 (ix)
   0027 DD 56 07      [19]   75 	ld	d,7 (ix)
   002A DD 7E 04      [19]   76 	ld	a,4 (ix)
   002D DD 77 FD      [19]   77 	ld	-3 (ix),a
   0030 DD 7E 05      [19]   78 	ld	a,5 (ix)
   0033 DD 77 FE      [19]   79 	ld	-2 (ix),a
   0036 DD 7E 08      [19]   80 	ld	a,8 (ix)
   0039 DD 77 FB      [19]   81 	ld	-5 (ix),a
   003C DD 7E 09      [19]   82 	ld	a,9 (ix)
   003F DD 77 FC      [19]   83 	ld	-4 (ix),a
   0042                      84 00106$:
   0042 E1            [10]   85 	pop	hl
   0043 E5            [11]   86 	push	hl
   0044 DD 7E FB      [19]   87 	ld	a,-5 (ix)
   0047 C6 FF         [ 7]   88 	add	a,#0xFF
   0049 DD 77 FB      [19]   89 	ld	-5 (ix),a
   004C DD 7E FC      [19]   90 	ld	a,-4 (ix)
   004F CE FF         [ 7]   91 	adc	a,#0xFF
   0051 DD 77 FC      [19]   92 	ld	-4 (ix),a
   0054 7C            [ 4]   93 	ld	a,h
   0055 B5            [ 4]   94 	or	a,l
   0056 28 2D         [12]   95 	jr	Z,00108$
                             96 ;../_strncat.c:40: if (!(*front++ = *back++))
   0058 1A            [ 7]   97 	ld	a,(de)
   0059 DD 77 FF      [19]   98 	ld	-1 (ix),a
   005C 13            [ 6]   99 	inc	de
   005D DD 6E FD      [19]  100 	ld	l,-3 (ix)
   0060 DD 66 FE      [19]  101 	ld	h,-2 (ix)
   0063 DD 7E FF      [19]  102 	ld	a,-1 (ix)
   0066 77            [ 7]  103 	ld	(hl),a
   0067 DD 34 FD      [23]  104 	inc	-3 (ix)
   006A 20 03         [12]  105 	jr	NZ,00132$
   006C DD 34 FE      [23]  106 	inc	-2 (ix)
   006F                     107 00132$:
   006F DD 7E FD      [19]  108 	ld	a,-3 (ix)
   0072 DD 77 04      [19]  109 	ld	4 (ix),a
   0075 DD 7E FE      [19]  110 	ld	a,-2 (ix)
   0078 DD 77 05      [19]  111 	ld	5 (ix),a
   007B DD 7E FF      [19]  112 	ld	a,-1 (ix)
   007E B7            [ 4]  113 	or	a, a
   007F 20 C1         [12]  114 	jr	NZ,00106$
                            115 ;../_strncat.c:41: return(start);
   0081 69            [ 4]  116 	ld	l, c
   0082 60            [ 4]  117 	ld	h, b
   0083 18 0A         [12]  118 	jr	00109$
   0085                     119 00108$:
                            120 ;../_strncat.c:43: *front = '\0';
   0085 DD 6E 04      [19]  121 	ld	l,4 (ix)
   0088 DD 66 05      [19]  122 	ld	h,5 (ix)
   008B 36 00         [10]  123 	ld	(hl),#0x00
                            124 ;../_strncat.c:44: return(start);
   008D 69            [ 4]  125 	ld	l, c
   008E 60            [ 4]  126 	ld	h, b
   008F                     127 00109$:
   008F DD F9         [10]  128 	ld	sp, ix
   0091 DD E1         [14]  129 	pop	ix
   0093 C9            [10]  130 	ret
                            131 	.area _CODE
                            132 	.area _INITIALIZER
                            133 	.area _CABS (ABS)
