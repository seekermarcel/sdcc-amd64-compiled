                              1 ;--------------------------------------------------------
                              2 ; File Created by SDCC : free open source ANSI-C Compiler
                              3 ; Version 3.5.0 #9253 (Apr  4 2022) (Linux)
                              4 ; This file was generated Mon Apr  4 14:15:56 2022
                              5 ;--------------------------------------------------------
                              6 	.module powf
                              7 	.optsdcc -mr2k
                              8 	
                              9 ;--------------------------------------------------------
                             10 ; Public variables in this module
                             11 ;--------------------------------------------------------
                             12 	.globl _logf
                             13 	.globl _expf
                             14 	.globl _powf
                             15 ;--------------------------------------------------------
                             16 ; special function registers
                             17 ;--------------------------------------------------------
                             18 ;--------------------------------------------------------
                             19 ; ram data
                             20 ;--------------------------------------------------------
                             21 	.area _DATA
                             22 ;--------------------------------------------------------
                             23 ; ram data
                             24 ;--------------------------------------------------------
                             25 	.area _INITIALIZED
                             26 ;--------------------------------------------------------
                             27 ; absolute external ram data
                             28 ;--------------------------------------------------------
                             29 	.area _DABS (ABS)
                             30 ;--------------------------------------------------------
                             31 ; global & static initialisations
                             32 ;--------------------------------------------------------
                             33 	.area _HOME
                             34 	.area _GSINIT
                             35 	.area _GSFINAL
                             36 	.area _GSINIT
                             37 ;--------------------------------------------------------
                             38 ; Home
                             39 ;--------------------------------------------------------
                             40 	.area _HOME
                             41 	.area _HOME
                             42 ;--------------------------------------------------------
                             43 ; code
                             44 ;--------------------------------------------------------
                             45 	.area _CODE
                             46 ;../powf.c:35: float powf(float x, float y)
                             47 ;	---------------------------------
                             48 ; Function powf
                             49 ; ---------------------------------
   0000                      50 _powf::
   0000 DD E5                51 	push	ix
   0002 DD 21 00 00          52 	ld	ix,#0
   0006 DD 39                53 	add	ix,sp
                             54 ;../powf.c:37: if(y == 0.0) return 1.0;
   0008 DD 7E 0B             55 	ld	a,11 (ix)
   000B CB BF                56 	res	7, a
   000D DD B6 0A             57 	or	a, 10 (ix)
   0010 DD B6 09             58 	or	a, 9 (ix)
   0013 DD B6 08             59 	or	a,8 (ix)
   0016 20 08                60 	jr	NZ,00102$
   0018 21 00 00             61 	ld	hl,#0x0000
   001B 11 80 3F             62 	ld	de,#0x3F80
   001E 18 64                63 	jr	00107$
   0020                      64 00102$:
                             65 ;../powf.c:38: if(y == 1.0) return x;
   0020 21 80 3F             66 	ld	hl,#0x3F80
   0023 E5                   67 	push	hl
   0024 21 00 00             68 	ld	hl,#0x0000
   0027 E5                   69 	push	hl
   0028 C4 0E                70 	ld	hl, 14 (sp)
   002A E5                   71 	push	hl
   002B C4 0E                72 	ld	hl, 14 (sp)
   002D E5                   73 	push	hl
   002E CDr00r00             74 	call	___fseq
   0031 27 08                75 	add	sp, #8
   0033 7D                   76 	ld	a,l
   0034 B7                   77 	or	a, a
   0035 28 0E                78 	jr	Z,00104$
   0037 DD 6E 04             79 	ld	l,4 (ix)
   003A DD 66 05             80 	ld	h,5 (ix)
   003D DD 5E 06             81 	ld	e,6 (ix)
   0040 DD 56 07             82 	ld	d,7 (ix)
   0043 18 3F                83 	jr	00107$
   0045                      84 00104$:
                             85 ;../powf.c:39: if(x <= 0.0) return 0.0;
   0045 21 00 00             86 	ld	hl,#0x0000
   0048 E5                   87 	push	hl
   0049 21 00 00             88 	ld	hl,#0x0000
   004C E5                   89 	push	hl
   004D C4 0A                90 	ld	hl, 10 (sp)
   004F E5                   91 	push	hl
   0050 C4 0A                92 	ld	hl, 10 (sp)
   0052 E5                   93 	push	hl
   0053 CDr00r00             94 	call	___fsgt
   0056 27 08                95 	add	sp, #8
   0058 7D                   96 	ld	a,l
   0059 B7                   97 	or	a, a
   005A 20 07                98 	jr	NZ,00106$
   005C 21 00 00             99 	ld	hl,#0x0000
   005F 5D                  100 	ld	e,l
   0060 54                  101 	ld	d,h
   0061 18 21               102 	jr	00107$
   0063                     103 00106$:
                            104 ;../powf.c:40: return expf(logf(x) * y);
   0063 C4 06               105 	ld	hl, 6 (sp)
   0065 E5                  106 	push	hl
   0066 C4 06               107 	ld	hl, 6 (sp)
   0068 E5                  108 	push	hl
   0069 CDr00r00            109 	call	_logf
   006C 27 04               110 	add	sp, #4
   006E 4D                  111 	ld	c,l
   006F 44                  112 	ld	b,h
   0070 C4 0A               113 	ld	hl, 10 (sp)
   0072 E5                  114 	push	hl
   0073 C4 0A               115 	ld	hl, 10 (sp)
   0075 E5                  116 	push	hl
   0076 D5                  117 	push	de
   0077 C5                  118 	push	bc
   0078 CDr00r00            119 	call	___fsmul
   007B 27 08               120 	add	sp, #8
   007D D5                  121 	push	de
   007E E5                  122 	push	hl
   007F CDr00r00            123 	call	_expf
   0082 27 04               124 	add	sp, #4
   0084                     125 00107$:
   0084 DD E1               126 	pop	ix
   0086 C9                  127 	ret
                            128 	.area _CODE
                            129 	.area _INITIALIZER
                            130 	.area _CABS (ABS)
