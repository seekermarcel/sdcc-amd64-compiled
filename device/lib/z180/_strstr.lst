                              1 ;--------------------------------------------------------
                              2 ; File Created by SDCC : free open source ANSI-C Compiler
                              3 ; Version 3.5.0 #9253 (Apr  4 2022) (Linux)
                              4 ; This file was generated Mon Apr  4 14:15:45 2022
                              5 ;--------------------------------------------------------
                              6 	.hd64
                              7 	.module _strstr
                              8 	.optsdcc -mz180
                              9 	
                             10 ;--------------------------------------------------------
                             11 ; Public variables in this module
                             12 ;--------------------------------------------------------
                             13 	.globl _strstr
                             14 ;--------------------------------------------------------
                             15 ; special function registers
                             16 ;--------------------------------------------------------
                             17 ;--------------------------------------------------------
                             18 ; ram data
                             19 ;--------------------------------------------------------
                             20 	.area _DATA
                             21 ;--------------------------------------------------------
                             22 ; ram data
                             23 ;--------------------------------------------------------
                             24 	.area _INITIALIZED
                             25 ;--------------------------------------------------------
                             26 ; absolute external ram data
                             27 ;--------------------------------------------------------
                             28 	.area _DABS (ABS)
                             29 ;--------------------------------------------------------
                             30 ; global & static initialisations
                             31 ;--------------------------------------------------------
                             32 	.area _HOME
                             33 	.area _GSINIT
                             34 	.area _GSFINAL
                             35 	.area _GSINIT
                             36 ;--------------------------------------------------------
                             37 ; Home
                             38 ;--------------------------------------------------------
                             39 	.area _HOME
                             40 	.area _HOME
                             41 ;--------------------------------------------------------
                             42 ; code
                             43 ;--------------------------------------------------------
                             44 	.area _CODE
                             45 ;../_strstr.c:31: char * strstr ( const char * str1, const char * str2 )
                             46 ;	---------------------------------
                             47 ; Function strstr
                             48 ; ---------------------------------
   0000                      49 _strstr::
   0000 DD E5         [14]   50 	push	ix
   0002 DD 21 00 00   [12]   51 	ld	ix,#0
   0006 DD 39         [10]   52 	add	ix,sp
   0008 21 F6 FF      [ 9]   53 	ld	hl,#-10
   000B 39            [ 7]   54 	add	hl,sp
   000C F9            [ 4]   55 	ld	sp,hl
                             56 ;../_strstr.c:33: const char * cp = str1;
   000D DD 4E 04      [14]   57 	ld	c,4 (ix)
   0010 DD 46 05      [14]   58 	ld	b,5 (ix)
                             59 ;../_strstr.c:37: if ( !*str2 )
   0013 DD 5E 06      [14]   60 	ld	e,6 (ix)
   0016 DD 56 07      [14]   61 	ld	d,7 (ix)
   0019 1A            [ 6]   62 	ld	a,(de)
   001A B7            [ 4]   63 	or	a, a
   001B 20 05         [ 8]   64 	jr	NZ,00122$
                             65 ;../_strstr.c:38: return str1;
   001D 69            [ 4]   66 	ld	l, c
   001E 60            [ 4]   67 	ld	h, b
   001F C3rADr00      [ 9]   68 	jp	00113$
                             69 ;../_strstr.c:40: while (*cp)
   0022                      70 00122$:
   0022 33            [ 4]   71 	inc	sp
   0023 33            [ 4]   72 	inc	sp
   0024 C5            [11]   73 	push	bc
   0025                      74 00110$:
   0025 E1            [ 9]   75 	pop	hl
   0026 E5            [11]   76 	push	hl
   0027 7E            [ 6]   77 	ld	a,(hl)
   0028 B7            [ 4]   78 	or	a, a
   0029 CArAAr00      [ 9]   79 	jp	Z,00112$
                             80 ;../_strstr.c:43: s2 = str2;
   002C DD 73 F8      [15]   81 	ld	-8 (ix),e
   002F DD 72 F9      [15]   82 	ld	-7 (ix),d
                             83 ;../_strstr.c:45: while ( *s1 && *s2 && !(*s1-*s2) )
   0032 DD 7E F6      [14]   84 	ld	a,-10 (ix)
   0035 DD 77 FE      [15]   85 	ld	-2 (ix),a
   0038 DD 7E F7      [14]   86 	ld	a,-9 (ix)
   003B DD 77 FF      [15]   87 	ld	-1 (ix),a
   003E                      88 00105$:
   003E DD 6E FE      [14]   89 	ld	l,-2 (ix)
   0041 DD 66 FF      [14]   90 	ld	h,-1 (ix)
   0044 7E            [ 6]   91 	ld	a,(hl)
   0045 DD 77 FB      [15]   92 	ld	-5 (ix),a
   0048 DD 6E F8      [14]   93 	ld	l,-8 (ix)
   004B DD 66 F9      [14]   94 	ld	h,-7 (ix)
   004E 7E            [ 6]   95 	ld	a,(hl)
   004F DD 77 FA      [15]   96 	ld	-6 (ix),a
   0052 DD 7E FB      [14]   97 	ld	a,-5 (ix)
   0055 B7            [ 4]   98 	or	a, a
   0056 28 3B         [ 8]   99 	jr	Z,00107$
   0058 DD 7E FA      [14]  100 	ld	a,-6 (ix)
   005B B7            [ 4]  101 	or	a, a
   005C 28 35         [ 8]  102 	jr	Z,00107$
   005E DD 7E FB      [14]  103 	ld	a,-5 (ix)
   0061 DD 77 FC      [15]  104 	ld	-4 (ix),a
   0064 DD 7E FB      [14]  105 	ld	a,-5 (ix)
   0067 17            [ 3]  106 	rla
   0068 9F            [ 4]  107 	sbc	a, a
   0069 DD 77 FD      [15]  108 	ld	-3 (ix),a
   006C DD 66 FA      [14]  109 	ld	h,-6 (ix)
   006F DD 7E FA      [14]  110 	ld	a,-6 (ix)
   0072 17            [ 3]  111 	rla
   0073 9F            [ 4]  112 	sbc	a, a
   0074 6F            [ 4]  113 	ld	l,a
   0075 DD 7E FC      [14]  114 	ld	a,-4 (ix)
   0078 94            [ 4]  115 	sub	a, h
   0079 67            [ 4]  116 	ld	h,a
   007A DD 7E FD      [14]  117 	ld	a,-3 (ix)
   007D 9D            [ 4]  118 	sbc	a, l
   007E B4            [ 4]  119 	or	a,h
   007F 20 12         [ 8]  120 	jr	NZ,00107$
                            121 ;../_strstr.c:46: s1++, s2++;
   0081 DD 34 FE      [18]  122 	inc	-2 (ix)
   0084 20 03         [ 8]  123 	jr	NZ,00148$
   0086 DD 34 FF      [18]  124 	inc	-1 (ix)
   0089                     125 00148$:
   0089 DD 34 F8      [18]  126 	inc	-8 (ix)
   008C 20 B0         [ 8]  127 	jr	NZ,00105$
   008E DD 34 F9      [18]  128 	inc	-7 (ix)
   0091 18 AB         [ 8]  129 	jr	00105$
   0093                     130 00107$:
                            131 ;../_strstr.c:48: if (!*s2)
   0093 DD 7E FA      [14]  132 	ld	a,-6 (ix)
   0096 B7            [ 4]  133 	or	a, a
   0097 20 04         [ 8]  134 	jr	NZ,00109$
                            135 ;../_strstr.c:49: return( (char*)cp );
   0099 69            [ 4]  136 	ld	l, c
   009A 60            [ 4]  137 	ld	h, b
   009B 18 10         [ 8]  138 	jr	00113$
   009D                     139 00109$:
                            140 ;../_strstr.c:51: cp++;
   009D DD 34 F6      [18]  141 	inc	-10 (ix)
   00A0 20 03         [ 8]  142 	jr	NZ,00150$
   00A2 DD 34 F7      [18]  143 	inc	-9 (ix)
   00A5                     144 00150$:
   00A5 C1            [ 9]  145 	pop	bc
   00A6 C5            [11]  146 	push	bc
   00A7 C3r25r00      [ 9]  147 	jp	00110$
   00AA                     148 00112$:
                            149 ;../_strstr.c:54: return (NULL) ;
   00AA 21 00 00      [ 9]  150 	ld	hl,#0x0000
   00AD                     151 00113$:
   00AD DD F9         [ 7]  152 	ld	sp, ix
   00AF DD E1         [12]  153 	pop	ix
   00B1 C9            [ 9]  154 	ret
                            155 	.area _CODE
                            156 	.area _INITIALIZER
                            157 	.area _CABS (ABS)
