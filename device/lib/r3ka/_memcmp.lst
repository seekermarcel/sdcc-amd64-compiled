                              1 ;--------------------------------------------------------
                              2 ; File Created by SDCC : free open source ANSI-C Compiler
                              3 ; Version 3.5.0 #9253 (Apr  4 2022) (Linux)
                              4 ; This file was generated Mon Apr  4 14:16:20 2022
                              5 ;--------------------------------------------------------
                              6 	.r3k
                              7 	.module _memcmp
                              8 	.optsdcc -mr3ka
                              9 	
                             10 ;--------------------------------------------------------
                             11 ; Public variables in this module
                             12 ;--------------------------------------------------------
                             13 	.globl _memcmp
                             14 ;--------------------------------------------------------
                             15 ; special function registers
                             16 ;--------------------------------------------------------
                             17 ;--------------------------------------------------------
                             18 ; ram data
                             19 ;--------------------------------------------------------
                             20 	.area _DATA
                             21 ;--------------------------------------------------------
                             22 ; ram data
                             23 ;--------------------------------------------------------
                             24 	.area _INITIALIZED
                             25 ;--------------------------------------------------------
                             26 ; absolute external ram data
                             27 ;--------------------------------------------------------
                             28 	.area _DABS (ABS)
                             29 ;--------------------------------------------------------
                             30 ; global & static initialisations
                             31 ;--------------------------------------------------------
                             32 	.area _HOME
                             33 	.area _GSINIT
                             34 	.area _GSFINAL
                             35 	.area _GSINIT
                             36 ;--------------------------------------------------------
                             37 ; Home
                             38 ;--------------------------------------------------------
                             39 	.area _HOME
                             40 	.area _HOME
                             41 ;--------------------------------------------------------
                             42 ; code
                             43 ;--------------------------------------------------------
                             44 	.area _CODE
                             45 ;../_memcmp.c:31: int memcmp (const void * buf1, const void * buf2, size_t count)
                             46 ;	---------------------------------
                             47 ; Function memcmp
                             48 ; ---------------------------------
   0000                      49 _memcmp::
   0000 DD E5                50 	push	ix
   0002 DD 21 00 00          51 	ld	ix,#0
   0006 DD 39                52 	add	ix,sp
   0008 27 FC                53 	add	sp, #-4
                             54 ;../_memcmp.c:33: if (!count)
   000A DD 7E 09             55 	ld	a,9 (ix)
   000D DD B6 08             56 	or	a,8 (ix)
   0010 20 05                57 	jr	NZ,00112$
                             58 ;../_memcmp.c:34: return(0);
   0012 21 00 00             59 	ld	hl,#0x0000
   0015 18 47                60 	jr	00107$
                             61 ;../_memcmp.c:36: while ( --count && *((char *)buf1) == *((char *)buf2) ) {
   0017                      62 00112$:
   0017 EB                   63 	ex	de, hl
   0018 C4 0C                64 	ld	hl, 12 (sp)
   001A EB                   65 	ex	de, hl
   001B                      66 00104$:
   001B 1B                   67 	dec	de
   001C 7A                   68 	ld	a,d
   001D B3                   69 	or	a,e
   001E 28 2E                70 	jr	Z,00106$
   0020 DD 7E 04             71 	ld	a,4 (ix)
   0023 DD 77 FC             72 	ld	-4 (ix),a
   0026 DD 7E 05             73 	ld	a,5 (ix)
   0029 DD 77 FD             74 	ld	-3 (ix),a
   002C C4 00                75 	ld	hl, 0 (sp)
   002E 46                   76 	ld	b,(hl)
   002F DD 7E 06             77 	ld	a,6 (ix)
   0032 DD 77 FE             78 	ld	-2 (ix),a
   0035 DD 7E 07             79 	ld	a,7 (ix)
   0038 DD 77 FF             80 	ld	-1 (ix),a
   003B C4 02                81 	ld	hl, 2 (sp)
   003D 4E                   82 	ld	c,(hl)
   003E 78                   83 	ld	a,b
   003F 91                   84 	sub	a, c
   0040 20 0C                85 	jr	NZ,00106$
                             86 ;../_memcmp.c:37: buf1 = (char *)buf1 + 1;
   0042 C4 00                87 	ld	hl, 0 (sp)
   0044 23                   88 	inc	hl
   0045 D4 08                89 	ld	8 (sp), hl
                             90 ;../_memcmp.c:38: buf2 = (char *)buf2 + 1;
   0047 C4 02                91 	ld	hl, 2 (sp)
   0049 23                   92 	inc	hl
   004A D4 0A                93 	ld	10 (sp), hl
   004C 18 CD                94 	jr	00104$
   004E                      95 00106$:
                             96 ;../_memcmp.c:41: return( *((unsigned char *)buf1) - *((unsigned char *)buf2) );
   004E C4 08                97 	ld	hl, 8 (sp)
   0050 5E                   98 	ld	e,(hl)
   0051 16 00                99 	ld	d,#0x00
   0053 C4 0A               100 	ld	hl, 10 (sp)
   0055 6E                  101 	ld	l,(hl)
   0056 26 00               102 	ld	h,#0x00
   0058 7B                  103 	ld	a,e
   0059 95                  104 	sub	a, l
   005A 6F                  105 	ld	l,a
   005B 7A                  106 	ld	a,d
   005C 9C                  107 	sbc	a, h
   005D 67                  108 	ld	h,a
   005E                     109 00107$:
   005E DD F9               110 	ld	sp, ix
   0060 DD E1               111 	pop	ix
   0062 C9                  112 	ret
                            113 	.area _CODE
                            114 	.area _INITIALIZER
                            115 	.area _CABS (ABS)
