                              1 ;--------------------------------------------------------
                              2 ; File Created by SDCC : free open source ANSI-C Compiler
                              3 ; Version 3.5.0 #9253 (Apr  4 2022) (Linux)
                              4 ; This file was generated Mon Apr  4 14:15:28 2022
                              5 ;--------------------------------------------------------
                              6 	.module _realloc
                              7 	.optsdcc -mz80
                              8 	
                              9 ;--------------------------------------------------------
                             10 ; Public variables in this module
                             11 ;--------------------------------------------------------
                             12 	.globl __sdcc_find_memheader
                             13 	.globl _memmove
                             14 	.globl _free
                             15 	.globl _malloc
                             16 	.globl _realloc
                             17 ;--------------------------------------------------------
                             18 ; special function registers
                             19 ;--------------------------------------------------------
                             20 ;--------------------------------------------------------
                             21 ; ram data
                             22 ;--------------------------------------------------------
                             23 	.area _DATA
                             24 ;--------------------------------------------------------
                             25 ; ram data
                             26 ;--------------------------------------------------------
                             27 	.area _INITIALIZED
                             28 ;--------------------------------------------------------
                             29 ; absolute external ram data
                             30 ;--------------------------------------------------------
                             31 	.area _DABS (ABS)
                             32 ;--------------------------------------------------------
                             33 ; global & static initialisations
                             34 ;--------------------------------------------------------
                             35 	.area _HOME
                             36 	.area _GSINIT
                             37 	.area _GSFINAL
                             38 	.area _GSINIT
                             39 ;--------------------------------------------------------
                             40 ; Home
                             41 ;--------------------------------------------------------
                             42 	.area _HOME
                             43 	.area _HOME
                             44 ;--------------------------------------------------------
                             45 ; code
                             46 ;--------------------------------------------------------
                             47 	.area _CODE
                             48 ;../_realloc.c:84: void __xdata * realloc (void * p, size_t size)
                             49 ;	---------------------------------
                             50 ; Function realloc
                             51 ; ---------------------------------
   0000                      52 _realloc::
   0000 DD E5         [15]   53 	push	ix
   0002 DD 21 00 00   [14]   54 	ld	ix,#0
   0006 DD 39         [15]   55 	add	ix,sp
   0008 21 FA FF      [10]   56 	ld	hl,#-6
   000B 39            [11]   57 	add	hl,sp
   000C F9            [ 6]   58 	ld	sp,hl
                             59 ;../_realloc.c:142: }
   000D ED 57         [ 9]   60 	ld	a,i
   000F F3            [ 4]   61 	di
   0010 F5            [11]   62 	push	af
                             63 ;../_realloc.c:92: pthis = _sdcc_find_memheader(p);
   0011 DD 6E 04      [19]   64 	ld	l,4 (ix)
   0014 DD 66 05      [19]   65 	ld	h,5 (ix)
   0017 E5            [11]   66 	push	hl
   0018 CDr00r00      [17]   67 	call	__sdcc_find_memheader
   001B F1            [10]   68 	pop	af
   001C 4D            [ 4]   69 	ld	c, l
   001D 44            [ 4]   70 	ld	b, h
                             71 ;../_realloc.c:93: if (pthis)
   001E 78            [ 4]   72 	ld	a,b
   001F B1            [ 4]   73 	or	a,c
   0020 CAr5Dr01      [10]   74 	jp	Z,00114$
                             75 ;../_realloc.c:95: if (size > (0xFFFF-HEADER_SIZE))
   0023 3E F9         [ 7]   76 	ld	a,#0xF9
   0025 DD BE 06      [19]   77 	cp	a, 6 (ix)
   0028 3E FF         [ 7]   78 	ld	a,#0xFF
   002A DD 9E 07      [19]   79 	sbc	a, 7 (ix)
   002D 30 06         [12]   80 	jr	NC,00111$
                             81 ;../_realloc.c:97: ret = (void __xdata *) NULL; //To prevent overflow in next line
   002F 11 00 00      [10]   82 	ld	de,#0x0000
   0032 C3r69r01      [10]   83 	jp	00115$
   0035                      84 00111$:
                             85 ;../_realloc.c:101: size += HEADER_SIZE; //We need a memory for header too
   0035 DD 7E 06      [19]   86 	ld	a,6 (ix)
   0038 C6 06         [ 7]   87 	add	a, #0x06
   003A DD 77 06      [19]   88 	ld	6 (ix),a
   003D DD 7E 07      [19]   89 	ld	a,7 (ix)
   0040 CE 00         [ 7]   90 	adc	a, #0x00
   0042 DD 77 07      [19]   91 	ld	7 (ix),a
                             92 ;../_realloc.c:103: if ((((unsigned int)pthis->next) - ((unsigned int)pthis)) >= size)
   0045 69            [ 4]   93 	ld	l, c
   0046 60            [ 4]   94 	ld	h, b
   0047 5E            [ 7]   95 	ld	e,(hl)
   0048 23            [ 6]   96 	inc	hl
   0049 56            [ 7]   97 	ld	d,(hl)
   004A DD 73 FA      [19]   98 	ld	-6 (ix),e
   004D DD 72 FB      [19]   99 	ld	-5 (ix),d
   0050 69            [ 4]  100 	ld	l, c
   0051 60            [ 4]  101 	ld	h, b
   0052 DD 7E FA      [19]  102 	ld	a,-6 (ix)
   0055 95            [ 4]  103 	sub	a, l
   0056 6F            [ 4]  104 	ld	l,a
   0057 DD 7E FB      [19]  105 	ld	a,-5 (ix)
   005A 9C            [ 4]  106 	sbc	a, h
   005B 67            [ 4]  107 	ld	h,a
                            108 ;../_realloc.c:105: pthis->len = size;
   005C 79            [ 4]  109 	ld	a,c
   005D C6 04         [ 7]  110 	add	a, #0x04
   005F DD 77 FA      [19]  111 	ld	-6 (ix),a
   0062 78            [ 4]  112 	ld	a,b
   0063 CE 00         [ 7]  113 	adc	a, #0x00
   0065 DD 77 FB      [19]  114 	ld	-5 (ix),a
                            115 ;../_realloc.c:103: if ((((unsigned int)pthis->next) - ((unsigned int)pthis)) >= size)
   0068 7D            [ 4]  116 	ld	a,l
   0069 DD 96 06      [19]  117 	sub	a, 6 (ix)
   006C 7C            [ 4]  118 	ld	a,h
   006D DD 9E 07      [19]  119 	sbc	a, 7 (ix)
   0070 38 18         [12]  120 	jr	C,00108$
                            121 ;../_realloc.c:105: pthis->len = size;
   0072 DD 6E FA      [19]  122 	ld	l,-6 (ix)
   0075 DD 66 FB      [19]  123 	ld	h,-5 (ix)
   0078 DD 7E 06      [19]  124 	ld	a,6 (ix)
   007B 77            [ 7]  125 	ld	(hl),a
   007C 23            [ 6]  126 	inc	hl
   007D DD 7E 07      [19]  127 	ld	a,7 (ix)
   0080 77            [ 7]  128 	ld	(hl),a
                            129 ;../_realloc.c:106: ret = p;
   0081 DD 5E 04      [19]  130 	ld	e,4 (ix)
   0084 DD 56 05      [19]  131 	ld	d,5 (ix)
   0087 C3r69r01      [10]  132 	jp	00115$
   008A                     133 00108$:
                            134 ;../_realloc.c:110: if ((_sdcc_prev_memheader) &&
   008A 3Ar01r00      [13]  135 	ld	a,(#__sdcc_prev_memheader + 1)
   008D 21r00r00      [10]  136 	ld	hl,#__sdcc_prev_memheader + 0
   0090 B6            [ 7]  137 	or	a,(hl)
   0091 CAr13r01      [10]  138 	jp	Z,00104$
                            139 ;../_realloc.c:111: ((((unsigned int)pthis->next) -
                            140 ;../_realloc.c:112: ((unsigned int)_sdcc_prev_memheader) -
   0094 2Ar00r00      [16]  141 	ld	hl,(__sdcc_prev_memheader)
   0097 7B            [ 4]  142 	ld	a,e
   0098 95            [ 4]  143 	sub	a, l
   0099 DD 77 FC      [19]  144 	ld	-4 (ix),a
   009C 7A            [ 4]  145 	ld	a,d
   009D 9C            [ 4]  146 	sbc	a, h
   009E DD 77 FD      [19]  147 	ld	-3 (ix),a
                            148 ;../_realloc.c:113: _sdcc_prev_memheader->len) >= size))
   00A1 2Ar00r00      [16]  149 	ld	hl,(__sdcc_prev_memheader)
   00A4 DD 75 FE      [19]  150 	ld	-2 (ix),l
   00A7 DD 74 FF      [19]  151 	ld	-1 (ix),h
   00AA DD 6E FE      [19]  152 	ld	l,-2 (ix)
   00AD DD 66 FF      [19]  153 	ld	h,-1 (ix)
   00B0 11 04 00      [10]  154 	ld	de, #0x0004
   00B3 19            [11]  155 	add	hl, de
   00B4 5E            [ 7]  156 	ld	e,(hl)
   00B5 23            [ 6]  157 	inc	hl
   00B6 56            [ 7]  158 	ld	d,(hl)
   00B7 DD 7E FC      [19]  159 	ld	a,-4 (ix)
   00BA 93            [ 4]  160 	sub	a, e
   00BB 67            [ 4]  161 	ld	h,a
   00BC DD 7E FD      [19]  162 	ld	a,-3 (ix)
   00BF 9A            [ 4]  163 	sbc	a, d
   00C0 6F            [ 4]  164 	ld	l,a
   00C1 7C            [ 4]  165 	ld	a,h
   00C2 DD 96 06      [19]  166 	sub	a, 6 (ix)
   00C5 7D            [ 4]  167 	ld	a,l
   00C6 DD 9E 07      [19]  168 	sbc	a, 7 (ix)
   00C9 38 48         [12]  169 	jr	C,00104$
                            170 ;../_realloc.c:115: pnew = (MEMHEADER __xdata * )((char __xdata *)_sdcc_prev_memheader + _sdcc_prev_memheader->len);
   00CB 2Ar00r00      [16]  171 	ld	hl,(__sdcc_prev_memheader)
   00CE 19            [11]  172 	add	hl,de
   00CF EB            [ 4]  173 	ex	de,hl
                            174 ;../_realloc.c:116: _sdcc_prev_memheader->next = pnew;
   00D0 DD 6E FE      [19]  175 	ld	l,-2 (ix)
   00D3 DD 66 FF      [19]  176 	ld	h,-1 (ix)
   00D6 73            [ 7]  177 	ld	(hl),e
   00D7 23            [ 6]  178 	inc	hl
   00D8 72            [ 7]  179 	ld	(hl),d
                            180 ;../_realloc.c:119: pthis->next->prev = pnew;
   00D9 69            [ 4]  181 	ld	l, c
   00DA 60            [ 4]  182 	ld	h, b
   00DB 7E            [ 7]  183 	ld	a, (hl)
   00DC 23            [ 6]  184 	inc	hl
   00DD 66            [ 7]  185 	ld	h,(hl)
   00DE 6F            [ 4]  186 	ld	l,a
   00DF 23            [ 6]  187 	inc	hl
   00E0 23            [ 6]  188 	inc	hl
   00E1 73            [ 7]  189 	ld	(hl),e
   00E2 23            [ 6]  190 	inc	hl
   00E3 72            [ 7]  191 	ld	(hl),d
                            192 ;../_realloc.c:122: memmove(pnew, pthis, pthis->len);
   00E4 DD 6E FA      [19]  193 	ld	l,-6 (ix)
   00E7 DD 66 FB      [19]  194 	ld	h,-5 (ix)
   00EA 7E            [ 7]  195 	ld	a, (hl)
   00EB 23            [ 6]  196 	inc	hl
   00EC 66            [ 7]  197 	ld	h,(hl)
   00ED 6F            [ 4]  198 	ld	l,a
   00EE D5            [11]  199 	push	de
   00EF FD E1         [14]  200 	pop	iy
   00F1 D5            [11]  201 	push	de
   00F2 E5            [11]  202 	push	hl
   00F3 C5            [11]  203 	push	bc
   00F4 FD E5         [15]  204 	push	iy
   00F6 CDr00r00      [17]  205 	call	_memmove
   00F9 21 06 00      [10]  206 	ld	hl,#6
   00FC 39            [11]  207 	add	hl,sp
   00FD F9            [ 6]  208 	ld	sp,hl
   00FE D1            [10]  209 	pop	de
                            210 ;../_realloc.c:123: pnew->len = size;
   00FF 21 04 00      [10]  211 	ld	hl,#0x0004
   0102 19            [11]  212 	add	hl,de
   0103 DD 7E 06      [19]  213 	ld	a,6 (ix)
   0106 77            [ 7]  214 	ld	(hl),a
   0107 23            [ 6]  215 	inc	hl
   0108 DD 7E 07      [19]  216 	ld	a,7 (ix)
   010B 77            [ 7]  217 	ld	(hl),a
                            218 ;../_realloc.c:124: ret = MEM(pnew);
   010C 21 06 00      [10]  219 	ld	hl,#0x0006
   010F 19            [11]  220 	add	hl,de
   0110 EB            [ 4]  221 	ex	de,hl
   0111 18 56         [12]  222 	jr	00115$
   0113                     223 00104$:
                            224 ;../_realloc.c:128: ret = malloc(size - HEADER_SIZE);
   0113 DD 7E 06      [19]  225 	ld	a,6 (ix)
   0116 C6 FA         [ 7]  226 	add	a,#0xFA
   0118 6F            [ 4]  227 	ld	l,a
   0119 DD 7E 07      [19]  228 	ld	a,7 (ix)
   011C CE FF         [ 7]  229 	adc	a,#0xFF
   011E 67            [ 4]  230 	ld	h,a
   011F C5            [11]  231 	push	bc
   0120 E5            [11]  232 	push	hl
   0121 CDr00r00      [17]  233 	call	_malloc
   0124 F1            [10]  234 	pop	af
   0125 C1            [10]  235 	pop	bc
   0126 EB            [ 4]  236 	ex	de,hl
                            237 ;../_realloc.c:129: if (ret)
   0127 7A            [ 4]  238 	ld	a,d
   0128 B3            [ 4]  239 	or	a,e
   0129 28 3E         [12]  240 	jr	Z,00115$
                            241 ;../_realloc.c:131: memcpy(ret, MEM(pthis), pthis->len - HEADER_SIZE);
   012B FD 21 06 00   [14]  242 	ld	iy,#0x0006
   012F FD 09         [15]  243 	add	iy, bc
   0131 DD 6E FA      [19]  244 	ld	l,-6 (ix)
   0134 DD 66 FB      [19]  245 	ld	h,-5 (ix)
   0137 46            [ 7]  246 	ld	b,(hl)
   0138 23            [ 6]  247 	inc	hl
   0139 66            [ 7]  248 	ld	h,(hl)
   013A 78            [ 4]  249 	ld	a,b
   013B C6 FA         [ 7]  250 	add	a,#0xFA
   013D 6F            [ 4]  251 	ld	l,a
   013E 7C            [ 4]  252 	ld	a,h
   013F CE FF         [ 7]  253 	adc	a,#0xFF
   0141 67            [ 4]  254 	ld	h,a
   0142 D5            [11]  255 	push	de
   0143 E5            [11]  256 	push	hl
   0144 FD E5         [15]  257 	push	iy
   0146 D5            [11]  258 	push	de
   0147 CDr00r00      [17]  259 	call	_memcpy
   014A 21 06 00      [10]  260 	ld	hl,#6
   014D 39            [11]  261 	add	hl,sp
   014E F9            [ 6]  262 	ld	sp,hl
   014F DD 6E 04      [19]  263 	ld	l,4 (ix)
   0152 DD 66 05      [19]  264 	ld	h,5 (ix)
   0155 E5            [11]  265 	push	hl
   0156 CDr00r00      [17]  266 	call	_free
   0159 F1            [10]  267 	pop	af
   015A D1            [10]  268 	pop	de
   015B 18 0C         [12]  269 	jr	00115$
   015D                     270 00114$:
                            271 ;../_realloc.c:140: ret = malloc(size);
   015D DD 6E 06      [19]  272 	ld	l,6 (ix)
   0160 DD 66 07      [19]  273 	ld	h,7 (ix)
   0163 E5            [11]  274 	push	hl
   0164 CDr00r00      [17]  275 	call	_malloc
   0167 F1            [10]  276 	pop	af
   0168 EB            [ 4]  277 	ex	de,hl
   0169                     278 00115$:
   0169 F1            [10]  279 	pop	af
   016A E2r6Er01      [10]  280 	jp	PO,00143$
   016D FB            [ 4]  281 	ei
   016E                     282 00143$:
                            283 ;../_realloc.c:143: return ret;
   016E EB            [ 4]  284 	ex	de,hl
   016F DD F9         [10]  285 	ld	sp, ix
   0171 DD E1         [14]  286 	pop	ix
   0173 C9            [10]  287 	ret
                            288 	.area _CODE
                            289 	.area _INITIALIZER
                            290 	.area _CABS (ABS)
