                                      1 ;--------------------------------------------------------
                                      2 ; File Created by SDCC : free open source ANSI-C Compiler
                                      3 ; Version 3.5.0 #9253 (Apr  4 2022) (Linux)
                                      4 ; This file was generated Mon Apr  4 14:17:29 2022
                                      5 ;--------------------------------------------------------
                                      6 	.module _memmove
                                      7 	.optsdcc -mstm8
                                      8 	
                                      9 ;--------------------------------------------------------
                                     10 ; Public variables in this module
                                     11 ;--------------------------------------------------------
                                     12 	.globl _memmove
                                     13 ;--------------------------------------------------------
                                     14 ; ram data
                                     15 ;--------------------------------------------------------
                                     16 	.area DATA
                                     17 ;--------------------------------------------------------
                                     18 ; ram data
                                     19 ;--------------------------------------------------------
                                     20 	.area INITIALIZED
                                     21 ;--------------------------------------------------------
                                     22 ; absolute external ram data
                                     23 ;--------------------------------------------------------
                                     24 	.area DABS (ABS)
                                     25 ;--------------------------------------------------------
                                     26 ; global & static initialisations
                                     27 ;--------------------------------------------------------
                                     28 	.area HOME
                                     29 	.area GSINIT
                                     30 	.area GSFINAL
                                     31 	.area GSINIT
                                     32 ;--------------------------------------------------------
                                     33 ; Home
                                     34 ;--------------------------------------------------------
                                     35 	.area HOME
                                     36 	.area HOME
                                     37 ;--------------------------------------------------------
                                     38 ; code
                                     39 ;--------------------------------------------------------
                                     40 	.area CODE
                                     41 ;	../_memmove.c: 40: void * memmove (void * dst, const void * src, size_t acount)
                                     42 ;	-----------------------------------------
                                     43 ;	 function memmove
                                     44 ;	-----------------------------------------
      000000                         45 _memmove:
      000000 52 16            [ 2]   46 	sub	sp, #22
                                     47 ;	../_memmove.c: 42: void * ret = dst;
      000002 16 19            [ 2]   48 	ldw	y, (0x19, sp)
      000004 17 01            [ 2]   49 	ldw	(0x01, sp), y
                                     50 ;	../_memmove.c: 46: if ((uintptr_t)src < (uintptr_t)dst) {
      000006 16 1B            [ 2]   51 	ldw	y, (0x1b, sp)
      000008 1E 19            [ 2]   52 	ldw	x, (0x19, sp)
      00000A 1F 03            [ 2]   53 	ldw	(0x03, sp), x
                                     54 ;	../_memmove.c: 50: d = ((char *)dst)+acount-1;
      00000C 1E 19            [ 2]   55 	ldw	x, (0x19, sp)
      00000E 1F 09            [ 2]   56 	ldw	(0x09, sp), x
                                     57 ;	../_memmove.c: 51: s = ((char *)src)+acount-1;
      000010 1E 1B            [ 2]   58 	ldw	x, (0x1b, sp)
      000012 1F 07            [ 2]   59 	ldw	(0x07, sp), x
                                     60 ;	../_memmove.c: 52: while (acount--) {
      000014 1E 1D            [ 2]   61 	ldw	x, (0x1d, sp)
      000016 1F 05            [ 2]   62 	ldw	(0x05, sp), x
                                     63 ;	../_memmove.c: 46: if ((uintptr_t)src < (uintptr_t)dst) {
      000018 93               [ 1]   64 	ldw	x, y
      000019 13 03            [ 2]   65 	cpw	x, (0x03, sp)
      00001B 24 2D            [ 1]   66 	jrnc	00108$
                                     67 ;	../_memmove.c: 50: d = ((char *)dst)+acount-1;
      00001D 16 09            [ 2]   68 	ldw	y, (0x09, sp)
      00001F 72 F9 1D         [ 2]   69 	addw	y, (0x1d, sp)
      000022 90 5A            [ 2]   70 	decw	y
                                     71 ;	../_memmove.c: 51: s = ((char *)src)+acount-1;
      000024 1E 07            [ 2]   72 	ldw	x, (0x07, sp)
      000026 72 FB 1D         [ 2]   73 	addw	x, (0x1d, sp)
      000029 5A               [ 2]   74 	decw	x
                                     75 ;	../_memmove.c: 52: while (acount--) {
      00002A 1F 0D            [ 2]   76 	ldw	(0x0d, sp), x
      00002C 17 0B            [ 2]   77 	ldw	(0x0b, sp), y
      00002E 16 05            [ 2]   78 	ldw	y, (0x05, sp)
      000030                         79 00101$:
      000030 17 15            [ 2]   80 	ldw	(0x15, sp), y
      000032 90 5A            [ 2]   81 	decw	y
      000034 1E 15            [ 2]   82 	ldw	x, (0x15, sp)
      000036 27 3B            [ 1]   83 	jreq	00109$
                                     84 ;	../_memmove.c: 53: *d-- = *s--;
      000038 1E 0D            [ 2]   85 	ldw	x, (0x0d, sp)
      00003A F6               [ 1]   86 	ld	a, (x)
      00003B 1E 0D            [ 2]   87 	ldw	x, (0x0d, sp)
      00003D 5A               [ 2]   88 	decw	x
      00003E 1F 0D            [ 2]   89 	ldw	(0x0d, sp), x
      000040 1E 0B            [ 2]   90 	ldw	x, (0x0b, sp)
      000042 F7               [ 1]   91 	ld	(x), a
      000043 1E 0B            [ 2]   92 	ldw	x, (0x0b, sp)
      000045 5A               [ 2]   93 	decw	x
      000046 1F 0B            [ 2]   94 	ldw	(0x0b, sp), x
      000048 20 E6            [ 2]   95 	jra	00101$
      00004A                         96 00108$:
                                     97 ;	../_memmove.c: 60: d = dst;
      00004A 16 09            [ 2]   98 	ldw	y, (0x09, sp)
                                     99 ;	../_memmove.c: 61: s = src;
      00004C 1E 07            [ 2]  100 	ldw	x, (0x07, sp)
                                    101 ;	../_memmove.c: 62: while (acount--) {
      00004E 1F 13            [ 2]  102 	ldw	(0x13, sp), x
      000050 17 11            [ 2]  103 	ldw	(0x11, sp), y
      000052 16 05            [ 2]  104 	ldw	y, (0x05, sp)
      000054 17 0F            [ 2]  105 	ldw	(0x0f, sp), y
      000056                        106 00104$:
      000056 16 0F            [ 2]  107 	ldw	y, (0x0f, sp)
      000058 1E 0F            [ 2]  108 	ldw	x, (0x0f, sp)
      00005A 5A               [ 2]  109 	decw	x
      00005B 1F 0F            [ 2]  110 	ldw	(0x0f, sp), x
      00005D 90 5D            [ 2]  111 	tnzw	y
      00005F 27 12            [ 1]  112 	jreq	00109$
                                    113 ;	../_memmove.c: 63: *d++ = *s++;
      000061 1E 13            [ 2]  114 	ldw	x, (0x13, sp)
      000063 F6               [ 1]  115 	ld	a, (x)
      000064 1E 13            [ 2]  116 	ldw	x, (0x13, sp)
      000066 5C               [ 2]  117 	incw	x
      000067 1F 13            [ 2]  118 	ldw	(0x13, sp), x
      000069 1E 11            [ 2]  119 	ldw	x, (0x11, sp)
      00006B F7               [ 1]  120 	ld	(x), a
      00006C 1E 11            [ 2]  121 	ldw	x, (0x11, sp)
      00006E 5C               [ 2]  122 	incw	x
      00006F 1F 11            [ 2]  123 	ldw	(0x11, sp), x
      000071 20 E3            [ 2]  124 	jra	00104$
      000073                        125 00109$:
                                    126 ;	../_memmove.c: 67: return(ret);
      000073 1E 01            [ 2]  127 	ldw	x, (0x01, sp)
      000075 5B 16            [ 2]  128 	addw	sp, #22
      000077 81               [ 4]  129 	ret
                                    130 	.area CODE
                                    131 	.area INITIALIZER
                                    132 	.area CABS (ABS)
