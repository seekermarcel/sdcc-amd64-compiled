                              1 ;--------------------------------------------------------
                              2 ; File Created by SDCC : free open source ANSI-C Compiler
                              3 ; Version 3.5.0 #9253 (Apr  4 2022) (Linux)
                              4 ; This file was generated Mon Apr  4 14:16:52 2022
                              5 ;--------------------------------------------------------
                              6 	.module vprintf
                              7 	.optsdcc -mgbz80
                              8 	
                              9 ;--------------------------------------------------------
                             10 ; Public variables in this module
                             11 ;--------------------------------------------------------
                             12 	.globl _putchar
                             13 	.globl __print_format
                             14 	.globl _vprintf
                             15 	.globl _printf
                             16 ;--------------------------------------------------------
                             17 ; ram data
                             18 ;--------------------------------------------------------
                             19 	.area _DATA
                             20 ;--------------------------------------------------------
                             21 ; absolute external ram data
                             22 ;--------------------------------------------------------
                             23 	.area _DABS (ABS)
                             24 ;--------------------------------------------------------
                             25 ; global & static initialisations
                             26 ;--------------------------------------------------------
                             27 	.area _HOME
                             28 	.area _GSINIT
                             29 	.area _GSFINAL
                             30 	.area _GSINIT
                             31 ;--------------------------------------------------------
                             32 ; Home
                             33 ;--------------------------------------------------------
                             34 	.area _HOME
                             35 	.area _HOME
                             36 ;--------------------------------------------------------
                             37 ; code
                             38 ;--------------------------------------------------------
                             39 	.area _CODE
                             40 ;../vprintf.c:34: put_char_to_stdout (char c, void* p) _REENTRANT
                             41 ;	---------------------------------
                             42 ; Function put_char_to_stdout
                             43 ; ---------------------------------
   0000                      44 _put_char_to_stdout:
                             45 ;../vprintf.c:37: putchar (c);
   0000 F8 02                46 	ldhl	sp,#2
   0002 7E                   47 	ld	a,(hl)
   0003 F5                   48 	push	af
   0004 33                   49 	inc	sp
   0005 CDr00r00             50 	call	_putchar
   0008 33                   51 	inc	sp
   0009 C9                   52 	ret
                             53 ;../vprintf.c:41: vprintf (const char *format, va_list ap)
                             54 ;	---------------------------------
                             55 ; Function vprintf
                             56 ; ---------------------------------
   000A                      57 _vprintf::
                             58 ;../vprintf.c:43: return _print_format (put_char_to_stdout, NULL, format, ap);
   000A F8 04                59 	ldhl	sp,#4
   000C 2A                   60 	ld	a,(hl+)
   000D 66                   61 	ld	h,(hl)
   000E 6F                   62 	ld	l,a
   000F E5                   63 	push	hl
   0010 F8 04                64 	ldhl	sp,#4
   0012 2A                   65 	ld	a,(hl+)
   0013 66                   66 	ld	h,(hl)
   0014 6F                   67 	ld	l,a
   0015 E5                   68 	push	hl
   0016 21 00 00             69 	ld	hl,#0x0000
   0019 E5                   70 	push	hl
   001A 21r00r00             71 	ld	hl,#_put_char_to_stdout
   001D E5                   72 	push	hl
   001E CDr00r00             73 	call	__print_format
   0021 E8 08                74 	add	sp, #8
   0023 C9                   75 	ret
                             76 ;../vprintf.c:47: printf (const char *format, ...)
                             77 ;	---------------------------------
                             78 ; Function printf
                             79 ; ---------------------------------
   0024                      80 _printf::
                             81 ;../vprintf.c:52: va_start (arg, format);
   0024 F8 02                82 	ldhl	sp,#2
   0026 4D                   83 	ld	c,l
   0027 44                   84 	ld	b,h
   0028 03                   85 	inc	bc
   0029 03                   86 	inc	bc
                             87 ;../vprintf.c:53: i = _print_format (put_char_to_stdout, NULL, format, arg);
   002A C5                   88 	push	bc
   002B F8 04                89 	ldhl	sp,#4
   002D 2A                   90 	ld	a,(hl+)
   002E 66                   91 	ld	h,(hl)
   002F 6F                   92 	ld	l,a
   0030 E5                   93 	push	hl
   0031 21 00 00             94 	ld	hl,#0x0000
   0034 E5                   95 	push	hl
   0035 21r00r00             96 	ld	hl,#_put_char_to_stdout
   0038 E5                   97 	push	hl
   0039 CDr00r00             98 	call	__print_format
   003C E8 08                99 	add	sp, #8
                            100 ;../vprintf.c:56: return i;
   003E C9                  101 	ret
                            102 	.area _CODE
                            103 	.area _CABS (ABS)
