                              1 ;--------------------------------------------------------
                              2 ; File Created by SDCC : free open source ANSI-C Compiler
                              3 ; Version 3.5.0 #9253 (Apr  4 2022) (Linux)
                              4 ; This file was generated Mon Apr  4 14:15:41 2022
                              5 ;--------------------------------------------------------
                              6 	.hd64
                              7 	.module floorf
                              8 	.optsdcc -mz180
                              9 	
                             10 ;--------------------------------------------------------
                             11 ; Public variables in this module
                             12 ;--------------------------------------------------------
                             13 	.globl _floorf
                             14 ;--------------------------------------------------------
                             15 ; special function registers
                             16 ;--------------------------------------------------------
                             17 ;--------------------------------------------------------
                             18 ; ram data
                             19 ;--------------------------------------------------------
                             20 	.area _DATA
                             21 ;--------------------------------------------------------
                             22 ; ram data
                             23 ;--------------------------------------------------------
                             24 	.area _INITIALIZED
                             25 ;--------------------------------------------------------
                             26 ; absolute external ram data
                             27 ;--------------------------------------------------------
                             28 	.area _DABS (ABS)
                             29 ;--------------------------------------------------------
                             30 ; global & static initialisations
                             31 ;--------------------------------------------------------
                             32 	.area _HOME
                             33 	.area _GSINIT
                             34 	.area _GSFINAL
                             35 	.area _GSINIT
                             36 ;--------------------------------------------------------
                             37 ; Home
                             38 ;--------------------------------------------------------
                             39 	.area _HOME
                             40 	.area _HOME
                             41 ;--------------------------------------------------------
                             42 ; code
                             43 ;--------------------------------------------------------
                             44 	.area _CODE
                             45 ;../floorf.c:33: float floorf (float x) _FLOAT_FUNC_REENTRANT
                             46 ;	---------------------------------
                             47 ; Function floorf
                             48 ; ---------------------------------
   0000                      49 _floorf::
   0000 DD E5         [14]   50 	push	ix
   0002 DD 21 00 00   [12]   51 	ld	ix,#0
   0006 DD 39         [10]   52 	add	ix,sp
   0008 21 F7 FF      [ 9]   53 	ld	hl,#-9
   000B 39            [ 7]   54 	add	hl,sp
   000C F9            [ 4]   55 	ld	sp,hl
                             56 ;../floorf.c:36: r=x;
   000D DD 6E 06      [14]   57 	ld	l,6 (ix)
   0010 DD 66 07      [14]   58 	ld	h,7 (ix)
   0013 E5            [11]   59 	push	hl
   0014 DD 6E 04      [14]   60 	ld	l,4 (ix)
   0017 DD 66 05      [14]   61 	ld	h,5 (ix)
   001A E5            [11]   62 	push	hl
   001B CDr00r00      [16]   63 	call	___fs2slong
   001E 33            [ 4]   64 	inc	sp
   001F 33            [ 4]   65 	inc	sp
   0020 33            [ 4]   66 	inc	sp
   0021 33            [ 4]   67 	inc	sp
   0022 DD 75 F7      [15]   68 	ld	-9 (ix),l
   0025 DD 74 F8      [15]   69 	ld	-8 (ix),h
   0028 DD 73 F9      [15]   70 	ld	-7 (ix),e
   002B DD 72 FA      [15]   71 	ld	-6 (ix),d
                             72 ;../floorf.c:38: return (r+((r>x)?-1:0));
   002E DD 6E F9      [14]   73 	ld	l,-7 (ix)
   0031 DD 66 FA      [14]   74 	ld	h,-6 (ix)
   0034 E5            [11]   75 	push	hl
   0035 DD 6E F7      [14]   76 	ld	l,-9 (ix)
   0038 DD 66 F8      [14]   77 	ld	h,-8 (ix)
   003B E5            [11]   78 	push	hl
   003C CDr00r00      [16]   79 	call	___slong2fs
   003F 33            [ 4]   80 	inc	sp
   0040 33            [ 4]   81 	inc	sp
   0041 33            [ 4]   82 	inc	sp
   0042 33            [ 4]   83 	inc	sp
   0043 DD 72 FE      [15]   84 	ld	-2 (ix),d
   0046 DD 73 FD      [15]   85 	ld	-3 (ix),e
   0049 DD 74 FC      [15]   86 	ld	-4 (ix),h
   004C DD 75 FB      [15]   87 	ld	-5 (ix),l
                             88 ;../floorf.c:37: if (r<=0)
   004F AF            [ 4]   89 	xor	a, a
   0050 DD BE F7      [14]   90 	cp	a, -9 (ix)
   0053 DD 9E F8      [14]   91 	sbc	a, -8 (ix)
   0056 3E 00         [ 6]   92 	ld	a,#0x00
   0058 DD 9E F9      [14]   93 	sbc	a, -7 (ix)
   005B 3E 00         [ 6]   94 	ld	a,#0x00
   005D DD 9E FA      [14]   95 	sbc	a, -6 (ix)
   0060 E2r65r00      [ 9]   96 	jp	PO, 00116$
   0063 EE 80         [ 6]   97 	xor	a, #0x80
   0065                      98 00116$:
   0065 FArCAr00      [ 9]   99 	jp	M,00102$
                            100 ;../floorf.c:38: return (r+((r>x)?-1:0));
   0068 DD 6E 06      [14]  101 	ld	l,6 (ix)
   006B DD 66 07      [14]  102 	ld	h,7 (ix)
   006E E5            [11]  103 	push	hl
   006F DD 6E 04      [14]  104 	ld	l,4 (ix)
   0072 DD 66 05      [14]  105 	ld	h,5 (ix)
   0075 E5            [11]  106 	push	hl
   0076 DD 6E FD      [14]  107 	ld	l,-3 (ix)
   0079 DD 66 FE      [14]  108 	ld	h,-2 (ix)
   007C E5            [11]  109 	push	hl
   007D DD 6E FB      [14]  110 	ld	l,-5 (ix)
   0080 DD 66 FC      [14]  111 	ld	h,-4 (ix)
   0083 E5            [11]  112 	push	hl
   0084 CDr00r00      [16]  113 	call	___fsgt
   0087 33            [ 4]  114 	inc	sp
   0088 33            [ 4]  115 	inc	sp
   0089 33            [ 4]  116 	inc	sp
   008A 33            [ 4]  117 	inc	sp
   008B 33            [ 4]  118 	inc	sp
   008C 33            [ 4]  119 	inc	sp
   008D 33            [ 4]  120 	inc	sp
   008E 33            [ 4]  121 	inc	sp
   008F DD 75 FF      [15]  122 	ld	-1 (ix), l
   0092 7D            [ 4]  123 	ld	a, l
   0093 B7            [ 4]  124 	or	a, a
   0094 28 06         [ 8]  125 	jr	Z,00106$
   0096 DD 36 FF FF   [15]  126 	ld	-1 (ix),#0xFF
   009A 18 04         [ 8]  127 	jr	00107$
   009C                     128 00106$:
   009C DD 36 FF 00   [15]  129 	ld	-1 (ix),#0x00
   00A0                     130 00107$:
   00A0 DD 6E FF      [14]  131 	ld	l,-1 (ix)
   00A3 DD 7E FF      [14]  132 	ld	a,-1 (ix)
   00A6 17            [ 3]  133 	rla
   00A7 9F            [ 4]  134 	sbc	a, a
   00A8 67            [ 4]  135 	ld	h,a
   00A9 5F            [ 4]  136 	ld	e,a
   00AA 57            [ 4]  137 	ld	d,a
   00AB DD 7E F7      [14]  138 	ld	a,-9 (ix)
   00AE 85            [ 4]  139 	add	a, l
   00AF 6F            [ 4]  140 	ld	l,a
   00B0 DD 7E F8      [14]  141 	ld	a,-8 (ix)
   00B3 8C            [ 4]  142 	adc	a, h
   00B4 67            [ 4]  143 	ld	h,a
   00B5 DD 7E F9      [14]  144 	ld	a,-7 (ix)
   00B8 8B            [ 4]  145 	adc	a, e
   00B9 5F            [ 4]  146 	ld	e,a
   00BA DD 7E FA      [14]  147 	ld	a,-6 (ix)
   00BD 8A            [ 4]  148 	adc	a, d
   00BE 57            [ 4]  149 	ld	d,a
   00BF D5            [11]  150 	push	de
   00C0 E5            [11]  151 	push	hl
   00C1 CDr00r00      [16]  152 	call	___slong2fs
   00C4 33            [ 4]  153 	inc	sp
   00C5 33            [ 4]  154 	inc	sp
   00C6 33            [ 4]  155 	inc	sp
   00C7 33            [ 4]  156 	inc	sp
   00C8 18 0C         [ 8]  157 	jr	00104$
   00CA                     158 00102$:
                            159 ;../floorf.c:40: return r;
   00CA DD 6E FB      [14]  160 	ld	l,-5 (ix)
   00CD DD 66 FC      [14]  161 	ld	h,-4 (ix)
   00D0 DD 5E FD      [14]  162 	ld	e,-3 (ix)
   00D3 DD 56 FE      [14]  163 	ld	d,-2 (ix)
   00D6                     164 00104$:
   00D6 DD F9         [ 7]  165 	ld	sp, ix
   00D8 DD E1         [12]  166 	pop	ix
   00DA C9            [ 9]  167 	ret
                            168 	.area _CODE
                            169 	.area _INITIALIZER
                            170 	.area _CABS (ABS)
