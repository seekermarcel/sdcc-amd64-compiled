                              1 ;--------------------------------------------------------
                              2 ; File Created by SDCC : free open source ANSI-C Compiler
                              3 ; Version 3.5.0 #9253 (Apr  4 2022) (Linux)
                              4 ; This file was generated Mon Apr  4 14:15:57 2022
                              5 ;--------------------------------------------------------
                              6 	.module sqrtf
                              7 	.optsdcc -mr2k
                              8 	
                              9 ;--------------------------------------------------------
                             10 ; Public variables in this module
                             11 ;--------------------------------------------------------
                             12 	.globl _ldexpf
                             13 	.globl _frexpf
                             14 	.globl _sqrtf
                             15 ;--------------------------------------------------------
                             16 ; special function registers
                             17 ;--------------------------------------------------------
                             18 ;--------------------------------------------------------
                             19 ; ram data
                             20 ;--------------------------------------------------------
                             21 	.area _DATA
                             22 ;--------------------------------------------------------
                             23 ; ram data
                             24 ;--------------------------------------------------------
                             25 	.area _INITIALIZED
                             26 ;--------------------------------------------------------
                             27 ; absolute external ram data
                             28 ;--------------------------------------------------------
                             29 	.area _DABS (ABS)
                             30 ;--------------------------------------------------------
                             31 ; global & static initialisations
                             32 ;--------------------------------------------------------
                             33 	.area _HOME
                             34 	.area _GSINIT
                             35 	.area _GSFINAL
                             36 	.area _GSINIT
                             37 ;--------------------------------------------------------
                             38 ; Home
                             39 ;--------------------------------------------------------
                             40 	.area _HOME
                             41 	.area _HOME
                             42 ;--------------------------------------------------------
                             43 ; code
                             44 ;--------------------------------------------------------
                             45 	.area _CODE
                             46 ;../sqrtf.c:37: float sqrtf(float x) _FLOAT_FUNC_REENTRANT
                             47 ;	---------------------------------
                             48 ; Function sqrtf
                             49 ; ---------------------------------
   0000                      50 _sqrtf::
   0000 DD E5                51 	push	ix
   0002 DD 21 00 00          52 	ld	ix,#0
   0006 DD 39                53 	add	ix,sp
   0008 27 F6                54 	add	sp, #-10
                             55 ;../sqrtf.c:42: if (x==0.0) return x;
   000A DD 7E 07             56 	ld	a,7 (ix)
   000D CB BF                57 	res	7, a
   000F DD B6 06             58 	or	a, 6 (ix)
   0012 DD B6 05             59 	or	a, 5 (ix)
   0015 DD B6 04             60 	or	a,4 (ix)
   0018 20 0F                61 	jr	NZ,00107$
   001A DD 6E 04             62 	ld	l,4 (ix)
   001D DD 66 05             63 	ld	h,5 (ix)
   0020 DD 5E 06             64 	ld	e,6 (ix)
   0023 DD 56 07             65 	ld	d,7 (ix)
   0026 C3r40r01             66 	jp	00111$
   0029                      67 00107$:
                             68 ;../sqrtf.c:43: else if (x==1.0) return 1.0;
   0029 21 80 3F             69 	ld	hl,#0x3F80
   002C E5                   70 	push	hl
   002D 21 00 00             71 	ld	hl,#0x0000
   0030 E5                   72 	push	hl
   0031 C4 14                73 	ld	hl, 20 (sp)
   0033 E5                   74 	push	hl
   0034 C4 14                75 	ld	hl, 20 (sp)
   0036 E5                   76 	push	hl
   0037 CDr00r00             77 	call	___fseq
   003A 27 08                78 	add	sp, #8
   003C 7D                   79 	ld	a,l
   003D B7                   80 	or	a, a
   003E 28 09                81 	jr	Z,00104$
   0040 21 00 00             82 	ld	hl,#0x0000
   0043 11 80 3F             83 	ld	de,#0x3F80
   0046 C3r40r01             84 	jp	00111$
   0049                      85 00104$:
                             86 ;../sqrtf.c:44: else if (x<0.0)
   0049 21 00 00             87 	ld	hl,#0x0000
   004C E5                   88 	push	hl
   004D 21 00 00             89 	ld	hl,#0x0000
   0050 E5                   90 	push	hl
   0051 C4 14                91 	ld	hl, 20 (sp)
   0053 E5                   92 	push	hl
   0054 C4 14                93 	ld	hl, 20 (sp)
   0056 E5                   94 	push	hl
   0057 CDr00r00             95 	call	___fslt
   005A 27 08                96 	add	sp, #8
   005C 7D                   97 	ld	a,l
   005D B7                   98 	or	a, a
   005E 28 0E                99 	jr	Z,00108$
                            100 ;../sqrtf.c:46: errno=EDOM;
   0060 21 21 00            101 	ld	hl,#0x0021
   0063 22r00r00            102 	ld	(_errno),hl
                            103 ;../sqrtf.c:47: return 0.0;
   0066 21 00 00            104 	ld	hl,#0x0000
   0069 5D                  105 	ld	e,l
   006A 54                  106 	ld	d,h
   006B C3r40r01            107 	jp	00111$
   006E                     108 00108$:
                            109 ;../sqrtf.c:49: f=frexpf(x, &n);
   006E 21 00 00            110 	ld	hl,#0x0000
   0071 39                  111 	add	hl,sp
   0072 E5                  112 	push	hl
   0073 C4 12               113 	ld	hl, 18 (sp)
   0075 E5                  114 	push	hl
   0076 C4 12               115 	ld	hl, 18 (sp)
   0078 E5                  116 	push	hl
   0079 CDr00r00            117 	call	_frexpf
   007C 27 06               118 	add	sp, #6
   007E DD 75 F8            119 	ld	-8 (ix),l
   0081 DD 74 F9            120 	ld	-7 (ix),h
   0084 DD 73 FA            121 	ld	-6 (ix),e
   0087 DD 72 FB            122 	ld	-5 (ix),d
                            123 ;../sqrtf.c:50: y=0.41731+0.59016*f; /*Educated guess*/
   008A C4 04               124 	ld	hl, 4 (sp)
   008C E5                  125 	push	hl
   008D C4 04               126 	ld	hl, 4 (sp)
   008F E5                  127 	push	hl
   0090 21 17 3F            128 	ld	hl,#0x3F17
   0093 E5                  129 	push	hl
   0094 21 BA 14            130 	ld	hl,#0x14BA
   0097 E5                  131 	push	hl
   0098 CDr00r00            132 	call	___fsmul
   009B 27 08               133 	add	sp, #8
   009D 4D                  134 	ld	c,l
   009E 44                  135 	ld	b,h
   009F 21 D5 3E            136 	ld	hl,#0x3ED5
   00A2 E5                  137 	push	hl
   00A3 21 A8 A9            138 	ld	hl,#0xA9A8
   00A6 E5                  139 	push	hl
   00A7 D5                  140 	push	de
   00A8 C5                  141 	push	bc
   00A9 CDr00r00            142 	call	___fsadd
   00AC 27 08               143 	add	sp, #8
   00AE DD 75 FC            144 	ld	-4 (ix),l
   00B1 DD 74 FD            145 	ld	-3 (ix),h
   00B4 DD 73 FE            146 	ld	-2 (ix),e
   00B7 DD 72 FF            147 	ld	-1 (ix),d
                            148 ;../sqrtf.c:52: y+=f/y;
   00BA C4 08               149 	ld	hl, 8 (sp)
   00BC E5                  150 	push	hl
   00BD C4 08               151 	ld	hl, 8 (sp)
   00BF E5                  152 	push	hl
   00C0 C4 08               153 	ld	hl, 8 (sp)
   00C2 E5                  154 	push	hl
   00C3 C4 08               155 	ld	hl, 8 (sp)
   00C5 E5                  156 	push	hl
   00C6 CDr00r00            157 	call	___fsdiv
   00C9 27 08               158 	add	sp, #8
   00CB EB                  159 	ex	de, hl
   00CC E5                  160 	push	hl
   00CD D5                  161 	push	de
   00CE C4 0C               162 	ld	hl, 12 (sp)
   00D0 E5                  163 	push	hl
   00D1 C4 0C               164 	ld	hl, 12 (sp)
   00D3 E5                  165 	push	hl
   00D4 CDr00r00            166 	call	___fsadd
   00D7 27 08               167 	add	sp, #8
   00D9 EB                  168 	ex	de, hl
                            169 ;../sqrtf.c:53: y=ldexpf(y, -2) + f/y; /*Faster version of 0.25 * y + f/y*/
   00DA E5                  170 	push	hl
   00DB D5                  171 	push	de
   00DC 01 FE FF            172 	ld	bc,#0xFFFE
   00DF C5                  173 	push	bc
   00E0 E5                  174 	push	hl
   00E1 D5                  175 	push	de
   00E2 CDr00r00            176 	call	_ldexpf
   00E5 27 06               177 	add	sp, #6
   00E7 DD 72 FF            178 	ld	-1 (ix),d
   00EA DD 73 FE            179 	ld	-2 (ix),e
   00ED DD 74 FD            180 	ld	-3 (ix),h
   00F0 DD 75 FC            181 	ld	-4 (ix),l
   00F3 C4 08               182 	ld	hl, 8 (sp)
   00F5 E5                  183 	push	hl
   00F6 C4 08               184 	ld	hl, 8 (sp)
   00F8 E5                  185 	push	hl
   00F9 CDr00r00            186 	call	___fsdiv
   00FC 27 08               187 	add	sp, #8
   00FE EB                  188 	ex	de, hl
   00FF E5                  189 	push	hl
   0100 D5                  190 	push	de
   0101 C4 0C               191 	ld	hl, 12 (sp)
   0103 E5                  192 	push	hl
   0104 C4 0C               193 	ld	hl, 12 (sp)
   0106 E5                  194 	push	hl
   0107 CDr00r00            195 	call	___fsadd
   010A 27 08               196 	add	sp, #8
   010C 4D                  197 	ld	c,l
   010D 44                  198 	ld	b,h
                            199 ;../sqrtf.c:55: if (n&1)
   010E DD CB F6 46         200 	bit	0, -10 (ix)
   0112 28 19               201 	jr	Z,00110$
                            202 ;../sqrtf.c:57: y*=0.7071067812;
   0114 D5                  203 	push	de
   0115 C5                  204 	push	bc
   0116 21 35 3F            205 	ld	hl,#0x3F35
   0119 E5                  206 	push	hl
   011A 21 F3 04            207 	ld	hl,#0x04F3
   011D E5                  208 	push	hl
   011E CDr00r00            209 	call	___fsmul
   0121 27 08               210 	add	sp, #8
   0123 4D                  211 	ld	c,l
   0124 44                  212 	ld	b,h
                            213 ;../sqrtf.c:58: ++n;
   0125 DD 34 F6            214 	inc	-10 (ix)
   0128 20 03               215 	jr	NZ,00135$
   012A DD 34 F7            216 	inc	-9 (ix)
   012D                     217 00135$:
   012D                     218 00110$:
                            219 ;../sqrtf.c:60: return ldexpf(y, n/2);
   012D C4 00               220 	ld	hl, 0 (sp)
   012F CB 7C               221 	bit	7, h
   0131 28 01               222 	jr	Z,00113$
   0133 23                  223 	inc	hl
   0134                     224 00113$:
   0134 CB 2C               225 	sra	h
   0136 CB 1D               226 	rr	l
   0138 E5                  227 	push	hl
   0139 D5                  228 	push	de
   013A C5                  229 	push	bc
   013B CDr00r00            230 	call	_ldexpf
   013E 27 06               231 	add	sp, #6
   0140                     232 00111$:
   0140 DD F9               233 	ld	sp, ix
   0142 DD E1               234 	pop	ix
   0144 C9                  235 	ret
                            236 	.area _CODE
                            237 	.area _INITIALIZER
                            238 	.area _CABS (ABS)
