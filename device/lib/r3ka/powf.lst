                              1 ;--------------------------------------------------------
                              2 ; File Created by SDCC : free open source ANSI-C Compiler
                              3 ; Version 3.5.0 #9253 (Apr  4 2022) (Linux)
                              4 ; This file was generated Mon Apr  4 14:16:13 2022
                              5 ;--------------------------------------------------------
                              6 	.r3k
                              7 	.module powf
                              8 	.optsdcc -mr3ka
                              9 	
                             10 ;--------------------------------------------------------
                             11 ; Public variables in this module
                             12 ;--------------------------------------------------------
                             13 	.globl _logf
                             14 	.globl _expf
                             15 	.globl _powf
                             16 ;--------------------------------------------------------
                             17 ; special function registers
                             18 ;--------------------------------------------------------
                             19 ;--------------------------------------------------------
                             20 ; ram data
                             21 ;--------------------------------------------------------
                             22 	.area _DATA
                             23 ;--------------------------------------------------------
                             24 ; ram data
                             25 ;--------------------------------------------------------
                             26 	.area _INITIALIZED
                             27 ;--------------------------------------------------------
                             28 ; absolute external ram data
                             29 ;--------------------------------------------------------
                             30 	.area _DABS (ABS)
                             31 ;--------------------------------------------------------
                             32 ; global & static initialisations
                             33 ;--------------------------------------------------------
                             34 	.area _HOME
                             35 	.area _GSINIT
                             36 	.area _GSFINAL
                             37 	.area _GSINIT
                             38 ;--------------------------------------------------------
                             39 ; Home
                             40 ;--------------------------------------------------------
                             41 	.area _HOME
                             42 	.area _HOME
                             43 ;--------------------------------------------------------
                             44 ; code
                             45 ;--------------------------------------------------------
                             46 	.area _CODE
                             47 ;../powf.c:35: float powf(float x, float y)
                             48 ;	---------------------------------
                             49 ; Function powf
                             50 ; ---------------------------------
   0000                      51 _powf::
   0000 DD E5                52 	push	ix
   0002 DD 21 00 00          53 	ld	ix,#0
   0006 DD 39                54 	add	ix,sp
                             55 ;../powf.c:37: if(y == 0.0) return 1.0;
   0008 DD 7E 0B             56 	ld	a,11 (ix)
   000B CB BF                57 	res	7, a
   000D DD B6 0A             58 	or	a, 10 (ix)
   0010 DD B6 09             59 	or	a, 9 (ix)
   0013 DD B6 08             60 	or	a,8 (ix)
   0016 20 08                61 	jr	NZ,00102$
   0018 21 00 00             62 	ld	hl,#0x0000
   001B 11 80 3F             63 	ld	de,#0x3F80
   001E 18 64                64 	jr	00107$
   0020                      65 00102$:
                             66 ;../powf.c:38: if(y == 1.0) return x;
   0020 21 80 3F             67 	ld	hl,#0x3F80
   0023 E5                   68 	push	hl
   0024 21 00 00             69 	ld	hl,#0x0000
   0027 E5                   70 	push	hl
   0028 C4 0E                71 	ld	hl, 14 (sp)
   002A E5                   72 	push	hl
   002B C4 0E                73 	ld	hl, 14 (sp)
   002D E5                   74 	push	hl
   002E CDr00r00             75 	call	___fseq
   0031 27 08                76 	add	sp, #8
   0033 7D                   77 	ld	a,l
   0034 B7                   78 	or	a, a
   0035 28 0E                79 	jr	Z,00104$
   0037 DD 6E 04             80 	ld	l,4 (ix)
   003A DD 66 05             81 	ld	h,5 (ix)
   003D DD 5E 06             82 	ld	e,6 (ix)
   0040 DD 56 07             83 	ld	d,7 (ix)
   0043 18 3F                84 	jr	00107$
   0045                      85 00104$:
                             86 ;../powf.c:39: if(x <= 0.0) return 0.0;
   0045 21 00 00             87 	ld	hl,#0x0000
   0048 E5                   88 	push	hl
   0049 21 00 00             89 	ld	hl,#0x0000
   004C E5                   90 	push	hl
   004D C4 0A                91 	ld	hl, 10 (sp)
   004F E5                   92 	push	hl
   0050 C4 0A                93 	ld	hl, 10 (sp)
   0052 E5                   94 	push	hl
   0053 CDr00r00             95 	call	___fsgt
   0056 27 08                96 	add	sp, #8
   0058 7D                   97 	ld	a,l
   0059 B7                   98 	or	a, a
   005A 20 07                99 	jr	NZ,00106$
   005C 21 00 00            100 	ld	hl,#0x0000
   005F 5D                  101 	ld	e,l
   0060 54                  102 	ld	d,h
   0061 18 21               103 	jr	00107$
   0063                     104 00106$:
                            105 ;../powf.c:40: return expf(logf(x) * y);
   0063 C4 06               106 	ld	hl, 6 (sp)
   0065 E5                  107 	push	hl
   0066 C4 06               108 	ld	hl, 6 (sp)
   0068 E5                  109 	push	hl
   0069 CDr00r00            110 	call	_logf
   006C 27 04               111 	add	sp, #4
   006E 4D                  112 	ld	c,l
   006F 44                  113 	ld	b,h
   0070 C4 0A               114 	ld	hl, 10 (sp)
   0072 E5                  115 	push	hl
   0073 C4 0A               116 	ld	hl, 10 (sp)
   0075 E5                  117 	push	hl
   0076 D5                  118 	push	de
   0077 C5                  119 	push	bc
   0078 CDr00r00            120 	call	___fsmul
   007B 27 08               121 	add	sp, #8
   007D D5                  122 	push	de
   007E E5                  123 	push	hl
   007F CDr00r00            124 	call	_expf
   0082 27 04               125 	add	sp, #4
   0084                     126 00107$:
   0084 DD E1               127 	pop	ix
   0086 C9                  128 	ret
                            129 	.area _CODE
                            130 	.area _INITIALIZER
                            131 	.area _CABS (ABS)
