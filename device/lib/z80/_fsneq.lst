                              1 ;--------------------------------------------------------
                              2 ; File Created by SDCC : free open source ANSI-C Compiler
                              3 ; Version 3.5.0 #9253 (Apr  4 2022) (Linux)
                              4 ; This file was generated Mon Apr  4 14:15:20 2022
                              5 ;--------------------------------------------------------
                              6 	.module _fsneq
                              7 	.optsdcc -mz80
                              8 	
                              9 ;--------------------------------------------------------
                             10 ; Public variables in this module
                             11 ;--------------------------------------------------------
                             12 	.globl ___fsneq
                             13 ;--------------------------------------------------------
                             14 ; special function registers
                             15 ;--------------------------------------------------------
                             16 ;--------------------------------------------------------
                             17 ; ram data
                             18 ;--------------------------------------------------------
                             19 	.area _DATA
                             20 ;--------------------------------------------------------
                             21 ; ram data
                             22 ;--------------------------------------------------------
                             23 	.area _INITIALIZED
                             24 ;--------------------------------------------------------
                             25 ; absolute external ram data
                             26 ;--------------------------------------------------------
                             27 	.area _DABS (ABS)
                             28 ;--------------------------------------------------------
                             29 ; global & static initialisations
                             30 ;--------------------------------------------------------
                             31 	.area _HOME
                             32 	.area _GSINIT
                             33 	.area _GSFINAL
                             34 	.area _GSINIT
                             35 ;--------------------------------------------------------
                             36 ; Home
                             37 ;--------------------------------------------------------
                             38 	.area _HOME
                             39 ;../_fsneq.c:80: char __fsneq (float a1, float a2)
                             40 ;	---------------------------------
                             41 ; Function __fsneq
                             42 ; ---------------------------------
   0000                      43 ___fsneq::
   0000 DD E5         [15]   44 	push	ix
   0002 DD 21 00 00   [14]   45 	ld	ix,#0
   0006 DD 39         [15]   46 	add	ix,sp
   0008 21 F4 FF      [10]   47 	ld	hl,#-12
   000B 39            [11]   48 	add	hl,sp
   000C F9            [ 6]   49 	ld	sp,hl
                             50 ;../_fsneq.c:84: fl1.f = a1;
   000D 21 04 00      [10]   51 	ld	hl,#0x0004
   0010 39            [11]   52 	add	hl,sp
   0011 EB            [ 4]   53 	ex	de,hl
   0012 21 10 00      [10]   54 	ld	hl, #0x0010
   0015 39            [11]   55 	add	hl, sp
   0016 01 04 00      [10]   56 	ld	bc, #0x0004
   0019 ED B0         [21]   57 	ldir
                             58 ;../_fsneq.c:85: fl2.f = a2;
   001B 21 00 00      [10]   59 	ld	hl,#0x0000
   001E 39            [11]   60 	add	hl,sp
   001F EB            [ 4]   61 	ex	de,hl
   0020 21 14 00      [10]   62 	ld	hl, #0x0014
   0023 39            [11]   63 	add	hl, sp
   0024 01 04 00      [10]   64 	ld	bc, #0x0004
   0027 ED B0         [21]   65 	ldir
                             66 ;../_fsneq.c:87: if (fl1.l == fl2.l)
   0029 21 04 00      [10]   67 	ld	hl,#0x0004
   002C 39            [11]   68 	add	hl,sp
   002D EB            [ 4]   69 	ex	de,hl
   002E 21 08 00      [10]   70 	ld	hl, #0x0008
   0031 39            [11]   71 	add	hl, sp
   0032 EB            [ 4]   72 	ex	de, hl
   0033 01 04 00      [10]   73 	ld	bc, #0x0004
   0036 ED B0         [21]   74 	ldir
   0038 21 00 00      [10]   75 	ld	hl,#0x0000
   003B 39            [11]   76 	add	hl,sp
   003C 56            [ 7]   77 	ld	d,(hl)
   003D 23            [ 6]   78 	inc	hl
   003E 5E            [ 7]   79 	ld	e,(hl)
   003F 23            [ 6]   80 	inc	hl
   0040 4E            [ 7]   81 	ld	c,(hl)
   0041 23            [ 6]   82 	inc	hl
   0042 46            [ 7]   83 	ld	b,(hl)
   0043 DD 7E FC      [19]   84 	ld	a,-4 (ix)
   0046 92            [ 4]   85 	sub	a, d
   0047 20 15         [12]   86 	jr	NZ,00102$
   0049 DD 7E FD      [19]   87 	ld	a,-3 (ix)
   004C 93            [ 4]   88 	sub	a, e
   004D 20 0F         [12]   89 	jr	NZ,00102$
   004F DD 7E FE      [19]   90 	ld	a,-2 (ix)
   0052 91            [ 4]   91 	sub	a, c
   0053 20 09         [12]   92 	jr	NZ,00102$
   0055 DD 7E FF      [19]   93 	ld	a,-1 (ix)
                             94 ;../_fsneq.c:88: return (0);
   0058 90            [ 4]   95 	sub	a,b
   0059 20 03         [12]   96 	jr	NZ,00102$
   005B 6F            [ 4]   97 	ld	l,a
   005C 18 40         [12]   98 	jr	00105$
   005E                      99 00102$:
                            100 ;../_fsneq.c:89: if (((fl1.l | fl2.l) & 0x7FFFFFFF) == 0)
   005E 21 04 00      [10]  101 	ld	hl,#0x0004
   0061 39            [11]  102 	add	hl,sp
   0062 EB            [ 4]  103 	ex	de,hl
   0063 21 08 00      [10]  104 	ld	hl, #0x0008
   0066 39            [11]  105 	add	hl, sp
   0067 EB            [ 4]  106 	ex	de, hl
   0068 01 04 00      [10]  107 	ld	bc, #0x0004
   006B ED B0         [21]  108 	ldir
   006D 21 00 00      [10]  109 	ld	hl,#0x0000
   0070 39            [11]  110 	add	hl,sp
   0071 5E            [ 7]  111 	ld	e,(hl)
   0072 23            [ 6]  112 	inc	hl
   0073 56            [ 7]  113 	ld	d,(hl)
   0074 23            [ 6]  114 	inc	hl
   0075 4E            [ 7]  115 	ld	c,(hl)
   0076 23            [ 6]  116 	inc	hl
   0077 46            [ 7]  117 	ld	b,(hl)
   0078 DD 7E FC      [19]  118 	ld	a,-4 (ix)
   007B B3            [ 4]  119 	or	a, e
   007C 5F            [ 4]  120 	ld	e,a
   007D DD 7E FD      [19]  121 	ld	a,-3 (ix)
   0080 B2            [ 4]  122 	or	a, d
   0081 57            [ 4]  123 	ld	d,a
   0082 DD 7E FE      [19]  124 	ld	a,-2 (ix)
   0085 B1            [ 4]  125 	or	a, c
   0086 6F            [ 4]  126 	ld	l,a
   0087 DD 7E FF      [19]  127 	ld	a,-1 (ix)
   008A B0            [ 4]  128 	or	a, b
   008B 67            [ 4]  129 	ld	h,a
   008C 7B            [ 4]  130 	ld	a,e
   008D B7            [ 4]  131 	or	a,a
   008E 20 0C         [12]  132 	jr	NZ,00104$
   0090 B2            [ 4]  133 	or	a,d
   0091 20 09         [12]  134 	jr	NZ,00104$
   0093 BF            [ 4]  135 	cp	a, a
   0094 ED 6A         [15]  136 	adc	hl, hl
   0096 20 04         [12]  137 	jr	NZ,00104$
                            138 ;../_fsneq.c:90: return (0);
   0098 2E 00         [ 7]  139 	ld	l,#0x00
   009A 18 02         [12]  140 	jr	00105$
   009C                     141 00104$:
                            142 ;../_fsneq.c:91: return (1);
   009C 2E 01         [ 7]  143 	ld	l,#0x01
   009E                     144 00105$:
   009E DD F9         [10]  145 	ld	sp, ix
   00A0 DD E1         [14]  146 	pop	ix
   00A2 C9            [10]  147 	ret
                            148 	.area _HOME
                            149 ;--------------------------------------------------------
                            150 ; code
                            151 ;--------------------------------------------------------
                            152 	.area _CODE
                            153 	.area _CODE
                            154 	.area _INITIALIZER
                            155 	.area _CABS (ABS)
