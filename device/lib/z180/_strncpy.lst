                              1 ;--------------------------------------------------------
                              2 ; File Created by SDCC : free open source ANSI-C Compiler
                              3 ; Version 3.5.0 #9253 (Apr  4 2022) (Linux)
                              4 ; This file was generated Mon Apr  4 14:15:44 2022
                              5 ;--------------------------------------------------------
                              6 	.hd64
                              7 	.module _strncpy
                              8 	.optsdcc -mz180
                              9 	
                             10 ;--------------------------------------------------------
                             11 ; Public variables in this module
                             12 ;--------------------------------------------------------
                             13 	.globl _strncpy
                             14 ;--------------------------------------------------------
                             15 ; special function registers
                             16 ;--------------------------------------------------------
                             17 ;--------------------------------------------------------
                             18 ; ram data
                             19 ;--------------------------------------------------------
                             20 	.area _DATA
                             21 ;--------------------------------------------------------
                             22 ; ram data
                             23 ;--------------------------------------------------------
                             24 	.area _INITIALIZED
                             25 ;--------------------------------------------------------
                             26 ; absolute external ram data
                             27 ;--------------------------------------------------------
                             28 	.area _DABS (ABS)
                             29 ;--------------------------------------------------------
                             30 ; global & static initialisations
                             31 ;--------------------------------------------------------
                             32 	.area _HOME
                             33 	.area _GSINIT
                             34 	.area _GSFINAL
                             35 	.area _GSINIT
                             36 ;--------------------------------------------------------
                             37 ; Home
                             38 ;--------------------------------------------------------
                             39 	.area _HOME
                             40 	.area _HOME
                             41 ;--------------------------------------------------------
                             42 ; code
                             43 ;--------------------------------------------------------
                             44 	.area _CODE
                             45 ;../_strncpy.c:33: char *strncpy ( char * d, const char * s, size_t n )
                             46 ;	---------------------------------
                             47 ; Function strncpy
                             48 ; ---------------------------------
   0000                      49 _strncpy::
   0000 DD E5         [14]   50 	push	ix
   0002 DD 21 00 00   [12]   51 	ld	ix,#0
   0006 DD 39         [10]   52 	add	ix,sp
   0008 3B            [ 4]   53 	dec	sp
   0009 3B            [ 4]   54 	dec	sp
                             55 ;../_strncpy.c:35: register char * d1 =  d;
   000A DD 7E 04      [14]   56 	ld	a,4 (ix)
   000D DD 77 FE      [15]   57 	ld	-2 (ix),a
   0010 DD 7E 05      [14]   58 	ld	a,5 (ix)
   0013 DD 77 FF      [15]   59 	ld	-1 (ix),a
                             60 ;../_strncpy.c:37: while ( n && *s )
   0016 DD 5E 08      [14]   61 	ld	e,8 (ix)
   0019 DD 56 09      [14]   62 	ld	d,9 (ix)
   001C DD 4E 06      [14]   63 	ld	c,6 (ix)
   001F DD 46 07      [14]   64 	ld	b,7 (ix)
   0022 C5            [11]   65 	push	bc
   0023 FD E1         [12]   66 	pop	iy
   0025 C1            [ 9]   67 	pop	bc
   0026 C5            [11]   68 	push	bc
   0027                      69 00102$:
   0027 7A            [ 4]   70 	ld	a,d
   0028 B3            [ 4]   71 	or	a,e
   0029 28 0F         [ 8]   72 	jr	Z,00114$
   002B FD 66 00      [14]   73 	ld	h, 0 (iy)
   002E 7C            [ 4]   74 	ld	a,h
   002F B7            [ 4]   75 	or	a, a
   0030 28 08         [ 8]   76 	jr	Z,00114$
                             77 ;../_strncpy.c:39: n-- ;
   0032 1B            [ 4]   78 	dec	de
                             79 ;../_strncpy.c:40: *d++ = *s++ ;
   0033 7C            [ 4]   80 	ld	a,h
   0034 FD 23         [ 7]   81 	inc	iy
   0036 02            [ 7]   82 	ld	(bc),a
   0037 03            [ 4]   83 	inc	bc
   0038 18 ED         [ 8]   84 	jr	00102$
                             85 ;../_strncpy.c:42: while ( n-- )
   003A                      86 00114$:
   003A                      87 00105$:
   003A 63            [ 4]   88 	ld	h,e
   003B 6A            [ 4]   89 	ld	l,d
   003C 1B            [ 4]   90 	dec	de
   003D 7D            [ 4]   91 	ld	a,l
   003E B4            [ 4]   92 	or	a,h
   003F 28 05         [ 8]   93 	jr	Z,00107$
                             94 ;../_strncpy.c:44: *d++ = '\0' ;
   0041 AF            [ 4]   95 	xor	a, a
   0042 02            [ 7]   96 	ld	(bc),a
   0043 03            [ 4]   97 	inc	bc
   0044 18 F4         [ 8]   98 	jr	00105$
   0046                      99 00107$:
                            100 ;../_strncpy.c:46: return d1;
   0046 E1            [ 9]  101 	pop	hl
   0047 E5            [11]  102 	push	hl
   0048 DD F9         [ 7]  103 	ld	sp, ix
   004A DD E1         [12]  104 	pop	ix
   004C C9            [ 9]  105 	ret
                            106 	.area _CODE
                            107 	.area _INITIALIZER
                            108 	.area _CABS (ABS)
