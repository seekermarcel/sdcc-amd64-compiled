                              1 ;--------------------------------------------------------
                              2 ; File Created by SDCC : free open source ANSI-C Compiler
                              3 ; Version 3.5.0 #9253 (Apr  4 2022) (Linux)
                              4 ; This file was generated Mon Apr  4 14:10:32 2022
                              5 ;--------------------------------------------------------
                              6 	.module _mullonglong
                              7 	.optsdcc -mhc08
                              8 	
                              9 	.area HOME    (CODE)
                             10 	.area GSINIT0 (CODE)
                             11 	.area GSINIT  (CODE)
                             12 	.area GSFINAL (CODE)
                             13 	.area CSEG    (CODE)
                             14 	.area XINIT   (CODE)
                             15 	.area CONST   (CODE)
                             16 	.area DSEG    (PAG)
                             17 	.area OSEG    (PAG, OVR)
                             18 	.area XSEG
                             19 	.area XISEG
                             20 ;--------------------------------------------------------
                             21 ; Public variables in this module
                             22 ;--------------------------------------------------------
                             23 	.globl __mullonglong_PARM_2
                             24 	.globl __mullonglong_PARM_1
                             25 	.globl __mullonglong
                             26 ;--------------------------------------------------------
                             27 ; ram data
                             28 ;--------------------------------------------------------
                             29 	.area DSEG    (PAG)
   0000                      30 __mullonglong_sloc0_1_0:
   0000                      31 	.ds 8
   0008                      32 __mullonglong_sloc1_1_0:
   0008                      33 	.ds 2
   000A                      34 __mullonglong_sloc2_1_0:
   000A                      35 	.ds 8
                             36 ;--------------------------------------------------------
                             37 ; overlayable items in ram 
                             38 ;--------------------------------------------------------
                             39 ;--------------------------------------------------------
                             40 ; absolute ram data
                             41 ;--------------------------------------------------------
                             42 	.area IABS    (ABS)
                             43 	.area IABS    (ABS)
                             44 ;--------------------------------------------------------
                             45 ; absolute external ram data
                             46 ;--------------------------------------------------------
                             47 	.area XABS    (ABS)
                             48 ;--------------------------------------------------------
                             49 ; external initialized ram data
                             50 ;--------------------------------------------------------
                             51 	.area XISEG
                             52 ;--------------------------------------------------------
                             53 ; extended address mode data
                             54 ;--------------------------------------------------------
                             55 	.area XSEG
   0000                      56 __mullonglong_PARM_1:
   0000                      57 	.ds 8
   0008                      58 __mullonglong_PARM_2:
   0008                      59 	.ds 8
   0010                      60 __mullonglong_ret_1_2:
   0010                      61 	.ds 8
   0018                      62 __mullonglong_l_2_3:
   0018                      63 	.ds 1
                             64 ;--------------------------------------------------------
                             65 ; global & static initialisations
                             66 ;--------------------------------------------------------
                             67 	.area HOME    (CODE)
                             68 	.area GSINIT  (CODE)
                             69 	.area GSFINAL (CODE)
                             70 	.area GSINIT  (CODE)
                             71 ;--------------------------------------------------------
                             72 ; Home
                             73 ;--------------------------------------------------------
                             74 	.area HOME    (CODE)
                             75 	.area HOME    (CODE)
                             76 ;--------------------------------------------------------
                             77 ; code
                             78 ;--------------------------------------------------------
                             79 	.area CSEG    (CODE)
                             80 ;------------------------------------------------------------
                             81 ;Allocation info for local variables in function '_mullonglong'
                             82 ;------------------------------------------------------------
                             83 ;sloc0                     Allocated with name '__mullonglong_sloc0_1_0'
                             84 ;sloc1                     Allocated with name '__mullonglong_sloc1_1_0'
                             85 ;sloc2                     Allocated with name '__mullonglong_sloc2_1_0'
                             86 ;ll                        Allocated with name '__mullonglong_PARM_1'
                             87 ;lr                        Allocated with name '__mullonglong_PARM_2'
                             88 ;ret                       Allocated with name '__mullonglong_ret_1_2'
                             89 ;i                         Allocated to registers 
                             90 ;j                         Allocated to registers 
                             91 ;l                         Allocated with name '__mullonglong_l_2_3'
                             92 ;r                         Allocated to registers x 
                             93 ;------------------------------------------------------------
                             94 ;../_mullonglong.c:35: long long _mullonglong(long long ll, long long lr)
                             95 ;	-----------------------------------------
                             96 ;	 function _mullonglong
                             97 ;	-----------------------------------------
                             98 ;	Register assignment might be sub-optimal.
                             99 ;	Stack space usage: 0 bytes.
   0000                     100 __mullonglong:
                            101 ;../_mullonglong.c:37: unsigned long long ret = 0ull;
   0000 45r00r10      [ 3]  102 	ldhx	#__mullonglong_ret_1_2
   0003 4F            [ 1]  103 	clra
   0004 F7            [ 2]  104 	sta	,x
   0005 E7 01         [ 3]  105 	sta	1,x
   0007 E7 02         [ 3]  106 	sta	2,x
   0009 E7 03         [ 3]  107 	sta	3,x
   000B E7 04         [ 3]  108 	sta	4,x
   000D E7 05         [ 3]  109 	sta	5,x
   000F E7 06         [ 3]  110 	sta	6,x
   0011 E7 07         [ 3]  111 	sta	7,x
                            112 ;../_mullonglong.c:40: for (i = 0; i < sizeof (long long); i++)
   0013 87            [ 2]  113 	psha
   0014 8A            [ 2]  114 	pulh
   0015                     115 00106$:
                            116 ;../_mullonglong.c:42: unsigned char l = ll >> (i * 8);
   0015 8B            [ 2]  117 	pshh
   0016 86            [ 2]  118 	pula
   0017 AE 08         [ 2]  119 	ldx	#0x08
   0019 42            [ 5]  120 	mul
   001A C7r00r00      [ 4]  121 	sta	__rrslonglong_PARM_2
   001D C6r00r00      [ 4]  122 	lda	__mullonglong_PARM_1
   0020 C7r00r00      [ 4]  123 	sta	__rrslonglong_PARM_1
   0023 C6r00r01      [ 4]  124 	lda	(__mullonglong_PARM_1 + 1)
   0026 C7r00r01      [ 4]  125 	sta	(__rrslonglong_PARM_1 + 1)
   0029 C6r00r02      [ 4]  126 	lda	(__mullonglong_PARM_1 + 2)
   002C C7r00r02      [ 4]  127 	sta	(__rrslonglong_PARM_1 + 2)
   002F C6r00r03      [ 4]  128 	lda	(__mullonglong_PARM_1 + 3)
   0032 C7r00r03      [ 4]  129 	sta	(__rrslonglong_PARM_1 + 3)
   0035 C6r00r04      [ 4]  130 	lda	(__mullonglong_PARM_1 + 4)
   0038 C7r00r04      [ 4]  131 	sta	(__rrslonglong_PARM_1 + 4)
   003B C6r00r05      [ 4]  132 	lda	(__mullonglong_PARM_1 + 5)
   003E C7r00r05      [ 4]  133 	sta	(__rrslonglong_PARM_1 + 5)
   0041 C6r00r06      [ 4]  134 	lda	(__mullonglong_PARM_1 + 6)
   0044 C7r00r06      [ 4]  135 	sta	(__rrslonglong_PARM_1 + 6)
   0047 C6r00r07      [ 4]  136 	lda	(__mullonglong_PARM_1 + 7)
   004A C7r00r07      [ 4]  137 	sta	(__rrslonglong_PARM_1 + 7)
   004D 8B            [ 2]  138 	pshh
   004E CDr00r00      [ 5]  139 	jsr	__rrslonglong
   0051 B7*07         [ 3]  140 	sta	*(__mullonglong_sloc0_1_0 + 7)
   0053 BF*06         [ 3]  141 	stx	*(__mullonglong_sloc0_1_0 + 6)
   0055 4E*00*05      [ 5]  142 	mov	*___SDCC_hc08_ret2,*(__mullonglong_sloc0_1_0 + 5)
   0058 4E*00*04      [ 5]  143 	mov	*___SDCC_hc08_ret3,*(__mullonglong_sloc0_1_0 + 4)
   005B 4E*00*03      [ 5]  144 	mov	*___SDCC_hc08_ret4,*(__mullonglong_sloc0_1_0 + 3)
   005E 4E*00*02      [ 5]  145 	mov	*___SDCC_hc08_ret5,*(__mullonglong_sloc0_1_0 + 2)
   0061 4E*00*01      [ 5]  146 	mov	*___SDCC_hc08_ret6,*(__mullonglong_sloc0_1_0 + 1)
   0064 4E*00*00      [ 5]  147 	mov	*___SDCC_hc08_ret7,*__mullonglong_sloc0_1_0
   0067 8A            [ 2]  148 	pulh
   0068 B6*07         [ 3]  149 	lda	*(__mullonglong_sloc0_1_0 + 7)
   006A C7r00r18      [ 4]  150 	sta	__mullonglong_l_2_3
                            151 ;../_mullonglong.c:43: for(j = 0; (i + j) < sizeof (long long); j++)
   006D 6E 00*00      [ 4]  152 	mov	#0x00,*__mullonglong_sloc0_1_0
   0070                     153 00104$:
   0070 8B            [ 2]  154 	pshh
   0071 86            [ 2]  155 	pula
   0072 5F            [ 1]  156 	clrx
   0073 4E*00*09      [ 5]  157 	mov	*__mullonglong_sloc0_1_0,*(__mullonglong_sloc1_1_0 + 1)
   0076 BF*08         [ 3]  158 	stx	*__mullonglong_sloc1_1_0
   0078 BB*09         [ 3]  159 	add	*(__mullonglong_sloc1_1_0 + 1)
   007A B7*09         [ 3]  160 	sta	*(__mullonglong_sloc1_1_0 + 1)
   007C 9F            [ 1]  161 	txa
   007D B9*08         [ 3]  162 	adc	*__mullonglong_sloc1_1_0
   007F B7*08         [ 3]  163 	sta	*__mullonglong_sloc1_1_0
   0081 B6*09         [ 3]  164 	lda	*(__mullonglong_sloc1_1_0 + 1)
   0083 A0 08         [ 2]  165 	sub	#0x08
   0085 B6*08         [ 3]  166 	lda	*__mullonglong_sloc1_1_0
   0087 A2 00         [ 2]  167 	sbc	#0x00
   0089 91 03         [ 3]  168 	blt	00128$
   008B CCr01r70      [ 3]  169 	jmp	00107$
   008E                     170 00128$:
                            171 ;../_mullonglong.c:45: unsigned char r = lr >> (j * 8);
   008E B6*00         [ 3]  172 	lda	*__mullonglong_sloc0_1_0
   0090 AE 08         [ 2]  173 	ldx	#0x08
   0092 42            [ 5]  174 	mul
   0093 C7r00r00      [ 4]  175 	sta	__rrslonglong_PARM_2
   0096 C6r00r08      [ 4]  176 	lda	__mullonglong_PARM_2
   0099 C7r00r00      [ 4]  177 	sta	__rrslonglong_PARM_1
   009C C6r00r09      [ 4]  178 	lda	(__mullonglong_PARM_2 + 1)
   009F C7r00r01      [ 4]  179 	sta	(__rrslonglong_PARM_1 + 1)
   00A2 C6r00r0A      [ 4]  180 	lda	(__mullonglong_PARM_2 + 2)
   00A5 C7r00r02      [ 4]  181 	sta	(__rrslonglong_PARM_1 + 2)
   00A8 C6r00r0B      [ 4]  182 	lda	(__mullonglong_PARM_2 + 3)
   00AB C7r00r03      [ 4]  183 	sta	(__rrslonglong_PARM_1 + 3)
   00AE C6r00r0C      [ 4]  184 	lda	(__mullonglong_PARM_2 + 4)
   00B1 C7r00r04      [ 4]  185 	sta	(__rrslonglong_PARM_1 + 4)
   00B4 C6r00r0D      [ 4]  186 	lda	(__mullonglong_PARM_2 + 5)
   00B7 C7r00r05      [ 4]  187 	sta	(__rrslonglong_PARM_1 + 5)
   00BA C6r00r0E      [ 4]  188 	lda	(__mullonglong_PARM_2 + 6)
   00BD C7r00r06      [ 4]  189 	sta	(__rrslonglong_PARM_1 + 6)
   00C0 C6r00r0F      [ 4]  190 	lda	(__mullonglong_PARM_2 + 7)
   00C3 C7r00r07      [ 4]  191 	sta	(__rrslonglong_PARM_1 + 7)
   00C6 8B            [ 2]  192 	pshh
   00C7 CDr00r00      [ 5]  193 	jsr	__rrslonglong
   00CA B7*11         [ 3]  194 	sta	*(__mullonglong_sloc2_1_0 + 7)
   00CC BF*10         [ 3]  195 	stx	*(__mullonglong_sloc2_1_0 + 6)
   00CE 4E*00*0F      [ 5]  196 	mov	*___SDCC_hc08_ret2,*(__mullonglong_sloc2_1_0 + 5)
   00D1 4E*00*0E      [ 5]  197 	mov	*___SDCC_hc08_ret3,*(__mullonglong_sloc2_1_0 + 4)
   00D4 4E*00*0D      [ 5]  198 	mov	*___SDCC_hc08_ret4,*(__mullonglong_sloc2_1_0 + 3)
   00D7 4E*00*0C      [ 5]  199 	mov	*___SDCC_hc08_ret5,*(__mullonglong_sloc2_1_0 + 2)
   00DA 4E*00*0B      [ 5]  200 	mov	*___SDCC_hc08_ret6,*(__mullonglong_sloc2_1_0 + 1)
   00DD 4E*00*0A      [ 5]  201 	mov	*___SDCC_hc08_ret7,*__mullonglong_sloc2_1_0
   00E0 8A            [ 2]  202 	pulh
   00E1 BE*11         [ 3]  203 	ldx	*(__mullonglong_sloc2_1_0 + 7)
                            204 ;../_mullonglong.c:46: ret += (unsigned long long)((unsigned short)(l * r)) << ((i + j) * 8);
   00E3 C6r00r18      [ 4]  205 	lda	__mullonglong_l_2_3
   00E6 42            [ 5]  206 	mul
   00E7 B7*0B         [ 3]  207 	sta	*(__mullonglong_sloc2_1_0 + 1)
   00E9 BF*0A         [ 3]  208 	stx	*__mullonglong_sloc2_1_0
   00EB B6*0B         [ 3]  209 	lda	*(__mullonglong_sloc2_1_0 + 1)
   00ED C7r00r07      [ 4]  210 	sta	(__rlulonglong_PARM_1 + 7)
   00F0 B6*0A         [ 3]  211 	lda	*__mullonglong_sloc2_1_0
   00F2 C7r00r06      [ 4]  212 	sta	(__rlulonglong_PARM_1 + 6)
   00F5 4F            [ 1]  213 	clra
   00F6 C7r00r05      [ 4]  214 	sta	(__rlulonglong_PARM_1 + 5)
   00F9 C7r00r04      [ 4]  215 	sta	(__rlulonglong_PARM_1 + 4)
   00FC C7r00r03      [ 4]  216 	sta	(__rlulonglong_PARM_1 + 3)
   00FF C7r00r02      [ 4]  217 	sta	(__rlulonglong_PARM_1 + 2)
   0102 C7r00r01      [ 4]  218 	sta	(__rlulonglong_PARM_1 + 1)
   0105 C7r00r00      [ 4]  219 	sta	__rlulonglong_PARM_1
   0108 B6*09         [ 3]  220 	lda	*(__mullonglong_sloc1_1_0 + 1)
   010A 48            [ 1]  221 	lsla	
   010B 48            [ 1]  222 	lsla	
   010C 48            [ 1]  223 	lsla	
   010D C7r00r00      [ 4]  224 	sta	__rlulonglong_PARM_2
   0110 8B            [ 2]  225 	pshh
   0111 CDr00r00      [ 5]  226 	jsr	__rlulonglong
   0114 B7*11         [ 3]  227 	sta	*(__mullonglong_sloc2_1_0 + 7)
   0116 BF*10         [ 3]  228 	stx	*(__mullonglong_sloc2_1_0 + 6)
   0118 4E*00*0F      [ 5]  229 	mov	*___SDCC_hc08_ret2,*(__mullonglong_sloc2_1_0 + 5)
   011B 4E*00*0E      [ 5]  230 	mov	*___SDCC_hc08_ret3,*(__mullonglong_sloc2_1_0 + 4)
   011E 4E*00*0D      [ 5]  231 	mov	*___SDCC_hc08_ret4,*(__mullonglong_sloc2_1_0 + 3)
   0121 4E*00*0C      [ 5]  232 	mov	*___SDCC_hc08_ret5,*(__mullonglong_sloc2_1_0 + 2)
   0124 4E*00*0B      [ 5]  233 	mov	*___SDCC_hc08_ret6,*(__mullonglong_sloc2_1_0 + 1)
   0127 4E*00*0A      [ 5]  234 	mov	*___SDCC_hc08_ret7,*__mullonglong_sloc2_1_0
   012A 8A            [ 2]  235 	pulh
   012B C6r00r17      [ 4]  236 	lda	(__mullonglong_ret_1_2 + 7)
   012E BB*11         [ 3]  237 	add	*(__mullonglong_sloc2_1_0 + 7)
   0130 C7r00r17      [ 4]  238 	sta	(__mullonglong_ret_1_2 + 7)
   0133 C6r00r16      [ 4]  239 	lda	(__mullonglong_ret_1_2 + 6)
   0136 B9*10         [ 3]  240 	adc	*(__mullonglong_sloc2_1_0 + 6)
   0138 C7r00r16      [ 4]  241 	sta	(__mullonglong_ret_1_2 + 6)
   013B C6r00r15      [ 4]  242 	lda	(__mullonglong_ret_1_2 + 5)
   013E B9*0F         [ 3]  243 	adc	*(__mullonglong_sloc2_1_0 + 5)
   0140 C7r00r15      [ 4]  244 	sta	(__mullonglong_ret_1_2 + 5)
   0143 C6r00r14      [ 4]  245 	lda	(__mullonglong_ret_1_2 + 4)
   0146 B9*0E         [ 3]  246 	adc	*(__mullonglong_sloc2_1_0 + 4)
   0148 C7r00r14      [ 4]  247 	sta	(__mullonglong_ret_1_2 + 4)
   014B C6r00r13      [ 4]  248 	lda	(__mullonglong_ret_1_2 + 3)
   014E B9*0D         [ 3]  249 	adc	*(__mullonglong_sloc2_1_0 + 3)
   0150 C7r00r13      [ 4]  250 	sta	(__mullonglong_ret_1_2 + 3)
   0153 C6r00r12      [ 4]  251 	lda	(__mullonglong_ret_1_2 + 2)
   0156 B9*0C         [ 3]  252 	adc	*(__mullonglong_sloc2_1_0 + 2)
   0158 C7r00r12      [ 4]  253 	sta	(__mullonglong_ret_1_2 + 2)
   015B C6r00r11      [ 4]  254 	lda	(__mullonglong_ret_1_2 + 1)
   015E B9*0B         [ 3]  255 	adc	*(__mullonglong_sloc2_1_0 + 1)
   0160 C7r00r11      [ 4]  256 	sta	(__mullonglong_ret_1_2 + 1)
   0163 C6r00r10      [ 4]  257 	lda	__mullonglong_ret_1_2
   0166 B9*0A         [ 3]  258 	adc	*__mullonglong_sloc2_1_0
   0168 C7r00r10      [ 4]  259 	sta	__mullonglong_ret_1_2
                            260 ;../_mullonglong.c:43: for(j = 0; (i + j) < sizeof (long long); j++)
   016B 3C*00         [ 4]  261 	inc	*__mullonglong_sloc0_1_0
   016D CCr00r70      [ 3]  262 	jmp	00104$
   0170                     263 00107$:
                            264 ;../_mullonglong.c:40: for (i = 0; i < sizeof (long long); i++)
   0170 8B            [ 2]  265 	pshh
   0171 9E 6C 01      [ 5]  266 	inc	1,s
   0174 8A            [ 2]  267 	pulh
   0175 8B            [ 2]  268 	pshh
   0176 86            [ 2]  269 	pula
   0177 A1 08         [ 2]  270 	cmp	#0x08
   0179 24 03         [ 3]  271 	bcc	00129$
   017B CCr00r15      [ 3]  272 	jmp	00106$
   017E                     273 00129$:
                            274 ;../_mullonglong.c:50: return(ret);
   017E C6r00r10      [ 4]  275 	lda	__mullonglong_ret_1_2
   0181 B7*00         [ 3]  276 	sta	*___SDCC_hc08_ret7
   0183 C6r00r11      [ 4]  277 	lda	(__mullonglong_ret_1_2 + 1)
   0186 B7*00         [ 3]  278 	sta	*___SDCC_hc08_ret6
   0188 C6r00r12      [ 4]  279 	lda	(__mullonglong_ret_1_2 + 2)
   018B B7*00         [ 3]  280 	sta	*___SDCC_hc08_ret5
   018D C6r00r13      [ 4]  281 	lda	(__mullonglong_ret_1_2 + 3)
   0190 B7*00         [ 3]  282 	sta	*___SDCC_hc08_ret4
   0192 C6r00r14      [ 4]  283 	lda	(__mullonglong_ret_1_2 + 4)
   0195 B7*00         [ 3]  284 	sta	*___SDCC_hc08_ret3
   0197 C6r00r15      [ 4]  285 	lda	(__mullonglong_ret_1_2 + 5)
   019A B7*00         [ 3]  286 	sta	*___SDCC_hc08_ret2
   019C CEr00r16      [ 4]  287 	ldx	(__mullonglong_ret_1_2 + 6)
   019F C6r00r17      [ 4]  288 	lda	(__mullonglong_ret_1_2 + 7)
   01A2 81            [ 4]  289 	rts
                            290 	.area CSEG    (CODE)
                            291 	.area CONST   (CODE)
                            292 	.area XINIT   (CODE)
                            293 	.area CABS    (ABS,CODE)
