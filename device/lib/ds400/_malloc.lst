                                      1 ;--------------------------------------------------------
                                      2 ; File Created by SDCC : free open source ANSI-C Compiler
                                      3 ; Version 3.5.0 #9253 (Apr  4 2022) (Linux)
                                      4 ; This file was generated Mon Apr  4 14:10:30 2022
                                      5 ;--------------------------------------------------------
                                      6 	.module _malloc
                                      7 	.optsdcc -mds400 --model-flat24
                                      8 	
                                      9 ;--------------------------------------------------------
                                     10 ; CPU specific extensions
                                     11 ;--------------------------------------------------------
                                     12 	.DS80C390
                                     13 	.amode	2	; 24 bit flat addressing
                           000082    14 dpl	=	0x82
                           000083    15 dph	=	0x83
                           000084    16 dpl1	=	0x84
                           000085    17 dph1	=	0x85
                           000086    18 dps	=	0x86
                           000093    19 dpx	=	0x93
                           000095    20 dpx1	=	0x95
                           00009B    21 esp	=	0x9B
                           00009C    22 ap	=	0x9C
                           00009C    23 acc1	=	0x9C
                           0000D1    24 mcnt0	=	0xD1
                           0000D2    25 mcnt1	=	0xD2
                           0000D3    26 ma	=	0xD3
                           0000D4    27 mb	=	0xD4
                           0000D5    28 mc	=	0xD5
                           00009D    29 acon	=	0x9D
                           0000D1    30 F1	=	0xD1	; user flag
                                     31 ;--------------------------------------------------------
                                     32 ; Public variables in this module
                                     33 ;--------------------------------------------------------
                                     34 	.globl __sdcc_first_memheader
                                     35 	.globl _malloc
                                     36 ;--------------------------------------------------------
                                     37 ; special function registers
                                     38 ;--------------------------------------------------------
                                     39 ;--------------------------------------------------------
                                     40 ; special function bits
                                     41 ;--------------------------------------------------------
                                     42 ;--------------------------------------------------------
                                     43 ; overlayable register banks
                                     44 ;--------------------------------------------------------
                                     45 	.area REG_BANK_0	(REL,OVR,DATA)
      000000                         46 	.ds 8
                                     47 	.area REG_BANK_3	(REL,OVR,DATA)
      000000                         48 	.ds 8
                                     49 ;--------------------------------------------------------
                                     50 ; internal ram data
                                     51 ;--------------------------------------------------------
                                     52 	.area DSEG    (DATA)
                                     53 ;--------------------------------------------------------
                                     54 ; overlayable items in internal ram 
                                     55 ;--------------------------------------------------------
                                     56 ;--------------------------------------------------------
                                     57 ; indirectly addressable internal ram data
                                     58 ;--------------------------------------------------------
                                     59 	.area ISEG    (DATA)
                                     60 ;--------------------------------------------------------
                                     61 ; absolute internal ram data
                                     62 ;--------------------------------------------------------
                                     63 	.area IABS    (ABS,DATA)
                                     64 	.area IABS    (ABS,DATA)
                                     65 ;--------------------------------------------------------
                                     66 ; bit data
                                     67 ;--------------------------------------------------------
                                     68 	.area BSEG    (BIT)
                                     69 ;--------------------------------------------------------
                                     70 ; paged external ram data
                                     71 ;--------------------------------------------------------
                                     72 	.area PSEG    (PAG,XDATA)
                                     73 ;--------------------------------------------------------
                                     74 ; external ram data
                                     75 ;--------------------------------------------------------
                                     76 	.area XSEG    (XDATA)
      000000                         77 _malloc_size_1_8:
      000000                         78 	.ds 2
      000002                         79 _malloc_current_header_1_9:
      000002                         80 	.ds 3
                                     81 ;--------------------------------------------------------
                                     82 ; absolute external ram data
                                     83 ;--------------------------------------------------------
                                     84 	.area XABS    (ABS,XDATA)
                                     85 ;--------------------------------------------------------
                                     86 ; external initialized ram data
                                     87 ;--------------------------------------------------------
                                     88 	.area XISEG   (XDATA)
      000000                         89 __sdcc_first_memheader::
      000000                         90 	.ds 3
                                     91 ;--------------------------------------------------------
                                     92 ; global & static initialisations
                                     93 ;--------------------------------------------------------
                                     94 	.area HOME    (CODE)
                                     95 	.area GSINIT  (CODE)
                                     96 	.area GSFINAL (CODE)
                                     97 	.area GSINIT  (CODE)
                                     98 ;--------------------------------------------------------
                                     99 ; Home
                                    100 ;--------------------------------------------------------
                                    101 	.area HOME    (CODE)
                                    102 	.area HOME    (CODE)
                                    103 ;--------------------------------------------------------
                                    104 ; code
                                    105 ;--------------------------------------------------------
                                    106 	.area CSEG    (CODE)
                                    107 ;------------------------------------------------------------
                                    108 ;Allocation info for local variables in function 'init_dynamic_memory'
                                    109 ;------------------------------------------------------------
                                    110 ;heap                      Allocated to registers r2 r3 r4 
                                    111 ;size                      Allocated to registers r5 r6 
                                    112 ;------------------------------------------------------------
                                    113 ;	_malloc.c:166: static void init_dynamic_memory(void)
                                    114 ;	-----------------------------------------
                                    115 ;	 function init_dynamic_memory
                                    116 ;	-----------------------------------------
      000000                        117 _init_dynamic_memory:
                           000002   118 	ar2 = 0x02
                           000003   119 	ar3 = 0x03
                           000004   120 	ar4 = 0x04
                           000005   121 	ar5 = 0x05
                           000006   122 	ar6 = 0x06
                           000007   123 	ar7 = 0x07
                           000000   124 	ar0 = 0x00
                           000001   125 	ar1 = 0x01
                                    126 ;	_malloc.c:168: char __xdata * heap = (char __xdata *)_sdcc_heap;
                                    127 ;	genAssign: resultIsFar = TRUE
      000000 7Ar00            [ 8]  128 	mov	r2,#__sdcc_heap
      000002 7Bs00            [ 8]  129 	mov	r3,#(__sdcc_heap >> 8)
      000004 7Cs00            [ 8]  130 	mov	r4,#(__sdcc_heap >> 16)
                                    131 ;	_malloc.c:169: unsigned int size = _sdcc_heap_size;
      000006 90s00r00r00      [12]  132 	mov	dptr,#__sdcc_heap_size
                                    133 ;	genAssign: resultIsFar = TRUE
      00000A E4               [ 4]  134 	clr	a
      00000B 93               [12]  135 	movc	a,@a+dptr
      00000C FD               [ 4]  136 	mov	r5,a
      00000D A3               [12]  137 	inc	dptr
      00000E E4               [ 4]  138 	clr	a
      00000F 93               [12]  139 	movc	a,@a+dptr
      000010 FE               [ 4]  140 	mov	r6,a
                                    141 ;	_malloc.c:171: if ( !heap ) //Reserved memory starts at 0x0000 but that's NULL...
      000011 EA               [ 4]  142 	mov	a,r2
      000012 4B               [ 4]  143 	orl	a,r3
      000013 4C               [ 4]  144 	orl	a,r4
      000014 70 15            [12]  145 	jnz  00102$
      000016                        146 00108$:
                                    147 ;	_malloc.c:173: heap++;
      000016 0A               [ 4]  148 	inc	r2
      000017 BA 00 05         [16]  149 	cjne	r2,#0x00,00109$
      00001A 0B               [ 4]  150 	inc	r3
      00001B BB 00 01         [16]  151 	cjne	r3,#0x00,00109$
      00001E 0C               [ 4]  152 	inc	r4
      00001F                        153 00109$:
                                    154 ;	_malloc.c:174: size--;
      00001F ED               [ 4]  155 	mov	a,r5
      000020 24 FF            [ 8]  156 	add	a,#0xFF
      000022 FF               [ 4]  157 	mov	r7,a
      000023 EE               [ 4]  158 	mov	a,r6
      000024 34 FF            [ 8]  159 	addc	a,#0xFF
      000026 F8               [ 4]  160 	mov	r0,a
                                    161 ;	genAssign: resultIsFar = TRUE
      000027 8F 05            [ 8]  162 	mov	ar5,r7
      000029 88 06            [ 8]  163 	mov	ar6,r0
      00002B                        164 00102$:
                                    165 ;	_malloc.c:176: _sdcc_first_memheader = (MEMHEADER __xdata * ) heap;
                                    166 ;	genAssign: resultIsFar = FALSE
      00002B 8A 07            [ 8]  167 	mov	ar7,r2
      00002D 8B 00            [ 8]  168 	mov	ar0,r3
      00002F 8C 01            [ 8]  169 	mov	ar1,r4
      000031 8F 84            [ 8]  170 	mov	dpl1,r7
      000033 88 85            [ 8]  171 	mov	dph1,r0
      000035 89 95            [ 8]  172 	mov	dpx1,r1
                                    173 ;	genAssign: resultIsFar = TRUE
      000037 90s00r00r00      [12]  174 	mov	dptr,#__sdcc_first_memheader
      00003B E5 84            [ 8]  175 	mov	a,dpl1
      00003D F0               [ 8]  176 	movx	@dptr,a
      00003E A3               [12]  177 	inc	dptr
      00003F E5 85            [ 8]  178 	mov	a,dph1
      000041 F0               [ 8]  179 	movx	@dptr,a
      000042 A3               [12]  180 	inc	dptr
      000043 E5 95            [ 8]  181 	mov	a,dpx1
      000045 F0               [ 8]  182 	movx	@dptr,a
                                    183 ;	_malloc.c:178: _sdcc_first_memheader->next = (MEMHEADER __xdata * )(heap + size - sizeof(MEMHEADER __xdata *));
      000046 ED               [ 4]  184 	mov	a,r5
      000047 2A               [ 4]  185 	add	a,r2
      000048 FA               [ 4]  186 	mov	r2,a
      000049 EE               [ 4]  187 	mov	a,r6
      00004A 3B               [ 4]  188 	addc	a,r3
      00004B FB               [ 4]  189 	mov	r3,a
      00004C E4               [ 4]  190 	clr	a
      00004D 3C               [ 4]  191 	addc	a,r4
      00004E FC               [ 4]  192 	mov	r4,a
      00004F EA               [ 4]  193 	mov	a,r2
      000050 24 FD            [ 8]  194 	add	a,#0xFD
      000052 FA               [ 4]  195 	mov	r2,a
      000053 EB               [ 4]  196 	mov	a,r3
      000054 34 FF            [ 8]  197 	addc	a,#0xFF
      000056 FB               [ 4]  198 	mov	r3,a
      000057 EC               [ 4]  199 	mov	a,r4
      000058 34 FF            [ 8]  200 	addc	a,#0xFF
      00005A FC               [ 4]  201 	mov	r4,a
      00005B EA               [ 4]  202 	mov	a,r2
      00005C 05 86            [ 8]  203 	inc	dps
      00005E F0               [ 8]  204 	movx	@dptr,a
      00005F A3               [12]  205 	inc	dptr
      000060 EB               [ 4]  206 	mov	a,r3
      000061 F0               [ 8]  207 	movx	@dptr,a
      000062 A3               [12]  208 	inc	dptr
      000063 EC               [ 4]  209 	mov	a,r4
      000064 F0               [ 8]  210 	movx	@dptr,a
      000065 75 86 01         [12]  211 	mov     dps, #1
      000068 12s00r00r00      [16]  212 	lcall	__decdptr
      00006C 12s00r00r00      [16]  213 	lcall	__decdptr
      000070 75 86 00         [12]  214 	mov	dps,#0
                                    215 ;	_malloc.c:179: _sdcc_first_memheader->next->next = (MEMHEADER __xdata * ) NULL; //And mark it as last
      000073 8A 82            [ 8]  216 	mov	dpl,r2
      000075 8B 83            [ 8]  217 	mov	dph,r3
      000077 8C 93            [ 8]  218 	mov	dpx,r4
      000079 E4               [ 4]  219 	clr	a
      00007A F0               [ 8]  220 	movx	@dptr,a
      00007B A3               [12]  221 	inc	dptr
      00007C E4               [ 4]  222 	clr	a
      00007D F0               [ 8]  223 	movx	@dptr,a
      00007E A3               [12]  224 	inc	dptr
      00007F E4               [ 4]  225 	clr	a
      000080 F0               [ 8]  226 	movx	@dptr,a
                                    227 ;	_malloc.c:180: _sdcc_first_memheader->len        = 0;    //Empty and ready.
      000081 85 95 93         [12]  228 	mov	dpx,dpx1
      000084 85 85 83         [12]  229 	mov	dph,dph1
      000087 85 84 82         [12]  230 	mov	dpl,dpl1
      00008A A3               [12]  231 	inc	dptr
      00008B A3               [12]  232 	inc	dptr
      00008C A3               [12]  233 	inc	dptr
      00008D E4               [ 4]  234 	clr	a
      00008E F0               [ 8]  235 	movx	@dptr,a
      00008F A3               [12]  236 	inc	dptr
      000090 E4               [ 4]  237 	clr	a
      000091 F0               [ 8]  238 	movx	@dptr,a
      000092                        239 00103$:
      000092 22               [16]  240 	ret
                                    241 ;------------------------------------------------------------
                                    242 ;Allocation info for local variables in function 'malloc'
                                    243 ;------------------------------------------------------------
                                    244 ;size                      Allocated with name '_malloc_size_1_8'
                                    245 ;current_header            Allocated with name '_malloc_current_header_1_9'
                                    246 ;new_header                Allocated to registers r2 r3 r4 
                                    247 ;ret                       Allocated to registers r2 r3 r4 
                                    248 ;------------------------------------------------------------
                                    249 ;	_malloc.c:183: void __xdata * malloc (unsigned int size)
                                    250 ;	-----------------------------------------
                                    251 ;	 function malloc
                                    252 ;	-----------------------------------------
      000093                        253 _malloc:
      000093 75 86 01         [12]  254 	mov     dps, #1
      000096 90s00r00r00      [12]  255 	mov     dptr, #_malloc_size_1_8
      00009A E5 82            [ 8]  256 	mov	a,dpl
      00009C F0               [ 8]  257 	movx	@dptr,a
      00009D A3               [12]  258 	inc	dptr
      00009E E5 83            [ 8]  259 	mov	a,dph
      0000A0 F0               [ 8]  260 	movx	@dptr,a
      0000A1 75 86 00         [12]  261 	mov	dps,#0
                                    262 ;	_malloc.c:189: if (size>(0xFFFF-HEADER_SIZE))
      0000A4 90s00r00r00      [12]  263 	mov	dptr,#_malloc_size_1_8
      0000A8 C3               [ 4]  264 	clr	c
      0000A9 74 FA            [ 8]  265 	mov	a,#0xFA
      0000AB C5 F0            [ 8]  266 	xch	a, b
      0000AD E0               [ 8]  267 	movx	a,@dptr
      0000AE C5 F0            [ 8]  268 	xch	a, b
      0000B0 95 F0            [ 8]  269 	subb	a,b
      0000B2 74 FF            [ 8]  270 	mov	a,#0xFF
      0000B4 C5 F0            [ 8]  271 	xch	a, b
      0000B6 A3               [12]  272 	inc	dptr
      0000B7 E0               [ 8]  273 	movx	a,@dptr
      0000B8 C5 F0            [ 8]  274 	xch	a, b
      0000BA 95 F0            [ 8]  275 	subb	a,b
      0000BC 50 08            [12]  276 	jnc  00102$
      0000BE                        277 00140$:
                                    278 ;	_malloc.c:190: return (void __xdata *) NULL; //To prevent overflow in next line
      0000BE 90 00 00 00      [12]  279 	mov  dptr,#0x0000
      0000C2 02s00r02rA6      [16]  280 	ljmp	00117$
      0000C6                        281 00102$:
                                    282 ;	_malloc.c:191: size += HEADER_SIZE; //We need a memory for header too
      0000C6 90s00r00r00      [12]  283 	mov	dptr,#_malloc_size_1_8
      0000CA E0               [ 8]  284 	movx	a,@dptr
      0000CB 24 05            [ 8]  285 	add	a,#0x05
      0000CD F0               [ 8]  286 	movx	@dptr,a
      0000CE A3               [12]  287 	inc	dptr
      0000CF E0               [ 8]  288 	movx	a,@dptr
      0000D0 34 00            [ 8]  289 	addc	a,#0x00
      0000D2 F0               [ 8]  290 	movx	@dptr,a
                                    291 ;	_malloc.c:193: if (!_sdcc_first_memheader)
      0000D3 90s00r00r00      [12]  292 	mov	dptr,#__sdcc_first_memheader
      0000D7 E0               [ 8]  293 	movx	a,@dptr
      0000D8 F5 F0            [ 8]  294 	mov	b,a
      0000DA A3               [12]  295 	inc	dptr
      0000DB E0               [ 8]  296 	movx	a,@dptr
      0000DC 42 F0            [ 8]  297 	orl	b,a
      0000DE A3               [12]  298 	inc	dptr
      0000DF E0               [ 8]  299 	movx	a,@dptr
      0000E0 45 F0            [ 8]  300 	orl	a,b
      0000E2 70 04            [12]  301 	jnz  00104$
      0000E4                        302 00141$:
                                    303 ;	_malloc.c:194: init_dynamic_memory();
      0000E4 12s00r00r00      [16]  304 	lcall	_init_dynamic_memory
      0000E8                        305 00104$:
                                    306 ;	_malloc.c:196: current_header = _sdcc_first_memheader;
      0000E8 90s00r00r00      [12]  307 	mov	dptr,#__sdcc_first_memheader
                                    308 ;	genAssign: resultIsFar = FALSE
      0000EC E0               [ 8]  309 	movx	a,@dptr
      0000ED FC               [ 4]  310 	mov	r4,a
      0000EE A3               [12]  311 	inc	dptr
      0000EF E0               [ 8]  312 	movx	a,@dptr
      0000F0 FD               [ 4]  313 	mov	r5,a
      0000F1 A3               [12]  314 	inc	dptr
      0000F2 E0               [ 8]  315 	movx	a,@dptr
      0000F3 FE               [ 4]  316 	mov	r6,a
                                    317 ;	genAssign: resultIsFar = TRUE
      0000F4 90s00r00r02      [12]  318 	mov	dptr,#_malloc_current_header_1_9
      0000F8 EC               [ 4]  319 	mov	a,r4
      0000F9 F0               [ 8]  320 	movx	@dptr,a
      0000FA A3               [12]  321 	inc	dptr
      0000FB ED               [ 4]  322 	mov	a,r5
      0000FC F0               [ 8]  323 	movx	@dptr,a
      0000FD A3               [12]  324 	inc	dptr
      0000FE EE               [ 4]  325 	mov	a,r6
      0000FF F0               [ 8]  326 	movx	@dptr,a
                                    327 ;	_malloc.c:199: while (1)
      000100                        328 00110$:
                                    329 ;	_malloc.c:209: if ((((unsigned int)current_header->next) -
      000100 90s00r00r02      [12]  330 	mov	dptr,#_malloc_current_header_1_9
      000104 E0               [ 8]  331 	movx	a,@dptr
      000105 C0 E0            [ 8]  332 	push	acc
      000107 A3               [12]  333 	inc	dptr
      000108 E0               [ 8]  334 	movx	a,@dptr
      000109 C0 E0            [ 8]  335 	push	acc
      00010B A3               [12]  336 	inc	dptr
      00010C E0               [ 8]  337 	movx	a,@dptr
      00010D F5 93            [ 8]  338 	mov	dpx,a
      00010F D0 83            [ 8]  339 	pop	dph
      000111 D0 82            [ 8]  340 	pop	dpl
      000113 E0               [ 8]  341 	movx	a,@dptr
      000114 A3               [12]  342 	inc	dptr
      000115 FF               [ 4]  343 	mov	r7,a
      000116 E0               [ 8]  344 	movx	a,@dptr
      000117 A3               [12]  345 	inc	dptr
      000118 F8               [ 4]  346 	mov	r0,a
      000119 E0               [ 8]  347 	movx	a,@dptr
      00011A F9               [ 4]  348 	mov	r1,a
      00011B 8F 02            [ 8]  349 	mov	ar2,r7
      00011D 88 03            [ 8]  350 	mov	ar3,r0
                                    351 ;	_malloc.c:210: ((unsigned int)current_header) -
      00011F 90s00r00r02      [12]  352 	mov	dptr,#_malloc_current_header_1_9
                                    353 ;	genAssign: resultIsFar = FALSE
      000123 E0               [ 8]  354 	movx	a,@dptr
      000124 FC               [ 4]  355 	mov	r4,a
      000125 A3               [12]  356 	inc	dptr
      000126 E0               [ 8]  357 	movx	a,@dptr
      000127 FD               [ 4]  358 	mov	r5,a
      000128 A3               [12]  359 	inc	dptr
      000129 E0               [ 8]  360 	movx	a,@dptr
      00012A FE               [ 4]  361 	mov	r6,a
      00012B C3               [ 4]  362 	clr	c
      00012C EA               [ 4]  363 	mov	a,r2
      00012D 9C               [ 4]  364 	subb	a,r4
      00012E FA               [ 4]  365 	mov	r2,a
      00012F EB               [ 4]  366 	mov	a,r3
      000130 9D               [ 4]  367 	subb	a,r5
      000131 FB               [ 4]  368 	mov	r3,a
                                    369 ;	_malloc.c:211: current_header->len) >= size)
      000132 90s00r00r02      [12]  370 	mov	dptr,#_malloc_current_header_1_9
      000136 E0               [ 8]  371 	movx	a,@dptr
      000137 24 03            [ 8]  372 	add	a,#0x03
      000139 F5 84            [ 8]  373 	mov	dpl1,a
      00013B A3               [12]  374 	inc	dptr
      00013C E0               [ 8]  375 	movx	a,@dptr
      00013D 34 00            [ 8]  376 	addc	a,#0x00
      00013F F5 85            [ 8]  377 	mov	dph1,a
      000141 A3               [12]  378 	inc	dptr
      000142 E0               [ 8]  379 	movx	a,@dptr
      000143 34 00            [ 8]  380 	addc	a,#0x00
      000145 F5 95            [ 8]  381 	mov	dpx1,a
      000147 05 86            [ 8]  382 	inc	dps
      000149 E0               [ 8]  383 	movx	a,@dptr
      00014A A3               [12]  384 	inc	dptr
      00014B FC               [ 4]  385 	mov	r4,a
      00014C E0               [ 8]  386 	movx	a,@dptr
      00014D FD               [ 4]  387 	mov	r5,a
      00014E 75 86 01         [12]  388 	mov     dps, #1
      000151 12s00r00r00      [16]  389 	lcall	__decdptr
      000155 75 86 00         [12]  390 	mov	dps,#0
      000158 C3               [ 4]  391 	clr	c
      000159 EA               [ 4]  392 	mov	a,r2
      00015A 9C               [ 4]  393 	subb	a,r4
      00015B FA               [ 4]  394 	mov	r2,a
      00015C EB               [ 4]  395 	mov	a,r3
      00015D 9D               [ 4]  396 	subb	a,r5
      00015E FB               [ 4]  397 	mov	r3,a
      00015F 90s00r00r00      [12]  398 	mov	dptr,#_malloc_size_1_8
      000163 C3               [ 4]  399 	clr	c
      000164 EA               [ 4]  400 	mov	a,r2
      000165 C5 F0            [ 8]  401 	xch	a, b
      000167 E0               [ 8]  402 	movx	a,@dptr
      000168 C5 F0            [ 8]  403 	xch	a, b
      00016A 95 F0            [ 8]  404 	subb	a,b
      00016C EB               [ 4]  405 	mov	a,r3
      00016D C5 F0            [ 8]  406 	xch	a, b
      00016F A3               [12]  407 	inc	dptr
      000170 E0               [ 8]  408 	movx	a,@dptr
      000171 C5 F0            [ 8]  409 	xch	a, b
      000173 95 F0            [ 8]  410 	subb	a,b
      000175 40 14            [12]  411 	jc   00106$
      000177                        412 00142$:
                                    413 ;	_malloc.c:213: ret = current_header->mem;
      000177 90s00r00r02      [12]  414 	mov	dptr,#_malloc_current_header_1_9
      00017B E0               [ 8]  415 	movx	a,@dptr
      00017C 24 05            [ 8]  416 	add	a,#0x05
      00017E FA               [ 4]  417 	mov	r2,a
      00017F A3               [12]  418 	inc	dptr
      000180 E0               [ 8]  419 	movx	a,@dptr
      000181 34 00            [ 8]  420 	addc	a,#0x00
      000183 FB               [ 4]  421 	mov	r3,a
      000184 A3               [12]  422 	inc	dptr
      000185 E0               [ 8]  423 	movx	a,@dptr
      000186 34 00            [ 8]  424 	addc	a,#0x00
      000188 FC               [ 4]  425 	mov	r4,a
                                    426 ;	_malloc.c:214: break;
      000189 80 36            [12]  427 	sjmp 00111$
      00018B                        428 00106$:
                                    429 ;	_malloc.c:216: current_header = current_header->next;    //else try next
                                    430 ;	genAssign: resultIsFar = TRUE
      00018B 90s00r00r02      [12]  431 	mov	dptr,#_malloc_current_header_1_9
      00018F EF               [ 4]  432 	mov	a,r7
      000190 F0               [ 8]  433 	movx	@dptr,a
      000191 A3               [12]  434 	inc	dptr
      000192 E8               [ 4]  435 	mov	a,r0
      000193 F0               [ 8]  436 	movx	@dptr,a
      000194 A3               [12]  437 	inc	dptr
      000195 E9               [ 4]  438 	mov	a,r1
      000196 F0               [ 8]  439 	movx	@dptr,a
                                    440 ;	_malloc.c:217: if (!current_header->next)
      000197 90s00r00r02      [12]  441 	mov	dptr,#_malloc_current_header_1_9
      00019B E0               [ 8]  442 	movx	a,@dptr
      00019C C0 E0            [ 8]  443 	push	acc
      00019E A3               [12]  444 	inc	dptr
      00019F E0               [ 8]  445 	movx	a,@dptr
      0001A0 C0 E0            [ 8]  446 	push	acc
      0001A2 A3               [12]  447 	inc	dptr
      0001A3 E0               [ 8]  448 	movx	a,@dptr
      0001A4 F5 93            [ 8]  449 	mov	dpx,a
      0001A6 D0 83            [ 8]  450 	pop	dph
      0001A8 D0 82            [ 8]  451 	pop	dpl
      0001AA E0               [ 8]  452 	movx	a,@dptr
      0001AB A3               [12]  453 	inc	dptr
      0001AC FD               [ 4]  454 	mov	r5,a
      0001AD E0               [ 8]  455 	movx	a,@dptr
      0001AE A3               [12]  456 	inc	dptr
      0001AF FE               [ 4]  457 	mov	r6,a
      0001B0 E0               [ 8]  458 	movx	a,@dptr
      0001B1 FF               [ 4]  459 	mov	r7,a
      0001B2 ED               [ 4]  460 	mov	a,r5
      0001B3 4E               [ 4]  461 	orl	a,r6
      0001B4 4F               [ 4]  462 	orl	a,r7
      0001B5 60 04            [12]  463 	jz	00143$
      0001B7 02s00r01r00      [16]  464 	ljmp	00110$
      0001BB                        465 00143$:
                                    466 ;	_malloc.c:219: ret = (void __xdata *) NULL;
                                    467 ;	genAssign: resultIsFar = TRUE
      0001BB 7A 00            [ 8]  468 	mov	r2,#0x00
      0001BD 7B 00            [ 8]  469 	mov	r3,#0x00
      0001BF 7C 00            [ 8]  470 	mov	r4,#0x00
                                    471 ;	_malloc.c:220: break;
      0001C1                        472 00111$:
                                    473 ;	_malloc.c:223: if (ret)
      0001C1 EA               [ 4]  474 	mov	a,r2
      0001C2 4B               [ 4]  475 	orl	a,r3
      0001C3 4C               [ 4]  476 	orl	a,r4
      0001C4 70 04            [12]  477 	jnz	00144$
      0001C6 02s00r02rA0      [16]  478 	ljmp	00116$
      0001CA                        479 00144$:
                                    480 ;	_malloc.c:225: if (!current_header->len)
      0001CA 90s00r00r02      [12]  481 	mov	dptr,#_malloc_current_header_1_9
      0001CE E0               [ 8]  482 	movx	a,@dptr
      0001CF 24 03            [ 8]  483 	add	a,#0x03
      0001D1 F5 84            [ 8]  484 	mov	dpl1,a
      0001D3 A3               [12]  485 	inc	dptr
      0001D4 E0               [ 8]  486 	movx	a,@dptr
      0001D5 34 00            [ 8]  487 	addc	a,#0x00
      0001D7 F5 85            [ 8]  488 	mov	dph1,a
      0001D9 A3               [12]  489 	inc	dptr
      0001DA E0               [ 8]  490 	movx	a,@dptr
      0001DB 34 00            [ 8]  491 	addc	a,#0x00
      0001DD F5 95            [ 8]  492 	mov	dpx1,a
      0001DF 05 86            [ 8]  493 	inc	dps
      0001E1 E0               [ 8]  494 	movx	a,@dptr
      0001E2 A3               [12]  495 	inc	dptr
      0001E3 F8               [ 4]  496 	mov	r0,a
      0001E4 E0               [ 8]  497 	movx	a,@dptr
      0001E5 F9               [ 4]  498 	mov	r1,a
      0001E6 75 86 01         [12]  499 	mov     dps, #1
      0001E9 12s00r00r00      [16]  500 	lcall	__decdptr
      0001ED 75 86 00         [12]  501 	mov	dps,#0
      0001F0 E8               [ 4]  502 	mov	a,r0
      0001F1 49               [ 4]  503 	orl	a,r1
      0001F2 70 1A            [12]  504 	jnz  00113$
      0001F4                        505 00145$:
                                    506 ;	_malloc.c:227: current_header->len = size; //for first allocation
      0001F4 90s00r00r00      [12]  507 	mov	dptr,#_malloc_size_1_8
      0001F8 E0               [ 8]  508 	movx	a,@dptr
      0001F9 75 86 01         [12]  509 	mov	dps,#1
      0001FC F0               [ 8]  510 	movx	@dptr,a
      0001FD A3               [12]  511 	inc	dptr
      0001FE 75 86 00         [12]  512 	mov	dps,#0
      000201 A3               [12]  513 	inc	dptr
      000202 E0               [ 8]  514 	movx	a,@dptr
      000203 75 86 01         [12]  515 	mov	dps,#1
      000206 F0               [ 8]  516 	movx	@dptr,a
      000207 75 86 00         [12]  517 	mov	dps,#0
      00020A 02s00r02rA0      [16]  518 	ljmp	00116$
      00020E                        519 00113$:
                                    520 ;	_malloc.c:231: new_header = (MEMHEADER __xdata * )((char __xdata *)current_header + current_header->len);
      00020E 90s00r00r02      [12]  521 	mov	dptr,#_malloc_current_header_1_9
                                    522 ;	genAssign: resultIsFar = FALSE
      000212 E0               [ 8]  523 	movx	a,@dptr
      000213 FD               [ 4]  524 	mov	r5,a
      000214 A3               [12]  525 	inc	dptr
      000215 E0               [ 8]  526 	movx	a,@dptr
      000216 FE               [ 4]  527 	mov	r6,a
      000217 A3               [12]  528 	inc	dptr
      000218 E0               [ 8]  529 	movx	a,@dptr
      000219 FF               [ 4]  530 	mov	r7,a
      00021A E8               [ 4]  531 	mov	a,r0
      00021B 2D               [ 4]  532 	add	a,r5
      00021C FD               [ 4]  533 	mov	r5,a
      00021D E9               [ 4]  534 	mov	a,r1
      00021E 3E               [ 4]  535 	addc	a,r6
      00021F FE               [ 4]  536 	mov	r6,a
      000220 E4               [ 4]  537 	clr	a
      000221 3F               [ 4]  538 	addc	a,r7
      000222 FF               [ 4]  539 	mov	r7,a
      000223 8D 02            [ 8]  540 	mov	ar2,r5
      000225 8E 03            [ 8]  541 	mov	ar3,r6
      000227 8F 04            [ 8]  542 	mov	ar4,r7
                                    543 ;	_malloc.c:232: new_header->next = current_header->next; //and plug it into the chain
      000229 90s00r00r02      [12]  544 	mov	dptr,#_malloc_current_header_1_9
      00022D E0               [ 8]  545 	movx	a,@dptr
      00022E C0 E0            [ 8]  546 	push	acc
      000230 A3               [12]  547 	inc	dptr
      000231 E0               [ 8]  548 	movx	a,@dptr
      000232 C0 E0            [ 8]  549 	push	acc
      000234 A3               [12]  550 	inc	dptr
      000235 E0               [ 8]  551 	movx	a,@dptr
      000236 F5 93            [ 8]  552 	mov	dpx,a
      000238 D0 83            [ 8]  553 	pop	dph
      00023A D0 82            [ 8]  554 	pop	dpl
      00023C E0               [ 8]  555 	movx	a,@dptr
      00023D A3               [12]  556 	inc	dptr
      00023E F8               [ 4]  557 	mov	r0,a
      00023F E0               [ 8]  558 	movx	a,@dptr
      000240 A3               [12]  559 	inc	dptr
      000241 F9               [ 4]  560 	mov	r1,a
      000242 E0               [ 8]  561 	movx	a,@dptr
      000243 FD               [ 4]  562 	mov	r5,a
      000244 8A 82            [ 8]  563 	mov	dpl,r2
      000246 8B 83            [ 8]  564 	mov	dph,r3
      000248 8C 93            [ 8]  565 	mov	dpx,r4
      00024A E8               [ 4]  566 	mov	a,r0
      00024B F0               [ 8]  567 	movx	@dptr,a
      00024C A3               [12]  568 	inc	dptr
      00024D E9               [ 4]  569 	mov	a,r1
      00024E F0               [ 8]  570 	movx	@dptr,a
      00024F A3               [12]  571 	inc	dptr
      000250 ED               [ 4]  572 	mov	a,r5
      000251 F0               [ 8]  573 	movx	@dptr,a
                                    574 ;	_malloc.c:233: current_header->next  = new_header;
      000252 90s00r00r02      [12]  575 	mov	dptr,#_malloc_current_header_1_9
      000256 E0               [ 8]  576 	movx	a,@dptr
      000257 C0 E0            [ 8]  577 	push	acc
      000259 A3               [12]  578 	inc	dptr
      00025A E0               [ 8]  579 	movx	a,@dptr
      00025B C0 E0            [ 8]  580 	push	acc
      00025D A3               [12]  581 	inc	dptr
      00025E E0               [ 8]  582 	movx	a,@dptr
      00025F F5 93            [ 8]  583 	mov	dpx,a
      000261 D0 83            [ 8]  584 	pop	dph
      000263 D0 82            [ 8]  585 	pop	dpl
      000265 EA               [ 4]  586 	mov	a,r2
      000266 F0               [ 8]  587 	movx	@dptr,a
      000267 A3               [12]  588 	inc	dptr
      000268 EB               [ 4]  589 	mov	a,r3
      000269 F0               [ 8]  590 	movx	@dptr,a
      00026A A3               [12]  591 	inc	dptr
      00026B EC               [ 4]  592 	mov	a,r4
      00026C F0               [ 8]  593 	movx	@dptr,a
                                    594 ;	_malloc.c:234: new_header->len  = size; //mark as used
      00026D 74 03            [ 8]  595 	mov	a,#0x03
      00026F 2A               [ 4]  596 	add	a,r2
      000270 F5 84            [ 8]  597 	mov	dpl1,a
      000272 E4               [ 4]  598 	clr	a
      000273 3B               [ 4]  599 	addc	a,r3
      000274 F5 85            [ 8]  600 	mov	dph1,a
      000276 E4               [ 4]  601 	clr	a
      000277 3C               [ 4]  602 	addc	a,r4
      000278 F5 95            [ 8]  603 	mov	dpx1,a
      00027A 90s00r00r00      [12]  604 	mov	dptr,#_malloc_size_1_8
      00027E E0               [ 8]  605 	movx	a,@dptr
      00027F 75 86 01         [12]  606 	mov	dps,#1
      000282 F0               [ 8]  607 	movx	@dptr,a
      000283 A3               [12]  608 	inc	dptr
      000284 75 86 00         [12]  609 	mov	dps,#0
      000287 A3               [12]  610 	inc	dptr
      000288 E0               [ 8]  611 	movx	a,@dptr
      000289 75 86 01         [12]  612 	mov	dps,#1
      00028C F0               [ 8]  613 	movx	@dptr,a
      00028D 75 86 00         [12]  614 	mov	dps,#0
                                    615 ;	_malloc.c:235: ret = new_header->mem;
      000290 74 05            [ 8]  616 	mov	a,#0x05
      000292 2A               [ 4]  617 	add	a,r2
      000293 FD               [ 4]  618 	mov	r5,a
      000294 E4               [ 4]  619 	clr	a
      000295 3B               [ 4]  620 	addc	a,r3
      000296 FE               [ 4]  621 	mov	r6,a
      000297 E4               [ 4]  622 	clr	a
      000298 3C               [ 4]  623 	addc	a,r4
      000299 FF               [ 4]  624 	mov	r7,a
      00029A 8D 02            [ 8]  625 	mov	ar2,r5
      00029C 8E 03            [ 8]  626 	mov	ar3,r6
      00029E 8F 04            [ 8]  627 	mov	ar4,r7
      0002A0                        628 00116$:
                                    629 ;	_malloc.c:239: return ret;
      0002A0 8A 82            [ 8]  630 	mov	dpl,r2
      0002A2 8B 83            [ 8]  631 	mov	dph,r3
      0002A4 8C 93            [ 8]  632 	mov	dpx,r4
      0002A6                        633 00117$:
      0002A6 22               [16]  634 	ret
                                    635 	.area CSEG    (CODE)
                                    636 	.area CONST   (CODE)
                                    637 	.area XINIT   (CODE)
      000000                        638 __xinit___sdcc_first_memheader:
                                    639 ; generic printIvalPtr
      000000 00 00 00               640 	.byte #0x00,#0x00,#0x00
                                    641 	.area CABS    (ABS,CODE)
