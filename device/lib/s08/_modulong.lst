                              1 ;--------------------------------------------------------
                              2 ; File Created by SDCC : free open source ANSI-C Compiler
                              3 ; Version 3.5.0 #9253 (Apr  4 2022) (Linux)
                              4 ; This file was generated Mon Apr  4 14:10:36 2022
                              5 ;--------------------------------------------------------
                              6 	.cs08
                              7 	.module _modulong
                              8 	.optsdcc -ms08
                              9 	
                             10 	.area HOME    (CODE)
                             11 	.area GSINIT0 (CODE)
                             12 	.area GSINIT  (CODE)
                             13 	.area GSFINAL (CODE)
                             14 	.area CSEG    (CODE)
                             15 	.area XINIT   (CODE)
                             16 	.area CONST   (CODE)
                             17 	.area DSEG    (PAG)
                             18 	.area OSEG    (PAG, OVR)
                             19 	.area XSEG
                             20 	.area XISEG
                             21 ;--------------------------------------------------------
                             22 ; Public variables in this module
                             23 ;--------------------------------------------------------
                             24 	.globl __modulong_PARM_2
                             25 	.globl __modulong_PARM_1
                             26 	.globl __modulong
                             27 ;--------------------------------------------------------
                             28 ; ram data
                             29 ;--------------------------------------------------------
                             30 	.area DSEG    (PAG)
                             31 ;--------------------------------------------------------
                             32 ; overlayable items in ram 
                             33 ;--------------------------------------------------------
                             34 ;--------------------------------------------------------
                             35 ; absolute ram data
                             36 ;--------------------------------------------------------
                             37 	.area IABS    (ABS)
                             38 	.area IABS    (ABS)
                             39 ;--------------------------------------------------------
                             40 ; absolute external ram data
                             41 ;--------------------------------------------------------
                             42 	.area XABS    (ABS)
                             43 ;--------------------------------------------------------
                             44 ; external initialized ram data
                             45 ;--------------------------------------------------------
                             46 	.area XISEG
                             47 ;--------------------------------------------------------
                             48 ; extended address mode data
                             49 ;--------------------------------------------------------
                             50 	.area XSEG
   0000                      51 __modulong_PARM_1:
   0000                      52 	.ds 4
   0004                      53 __modulong_PARM_2:
   0004                      54 	.ds 4
                             55 ;--------------------------------------------------------
                             56 ; global & static initialisations
                             57 ;--------------------------------------------------------
                             58 	.area HOME    (CODE)
                             59 	.area GSINIT  (CODE)
                             60 	.area GSFINAL (CODE)
                             61 	.area GSINIT  (CODE)
                             62 ;--------------------------------------------------------
                             63 ; Home
                             64 ;--------------------------------------------------------
                             65 	.area HOME    (CODE)
                             66 	.area HOME    (CODE)
                             67 ;--------------------------------------------------------
                             68 ; code
                             69 ;--------------------------------------------------------
                             70 	.area CSEG    (CODE)
                             71 ;------------------------------------------------------------
                             72 ;Allocation info for local variables in function '_modulong'
                             73 ;------------------------------------------------------------
                             74 ;a                         Allocated with name '__modulong_PARM_1'
                             75 ;b                         Allocated with name '__modulong_PARM_2'
                             76 ;count                     Allocated to registers h 
                             77 ;------------------------------------------------------------
                             78 ;../_modulong.c:340: _modulong (unsigned long a, unsigned long b)
                             79 ;	-----------------------------------------
                             80 ;	 function _modulong
                             81 ;	-----------------------------------------
                             82 ;	Register assignment is optimal.
                             83 ;	Stack space usage: 0 bytes.
   0000                      84 __modulong:
                             85 ;../_modulong.c:342: unsigned char count = 0;
   0000 8C            [ 1]   86 	clrh
                             87 ;../_modulong.c:344: while (!MSB_SET(b))
   0001 5F            [ 1]   88 	clrx
   0002                      89 00103$:
   0002 C6r00r04      [ 4]   90 	lda	__modulong_PARM_2
   0005 49            [ 1]   91 	rola
   0006 4F            [ 1]   92 	clra
   0007 49            [ 1]   93 	rola
   0008 4D            [ 1]   94 	tsta
   0009 26 5C         [ 3]   95 	bne	00117$
                             96 ;../_modulong.c:346: b <<= 1;
   000B 89            [ 2]   97 	pshx
   000C C6r00r07      [ 4]   98 	lda	(__modulong_PARM_2 + 3)
   000F CEr00r06      [ 4]   99 	ldx	(__modulong_PARM_2 + 2)
   0012 48            [ 1]  100 	lsla
   0013 59            [ 1]  101 	rolx
   0014 C7r00r07      [ 4]  102 	sta	(__modulong_PARM_2 + 3)
   0017 CFr00r06      [ 4]  103 	stx	(__modulong_PARM_2 + 2)
   001A C6r00r05      [ 4]  104 	lda	(__modulong_PARM_2 + 1)
   001D CEr00r04      [ 4]  105 	ldx	__modulong_PARM_2
   0020 49            [ 1]  106 	rola
   0021 59            [ 1]  107 	rolx
   0022 C7r00r05      [ 4]  108 	sta	(__modulong_PARM_2 + 1)
   0025 CFr00r04      [ 4]  109 	stx	__modulong_PARM_2
   0028 88            [ 3]  110 	pulx
                            111 ;../_modulong.c:347: if (b > a)
   0029 C6r00r03      [ 4]  112 	lda	(__modulong_PARM_1 + 3)
   002C C0r00r07      [ 4]  113 	sub	(__modulong_PARM_2 + 3)
   002F C6r00r02      [ 4]  114 	lda	(__modulong_PARM_1 + 2)
   0032 C2r00r06      [ 4]  115 	sbc	(__modulong_PARM_2 + 2)
   0035 C6r00r01      [ 4]  116 	lda	(__modulong_PARM_1 + 1)
   0038 C2r00r05      [ 4]  117 	sbc	(__modulong_PARM_2 + 1)
   003B C6r00r00      [ 4]  118 	lda	__modulong_PARM_1
   003E C2r00r04      [ 4]  119 	sbc	__modulong_PARM_2
   0041 24 1E         [ 3]  120 	bcc	00102$
                            121 ;../_modulong.c:349: b >>=1;
   0043 C6r00r05      [ 4]  122 	lda	(__modulong_PARM_2 + 1)
   0046 CEr00r04      [ 4]  123 	ldx	__modulong_PARM_2
   0049 54            [ 1]  124 	lsrx
   004A 46            [ 1]  125 	rora
   004B C7r00r05      [ 4]  126 	sta	(__modulong_PARM_2 + 1)
   004E CFr00r04      [ 4]  127 	stx	__modulong_PARM_2
   0051 C6r00r07      [ 4]  128 	lda	(__modulong_PARM_2 + 3)
   0054 CEr00r06      [ 4]  129 	ldx	(__modulong_PARM_2 + 2)
   0057 56            [ 1]  130 	rorx
   0058 46            [ 1]  131 	rora
   0059 C7r00r07      [ 4]  132 	sta	(__modulong_PARM_2 + 3)
   005C CFr00r06      [ 4]  133 	stx	(__modulong_PARM_2 + 2)
                            134 ;../_modulong.c:350: break;
   005F 20 06         [ 3]  135 	bra	00117$
   0061                     136 00102$:
                            137 ;../_modulong.c:352: count++;
   0061 AF 01         [ 2]  138 	aix	#1
   0063 89            [ 2]  139 	pshx
   0064 8A            [ 3]  140 	pulh
   0065 20 9B         [ 3]  141 	bra	00103$
                            142 ;../_modulong.c:354: do
   0067                     143 00117$:
   0067 8B            [ 2]  144 	pshh
   0068 88            [ 3]  145 	pulx
   0069                     146 00108$:
                            147 ;../_modulong.c:356: if (a >= b)
   0069 C6r00r03      [ 4]  148 	lda	(__modulong_PARM_1 + 3)
   006C C0r00r07      [ 4]  149 	sub	(__modulong_PARM_2 + 3)
   006F C6r00r02      [ 4]  150 	lda	(__modulong_PARM_1 + 2)
   0072 C2r00r06      [ 4]  151 	sbc	(__modulong_PARM_2 + 2)
   0075 C6r00r01      [ 4]  152 	lda	(__modulong_PARM_1 + 1)
   0078 C2r00r05      [ 4]  153 	sbc	(__modulong_PARM_2 + 1)
   007B C6r00r00      [ 4]  154 	lda	__modulong_PARM_1
   007E C2r00r04      [ 4]  155 	sbc	__modulong_PARM_2
   0081 25 24         [ 3]  156 	bcs	00107$
                            157 ;../_modulong.c:357: a -= b;
   0083 C6r00r03      [ 4]  158 	lda	(__modulong_PARM_1 + 3)
   0086 C0r00r07      [ 4]  159 	sub	(__modulong_PARM_2 + 3)
   0089 C7r00r03      [ 4]  160 	sta	(__modulong_PARM_1 + 3)
   008C C6r00r02      [ 4]  161 	lda	(__modulong_PARM_1 + 2)
   008F C2r00r06      [ 4]  162 	sbc	(__modulong_PARM_2 + 2)
   0092 C7r00r02      [ 4]  163 	sta	(__modulong_PARM_1 + 2)
   0095 C6r00r01      [ 4]  164 	lda	(__modulong_PARM_1 + 1)
   0098 C2r00r05      [ 4]  165 	sbc	(__modulong_PARM_2 + 1)
   009B C7r00r01      [ 4]  166 	sta	(__modulong_PARM_1 + 1)
   009E C6r00r00      [ 4]  167 	lda	__modulong_PARM_1
   00A1 C2r00r04      [ 4]  168 	sbc	__modulong_PARM_2
   00A4 C7r00r00      [ 4]  169 	sta	__modulong_PARM_1
   00A7                     170 00107$:
                            171 ;../_modulong.c:358: b >>= 1;
   00A7 89            [ 2]  172 	pshx
   00A8 C6r00r05      [ 4]  173 	lda	(__modulong_PARM_2 + 1)
   00AB CEr00r04      [ 4]  174 	ldx	__modulong_PARM_2
   00AE 54            [ 1]  175 	lsrx
   00AF 46            [ 1]  176 	rora
   00B0 C7r00r05      [ 4]  177 	sta	(__modulong_PARM_2 + 1)
   00B3 CFr00r04      [ 4]  178 	stx	__modulong_PARM_2
   00B6 C6r00r07      [ 4]  179 	lda	(__modulong_PARM_2 + 3)
   00B9 CEr00r06      [ 4]  180 	ldx	(__modulong_PARM_2 + 2)
   00BC 56            [ 1]  181 	rorx
   00BD 46            [ 1]  182 	rora
   00BE C7r00r07      [ 4]  183 	sta	(__modulong_PARM_2 + 3)
   00C1 CFr00r06      [ 4]  184 	stx	(__modulong_PARM_2 + 2)
   00C4 88            [ 3]  185 	pulx
                            186 ;../_modulong.c:360: while (count--);
   00C5 9F            [ 1]  187 	txa
   00C6 5A            [ 1]  188 	decx
   00C7 4D            [ 1]  189 	tsta
   00C8 26 9F         [ 3]  190 	bne	00108$
                            191 ;../_modulong.c:362: return a;
   00CA C6r00r00      [ 4]  192 	lda	__modulong_PARM_1
   00CD B7*00         [ 3]  193 	sta	*___SDCC_hc08_ret3
   00CF C6r00r01      [ 4]  194 	lda	(__modulong_PARM_1 + 1)
   00D2 B7*00         [ 3]  195 	sta	*___SDCC_hc08_ret2
   00D4 CEr00r02      [ 4]  196 	ldx	(__modulong_PARM_1 + 2)
   00D7 C6r00r03      [ 4]  197 	lda	(__modulong_PARM_1 + 3)
   00DA 81            [ 6]  198 	rts
                            199 	.area CSEG    (CODE)
                            200 	.area CONST   (CODE)
                            201 	.area XINIT   (CODE)
                            202 	.area CABS    (ABS,CODE)
