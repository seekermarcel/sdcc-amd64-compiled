                              1 ;--------------------------------------------------------
                              2 ; File Created by SDCC : free open source ANSI-C Compiler
                              3 ; Version 3.5.0 #9253 (Apr  4 2022) (Linux)
                              4 ; This file was generated Mon Apr  4 14:15:45 2022
                              5 ;--------------------------------------------------------
                              6 	.hd64
                              7 	.module _calloc
                              8 	.optsdcc -mz180
                              9 	
                             10 ;--------------------------------------------------------
                             11 ; Public variables in this module
                             12 ;--------------------------------------------------------
                             13 	.globl _malloc
                             14 	.globl _calloc
                             15 ;--------------------------------------------------------
                             16 ; special function registers
                             17 ;--------------------------------------------------------
                             18 ;--------------------------------------------------------
                             19 ; ram data
                             20 ;--------------------------------------------------------
                             21 	.area _DATA
                             22 ;--------------------------------------------------------
                             23 ; ram data
                             24 ;--------------------------------------------------------
                             25 	.area _INITIALIZED
                             26 ;--------------------------------------------------------
                             27 ; absolute external ram data
                             28 ;--------------------------------------------------------
                             29 	.area _DABS (ABS)
                             30 ;--------------------------------------------------------
                             31 ; global & static initialisations
                             32 ;--------------------------------------------------------
                             33 	.area _HOME
                             34 	.area _GSINIT
                             35 	.area _GSFINAL
                             36 	.area _GSINIT
                             37 ;--------------------------------------------------------
                             38 ; Home
                             39 ;--------------------------------------------------------
                             40 	.area _HOME
                             41 	.area _HOME
                             42 ;--------------------------------------------------------
                             43 ; code
                             44 ;--------------------------------------------------------
                             45 	.area _CODE
                             46 ;../_calloc.c:45: void __xdata * calloc (size_t nmemb, size_t size)
                             47 ;	---------------------------------
                             48 ; Function calloc
                             49 ; ---------------------------------
   0000                      50 _calloc::
   0000 DD E5         [14]   51 	push	ix
   0002 DD 21 00 00   [12]   52 	ld	ix,#0
   0006 DD 39         [10]   53 	add	ix,sp
                             54 ;../_calloc.c:49: ptr = malloc(nmemb * size);
   0008 DD 6E 06      [14]   55 	ld	l,6 (ix)
   000B DD 66 07      [14]   56 	ld	h,7 (ix)
   000E E5            [11]   57 	push	hl
   000F DD 6E 04      [14]   58 	ld	l,4 (ix)
   0012 DD 66 05      [14]   59 	ld	h,5 (ix)
   0015 E5            [11]   60 	push	hl
   0016 CDr00r00      [16]   61 	call	__mulint
   0019 33            [ 4]   62 	inc	sp
   001A 33            [ 4]   63 	inc	sp
   001B 33            [ 4]   64 	inc	sp
   001C 33            [ 4]   65 	inc	sp
   001D EB            [ 3]   66 	ex	de,hl
   001E D5            [11]   67 	push	de
   001F D5            [11]   68 	push	de
   0020 CDr00r00      [16]   69 	call	_malloc
   0023 33            [ 4]   70 	inc	sp
   0024 33            [ 4]   71 	inc	sp
   0025 D1            [ 9]   72 	pop	de
                             73 ;../_calloc.c:50: if (ptr)
   0026 7C            [ 4]   74 	ld	a,h
   0027 B5            [ 4]   75 	or	a,l
   0028 28 10         [ 8]   76 	jr	Z,00102$
                             77 ;../_calloc.c:52: memset(ptr, 0, nmemb * size);
   002A E5            [11]   78 	push	hl
   002B D5            [11]   79 	push	de
   002C 01 00 00      [ 9]   80 	ld	bc,#0x0000
   002F C5            [11]   81 	push	bc
   0030 E5            [11]   82 	push	hl
   0031 CDr00r00      [16]   83 	call	_memset
   0034 21 06 00      [ 9]   84 	ld	hl,#6
   0037 39            [ 7]   85 	add	hl,sp
   0038 F9            [ 4]   86 	ld	sp,hl
   0039 E1            [ 9]   87 	pop	hl
   003A                      88 00102$:
                             89 ;../_calloc.c:54: return ptr;
   003A DD E1         [12]   90 	pop	ix
   003C C9            [ 9]   91 	ret
                             92 	.area _CODE
                             93 	.area _INITIALIZER
                             94 	.area _CABS (ABS)
