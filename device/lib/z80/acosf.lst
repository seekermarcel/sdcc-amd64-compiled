                              1 ;--------------------------------------------------------
                              2 ; File Created by SDCC : free open source ANSI-C Compiler
                              3 ; Version 3.5.0 #9253 (Apr  4 2022) (Linux)
                              4 ; This file was generated Mon Apr  4 14:15:23 2022
                              5 ;--------------------------------------------------------
                              6 	.module acosf
                              7 	.optsdcc -mz80
                              8 	
                              9 ;--------------------------------------------------------
                             10 ; Public variables in this module
                             11 ;--------------------------------------------------------
                             12 	.globl _asincosf
                             13 	.globl _acosf
                             14 ;--------------------------------------------------------
                             15 ; special function registers
                             16 ;--------------------------------------------------------
                             17 ;--------------------------------------------------------
                             18 ; ram data
                             19 ;--------------------------------------------------------
                             20 	.area _DATA
                             21 ;--------------------------------------------------------
                             22 ; ram data
                             23 ;--------------------------------------------------------
                             24 	.area _INITIALIZED
                             25 ;--------------------------------------------------------
                             26 ; absolute external ram data
                             27 ;--------------------------------------------------------
                             28 	.area _DABS (ABS)
                             29 ;--------------------------------------------------------
                             30 ; global & static initialisations
                             31 ;--------------------------------------------------------
                             32 	.area _HOME
                             33 	.area _GSINIT
                             34 	.area _GSFINAL
                             35 	.area _GSINIT
                             36 ;--------------------------------------------------------
                             37 ; Home
                             38 ;--------------------------------------------------------
                             39 	.area _HOME
                             40 	.area _HOME
                             41 ;--------------------------------------------------------
                             42 ; code
                             43 ;--------------------------------------------------------
                             44 	.area _CODE
                             45 ;../acosf.c:36: float acosf(float x) _FLOAT_FUNC_REENTRANT
                             46 ;	---------------------------------
                             47 ; Function acosf
                             48 ; ---------------------------------
   0000                      49 _acosf::
                             50 ;../acosf.c:38: if (x == 1.0) return 0.0;
   0000 21 80 3F      [10]   51 	ld	hl,#0x3F80
   0003 E5            [11]   52 	push	hl
   0004 21 00 00      [10]   53 	ld	hl,#0x0000
   0007 E5            [11]   54 	push	hl
   0008 FD 21 06 00   [14]   55 	ld	iy,#6
   000C FD 39         [15]   56 	add	iy,sp
   000E FD 6E 02      [19]   57 	ld	l,2 (iy)
   0011 FD 66 03      [19]   58 	ld	h,3 (iy)
   0014 E5            [11]   59 	push	hl
   0015 FD 6E 00      [19]   60 	ld	l,0 (iy)
   0018 FD 66 01      [19]   61 	ld	h,1 (iy)
   001B E5            [11]   62 	push	hl
   001C CDr00r00      [17]   63 	call	___fseq
   001F F1            [10]   64 	pop	af
   0020 F1            [10]   65 	pop	af
   0021 F1            [10]   66 	pop	af
   0022 F1            [10]   67 	pop	af
   0023 7D            [ 4]   68 	ld	a,l
   0024 B7            [ 4]   69 	or	a, a
   0025 28 06         [12]   70 	jr	Z,00108$
   0027 21 00 00      [10]   71 	ld	hl,#0x0000
   002A 5D            [ 4]   72 	ld	e,l
   002B 54            [ 4]   73 	ld	d,h
   002C C9            [10]   74 	ret
   002D                      75 00108$:
                             76 ;../acosf.c:39: else if (x ==-1.0) return PI;
   002D 21 80 BF      [10]   77 	ld	hl,#0xBF80
   0030 E5            [11]   78 	push	hl
   0031 21 00 00      [10]   79 	ld	hl,#0x0000
   0034 E5            [11]   80 	push	hl
   0035 FD 21 06 00   [14]   81 	ld	iy,#6
   0039 FD 39         [15]   82 	add	iy,sp
   003B FD 6E 02      [19]   83 	ld	l,2 (iy)
   003E FD 66 03      [19]   84 	ld	h,3 (iy)
   0041 E5            [11]   85 	push	hl
   0042 FD 6E 00      [19]   86 	ld	l,0 (iy)
   0045 FD 66 01      [19]   87 	ld	h,1 (iy)
   0048 E5            [11]   88 	push	hl
   0049 CDr00r00      [17]   89 	call	___fseq
   004C F1            [10]   90 	pop	af
   004D F1            [10]   91 	pop	af
   004E F1            [10]   92 	pop	af
   004F F1            [10]   93 	pop	af
   0050 7D            [ 4]   94 	ld	a,l
   0051 B7            [ 4]   95 	or	a, a
   0052 28 07         [12]   96 	jr	Z,00105$
   0054 21 DB 0F      [10]   97 	ld	hl,#0x0FDB
   0057 11 49 40      [10]   98 	ld	de,#0x4049
   005A C9            [10]   99 	ret
   005B                     100 00105$:
                            101 ;../acosf.c:40: else if (x == 0.0) return HALF_PI;
   005B FD 21 02 00   [14]  102 	ld	iy,#2
   005F FD 39         [15]  103 	add	iy,sp
   0061 FD 7E 03      [19]  104 	ld	a,3 (iy)
   0064 CB BF         [ 8]  105 	res	7, a
   0066 FD B6 02      [19]  106 	or	a, 2 (iy)
   0069 FD B6 01      [19]  107 	or	a, 1 (iy)
   006C FD B6 00      [19]  108 	or	a,0 (iy)
   006F 20 07         [12]  109 	jr	NZ,00102$
   0071 21 DB 0F      [10]  110 	ld	hl,#0x0FDB
   0074 11 C9 3F      [10]  111 	ld	de,#0x3FC9
   0077 C9            [10]  112 	ret
   0078                     113 00102$:
                            114 ;../acosf.c:41: else               return asincosf(x, true);
   0078 3E 01         [ 7]  115 	ld	a,#0x01
   007A F5            [11]  116 	push	af
   007B 33            [ 6]  117 	inc	sp
   007C FD 21 03 00   [14]  118 	ld	iy,#3
   0080 FD 39         [15]  119 	add	iy,sp
   0082 FD 6E 02      [19]  120 	ld	l,2 (iy)
   0085 FD 66 03      [19]  121 	ld	h,3 (iy)
   0088 E5            [11]  122 	push	hl
   0089 FD 6E 00      [19]  123 	ld	l,0 (iy)
   008C FD 66 01      [19]  124 	ld	h,1 (iy)
   008F E5            [11]  125 	push	hl
   0090 CDr00r00      [17]  126 	call	_asincosf
   0093 F1            [10]  127 	pop	af
   0094 F1            [10]  128 	pop	af
   0095 33            [ 6]  129 	inc	sp
   0096 C9            [10]  130 	ret
                            131 	.area _CODE
                            132 	.area _INITIALIZER
                            133 	.area _CABS (ABS)
