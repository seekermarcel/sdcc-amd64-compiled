                                      1 ;--------------------------------------------------------
                                      2 ; File Created by SDCC : free open source ANSI-C Compiler
                                      3 ; Version 3.5.0 #9253 (Apr  4 2022) (Linux)
                                      4 ; This file was generated Mon Apr  4 14:10:41 2022
                                      5 ;--------------------------------------------------------
                                      6 	.module atoi
                                      7 	.optsdcc -mmcs51 --model-small
                                      8 	
                                      9 ;--------------------------------------------------------
                                     10 ; Public variables in this module
                                     11 ;--------------------------------------------------------
                                     12 	.globl _atoi
                                     13 ;--------------------------------------------------------
                                     14 ; special function registers
                                     15 ;--------------------------------------------------------
                                     16 	.area RSEG    (ABS,DATA)
      000000                         17 	.org 0x0000
                                     18 ;--------------------------------------------------------
                                     19 ; special function bits
                                     20 ;--------------------------------------------------------
                                     21 	.area RSEG    (ABS,DATA)
      000000                         22 	.org 0x0000
                                     23 ;--------------------------------------------------------
                                     24 ; overlayable register banks
                                     25 ;--------------------------------------------------------
                                     26 	.area REG_BANK_0	(REL,OVR,DATA)
      000000                         27 	.ds 8
                                     28 ;--------------------------------------------------------
                                     29 ; internal ram data
                                     30 ;--------------------------------------------------------
                                     31 	.area DSEG    (DATA)
      000000                         32 _atoi_ret_1_37:
      000000                         33 	.ds 2
                                     34 ;--------------------------------------------------------
                                     35 ; overlayable items in internal ram 
                                     36 ;--------------------------------------------------------
                                     37 ;--------------------------------------------------------
                                     38 ; indirectly addressable internal ram data
                                     39 ;--------------------------------------------------------
                                     40 	.area ISEG    (DATA)
                                     41 ;--------------------------------------------------------
                                     42 ; absolute internal ram data
                                     43 ;--------------------------------------------------------
                                     44 	.area IABS    (ABS,DATA)
                                     45 	.area IABS    (ABS,DATA)
                                     46 ;--------------------------------------------------------
                                     47 ; bit data
                                     48 ;--------------------------------------------------------
                                     49 	.area BSEG    (BIT)
      000000                         50 _atoi_neg_1_37:
      000000                         51 	.ds 1
                                     52 ;--------------------------------------------------------
                                     53 ; paged external ram data
                                     54 ;--------------------------------------------------------
                                     55 	.area PSEG    (PAG,XDATA)
                                     56 ;--------------------------------------------------------
                                     57 ; external ram data
                                     58 ;--------------------------------------------------------
                                     59 	.area XSEG    (XDATA)
                                     60 ;--------------------------------------------------------
                                     61 ; absolute external ram data
                                     62 ;--------------------------------------------------------
                                     63 	.area XABS    (ABS,XDATA)
                                     64 ;--------------------------------------------------------
                                     65 ; external initialized ram data
                                     66 ;--------------------------------------------------------
                                     67 	.area XISEG   (XDATA)
                                     68 	.area HOME    (CODE)
                                     69 	.area GSINIT0 (CODE)
                                     70 	.area GSINIT1 (CODE)
                                     71 	.area GSINIT2 (CODE)
                                     72 	.area GSINIT3 (CODE)
                                     73 	.area GSINIT4 (CODE)
                                     74 	.area GSINIT5 (CODE)
                                     75 	.area GSINIT  (CODE)
                                     76 	.area GSFINAL (CODE)
                                     77 	.area CSEG    (CODE)
                                     78 ;--------------------------------------------------------
                                     79 ; global & static initialisations
                                     80 ;--------------------------------------------------------
                                     81 	.area HOME    (CODE)
                                     82 	.area GSINIT  (CODE)
                                     83 	.area GSFINAL (CODE)
                                     84 	.area GSINIT  (CODE)
                                     85 ;--------------------------------------------------------
                                     86 ; Home
                                     87 ;--------------------------------------------------------
                                     88 	.area HOME    (CODE)
                                     89 	.area HOME    (CODE)
                                     90 ;--------------------------------------------------------
                                     91 ; code
                                     92 ;--------------------------------------------------------
                                     93 	.area CSEG    (CODE)
                                     94 ;------------------------------------------------------------
                                     95 ;Allocation info for local variables in function 'atoi'
                                     96 ;------------------------------------------------------------
                                     97 ;nptr                      Allocated to registers r5 r6 r7 
                                     98 ;__00010004                Allocated to registers 
                                     99 ;__00010001                Allocated to registers 
                                    100 ;ret                       Allocated with name '_atoi_ret_1_37'
                                    101 ;__00020002                Allocated to registers r4 r3 
                                    102 ;c                         Allocated to registers 
                                    103 ;__00020005                Allocated to registers r4 r3 
                                    104 ;c                         Allocated to registers 
                                    105 ;------------------------------------------------------------
                                    106 ;	atoi.c:34: int atoi(const char *nptr)
                                    107 ;	-----------------------------------------
                                    108 ;	 function atoi
                                    109 ;	-----------------------------------------
      000000                        110 _atoi:
                           000007   111 	ar7 = 0x07
                           000006   112 	ar6 = 0x06
                           000005   113 	ar5 = 0x05
                           000004   114 	ar4 = 0x04
                           000003   115 	ar3 = 0x03
                           000002   116 	ar2 = 0x02
                           000001   117 	ar1 = 0x01
                           000000   118 	ar0 = 0x00
      000000 AD 82            [24]  119 	mov	r5,dpl
      000002 AE 83            [24]  120 	mov	r6,dph
      000004 AF F0            [24]  121 	mov	r7,b
                                    122 ;	atoi.c:36: int ret = 0;
      000006 E4               [12]  123 	clr	a
      000007 F5*00            [12]  124 	mov	_atoi_ret_1_37,a
      000009 F5*01            [12]  125 	mov	(_atoi_ret_1_37 + 1),a
                                    126 ;	atoi.c:39: while (isblank (*nptr))
      00000B 8D 00            [24]  127 	mov	ar0,r5
      00000D 8E 01            [24]  128 	mov	ar1,r6
      00000F 8F 02            [24]  129 	mov	ar2,r7
      000011                        130 00101$:
      000011 88 82            [24]  131 	mov	dpl,r0
      000013 89 83            [24]  132 	mov	dph,r1
      000015 8A F0            [24]  133 	mov	b,r2
      000017 12r00r00         [24]  134 	lcall	__gptrget
      00001A FC               [12]  135 	mov	r4,a
      00001B 33               [12]  136 	rlc	a
      00001C 95 E0            [12]  137 	subb	a,acc
      00001E FB               [12]  138 	mov	r3,a
                                    139 ;	../../device/include/ctype.h:53: return ((unsigned char)c == ' ' || (unsigned char)c == '\t');
      00001F BC 20 02         [24]  140 	cjne	r4,#0x20,00147$
      000022 80 03            [24]  141 	sjmp	00115$
      000024                        142 00147$:
      000024 BC 09 07         [24]  143 	cjne	r4,#0x09,00131$
      000027                        144 00115$:
                                    145 ;	atoi.c:40: nptr++;
      000027 08               [12]  146 	inc	r0
      000028 B8 00 E6         [24]  147 	cjne	r0,#0x00,00101$
      00002B 09               [12]  148 	inc	r1
      00002C 80 E3            [24]  149 	sjmp	00101$
      00002E                        150 00131$:
      00002E 88 05            [24]  151 	mov	ar5,r0
      000030 89 06            [24]  152 	mov	ar6,r1
      000032 8A 07            [24]  153 	mov	ar7,r2
                                    154 ;	atoi.c:42: neg = (*nptr == '-');
      000034 88 82            [24]  155 	mov	dpl,r0
      000036 89 83            [24]  156 	mov	dph,r1
      000038 8A F0            [24]  157 	mov	b,r2
      00003A 12r00r00         [24]  158 	lcall	__gptrget
      00003D FC               [12]  159 	mov	r4,a
      00003E BC 2D 03         [24]  160 	cjne	r4,#0x2D,00151$
      000041 D3               [12]  161 	setb	c
      000042 80 01            [24]  162 	sjmp	00152$
      000044                        163 00151$:
      000044 C3               [12]  164 	clr	c
      000045                        165 00152$:
      000045 92*00            [24]  166 	mov	_atoi_neg_1_37,c
                                    167 ;	atoi.c:44: if (*nptr == '-' || *nptr == '+')
      000047 BC 2D 02         [24]  168 	cjne	r4,#0x2D,00153$
      00004A 80 03            [24]  169 	sjmp	00104$
      00004C                        170 00153$:
      00004C BC 2B 05         [24]  171 	cjne	r4,#0x2B,00129$
      00004F                        172 00104$:
                                    173 ;	atoi.c:45: nptr++;
      00004F 0D               [12]  174 	inc	r5
      000050 BD 00 01         [24]  175 	cjne	r5,#0x00,00156$
      000053 0E               [12]  176 	inc	r6
      000054                        177 00156$:
                                    178 ;	atoi.c:47: while (isdigit (*nptr))
      000054                        179 00129$:
      000054                        180 00107$:
      000054 8D 82            [24]  181 	mov	dpl,r5
      000056 8E 83            [24]  182 	mov	dph,r6
      000058 8F F0            [24]  183 	mov	b,r7
      00005A 12r00r00         [24]  184 	lcall	__gptrget
      00005D FC               [12]  185 	mov	r4,a
      00005E 33               [12]  186 	rlc	a
      00005F 95 E0            [12]  187 	subb	a,acc
      000061 FB               [12]  188 	mov	r3,a
                                    189 ;	../../device/include/ctype.h:62: return ((unsigned char)c >= '0' && (unsigned char)c <= '9');
      000062 BC 30 00         [24]  190 	cjne	r4,#0x30,00157$
      000065                        191 00157$:
      000065 40 48            [24]  192 	jc	00109$
      000067 EC               [12]  193 	mov	a,r4
      000068 24 C6            [12]  194 	add	a,#0xff - 0x39
      00006A 40 43            [24]  195 	jc	00109$
                                    196 ;	atoi.c:48: ret = ret * 10 + (*(nptr++) - '0');
      00006C 85*00*00         [24]  197 	mov	__mulint_PARM_2,_atoi_ret_1_37
      00006F 85*01*01         [24]  198 	mov	(__mulint_PARM_2 + 1),(_atoi_ret_1_37 + 1)
      000072 90 00 0A         [24]  199 	mov	dptr,#0x000A
      000075 C0 07            [24]  200 	push	ar7
      000077 C0 06            [24]  201 	push	ar6
      000079 C0 05            [24]  202 	push	ar5
      00007B 12r00r00         [24]  203 	lcall	__mulint
      00007E AB 82            [24]  204 	mov	r3,dpl
      000080 AC 83            [24]  205 	mov	r4,dph
      000082 D0 05            [24]  206 	pop	ar5
      000084 D0 06            [24]  207 	pop	ar6
      000086 D0 07            [24]  208 	pop	ar7
      000088 8D 82            [24]  209 	mov	dpl,r5
      00008A 8E 83            [24]  210 	mov	dph,r6
      00008C 8F F0            [24]  211 	mov	b,r7
      00008E 12r00r00         [24]  212 	lcall	__gptrget
      000091 FA               [12]  213 	mov	r2,a
      000092 A3               [24]  214 	inc	dptr
      000093 AD 82            [24]  215 	mov	r5,dpl
      000095 AE 83            [24]  216 	mov	r6,dph
      000097 EA               [12]  217 	mov	a,r2
      000098 F9               [12]  218 	mov	r1,a
      000099 33               [12]  219 	rlc	a
      00009A 95 E0            [12]  220 	subb	a,acc
      00009C FA               [12]  221 	mov	r2,a
      00009D E9               [12]  222 	mov	a,r1
      00009E 24 D0            [12]  223 	add	a,#0xD0
      0000A0 F9               [12]  224 	mov	r1,a
      0000A1 EA               [12]  225 	mov	a,r2
      0000A2 34 FF            [12]  226 	addc	a,#0xFF
      0000A4 FA               [12]  227 	mov	r2,a
      0000A5 E9               [12]  228 	mov	a,r1
      0000A6 2B               [12]  229 	add	a,r3
      0000A7 F5*00            [12]  230 	mov	_atoi_ret_1_37,a
      0000A9 EA               [12]  231 	mov	a,r2
      0000AA 3C               [12]  232 	addc	a,r4
      0000AB F5*01            [12]  233 	mov	(_atoi_ret_1_37 + 1),a
      0000AD 80 A5            [24]  234 	sjmp	00107$
      0000AF                        235 00109$:
                                    236 ;	atoi.c:50: return (neg ? -ret : ret); // Since -INT_MIN is INT_MIN in sdcc, the result value always turns out ok.
      0000AF 30*00 0B         [24]  237 	jnb	_atoi_neg_1_37,00120$
      0000B2 C3               [12]  238 	clr	c
      0000B3 E4               [12]  239 	clr	a
      0000B4 95*00            [12]  240 	subb	a,_atoi_ret_1_37
      0000B6 FE               [12]  241 	mov	r6,a
      0000B7 E4               [12]  242 	clr	a
      0000B8 95*01            [12]  243 	subb	a,(_atoi_ret_1_37 + 1)
      0000BA FF               [12]  244 	mov	r7,a
      0000BB 80 04            [24]  245 	sjmp	00121$
      0000BD                        246 00120$:
      0000BD AE*00            [24]  247 	mov	r6,_atoi_ret_1_37
      0000BF AF*01            [24]  248 	mov	r7,(_atoi_ret_1_37 + 1)
      0000C1                        249 00121$:
      0000C1 8E 82            [24]  250 	mov	dpl,r6
      0000C3 8F 83            [24]  251 	mov	dph,r7
      0000C5 22               [24]  252 	ret
                                    253 	.area CSEG    (CODE)
                                    254 	.area CONST   (CODE)
                                    255 	.area XINIT   (CODE)
                                    256 	.area CABS    (ABS,CODE)
