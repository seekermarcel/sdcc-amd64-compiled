                                      1 ;--------------------------------------------------------
                                      2 ; File Created by SDCC : free open source ANSI-C Compiler
                                      3 ; Version 3.5.0 #9253 (Apr  4 2022) (Linux)
                                      4 ; This file was generated Mon Apr  4 14:10:44 2022
                                      5 ;--------------------------------------------------------
                                      6 	.module time
                                      7 	.optsdcc -mmcs51 --model-medium
                                      8 	
                                      9 ;--------------------------------------------------------
                                     10 ; Public variables in this module
                                     11 ;--------------------------------------------------------
                                     12 	.globl ___day
                                     13 	.globl ___month
                                     14 	.globl _RtcRead
                                     15 	.globl _sprintf
                                     16 	.globl _time
                                     17 	.globl _asctime
                                     18 	.globl _ctime
                                     19 	.globl _localtime
                                     20 	.globl _gmtime
                                     21 	.globl _mktime
                                     22 ;--------------------------------------------------------
                                     23 ; special function registers
                                     24 ;--------------------------------------------------------
                                     25 	.area RSEG    (ABS,DATA)
      000000                         26 	.org 0x0000
                                     27 ;--------------------------------------------------------
                                     28 ; special function bits
                                     29 ;--------------------------------------------------------
                                     30 	.area RSEG    (ABS,DATA)
      000000                         31 	.org 0x0000
                                     32 ;--------------------------------------------------------
                                     33 ; overlayable register banks
                                     34 ;--------------------------------------------------------
                                     35 	.area REG_BANK_0	(REL,OVR,DATA)
      000000                         36 	.ds 8
                                     37 ;--------------------------------------------------------
                                     38 ; internal ram data
                                     39 ;--------------------------------------------------------
                                     40 	.area DSEG    (DATA)
      000000                         41 _asctime_sloc0_1_0:
      000000                         42 	.ds 2
      000002                         43 _asctime_sloc1_1_0:
      000002                         44 	.ds 2
      000004                         45 _asctime_sloc2_1_0:
      000004                         46 	.ds 2
      000006                         47 _asctime_sloc3_1_0:
      000006                         48 	.ds 2
      000008                         49 _asctime_sloc4_1_0:
      000008                         50 	.ds 2
      00000A                         51 _gmtime_sloc0_1_0:
      00000A                         52 	.ds 4
                                     53 ;--------------------------------------------------------
                                     54 ; overlayable items in internal ram 
                                     55 ;--------------------------------------------------------
                                     56 ;--------------------------------------------------------
                                     57 ; indirectly addressable internal ram data
                                     58 ;--------------------------------------------------------
                                     59 	.area ISEG    (DATA)
                                     60 ;--------------------------------------------------------
                                     61 ; absolute internal ram data
                                     62 ;--------------------------------------------------------
                                     63 	.area IABS    (ABS,DATA)
                                     64 	.area IABS    (ABS,DATA)
                                     65 ;--------------------------------------------------------
                                     66 ; bit data
                                     67 ;--------------------------------------------------------
                                     68 	.area BSEG    (BIT)
                                     69 ;--------------------------------------------------------
                                     70 ; paged external ram data
                                     71 ;--------------------------------------------------------
                                     72 	.area PSEG    (PAG,XDATA)
      000000                         73 _time_timeptr_1_23:
      000000                         74 	.ds 3
      000003                         75 _time_now_1_24:
      000003                         76 	.ds 12
      00000F                         77 _ascTimeBuffer:
      00000F                         78 	.ds 32
      00002F                         79 _asctime_timeptr_1_29:
      00002F                         80 	.ds 3
      000032                         81 _lastTime:
      000032                         82 	.ds 12
      00003E                         83 _gmtime_epoch_1_36:
      00003E                         84 	.ds 4
      000042                         85 _gmtime_days_1_36:
      000042                         86 	.ds 4
      000046                         87 _mktime_timeptr_1_45:
      000046                         88 	.ds 3
      000049                         89 _mktime_year_1_46:
      000049                         90 	.ds 2
      00004B                         91 _mktime_month_1_46:
      00004B                         92 	.ds 2
      00004D                         93 _mktime_i_1_46:
      00004D                         94 	.ds 2
      00004F                         95 _mktime_seconds_1_46:
      00004F                         96 	.ds 4
                                     97 ;--------------------------------------------------------
                                     98 ; external ram data
                                     99 ;--------------------------------------------------------
                                    100 	.area XSEG    (XDATA)
                                    101 ;--------------------------------------------------------
                                    102 ; absolute external ram data
                                    103 ;--------------------------------------------------------
                                    104 	.area XABS    (ABS,XDATA)
                                    105 ;--------------------------------------------------------
                                    106 ; external initialized ram data
                                    107 ;--------------------------------------------------------
                                    108 	.area XISEG   (XDATA)
                                    109 	.area HOME    (CODE)
                                    110 	.area GSINIT0 (CODE)
                                    111 	.area GSINIT1 (CODE)
                                    112 	.area GSINIT2 (CODE)
                                    113 	.area GSINIT3 (CODE)
                                    114 	.area GSINIT4 (CODE)
                                    115 	.area GSINIT5 (CODE)
                                    116 	.area GSINIT  (CODE)
                                    117 	.area GSFINAL (CODE)
                                    118 	.area CSEG    (CODE)
                                    119 ;--------------------------------------------------------
                                    120 ; global & static initialisations
                                    121 ;--------------------------------------------------------
                                    122 	.area HOME    (CODE)
                                    123 	.area GSINIT  (CODE)
                                    124 	.area GSFINAL (CODE)
                                    125 	.area GSINIT  (CODE)
                                    126 ;--------------------------------------------------------
                                    127 ; Home
                                    128 ;--------------------------------------------------------
                                    129 	.area HOME    (CODE)
                                    130 	.area HOME    (CODE)
                                    131 ;--------------------------------------------------------
                                    132 ; code
                                    133 ;--------------------------------------------------------
                                    134 	.area CSEG    (CODE)
                                    135 ;------------------------------------------------------------
                                    136 ;Allocation info for local variables in function 'RtcRead'
                                    137 ;------------------------------------------------------------
                                    138 ;	time.c:42: unsigned char RtcRead(struct tm *timeptr) {
                                    139 ;	-----------------------------------------
                                    140 ;	 function RtcRead
                                    141 ;	-----------------------------------------
      000000                        142 _RtcRead:
                           000007   143 	ar7 = 0x07
                           000006   144 	ar6 = 0x06
                           000005   145 	ar5 = 0x05
                           000004   146 	ar4 = 0x04
                           000003   147 	ar3 = 0x03
                           000002   148 	ar2 = 0x02
                           000001   149 	ar1 = 0x01
                           000000   150 	ar0 = 0x00
                                    151 ;	time.c:45: return 0;
      000000 75 82 00         [24]  152 	mov	dpl,#0x00
      000003 22               [24]  153 	ret
                                    154 ;------------------------------------------------------------
                                    155 ;Allocation info for local variables in function 'time'
                                    156 ;------------------------------------------------------------
                                    157 ;	time.c:50: time_t time(time_t *timeptr) {
                                    158 ;	-----------------------------------------
                                    159 ;	 function time
                                    160 ;	-----------------------------------------
      000004                        161 _time:
      000004 AF F0            [24]  162 	mov	r7,b
      000006 AE 83            [24]  163 	mov	r6,dph
      000008 E5 82            [12]  164 	mov	a,dpl
      00000A 78r00            [12]  165 	mov	r0,#_time_timeptr_1_23
      00000C F2               [24]  166 	movx	@r0,a
      00000D 08               [12]  167 	inc	r0
      00000E EE               [12]  168 	mov	a,r6
      00000F F2               [24]  169 	movx	@r0,a
      000010 08               [12]  170 	inc	r0
      000011 EF               [12]  171 	mov	a,r7
      000012 F2               [24]  172 	movx	@r0,a
                                    173 ;	time.c:52: time_t t=(time_t) -1;
      000013 7A FF            [12]  174 	mov	r2,#0xFF
      000015 7B FF            [12]  175 	mov	r3,#0xFF
      000017 7C FF            [12]  176 	mov	r4,#0xFF
      000019 7F FF            [12]  177 	mov	r7,#0xFF
                                    178 ;	time.c:54: if (RtcRead(&now)) {
      00001B 90r00r03         [24]  179 	mov	dptr,#_time_now_1_24
      00001E 75 F0 60         [24]  180 	mov	b,#0x60
      000021 C0 07            [24]  181 	push	ar7
      000023 C0 04            [24]  182 	push	ar4
      000025 C0 03            [24]  183 	push	ar3
      000027 C0 02            [24]  184 	push	ar2
      000029 12r00r00         [24]  185 	lcall	_RtcRead
      00002C E5 82            [12]  186 	mov	a,dpl
      00002E D0 02            [24]  187 	pop	ar2
      000030 D0 03            [24]  188 	pop	ar3
      000032 D0 04            [24]  189 	pop	ar4
      000034 D0 07            [24]  190 	pop	ar7
      000036 60 10            [24]  191 	jz	00102$
                                    192 ;	time.c:55: t=mktime(&now);
      000038 90r00r03         [24]  193 	mov	dptr,#_time_now_1_24
      00003B 75 F0 60         [24]  194 	mov	b,#0x60
      00003E 12r05r5A         [24]  195 	lcall	_mktime
      000041 AA 82            [24]  196 	mov	r2,dpl
      000043 AB 83            [24]  197 	mov	r3,dph
      000045 AC F0            [24]  198 	mov	r4,b
      000047 FF               [12]  199 	mov	r7,a
      000048                        200 00102$:
                                    201 ;	time.c:57: if (timeptr) {
      000048 78r00            [12]  202 	mov	r0,#_time_timeptr_1_23
      00004A E2               [24]  203 	movx	a,@r0
      00004B F5 F0            [12]  204 	mov	b,a
      00004D 08               [12]  205 	inc	r0
      00004E E2               [24]  206 	movx	a,@r0
      00004F 45 F0            [12]  207 	orl	a,b
      000051 60 20            [24]  208 	jz	00104$
                                    209 ;	time.c:58: *timeptr=t;
      000053 78r00            [12]  210 	mov	r0,#_time_timeptr_1_23
      000055 E2               [24]  211 	movx	a,@r0
      000056 F5 82            [12]  212 	mov	dpl,a
      000058 08               [12]  213 	inc	r0
      000059 E2               [24]  214 	movx	a,@r0
      00005A F5 83            [12]  215 	mov	dph,a
      00005C 08               [12]  216 	inc	r0
      00005D E2               [24]  217 	movx	a,@r0
      00005E F5 F0            [12]  218 	mov	b,a
      000060 EA               [12]  219 	mov	a,r2
      000061 12r00r00         [24]  220 	lcall	__gptrput
      000064 A3               [24]  221 	inc	dptr
      000065 EB               [12]  222 	mov	a,r3
      000066 12r00r00         [24]  223 	lcall	__gptrput
      000069 A3               [24]  224 	inc	dptr
      00006A EC               [12]  225 	mov	a,r4
      00006B 12r00r00         [24]  226 	lcall	__gptrput
      00006E A3               [24]  227 	inc	dptr
      00006F EF               [12]  228 	mov	a,r7
      000070 12r00r00         [24]  229 	lcall	__gptrput
      000073                        230 00104$:
                                    231 ;	time.c:60: return t;
      000073 8A 82            [24]  232 	mov	dpl,r2
      000075 8B 83            [24]  233 	mov	dph,r3
      000077 8C F0            [24]  234 	mov	b,r4
      000079 EF               [12]  235 	mov	a,r7
      00007A 22               [24]  236 	ret
                                    237 ;------------------------------------------------------------
                                    238 ;Allocation info for local variables in function 'CheckTime'
                                    239 ;------------------------------------------------------------
                                    240 ;	time.c:73: static void CheckTime(struct tm *timeptr) {
                                    241 ;	-----------------------------------------
                                    242 ;	 function CheckTime
                                    243 ;	-----------------------------------------
      00007B                        244 _CheckTime:
                                    245 ;	time.c:84: if (timeptr->tm_sec>59) timeptr->tm_sec=59;
      00007B AD 82            [24]  246 	mov	r5,dpl
      00007D AE 83            [24]  247 	mov	r6,dph
      00007F AF F0            [24]  248 	mov	r7,b
      000081 12r00r00         [24]  249 	lcall	__gptrget
      000084 FC               [12]  250 	mov  r4,a
      000085 24 C4            [12]  251 	add	a,#0xff - 0x3B
      000087 50 0B            [24]  252 	jnc	00102$
      000089 8D 82            [24]  253 	mov	dpl,r5
      00008B 8E 83            [24]  254 	mov	dph,r6
      00008D 8F F0            [24]  255 	mov	b,r7
      00008F 74 3B            [12]  256 	mov	a,#0x3B
      000091 12r00r00         [24]  257 	lcall	__gptrput
      000094                        258 00102$:
                                    259 ;	time.c:85: if (timeptr->tm_min>59) timeptr->tm_min=59;
      000094 74 01            [12]  260 	mov	a,#0x01
      000096 2D               [12]  261 	add	a,r5
      000097 FA               [12]  262 	mov	r2,a
      000098 E4               [12]  263 	clr	a
      000099 3E               [12]  264 	addc	a,r6
      00009A FB               [12]  265 	mov	r3,a
      00009B 8F 04            [24]  266 	mov	ar4,r7
      00009D 8A 82            [24]  267 	mov	dpl,r2
      00009F 8B 83            [24]  268 	mov	dph,r3
      0000A1 8C F0            [24]  269 	mov	b,r4
      0000A3 12r00r00         [24]  270 	lcall	__gptrget
      0000A6 F9               [12]  271 	mov  r1,a
      0000A7 24 C4            [12]  272 	add	a,#0xff - 0x3B
      0000A9 50 0B            [24]  273 	jnc	00104$
      0000AB 8A 82            [24]  274 	mov	dpl,r2
      0000AD 8B 83            [24]  275 	mov	dph,r3
      0000AF 8C F0            [24]  276 	mov	b,r4
      0000B1 74 3B            [12]  277 	mov	a,#0x3B
      0000B3 12r00r00         [24]  278 	lcall	__gptrput
      0000B6                        279 00104$:
                                    280 ;	time.c:86: if (timeptr->tm_hour>23) timeptr->tm_hour=23;
      0000B6 74 02            [12]  281 	mov	a,#0x02
      0000B8 2D               [12]  282 	add	a,r5
      0000B9 FA               [12]  283 	mov	r2,a
      0000BA E4               [12]  284 	clr	a
      0000BB 3E               [12]  285 	addc	a,r6
      0000BC FB               [12]  286 	mov	r3,a
      0000BD 8F 04            [24]  287 	mov	ar4,r7
      0000BF 8A 82            [24]  288 	mov	dpl,r2
      0000C1 8B 83            [24]  289 	mov	dph,r3
      0000C3 8C F0            [24]  290 	mov	b,r4
      0000C5 12r00r00         [24]  291 	lcall	__gptrget
      0000C8 F9               [12]  292 	mov  r1,a
      0000C9 24 E8            [12]  293 	add	a,#0xff - 0x17
      0000CB 50 0B            [24]  294 	jnc	00106$
      0000CD 8A 82            [24]  295 	mov	dpl,r2
      0000CF 8B 83            [24]  296 	mov	dph,r3
      0000D1 8C F0            [24]  297 	mov	b,r4
      0000D3 74 17            [12]  298 	mov	a,#0x17
      0000D5 12r00r00         [24]  299 	lcall	__gptrput
      0000D8                        300 00106$:
                                    301 ;	time.c:87: if (timeptr->tm_wday>6) timeptr->tm_wday=6;
      0000D8 74 07            [12]  302 	mov	a,#0x07
      0000DA 2D               [12]  303 	add	a,r5
      0000DB FA               [12]  304 	mov	r2,a
      0000DC E4               [12]  305 	clr	a
      0000DD 3E               [12]  306 	addc	a,r6
      0000DE FB               [12]  307 	mov	r3,a
      0000DF 8F 04            [24]  308 	mov	ar4,r7
      0000E1 8A 82            [24]  309 	mov	dpl,r2
      0000E3 8B 83            [24]  310 	mov	dph,r3
      0000E5 8C F0            [24]  311 	mov	b,r4
      0000E7 12r00r00         [24]  312 	lcall	__gptrget
      0000EA F9               [12]  313 	mov  r1,a
      0000EB 24 F9            [12]  314 	add	a,#0xff - 0x06
      0000ED 50 0B            [24]  315 	jnc	00108$
      0000EF 8A 82            [24]  316 	mov	dpl,r2
      0000F1 8B 83            [24]  317 	mov	dph,r3
      0000F3 8C F0            [24]  318 	mov	b,r4
      0000F5 74 06            [12]  319 	mov	a,#0x06
      0000F7 12r00r00         [24]  320 	lcall	__gptrput
      0000FA                        321 00108$:
                                    322 ;	time.c:88: if (timeptr->tm_mday<1) timeptr->tm_mday=1;
      0000FA 74 03            [12]  323 	mov	a,#0x03
      0000FC 2D               [12]  324 	add	a,r5
      0000FD FA               [12]  325 	mov	r2,a
      0000FE E4               [12]  326 	clr	a
      0000FF 3E               [12]  327 	addc	a,r6
      000100 FB               [12]  328 	mov	r3,a
      000101 8F 04            [24]  329 	mov	ar4,r7
      000103 8A 82            [24]  330 	mov	dpl,r2
      000105 8B 83            [24]  331 	mov	dph,r3
      000107 8C F0            [24]  332 	mov	b,r4
      000109 12r00r00         [24]  333 	lcall	__gptrget
      00010C F9               [12]  334 	mov	r1,a
      00010D B9 01 00         [24]  335 	cjne	r1,#0x01,00148$
      000110                        336 00148$:
      000110 50 0D            [24]  337 	jnc	00112$
      000112 8A 82            [24]  338 	mov	dpl,r2
      000114 8B 83            [24]  339 	mov	dph,r3
      000116 8C F0            [24]  340 	mov	b,r4
      000118 74 01            [12]  341 	mov	a,#0x01
      00011A 12r00r00         [24]  342 	lcall	__gptrput
      00011D 80 10            [24]  343 	sjmp	00113$
      00011F                        344 00112$:
                                    345 ;	time.c:89: else if (timeptr->tm_mday>31) timeptr->tm_mday=31;
      00011F E9               [12]  346 	mov	a,r1
      000120 24 E0            [12]  347 	add	a,#0xff - 0x1F
      000122 50 0B            [24]  348 	jnc	00113$
      000124 8A 82            [24]  349 	mov	dpl,r2
      000126 8B 83            [24]  350 	mov	dph,r3
      000128 8C F0            [24]  351 	mov	b,r4
      00012A 74 1F            [12]  352 	mov	a,#0x1F
      00012C 12r00r00         [24]  353 	lcall	__gptrput
      00012F                        354 00113$:
                                    355 ;	time.c:90: if (timeptr->tm_mon>11) timeptr->tm_mon=11;
      00012F 74 04            [12]  356 	mov	a,#0x04
      000131 2D               [12]  357 	add	a,r5
      000132 FA               [12]  358 	mov	r2,a
      000133 E4               [12]  359 	clr	a
      000134 3E               [12]  360 	addc	a,r6
      000135 FB               [12]  361 	mov	r3,a
      000136 8F 04            [24]  362 	mov	ar4,r7
      000138 8A 82            [24]  363 	mov	dpl,r2
      00013A 8B 83            [24]  364 	mov	dph,r3
      00013C 8C F0            [24]  365 	mov	b,r4
      00013E 12r00r00         [24]  366 	lcall	__gptrget
      000141 F9               [12]  367 	mov  r1,a
      000142 24 F4            [12]  368 	add	a,#0xff - 0x0B
      000144 50 0B            [24]  369 	jnc	00115$
      000146 8A 82            [24]  370 	mov	dpl,r2
      000148 8B 83            [24]  371 	mov	dph,r3
      00014A 8C F0            [24]  372 	mov	b,r4
      00014C 74 0B            [12]  373 	mov	a,#0x0B
      00014E 12r00r00         [24]  374 	lcall	__gptrput
      000151                        375 00115$:
                                    376 ;	time.c:91: if (timeptr->tm_year<0) timeptr->tm_year=0;
      000151 74 05            [12]  377 	mov	a,#0x05
      000153 2D               [12]  378 	add	a,r5
      000154 FD               [12]  379 	mov	r5,a
      000155 E4               [12]  380 	clr	a
      000156 3E               [12]  381 	addc	a,r6
      000157 FE               [12]  382 	mov	r6,a
      000158 8D 82            [24]  383 	mov	dpl,r5
      00015A 8E 83            [24]  384 	mov	dph,r6
      00015C 8F F0            [24]  385 	mov	b,r7
      00015E 12r00r00         [24]  386 	lcall	__gptrget
      000161 FB               [12]  387 	mov	r3,a
      000162 A3               [24]  388 	inc	dptr
      000163 12r00r00         [24]  389 	lcall	__gptrget
      000166 FC               [12]  390 	mov	r4,a
      000167 30 E7 0E         [24]  391 	jnb	acc.7,00118$
      00016A 8D 82            [24]  392 	mov	dpl,r5
      00016C 8E 83            [24]  393 	mov	dph,r6
      00016E 8F F0            [24]  394 	mov	b,r7
      000170 E4               [12]  395 	clr	a
      000171 12r00r00         [24]  396 	lcall	__gptrput
      000174 A3               [24]  397 	inc	dptr
      000175 02r00r00         [24]  398 	ljmp	__gptrput
      000178                        399 00118$:
      000178 22               [24]  400 	ret
                                    401 ;------------------------------------------------------------
                                    402 ;Allocation info for local variables in function 'asctime'
                                    403 ;------------------------------------------------------------
                                    404 ;sloc0                     Allocated with name '_asctime_sloc0_1_0'
                                    405 ;sloc1                     Allocated with name '_asctime_sloc1_1_0'
                                    406 ;sloc2                     Allocated with name '_asctime_sloc2_1_0'
                                    407 ;sloc3                     Allocated with name '_asctime_sloc3_1_0'
                                    408 ;sloc4                     Allocated with name '_asctime_sloc4_1_0'
                                    409 ;------------------------------------------------------------
                                    410 ;	time.c:95: char *asctime(struct tm *timeptr) {
                                    411 ;	-----------------------------------------
                                    412 ;	 function asctime
                                    413 ;	-----------------------------------------
      000179                        414 _asctime:
      000179 AF F0            [24]  415 	mov	r7,b
      00017B AE 83            [24]  416 	mov	r6,dph
      00017D E5 82            [12]  417 	mov	a,dpl
      00017F 78r2F            [12]  418 	mov	r0,#_asctime_timeptr_1_29
      000181 F2               [24]  419 	movx	@r0,a
      000182 08               [12]  420 	inc	r0
      000183 EE               [12]  421 	mov	a,r6
      000184 F2               [24]  422 	movx	@r0,a
      000185 08               [12]  423 	inc	r0
      000186 EF               [12]  424 	mov	a,r7
      000187 F2               [24]  425 	movx	@r0,a
                                    426 ;	time.c:96: CheckTime(timeptr);
      000188 78r2F            [12]  427 	mov	r0,#_asctime_timeptr_1_29
      00018A E2               [24]  428 	movx	a,@r0
      00018B F5 82            [12]  429 	mov	dpl,a
      00018D 08               [12]  430 	inc	r0
      00018E E2               [24]  431 	movx	a,@r0
      00018F F5 83            [12]  432 	mov	dph,a
      000191 08               [12]  433 	inc	r0
      000192 E2               [24]  434 	movx	a,@r0
      000193 F5 F0            [12]  435 	mov	b,a
      000195 12r00r7B         [24]  436 	lcall	_CheckTime
                                    437 ;	time.c:100: timeptr->tm_year+1900);
      000198 78r2F            [12]  438 	mov	r0,#_asctime_timeptr_1_29
      00019A E2               [24]  439 	movx	a,@r0
      00019B 24 05            [12]  440 	add	a,#0x05
      00019D FA               [12]  441 	mov	r2,a
      00019E 08               [12]  442 	inc	r0
      00019F E2               [24]  443 	movx	a,@r0
      0001A0 34 00            [12]  444 	addc	a,#0x00
      0001A2 FB               [12]  445 	mov	r3,a
      0001A3 08               [12]  446 	inc	r0
      0001A4 E2               [24]  447 	movx	a,@r0
      0001A5 FC               [12]  448 	mov	r4,a
      0001A6 8A 82            [24]  449 	mov	dpl,r2
      0001A8 8B 83            [24]  450 	mov	dph,r3
      0001AA 8C F0            [24]  451 	mov	b,r4
      0001AC 12r00r00         [24]  452 	lcall	__gptrget
      0001AF FA               [12]  453 	mov	r2,a
      0001B0 A3               [24]  454 	inc	dptr
      0001B1 12r00r00         [24]  455 	lcall	__gptrget
      0001B4 FB               [12]  456 	mov	r3,a
      0001B5 74 6C            [12]  457 	mov	a,#0x6C
      0001B7 2A               [12]  458 	add	a,r2
      0001B8 F5*08            [12]  459 	mov	_asctime_sloc4_1_0,a
      0001BA 74 07            [12]  460 	mov	a,#0x07
      0001BC 3B               [12]  461 	addc	a,r3
      0001BD F5*09            [12]  462 	mov	(_asctime_sloc4_1_0 + 1),a
                                    463 ;	time.c:99: timeptr->tm_hour, timeptr->tm_min, timeptr->tm_sec, 
      0001BF 78r2F            [12]  464 	mov	r0,#_asctime_timeptr_1_29
      0001C1 E2               [24]  465 	movx	a,@r0
      0001C2 F5 82            [12]  466 	mov	dpl,a
      0001C4 08               [12]  467 	inc	r0
      0001C5 E2               [24]  468 	movx	a,@r0
      0001C6 F5 83            [12]  469 	mov	dph,a
      0001C8 08               [12]  470 	inc	r0
      0001C9 E2               [24]  471 	movx	a,@r0
      0001CA F5 F0            [12]  472 	mov	b,a
      0001CC 12r00r00         [24]  473 	lcall	__gptrget
      0001CF FC               [12]  474 	mov	r4,a
      0001D0 8C*00            [24]  475 	mov	_asctime_sloc0_1_0,r4
      0001D2 75*01 00         [24]  476 	mov	(_asctime_sloc0_1_0 + 1),#0x00
      0001D5 78r2F            [12]  477 	mov	r0,#_asctime_timeptr_1_29
      0001D7 E2               [24]  478 	movx	a,@r0
      0001D8 24 01            [12]  479 	add	a,#0x01
      0001DA FD               [12]  480 	mov	r5,a
      0001DB 08               [12]  481 	inc	r0
      0001DC E2               [24]  482 	movx	a,@r0
      0001DD 34 00            [12]  483 	addc	a,#0x00
      0001DF FE               [12]  484 	mov	r6,a
      0001E0 08               [12]  485 	inc	r0
      0001E1 E2               [24]  486 	movx	a,@r0
      0001E2 FF               [12]  487 	mov	r7,a
      0001E3 8D 82            [24]  488 	mov	dpl,r5
      0001E5 8E 83            [24]  489 	mov	dph,r6
      0001E7 8F F0            [24]  490 	mov	b,r7
      0001E9 12r00r00         [24]  491 	lcall	__gptrget
      0001EC FD               [12]  492 	mov	r5,a
      0001ED 8D*02            [24]  493 	mov	_asctime_sloc1_1_0,r5
      0001EF 75*03 00         [24]  494 	mov	(_asctime_sloc1_1_0 + 1),#0x00
      0001F2 78r2F            [12]  495 	mov	r0,#_asctime_timeptr_1_29
      0001F4 E2               [24]  496 	movx	a,@r0
      0001F5 24 02            [12]  497 	add	a,#0x02
      0001F7 FC               [12]  498 	mov	r4,a
      0001F8 08               [12]  499 	inc	r0
      0001F9 E2               [24]  500 	movx	a,@r0
      0001FA 34 00            [12]  501 	addc	a,#0x00
      0001FC FE               [12]  502 	mov	r6,a
      0001FD 08               [12]  503 	inc	r0
      0001FE E2               [24]  504 	movx	a,@r0
      0001FF FF               [12]  505 	mov	r7,a
      000200 8C 82            [24]  506 	mov	dpl,r4
      000202 8E 83            [24]  507 	mov	dph,r6
      000204 8F F0            [24]  508 	mov	b,r7
      000206 12r00r00         [24]  509 	lcall	__gptrget
      000209 FC               [12]  510 	mov	r4,a
      00020A 8C*04            [24]  511 	mov	_asctime_sloc2_1_0,r4
      00020C 75*05 00         [24]  512 	mov	(_asctime_sloc2_1_0 + 1),#0x00
                                    513 ;	time.c:98: __day[timeptr->tm_wday], __month[timeptr->tm_mon], timeptr->tm_mday,
      00020F 78r2F            [12]  514 	mov	r0,#_asctime_timeptr_1_29
      000211 E2               [24]  515 	movx	a,@r0
      000212 24 03            [12]  516 	add	a,#0x03
      000214 FD               [12]  517 	mov	r5,a
      000215 08               [12]  518 	inc	r0
      000216 E2               [24]  519 	movx	a,@r0
      000217 34 00            [12]  520 	addc	a,#0x00
      000219 FE               [12]  521 	mov	r6,a
      00021A 08               [12]  522 	inc	r0
      00021B E2               [24]  523 	movx	a,@r0
      00021C FF               [12]  524 	mov	r7,a
      00021D 8D 82            [24]  525 	mov	dpl,r5
      00021F 8E 83            [24]  526 	mov	dph,r6
      000221 8F F0            [24]  527 	mov	b,r7
      000223 12r00r00         [24]  528 	lcall	__gptrget
      000226 FD               [12]  529 	mov	r5,a
      000227 8D*06            [24]  530 	mov	_asctime_sloc3_1_0,r5
      000229 75*07 00         [24]  531 	mov	(_asctime_sloc3_1_0 + 1),#0x00
      00022C 78r2F            [12]  532 	mov	r0,#_asctime_timeptr_1_29
      00022E E2               [24]  533 	movx	a,@r0
      00022F 24 04            [12]  534 	add	a,#0x04
      000231 FC               [12]  535 	mov	r4,a
      000232 08               [12]  536 	inc	r0
      000233 E2               [24]  537 	movx	a,@r0
      000234 34 00            [12]  538 	addc	a,#0x00
      000236 FE               [12]  539 	mov	r6,a
      000237 08               [12]  540 	inc	r0
      000238 E2               [24]  541 	movx	a,@r0
      000239 FF               [12]  542 	mov	r7,a
      00023A 8C 82            [24]  543 	mov	dpl,r4
      00023C 8E 83            [24]  544 	mov	dph,r6
      00023E 8F F0            [24]  545 	mov	b,r7
      000240 12r00r00         [24]  546 	lcall	__gptrget
      000243 75 F0 02         [24]  547 	mov	b,#0x02
      000246 A4               [48]  548 	mul	ab
      000247 24r0C            [12]  549 	add	a,#___month
      000249 F5 82            [12]  550 	mov	dpl,a
      00024B 74s00            [12]  551 	mov	a,#(___month >> 8)
      00024D 35 F0            [12]  552 	addc	a,b
      00024F F5 83            [12]  553 	mov	dph,a
      000251 E4               [12]  554 	clr	a
      000252 93               [24]  555 	movc	a,@a+dptr
      000253 FE               [12]  556 	mov	r6,a
      000254 A3               [24]  557 	inc	dptr
      000255 E4               [12]  558 	clr	a
      000256 93               [24]  559 	movc	a,@a+dptr
      000257 FF               [12]  560 	mov	r7,a
      000258 7D 80            [12]  561 	mov	r5,#0x80
      00025A 78r2F            [12]  562 	mov	r0,#_asctime_timeptr_1_29
      00025C E2               [24]  563 	movx	a,@r0
      00025D 24 07            [12]  564 	add	a,#0x07
      00025F FA               [12]  565 	mov	r2,a
      000260 08               [12]  566 	inc	r0
      000261 E2               [24]  567 	movx	a,@r0
      000262 34 00            [12]  568 	addc	a,#0x00
      000264 FB               [12]  569 	mov	r3,a
      000265 08               [12]  570 	inc	r0
      000266 E2               [24]  571 	movx	a,@r0
      000267 FC               [12]  572 	mov	r4,a
      000268 8A 82            [24]  573 	mov	dpl,r2
      00026A 8B 83            [24]  574 	mov	dph,r3
      00026C 8C F0            [24]  575 	mov	b,r4
      00026E 12r00r00         [24]  576 	lcall	__gptrget
      000271 75 F0 02         [24]  577 	mov	b,#0x02
      000274 A4               [48]  578 	mul	ab
      000275 24r24            [12]  579 	add	a,#___day
      000277 F5 82            [12]  580 	mov	dpl,a
      000279 74s00            [12]  581 	mov	a,#(___day >> 8)
      00027B 35 F0            [12]  582 	addc	a,b
      00027D F5 83            [12]  583 	mov	dph,a
      00027F E4               [12]  584 	clr	a
      000280 93               [24]  585 	movc	a,@a+dptr
      000281 FB               [12]  586 	mov	r3,a
      000282 A3               [24]  587 	inc	dptr
      000283 E4               [12]  588 	clr	a
      000284 93               [24]  589 	movc	a,@a+dptr
      000285 FC               [12]  590 	mov	r4,a
      000286 7A 80            [12]  591 	mov	r2,#0x80
                                    592 ;	time.c:97: sprintf (ascTimeBuffer, "%s %s %2d %02d:%02d:%02d %04d\n",
      000288 C0*08            [24]  593 	push	_asctime_sloc4_1_0
      00028A C0*09            [24]  594 	push	(_asctime_sloc4_1_0 + 1)
      00028C C0*00            [24]  595 	push	_asctime_sloc0_1_0
      00028E C0*01            [24]  596 	push	(_asctime_sloc0_1_0 + 1)
      000290 C0*02            [24]  597 	push	_asctime_sloc1_1_0
      000292 C0*03            [24]  598 	push	(_asctime_sloc1_1_0 + 1)
      000294 C0*04            [24]  599 	push	_asctime_sloc2_1_0
      000296 C0*05            [24]  600 	push	(_asctime_sloc2_1_0 + 1)
      000298 C0*06            [24]  601 	push	_asctime_sloc3_1_0
      00029A C0*07            [24]  602 	push	(_asctime_sloc3_1_0 + 1)
      00029C C0 06            [24]  603 	push	ar6
      00029E C0 07            [24]  604 	push	ar7
      0002A0 C0 05            [24]  605 	push	ar5
      0002A2 C0 03            [24]  606 	push	ar3
      0002A4 C0 04            [24]  607 	push	ar4
      0002A6 C0 02            [24]  608 	push	ar2
      0002A8 74r32            [12]  609 	mov	a,#___str_0
      0002AA C0 E0            [24]  610 	push	acc
      0002AC 74s00            [12]  611 	mov	a,#(___str_0 >> 8)
      0002AE C0 E0            [24]  612 	push	acc
      0002B0 ED               [12]  613 	mov	a,r5
      0002B1 C0 E0            [24]  614 	push	acc
      0002B3 74r0F            [12]  615 	mov	a,#_ascTimeBuffer
      0002B5 C0 E0            [24]  616 	push	acc
      0002B7 74s00            [12]  617 	mov	a,#(_ascTimeBuffer >> 8)
      0002B9 C0 E0            [24]  618 	push	acc
      0002BB 74 60            [12]  619 	mov	a,#0x60
      0002BD C0 E0            [24]  620 	push	acc
      0002BF 12r00r00         [24]  621 	lcall	_sprintf
      0002C2 E5 81            [12]  622 	mov	a,sp
      0002C4 24 EA            [12]  623 	add	a,#0xea
      0002C6 F5 81            [12]  624 	mov	sp,a
                                    625 ;	time.c:101: return ascTimeBuffer;
      0002C8 90r00r0F         [24]  626 	mov	dptr,#_ascTimeBuffer
      0002CB 75 F0 60         [24]  627 	mov	b,#0x60
      0002CE 22               [24]  628 	ret
                                    629 ;------------------------------------------------------------
                                    630 ;Allocation info for local variables in function 'ctime'
                                    631 ;------------------------------------------------------------
                                    632 ;	time.c:104: char *ctime(time_t *timep) {
                                    633 ;	-----------------------------------------
                                    634 ;	 function ctime
                                    635 ;	-----------------------------------------
      0002CF                        636 _ctime:
                                    637 ;	time.c:105: return asctime(localtime(timep));
      0002CF 12r02rD5         [24]  638 	lcall	_localtime
      0002D2 02r01r79         [24]  639 	ljmp	_asctime
                                    640 ;------------------------------------------------------------
                                    641 ;Allocation info for local variables in function 'localtime'
                                    642 ;------------------------------------------------------------
                                    643 ;	time.c:121: struct tm *localtime(time_t *timep) {
                                    644 ;	-----------------------------------------
                                    645 ;	 function localtime
                                    646 ;	-----------------------------------------
      0002D5                        647 _localtime:
                                    648 ;	time.c:122: return gmtime(timep);
      0002D5 02r02rD8         [24]  649 	ljmp	_gmtime
                                    650 ;------------------------------------------------------------
                                    651 ;Allocation info for local variables in function 'gmtime'
                                    652 ;------------------------------------------------------------
                                    653 ;sloc0                     Allocated with name '_gmtime_sloc0_1_0'
                                    654 ;------------------------------------------------------------
                                    655 ;	time.c:125: struct tm *gmtime(time_t *timep) {
                                    656 ;	-----------------------------------------
                                    657 ;	 function gmtime
                                    658 ;	-----------------------------------------
      0002D8                        659 _gmtime:
                                    660 ;	time.c:126: unsigned long epoch=*timep;
      0002D8 78r3E            [12]  661 	mov	r0,#_gmtime_epoch_1_36
      0002DA 12r00r00         [24]  662 	lcall	__gptrget
      0002DD F2               [24]  663 	movx	@r0,a
      0002DE A3               [24]  664 	inc	dptr
      0002DF 12r00r00         [24]  665 	lcall	__gptrget
      0002E2 08               [12]  666 	inc	r0
      0002E3 F2               [24]  667 	movx	@r0,a
      0002E4 A3               [24]  668 	inc	dptr
      0002E5 12r00r00         [24]  669 	lcall	__gptrget
      0002E8 08               [12]  670 	inc	r0
      0002E9 F2               [24]  671 	movx	@r0,a
      0002EA A3               [24]  672 	inc	dptr
      0002EB 12r00r00         [24]  673 	lcall	__gptrget
      0002EE 08               [12]  674 	inc	r0
      0002EF F2               [24]  675 	movx	@r0,a
                                    676 ;	time.c:131: lastTime.tm_sec=epoch%60;
      0002F0 78r00            [12]  677 	mov	r0,#__modulong_PARM_2
      0002F2 74 3C            [12]  678 	mov	a,#0x3C
      0002F4 F2               [24]  679 	movx	@r0,a
      0002F5 08               [12]  680 	inc	r0
      0002F6 E4               [12]  681 	clr	a
      0002F7 F2               [24]  682 	movx	@r0,a
      0002F8 08               [12]  683 	inc	r0
      0002F9 F2               [24]  684 	movx	@r0,a
      0002FA 08               [12]  685 	inc	r0
      0002FB F2               [24]  686 	movx	@r0,a
      0002FC 78r3E            [12]  687 	mov	r0,#_gmtime_epoch_1_36
      0002FE E2               [24]  688 	movx	a,@r0
      0002FF F5 82            [12]  689 	mov	dpl,a
      000301 08               [12]  690 	inc	r0
      000302 E2               [24]  691 	movx	a,@r0
      000303 F5 83            [12]  692 	mov	dph,a
      000305 08               [12]  693 	inc	r0
      000306 E2               [24]  694 	movx	a,@r0
      000307 F5 F0            [12]  695 	mov	b,a
      000309 08               [12]  696 	inc	r0
      00030A E2               [24]  697 	movx	a,@r0
      00030B 12r00r00         [24]  698 	lcall	__modulong
      00030E AA 82            [24]  699 	mov	r2,dpl
      000310 78r32            [12]  700 	mov	r0,#_lastTime
      000312 EA               [12]  701 	mov	a,r2
      000313 F2               [24]  702 	movx	@r0,a
                                    703 ;	time.c:132: epoch/=60; // now it is minutes
      000314 78r00            [12]  704 	mov	r0,#__divulong_PARM_2
      000316 74 3C            [12]  705 	mov	a,#0x3C
      000318 F2               [24]  706 	movx	@r0,a
      000319 08               [12]  707 	inc	r0
      00031A E4               [12]  708 	clr	a
      00031B F2               [24]  709 	movx	@r0,a
      00031C 08               [12]  710 	inc	r0
      00031D F2               [24]  711 	movx	@r0,a
      00031E 08               [12]  712 	inc	r0
      00031F F2               [24]  713 	movx	@r0,a
      000320 78r3E            [12]  714 	mov	r0,#_gmtime_epoch_1_36
      000322 E2               [24]  715 	movx	a,@r0
      000323 F5 82            [12]  716 	mov	dpl,a
      000325 08               [12]  717 	inc	r0
      000326 E2               [24]  718 	movx	a,@r0
      000327 F5 83            [12]  719 	mov	dph,a
      000329 08               [12]  720 	inc	r0
      00032A E2               [24]  721 	movx	a,@r0
      00032B F5 F0            [12]  722 	mov	b,a
      00032D 08               [12]  723 	inc	r0
      00032E E2               [24]  724 	movx	a,@r0
      00032F 12r00r00         [24]  725 	lcall	__divulong
      000332 78r3E            [12]  726 	mov	r0,#_gmtime_epoch_1_36
      000334 C0 E0            [24]  727 	push	acc
      000336 E5 82            [12]  728 	mov	a,dpl
      000338 F2               [24]  729 	movx	@r0,a
      000339 08               [12]  730 	inc	r0
      00033A E5 83            [12]  731 	mov	a,dph
      00033C F2               [24]  732 	movx	@r0,a
      00033D 08               [12]  733 	inc	r0
      00033E E5 F0            [12]  734 	mov	a,b
      000340 F2               [24]  735 	movx	@r0,a
      000341 D0 E0            [24]  736 	pop	acc
      000343 08               [12]  737 	inc	r0
      000344 F2               [24]  738 	movx	@r0,a
                                    739 ;	time.c:133: lastTime.tm_min=epoch%60;
      000345 78r00            [12]  740 	mov	r0,#__modulong_PARM_2
      000347 74 3C            [12]  741 	mov	a,#0x3C
      000349 F2               [24]  742 	movx	@r0,a
      00034A 08               [12]  743 	inc	r0
      00034B E4               [12]  744 	clr	a
      00034C F2               [24]  745 	movx	@r0,a
      00034D 08               [12]  746 	inc	r0
      00034E F2               [24]  747 	movx	@r0,a
      00034F 08               [12]  748 	inc	r0
      000350 F2               [24]  749 	movx	@r0,a
      000351 78r3E            [12]  750 	mov	r0,#_gmtime_epoch_1_36
      000353 E2               [24]  751 	movx	a,@r0
      000354 F5 82            [12]  752 	mov	dpl,a
      000356 08               [12]  753 	inc	r0
      000357 E2               [24]  754 	movx	a,@r0
      000358 F5 83            [12]  755 	mov	dph,a
      00035A 08               [12]  756 	inc	r0
      00035B E2               [24]  757 	movx	a,@r0
      00035C F5 F0            [12]  758 	mov	b,a
      00035E 08               [12]  759 	inc	r0
      00035F E2               [24]  760 	movx	a,@r0
      000360 12r00r00         [24]  761 	lcall	__modulong
      000363 AC 82            [24]  762 	mov	r4,dpl
      000365 78r33            [12]  763 	mov	r0,#(_lastTime + 0x0001)
      000367 EC               [12]  764 	mov	a,r4
      000368 F2               [24]  765 	movx	@r0,a
                                    766 ;	time.c:134: epoch/=60; // now it is hours
      000369 78r00            [12]  767 	mov	r0,#__divulong_PARM_2
      00036B 74 3C            [12]  768 	mov	a,#0x3C
      00036D F2               [24]  769 	movx	@r0,a
      00036E 08               [12]  770 	inc	r0
      00036F E4               [12]  771 	clr	a
      000370 F2               [24]  772 	movx	@r0,a
      000371 08               [12]  773 	inc	r0
      000372 F2               [24]  774 	movx	@r0,a
      000373 08               [12]  775 	inc	r0
      000374 F2               [24]  776 	movx	@r0,a
      000375 78r3E            [12]  777 	mov	r0,#_gmtime_epoch_1_36
      000377 E2               [24]  778 	movx	a,@r0
      000378 F5 82            [12]  779 	mov	dpl,a
      00037A 08               [12]  780 	inc	r0
      00037B E2               [24]  781 	movx	a,@r0
      00037C F5 83            [12]  782 	mov	dph,a
      00037E 08               [12]  783 	inc	r0
      00037F E2               [24]  784 	movx	a,@r0
      000380 F5 F0            [12]  785 	mov	b,a
      000382 08               [12]  786 	inc	r0
      000383 E2               [24]  787 	movx	a,@r0
      000384 12r00r00         [24]  788 	lcall	__divulong
      000387 78r3E            [12]  789 	mov	r0,#_gmtime_epoch_1_36
      000389 C0 E0            [24]  790 	push	acc
      00038B E5 82            [12]  791 	mov	a,dpl
      00038D F2               [24]  792 	movx	@r0,a
      00038E 08               [12]  793 	inc	r0
      00038F E5 83            [12]  794 	mov	a,dph
      000391 F2               [24]  795 	movx	@r0,a
      000392 08               [12]  796 	inc	r0
      000393 E5 F0            [12]  797 	mov	a,b
      000395 F2               [24]  798 	movx	@r0,a
      000396 D0 E0            [24]  799 	pop	acc
      000398 08               [12]  800 	inc	r0
      000399 F2               [24]  801 	movx	@r0,a
                                    802 ;	time.c:135: lastTime.tm_hour=epoch%24;
      00039A 78r00            [12]  803 	mov	r0,#__modulong_PARM_2
      00039C 74 18            [12]  804 	mov	a,#0x18
      00039E F2               [24]  805 	movx	@r0,a
      00039F 08               [12]  806 	inc	r0
      0003A0 E4               [12]  807 	clr	a
      0003A1 F2               [24]  808 	movx	@r0,a
      0003A2 08               [12]  809 	inc	r0
      0003A3 F2               [24]  810 	movx	@r0,a
      0003A4 08               [12]  811 	inc	r0
      0003A5 F2               [24]  812 	movx	@r0,a
      0003A6 78r3E            [12]  813 	mov	r0,#_gmtime_epoch_1_36
      0003A8 E2               [24]  814 	movx	a,@r0
      0003A9 F5 82            [12]  815 	mov	dpl,a
      0003AB 08               [12]  816 	inc	r0
      0003AC E2               [24]  817 	movx	a,@r0
      0003AD F5 83            [12]  818 	mov	dph,a
      0003AF 08               [12]  819 	inc	r0
      0003B0 E2               [24]  820 	movx	a,@r0
      0003B1 F5 F0            [12]  821 	mov	b,a
      0003B3 08               [12]  822 	inc	r0
      0003B4 E2               [24]  823 	movx	a,@r0
      0003B5 12r00r00         [24]  824 	lcall	__modulong
      0003B8 AC 82            [24]  825 	mov	r4,dpl
      0003BA 78r34            [12]  826 	mov	r0,#(_lastTime + 0x0002)
      0003BC EC               [12]  827 	mov	a,r4
      0003BD F2               [24]  828 	movx	@r0,a
                                    829 ;	time.c:136: epoch/=24; // now it is days
      0003BE 78r00            [12]  830 	mov	r0,#__divulong_PARM_2
      0003C0 74 18            [12]  831 	mov	a,#0x18
      0003C2 F2               [24]  832 	movx	@r0,a
      0003C3 08               [12]  833 	inc	r0
      0003C4 E4               [12]  834 	clr	a
      0003C5 F2               [24]  835 	movx	@r0,a
      0003C6 08               [12]  836 	inc	r0
      0003C7 F2               [24]  837 	movx	@r0,a
      0003C8 08               [12]  838 	inc	r0
      0003C9 F2               [24]  839 	movx	@r0,a
      0003CA 78r3E            [12]  840 	mov	r0,#_gmtime_epoch_1_36
      0003CC E2               [24]  841 	movx	a,@r0
      0003CD F5 82            [12]  842 	mov	dpl,a
      0003CF 08               [12]  843 	inc	r0
      0003D0 E2               [24]  844 	movx	a,@r0
      0003D1 F5 83            [12]  845 	mov	dph,a
      0003D3 08               [12]  846 	inc	r0
      0003D4 E2               [24]  847 	movx	a,@r0
      0003D5 F5 F0            [12]  848 	mov	b,a
      0003D7 08               [12]  849 	inc	r0
      0003D8 E2               [24]  850 	movx	a,@r0
      0003D9 12r00r00         [24]  851 	lcall	__divulong
      0003DC 78r3E            [12]  852 	mov	r0,#_gmtime_epoch_1_36
      0003DE C0 E0            [24]  853 	push	acc
      0003E0 E5 82            [12]  854 	mov	a,dpl
      0003E2 F2               [24]  855 	movx	@r0,a
      0003E3 08               [12]  856 	inc	r0
      0003E4 E5 83            [12]  857 	mov	a,dph
      0003E6 F2               [24]  858 	movx	@r0,a
      0003E7 08               [12]  859 	inc	r0
      0003E8 E5 F0            [12]  860 	mov	a,b
      0003EA F2               [24]  861 	movx	@r0,a
      0003EB D0 E0            [24]  862 	pop	acc
      0003ED 08               [12]  863 	inc	r0
      0003EE F2               [24]  864 	movx	@r0,a
                                    865 ;	time.c:137: lastTime.tm_wday=(epoch+4)%7;
      0003EF 78r3E            [12]  866 	mov	r0,#_gmtime_epoch_1_36
      0003F1 E2               [24]  867 	movx	a,@r0
      0003F2 24 04            [12]  868 	add	a,#0x04
      0003F4 FC               [12]  869 	mov	r4,a
      0003F5 08               [12]  870 	inc	r0
      0003F6 E2               [24]  871 	movx	a,@r0
      0003F7 34 00            [12]  872 	addc	a,#0x00
      0003F9 FD               [12]  873 	mov	r5,a
      0003FA 08               [12]  874 	inc	r0
      0003FB E2               [24]  875 	movx	a,@r0
      0003FC 34 00            [12]  876 	addc	a,#0x00
      0003FE FE               [12]  877 	mov	r6,a
      0003FF 08               [12]  878 	inc	r0
      000400 E2               [24]  879 	movx	a,@r0
      000401 34 00            [12]  880 	addc	a,#0x00
      000403 FF               [12]  881 	mov	r7,a
      000404 78r00            [12]  882 	mov	r0,#__modulong_PARM_2
      000406 74 07            [12]  883 	mov	a,#0x07
      000408 F2               [24]  884 	movx	@r0,a
      000409 08               [12]  885 	inc	r0
      00040A E4               [12]  886 	clr	a
      00040B F2               [24]  887 	movx	@r0,a
      00040C 08               [12]  888 	inc	r0
      00040D F2               [24]  889 	movx	@r0,a
      00040E 08               [12]  890 	inc	r0
      00040F F2               [24]  891 	movx	@r0,a
      000410 8C 82            [24]  892 	mov	dpl,r4
      000412 8D 83            [24]  893 	mov	dph,r5
      000414 8E F0            [24]  894 	mov	b,r6
      000416 EF               [12]  895 	mov	a,r7
      000417 12r00r00         [24]  896 	lcall	__modulong
      00041A AC 82            [24]  897 	mov	r4,dpl
      00041C AD 83            [24]  898 	mov	r5,dph
      00041E AE F0            [24]  899 	mov	r6,b
      000420 FF               [12]  900 	mov	r7,a
      000421 78r39            [12]  901 	mov	r0,#(_lastTime + 0x0007)
      000423 EC               [12]  902 	mov	a,r4
      000424 F2               [24]  903 	movx	@r0,a
                                    904 ;	time.c:140: days=0;
      000425 78r42            [12]  905 	mov	r0,#_gmtime_days_1_36
      000427 E4               [12]  906 	clr	a
      000428 F2               [24]  907 	movx	@r0,a
      000429 08               [12]  908 	inc	r0
      00042A F2               [24]  909 	movx	@r0,a
      00042B 08               [12]  910 	inc	r0
      00042C F2               [24]  911 	movx	@r0,a
      00042D 08               [12]  912 	inc	r0
      00042E F2               [24]  913 	movx	@r0,a
                                    914 ;	time.c:141: while((days += (LEAP_YEAR(year) ? 366 : 365)) <= epoch) {
      00042F 7A B2            [12]  915 	mov	r2,#0xB2
      000431 7B 07            [12]  916 	mov	r3,#0x07
      000433                        917 00101$:
      000433 74 03            [12]  918 	mov	a,#0x03
      000435 5A               [12]  919 	anl	a,r2
      000436 FE               [12]  920 	mov	r6,a
      000437 7F 00            [12]  921 	mov	r7,#0x00
      000439 4F               [12]  922 	orl	a,r7
      00043A 70 06            [24]  923 	jnz	00118$
      00043C 7E 6E            [12]  924 	mov	r6,#0x6E
      00043E 7F 01            [12]  925 	mov	r7,#0x01
      000440 80 04            [24]  926 	sjmp	00119$
      000442                        927 00118$:
      000442 7E 6D            [12]  928 	mov	r6,#0x6D
      000444 7F 01            [12]  929 	mov	r7,#0x01
      000446                        930 00119$:
      000446 EF               [12]  931 	mov	a,r7
      000447 33               [12]  932 	rlc	a
      000448 95 E0            [12]  933 	subb	a,acc
      00044A FD               [12]  934 	mov	r5,a
      00044B FC               [12]  935 	mov	r4,a
      00044C 78r42            [12]  936 	mov	r0,#_gmtime_days_1_36
      00044E E2               [24]  937 	movx	a,@r0
      00044F 2E               [12]  938 	add	a,r6
      000450 FE               [12]  939 	mov	r6,a
      000451 08               [12]  940 	inc	r0
      000452 E2               [24]  941 	movx	a,@r0
      000453 3F               [12]  942 	addc	a,r7
      000454 FF               [12]  943 	mov	r7,a
      000455 08               [12]  944 	inc	r0
      000456 E2               [24]  945 	movx	a,@r0
      000457 3D               [12]  946 	addc	a,r5
      000458 FD               [12]  947 	mov	r5,a
      000459 08               [12]  948 	inc	r0
      00045A E2               [24]  949 	movx	a,@r0
      00045B 3C               [12]  950 	addc	a,r4
      00045C FC               [12]  951 	mov	r4,a
      00045D 78r42            [12]  952 	mov	r0,#_gmtime_days_1_36
      00045F EE               [12]  953 	mov	a,r6
      000460 F2               [24]  954 	movx	@r0,a
      000461 08               [12]  955 	inc	r0
      000462 EF               [12]  956 	mov	a,r7
      000463 F2               [24]  957 	movx	@r0,a
      000464 08               [12]  958 	inc	r0
      000465 ED               [12]  959 	mov	a,r5
      000466 F2               [24]  960 	movx	@r0,a
      000467 08               [12]  961 	inc	r0
      000468 EC               [12]  962 	mov	a,r4
      000469 F2               [24]  963 	movx	@r0,a
      00046A 78r3E            [12]  964 	mov	r0,#_gmtime_epoch_1_36
      00046C C3               [12]  965 	clr	c
      00046D E2               [24]  966 	movx	a,@r0
      00046E 9E               [12]  967 	subb	a,r6
      00046F 08               [12]  968 	inc	r0
      000470 E2               [24]  969 	movx	a,@r0
      000471 9F               [12]  970 	subb	a,r7
      000472 08               [12]  971 	inc	r0
      000473 E2               [24]  972 	movx	a,@r0
      000474 9D               [12]  973 	subb	a,r5
      000475 08               [12]  974 	inc	r0
      000476 E2               [24]  975 	movx	a,@r0
      000477 9C               [12]  976 	subb	a,r4
      000478 40 07            [24]  977 	jc	00103$
                                    978 ;	time.c:142: year++;
      00047A 0A               [12]  979 	inc	r2
      00047B BA 00 B5         [24]  980 	cjne	r2,#0x00,00101$
      00047E 0B               [12]  981 	inc	r3
      00047F 80 B2            [24]  982 	sjmp	00101$
      000481                        983 00103$:
                                    984 ;	time.c:144: lastTime.tm_year=year-1900;
      000481 EA               [12]  985 	mov	a,r2
      000482 24 94            [12]  986 	add	a,#0x94
      000484 FE               [12]  987 	mov	r6,a
      000485 EB               [12]  988 	mov	a,r3
      000486 34 F8            [12]  989 	addc	a,#0xF8
      000488 FF               [12]  990 	mov	r7,a
      000489 78r37            [12]  991 	mov	r0,#(_lastTime + 0x0005)
      00048B EE               [12]  992 	mov	a,r6
      00048C F2               [24]  993 	movx	@r0,a
      00048D 08               [12]  994 	inc	r0
      00048E EF               [12]  995 	mov	a,r7
      00048F F2               [24]  996 	movx	@r0,a
                                    997 ;	time.c:146: days -= LEAP_YEAR(year) ? 366 : 365;
      000490 74 03            [12]  998 	mov	a,#0x03
      000492 5A               [12]  999 	anl	a,r2
      000493 FE               [12] 1000 	mov	r6,a
      000494 7F 00            [12] 1001 	mov	r7,#0x00
      000496 4F               [12] 1002 	orl	a,r7
      000497 70 06            [24] 1003 	jnz	00120$
      000499 7C 6E            [12] 1004 	mov	r4,#0x6E
      00049B 7D 01            [12] 1005 	mov	r5,#0x01
      00049D 80 04            [24] 1006 	sjmp	00121$
      00049F                       1007 00120$:
      00049F 7C 6D            [12] 1008 	mov	r4,#0x6D
      0004A1 7D 01            [12] 1009 	mov	r5,#0x01
      0004A3                       1010 00121$:
      0004A3 ED               [12] 1011 	mov	a,r5
      0004A4 33               [12] 1012 	rlc	a
      0004A5 95 E0            [12] 1013 	subb	a,acc
      0004A7 FB               [12] 1014 	mov	r3,a
      0004A8 FA               [12] 1015 	mov	r2,a
      0004A9 78r42            [12] 1016 	mov	r0,#_gmtime_days_1_36
      0004AB E2               [24] 1017 	movx	a,@r0
      0004AC C3               [12] 1018 	clr	c
      0004AD 9C               [12] 1019 	subb	a,r4
      0004AE F2               [24] 1020 	movx	@r0,a
      0004AF 08               [12] 1021 	inc	r0
      0004B0 E2               [24] 1022 	movx	a,@r0
      0004B1 9D               [12] 1023 	subb	a,r5
      0004B2 F2               [24] 1024 	movx	@r0,a
      0004B3 08               [12] 1025 	inc	r0
      0004B4 E2               [24] 1026 	movx	a,@r0
      0004B5 9B               [12] 1027 	subb	a,r3
      0004B6 F2               [24] 1028 	movx	@r0,a
      0004B7 08               [12] 1029 	inc	r0
      0004B8 E2               [24] 1030 	movx	a,@r0
      0004B9 9A               [12] 1031 	subb	a,r2
      0004BA F2               [24] 1032 	movx	@r0,a
                                   1033 ;	time.c:147: epoch -= days; // now it is days in this year, starting at 0
      0004BB 78r3E            [12] 1034 	mov	r0,#_gmtime_epoch_1_36
      0004BD 79r42            [12] 1035 	mov	r1,#_gmtime_days_1_36
      0004BF E3               [24] 1036 	movx	a,@r1
      0004C0 F5 F0            [12] 1037 	mov	b,a
      0004C2 C3               [12] 1038 	clr	c
      0004C3 E2               [24] 1039 	movx	a,@r0
      0004C4 95 F0            [12] 1040 	subb	a,b
      0004C6 F2               [24] 1041 	movx	@r0,a
      0004C7 09               [12] 1042 	inc	r1
      0004C8 E3               [24] 1043 	movx	a,@r1
      0004C9 F5 F0            [12] 1044 	mov	b,a
      0004CB 08               [12] 1045 	inc	r0
      0004CC E2               [24] 1046 	movx	a,@r0
      0004CD 95 F0            [12] 1047 	subb	a,b
      0004CF F2               [24] 1048 	movx	@r0,a
      0004D0 09               [12] 1049 	inc	r1
      0004D1 E3               [24] 1050 	movx	a,@r1
      0004D2 F5 F0            [12] 1051 	mov	b,a
      0004D4 08               [12] 1052 	inc	r0
      0004D5 E2               [24] 1053 	movx	a,@r0
      0004D6 95 F0            [12] 1054 	subb	a,b
      0004D8 F2               [24] 1055 	movx	@r0,a
      0004D9 09               [12] 1056 	inc	r1
      0004DA E3               [24] 1057 	movx	a,@r1
      0004DB F5 F0            [12] 1058 	mov	b,a
      0004DD 08               [12] 1059 	inc	r0
      0004DE E2               [24] 1060 	movx	a,@r0
      0004DF 95 F0            [12] 1061 	subb	a,b
      0004E1 F2               [24] 1062 	movx	@r0,a
                                   1063 ;	time.c:148: lastTime.tm_yday=epoch;
      0004E2 78r3E            [12] 1064 	mov	r0,#_gmtime_epoch_1_36
      0004E4 E2               [24] 1065 	movx	a,@r0
      0004E5 FC               [12] 1066 	mov	r4,a
      0004E6 08               [12] 1067 	inc	r0
      0004E7 E2               [24] 1068 	movx	a,@r0
      0004E8 FD               [12] 1069 	mov	r5,a
      0004E9 78r3A            [12] 1070 	mov	r0,#(_lastTime + 0x0008)
      0004EB EC               [12] 1071 	mov	a,r4
      0004EC F2               [24] 1072 	movx	@r0,a
      0004ED 08               [12] 1073 	inc	r0
      0004EE ED               [12] 1074 	mov	a,r5
      0004EF F2               [24] 1075 	movx	@r0,a
                                   1076 ;	time.c:153: for (month=0; month<12; month++) {
      0004F0 7D 00            [12] 1077 	mov	r5,#0x00
      0004F2                       1078 00114$:
                                   1079 ;	time.c:154: if (month==1) { // februari
      0004F2 BD 01 0C         [24] 1080 	cjne	r5,#0x01,00108$
                                   1081 ;	time.c:155: if (LEAP_YEAR(year)) {
      0004F5 EE               [12] 1082 	mov	a,r6
      0004F6 4F               [12] 1083 	orl	a,r7
      0004F7 70 04            [24] 1084 	jnz	00105$
                                   1085 ;	time.c:156: monthLength=29;
      0004F9 7C 1D            [12] 1086 	mov	r4,#0x1D
      0004FB 80 0A            [24] 1087 	sjmp	00109$
      0004FD                       1088 00105$:
                                   1089 ;	time.c:158: monthLength=28;
      0004FD 7C 1C            [12] 1090 	mov	r4,#0x1C
      0004FF 80 06            [24] 1091 	sjmp	00109$
      000501                       1092 00108$:
                                   1093 ;	time.c:161: monthLength = monthDays[month];
      000501 ED               [12] 1094 	mov	a,r5
      000502 90r00r00         [24] 1095 	mov	dptr,#_monthDays
      000505 93               [24] 1096 	movc	a,@a+dptr
      000506 FC               [12] 1097 	mov	r4,a
      000507                       1098 00109$:
                                   1099 ;	time.c:164: if (epoch>=monthLength) {
      000507 8C*0A            [24] 1100 	mov	_gmtime_sloc0_1_0,r4
      000509 75*0B 00         [24] 1101 	mov	(_gmtime_sloc0_1_0 + 1),#0x00
      00050C 75*0C 00         [24] 1102 	mov	(_gmtime_sloc0_1_0 + 2),#0x00
      00050F 75*0D 00         [24] 1103 	mov	(_gmtime_sloc0_1_0 + 3),#0x00
      000512 78r3E            [12] 1104 	mov	r0,#_gmtime_epoch_1_36
      000514 C3               [12] 1105 	clr	c
      000515 E2               [24] 1106 	movx	a,@r0
      000516 95*0A            [12] 1107 	subb	a,_gmtime_sloc0_1_0
      000518 08               [12] 1108 	inc	r0
      000519 E2               [24] 1109 	movx	a,@r0
      00051A 95*0B            [12] 1110 	subb	a,(_gmtime_sloc0_1_0 + 1)
      00051C 08               [12] 1111 	inc	r0
      00051D E2               [24] 1112 	movx	a,@r0
      00051E 95*0C            [12] 1113 	subb	a,(_gmtime_sloc0_1_0 + 2)
      000520 08               [12] 1114 	inc	r0
      000521 E2               [24] 1115 	movx	a,@r0
      000522 95*0D            [12] 1116 	subb	a,(_gmtime_sloc0_1_0 + 3)
      000524 40 1C            [24] 1117 	jc	00113$
                                   1118 ;	time.c:165: epoch-=monthLength;
      000526 78r3E            [12] 1119 	mov	r0,#_gmtime_epoch_1_36
      000528 E2               [24] 1120 	movx	a,@r0
      000529 C3               [12] 1121 	clr	c
      00052A 95*0A            [12] 1122 	subb	a,_gmtime_sloc0_1_0
      00052C F2               [24] 1123 	movx	@r0,a
      00052D 08               [12] 1124 	inc	r0
      00052E E2               [24] 1125 	movx	a,@r0
      00052F 95*0B            [12] 1126 	subb	a,(_gmtime_sloc0_1_0 + 1)
      000531 F2               [24] 1127 	movx	@r0,a
      000532 08               [12] 1128 	inc	r0
      000533 E2               [24] 1129 	movx	a,@r0
      000534 95*0C            [12] 1130 	subb	a,(_gmtime_sloc0_1_0 + 2)
      000536 F2               [24] 1131 	movx	@r0,a
      000537 08               [12] 1132 	inc	r0
      000538 E2               [24] 1133 	movx	a,@r0
      000539 95*0D            [12] 1134 	subb	a,(_gmtime_sloc0_1_0 + 3)
      00053B F2               [24] 1135 	movx	@r0,a
                                   1136 ;	time.c:153: for (month=0; month<12; month++) {
      00053C 0D               [12] 1137 	inc	r5
      00053D BD 0C 00         [24] 1138 	cjne	r5,#0x0C,00156$
      000540                       1139 00156$:
      000540 40 B0            [24] 1140 	jc	00114$
      000542                       1141 00113$:
                                   1142 ;	time.c:170: lastTime.tm_mon=month;
      000542 78r36            [12] 1143 	mov	r0,#(_lastTime + 0x0004)
      000544 ED               [12] 1144 	mov	a,r5
      000545 F2               [24] 1145 	movx	@r0,a
                                   1146 ;	time.c:171: lastTime.tm_mday=epoch+1;
      000546 78r3E            [12] 1147 	mov	r0,#_gmtime_epoch_1_36
      000548 E2               [24] 1148 	movx	a,@r0
      000549 FC               [12] 1149 	mov	r4,a
      00054A 0C               [12] 1150 	inc	r4
      00054B 78r35            [12] 1151 	mov	r0,#(_lastTime + 0x0003)
      00054D EC               [12] 1152 	mov	a,r4
      00054E F2               [24] 1153 	movx	@r0,a
                                   1154 ;	time.c:173: lastTime.tm_isdst=0;
      00054F 78r3C            [12] 1155 	mov	r0,#(_lastTime + 0x000a)
      000551 E4               [12] 1156 	clr	a
      000552 F2               [24] 1157 	movx	@r0,a
                                   1158 ;	time.c:175: return &lastTime;
      000553 90r00r32         [24] 1159 	mov	dptr,#_lastTime
      000556 75 F0 60         [24] 1160 	mov	b,#0x60
      000559 22               [24] 1161 	ret
                                   1162 ;------------------------------------------------------------
                                   1163 ;Allocation info for local variables in function 'mktime'
                                   1164 ;------------------------------------------------------------
                                   1165 ;	time.c:179: time_t mktime(struct tm *timeptr) {
                                   1166 ;	-----------------------------------------
                                   1167 ;	 function mktime
                                   1168 ;	-----------------------------------------
      00055A                       1169 _mktime:
      00055A AF F0            [24] 1170 	mov	r7,b
      00055C AE 83            [24] 1171 	mov	r6,dph
      00055E E5 82            [12] 1172 	mov	a,dpl
      000560 78r46            [12] 1173 	mov	r0,#_mktime_timeptr_1_45
      000562 F2               [24] 1174 	movx	@r0,a
      000563 08               [12] 1175 	inc	r0
      000564 EE               [12] 1176 	mov	a,r6
      000565 F2               [24] 1177 	movx	@r0,a
      000566 08               [12] 1178 	inc	r0
      000567 EF               [12] 1179 	mov	a,r7
      000568 F2               [24] 1180 	movx	@r0,a
                                   1181 ;	time.c:180: int year=timeptr->tm_year+1900, month=timeptr->tm_mon, i;
      000569 78r46            [12] 1182 	mov	r0,#_mktime_timeptr_1_45
      00056B E2               [24] 1183 	movx	a,@r0
      00056C 24 05            [12] 1184 	add	a,#0x05
      00056E FA               [12] 1185 	mov	r2,a
      00056F 08               [12] 1186 	inc	r0
      000570 E2               [24] 1187 	movx	a,@r0
      000571 34 00            [12] 1188 	addc	a,#0x00
      000573 FB               [12] 1189 	mov	r3,a
      000574 08               [12] 1190 	inc	r0
      000575 E2               [24] 1191 	movx	a,@r0
      000576 FC               [12] 1192 	mov	r4,a
      000577 8A 82            [24] 1193 	mov	dpl,r2
      000579 8B 83            [24] 1194 	mov	dph,r3
      00057B 8C F0            [24] 1195 	mov	b,r4
      00057D 12r00r00         [24] 1196 	lcall	__gptrget
      000580 FA               [12] 1197 	mov	r2,a
      000581 A3               [24] 1198 	inc	dptr
      000582 12r00r00         [24] 1199 	lcall	__gptrget
      000585 FB               [12] 1200 	mov	r3,a
      000586 78r49            [12] 1201 	mov	r0,#_mktime_year_1_46
      000588 74 6C            [12] 1202 	mov	a,#0x6C
      00058A 2A               [12] 1203 	add	a,r2
      00058B F2               [24] 1204 	movx	@r0,a
      00058C 74 07            [12] 1205 	mov	a,#0x07
      00058E 3B               [12] 1206 	addc	a,r3
      00058F 08               [12] 1207 	inc	r0
      000590 F2               [24] 1208 	movx	@r0,a
      000591 78r46            [12] 1209 	mov	r0,#_mktime_timeptr_1_45
      000593 E2               [24] 1210 	movx	a,@r0
      000594 24 04            [12] 1211 	add	a,#0x04
      000596 FA               [12] 1212 	mov	r2,a
      000597 08               [12] 1213 	inc	r0
      000598 E2               [24] 1214 	movx	a,@r0
      000599 34 00            [12] 1215 	addc	a,#0x00
      00059B FB               [12] 1216 	mov	r3,a
      00059C 08               [12] 1217 	inc	r0
      00059D E2               [24] 1218 	movx	a,@r0
      00059E FC               [12] 1219 	mov	r4,a
      00059F 8A 82            [24] 1220 	mov	dpl,r2
      0005A1 8B 83            [24] 1221 	mov	dph,r3
      0005A3 8C F0            [24] 1222 	mov	b,r4
      0005A5 12r00r00         [24] 1223 	lcall	__gptrget
      0005A8 78r4B            [12] 1224 	mov	r0,#_mktime_month_1_46
      0005AA F2               [24] 1225 	movx	@r0,a
      0005AB 08               [12] 1226 	inc	r0
      0005AC E4               [12] 1227 	clr	a
      0005AD F2               [24] 1228 	movx	@r0,a
                                   1229 ;	time.c:183: CheckTime(timeptr);
      0005AE 78r46            [12] 1230 	mov	r0,#_mktime_timeptr_1_45
      0005B0 E2               [24] 1231 	movx	a,@r0
      0005B1 F5 82            [12] 1232 	mov	dpl,a
      0005B3 08               [12] 1233 	inc	r0
      0005B4 E2               [24] 1234 	movx	a,@r0
      0005B5 F5 83            [12] 1235 	mov	dph,a
      0005B7 08               [12] 1236 	inc	r0
      0005B8 E2               [24] 1237 	movx	a,@r0
      0005B9 F5 F0            [12] 1238 	mov	b,a
      0005BB 12r00r7B         [24] 1239 	lcall	_CheckTime
                                   1240 ;	time.c:186: seconds= (year-1970)*(60*60*24L*365);
      0005BE 78r49            [12] 1241 	mov	r0,#_mktime_year_1_46
      0005C0 E2               [24] 1242 	movx	a,@r0
      0005C1 24 4E            [12] 1243 	add	a,#0x4E
      0005C3 FB               [12] 1244 	mov	r3,a
      0005C4 08               [12] 1245 	inc	r0
      0005C5 E2               [24] 1246 	movx	a,@r0
      0005C6 34 F8            [12] 1247 	addc	a,#0xF8
      0005C8 FC               [12] 1248 	mov	r4,a
      0005C9 78r00            [12] 1249 	mov	r0,#__mullong_PARM_2
      0005CB EB               [12] 1250 	mov	a,r3
      0005CC F2               [24] 1251 	movx	@r0,a
      0005CD 08               [12] 1252 	inc	r0
      0005CE EC               [12] 1253 	mov	a,r4
      0005CF F2               [24] 1254 	movx	@r0,a
      0005D0 EC               [12] 1255 	mov	a,r4
      0005D1 33               [12] 1256 	rlc	a
      0005D2 95 E0            [12] 1257 	subb	a,acc
      0005D4 08               [12] 1258 	inc	r0
      0005D5 F2               [24] 1259 	movx	@r0,a
      0005D6 08               [12] 1260 	inc	r0
      0005D7 F2               [24] 1261 	movx	@r0,a
      0005D8 90 33 80         [24] 1262 	mov	dptr,#0x3380
      0005DB 75 F0 E1         [24] 1263 	mov	b,#0xE1
      0005DE 74 01            [12] 1264 	mov	a,#0x01
      0005E0 12r00r00         [24] 1265 	lcall	__mullong
      0005E3 78r4F            [12] 1266 	mov	r0,#_mktime_seconds_1_46
      0005E5 C0 E0            [24] 1267 	push	acc
      0005E7 E5 82            [12] 1268 	mov	a,dpl
      0005E9 F2               [24] 1269 	movx	@r0,a
      0005EA 08               [12] 1270 	inc	r0
      0005EB E5 83            [12] 1271 	mov	a,dph
      0005ED F2               [24] 1272 	movx	@r0,a
      0005EE 08               [12] 1273 	inc	r0
      0005EF E5 F0            [12] 1274 	mov	a,b
      0005F1 F2               [24] 1275 	movx	@r0,a
      0005F2 D0 E0            [24] 1276 	pop	acc
      0005F4 08               [12] 1277 	inc	r0
      0005F5 F2               [24] 1278 	movx	@r0,a
                                   1279 ;	time.c:189: for (i=1970; i<year; i++) {
      0005F6 78r4F            [12] 1280 	mov	r0,#_mktime_seconds_1_46
      0005F8 E2               [24] 1281 	movx	a,@r0
      0005F9 FC               [12] 1282 	mov	r4,a
      0005FA 08               [12] 1283 	inc	r0
      0005FB E2               [24] 1284 	movx	a,@r0
      0005FC FD               [12] 1285 	mov	r5,a
      0005FD 08               [12] 1286 	inc	r0
      0005FE E2               [24] 1287 	movx	a,@r0
      0005FF FE               [12] 1288 	mov	r6,a
      000600 08               [12] 1289 	inc	r0
      000601 E2               [24] 1290 	movx	a,@r0
      000602 FF               [12] 1291 	mov	r7,a
      000603 7A B2            [12] 1292 	mov	r2,#0xB2
      000605 7B 07            [12] 1293 	mov	r3,#0x07
      000607                       1294 00110$:
      000607 78r49            [12] 1295 	mov	r0,#_mktime_year_1_46
      000609 C3               [12] 1296 	clr	c
      00060A E2               [24] 1297 	movx	a,@r0
      00060B F5 F0            [12] 1298 	mov	b,a
      00060D EA               [12] 1299 	mov	a,r2
      00060E 95 F0            [12] 1300 	subb	a,b
      000610 08               [12] 1301 	inc	r0
      000611 E2               [24] 1302 	movx	a,@r0
      000612 F5 F0            [12] 1303 	mov	b,a
      000614 EB               [12] 1304 	mov	a,r3
      000615 64 80            [12] 1305 	xrl	a,#0x80
      000617 63 F0 80         [24] 1306 	xrl	b,#0x80
      00061A 95 F0            [12] 1307 	subb	a,b
      00061C 50 46            [24] 1308 	jnc	00124$
                                   1309 ;	time.c:190: if (LEAP_YEAR(i)) {
      00061E 78r00            [12] 1310 	mov	r0,#__modsint_PARM_2
      000620 74 04            [12] 1311 	mov	a,#0x04
      000622 F2               [24] 1312 	movx	@r0,a
      000623 08               [12] 1313 	inc	r0
      000624 E4               [12] 1314 	clr	a
      000625 F2               [24] 1315 	movx	@r0,a
      000626 8A 82            [24] 1316 	mov	dpl,r2
      000628 8B 83            [24] 1317 	mov	dph,r3
      00062A C0 07            [24] 1318 	push	ar7
      00062C C0 06            [24] 1319 	push	ar6
      00062E C0 05            [24] 1320 	push	ar5
      000630 C0 04            [24] 1321 	push	ar4
      000632 C0 03            [24] 1322 	push	ar3
      000634 C0 02            [24] 1323 	push	ar2
      000636 12r00r00         [24] 1324 	lcall	__modsint
      000639 E5 82            [12] 1325 	mov	a,dpl
      00063B 85 83 F0         [24] 1326 	mov	b,dph
      00063E D0 02            [24] 1327 	pop	ar2
      000640 D0 03            [24] 1328 	pop	ar3
      000642 D0 04            [24] 1329 	pop	ar4
      000644 D0 05            [24] 1330 	pop	ar5
      000646 D0 06            [24] 1331 	pop	ar6
      000648 D0 07            [24] 1332 	pop	ar7
      00064A 45 F0            [12] 1333 	orl	a,b
      00064C 70 0F            [24] 1334 	jnz	00111$
                                   1335 ;	time.c:191: seconds+= 60*60*24L;
      00064E 74 80            [12] 1336 	mov	a,#0x80
      000650 2C               [12] 1337 	add	a,r4
      000651 FC               [12] 1338 	mov	r4,a
      000652 74 51            [12] 1339 	mov	a,#0x51
      000654 3D               [12] 1340 	addc	a,r5
      000655 FD               [12] 1341 	mov	r5,a
      000656 74 01            [12] 1342 	mov	a,#0x01
      000658 3E               [12] 1343 	addc	a,r6
      000659 FE               [12] 1344 	mov	r6,a
      00065A E4               [12] 1345 	clr	a
      00065B 3F               [12] 1346 	addc	a,r7
      00065C FF               [12] 1347 	mov	r7,a
      00065D                       1348 00111$:
                                   1349 ;	time.c:189: for (i=1970; i<year; i++) {
      00065D 0A               [12] 1350 	inc	r2
      00065E BA 00 A6         [24] 1351 	cjne	r2,#0x00,00110$
      000661 0B               [12] 1352 	inc	r3
      000662 80 A3            [24] 1353 	sjmp	00110$
      000664                       1354 00124$:
      000664 78r4F            [12] 1355 	mov	r0,#_mktime_seconds_1_46
      000666 EC               [12] 1356 	mov	a,r4
      000667 F2               [24] 1357 	movx	@r0,a
      000668 08               [12] 1358 	inc	r0
      000669 ED               [12] 1359 	mov	a,r5
      00066A F2               [24] 1360 	movx	@r0,a
      00066B 08               [12] 1361 	inc	r0
      00066C EE               [12] 1362 	mov	a,r6
      00066D F2               [24] 1363 	movx	@r0,a
      00066E 08               [12] 1364 	inc	r0
      00066F EF               [12] 1365 	mov	a,r7
      000670 F2               [24] 1366 	movx	@r0,a
                                   1367 ;	time.c:196: for (i=0; i<month; i++) {
      000671 78r00            [12] 1368 	mov	r0,#__modsint_PARM_2
      000673 74 04            [12] 1369 	mov	a,#0x04
      000675 F2               [24] 1370 	movx	@r0,a
      000676 08               [12] 1371 	inc	r0
      000677 E4               [12] 1372 	clr	a
      000678 F2               [24] 1373 	movx	@r0,a
      000679 78r49            [12] 1374 	mov	r0,#_mktime_year_1_46
      00067B E2               [24] 1375 	movx	a,@r0
      00067C F5 82            [12] 1376 	mov	dpl,a
      00067E 08               [12] 1377 	inc	r0
      00067F E2               [24] 1378 	movx	a,@r0
      000680 F5 83            [12] 1379 	mov	dph,a
      000682 12r00r00         [24] 1380 	lcall	__modsint
      000685 AE 82            [24] 1381 	mov	r6,dpl
      000687 AF 83            [24] 1382 	mov	r7,dph
      000689 78r4D            [12] 1383 	mov	r0,#_mktime_i_1_46
      00068B E4               [12] 1384 	clr	a
      00068C F2               [24] 1385 	movx	@r0,a
      00068D 08               [12] 1386 	inc	r0
      00068E F2               [24] 1387 	movx	@r0,a
      00068F                       1388 00113$:
      00068F 78r4D            [12] 1389 	mov	r0,#_mktime_i_1_46
      000691 79r4B            [12] 1390 	mov	r1,#_mktime_month_1_46
      000693 C3               [12] 1391 	clr	c
      000694 E3               [24] 1392 	movx	a,@r1
      000695 F5 F0            [12] 1393 	mov	b,a
      000697 E2               [24] 1394 	movx	a,@r0
      000698 95 F0            [12] 1395 	subb	a,b
      00069A 09               [12] 1396 	inc	r1
      00069B E3               [24] 1397 	movx	a,@r1
      00069C F5 F0            [12] 1398 	mov	b,a
      00069E 08               [12] 1399 	inc	r0
      00069F E2               [24] 1400 	movx	a,@r0
      0006A0 64 80            [12] 1401 	xrl	a,#0x80
      0006A2 63 F0 80         [24] 1402 	xrl	b,#0x80
      0006A5 95 F0            [12] 1403 	subb	a,b
      0006A7 50 7C            [24] 1404 	jnc	00108$
                                   1405 ;	time.c:197: if (i==1 && LEAP_YEAR(year)) { 
      0006A9 78r4D            [12] 1406 	mov	r0,#_mktime_i_1_46
      0006AB E2               [24] 1407 	movx	a,@r0
      0006AC B4 01 04         [24] 1408 	cjne	a,#0x01,00144$
      0006AF 08               [12] 1409 	inc	r0
      0006B0 E2               [24] 1410 	movx	a,@r0
      0006B1 60 02            [24] 1411 	jz	00145$
      0006B3                       1412 00144$:
      0006B3 80 1B            [24] 1413 	sjmp	00105$
      0006B5                       1414 00145$:
      0006B5 EE               [12] 1415 	mov	a,r6
      0006B6 4F               [12] 1416 	orl	a,r7
      0006B7 70 17            [24] 1417 	jnz	00105$
                                   1418 ;	time.c:198: seconds+= 60*60*24L*29;
      0006B9 78r4F            [12] 1419 	mov	r0,#_mktime_seconds_1_46
      0006BB E2               [24] 1420 	movx	a,@r0
      0006BC 24 80            [12] 1421 	add	a,#0x80
      0006BE F2               [24] 1422 	movx	@r0,a
      0006BF 08               [12] 1423 	inc	r0
      0006C0 E2               [24] 1424 	movx	a,@r0
      0006C1 34 3B            [12] 1425 	addc	a,#0x3B
      0006C3 F2               [24] 1426 	movx	@r0,a
      0006C4 08               [12] 1427 	inc	r0
      0006C5 E2               [24] 1428 	movx	a,@r0
      0006C6 34 26            [12] 1429 	addc	a,#0x26
      0006C8 F2               [24] 1430 	movx	@r0,a
      0006C9 08               [12] 1431 	inc	r0
      0006CA E2               [24] 1432 	movx	a,@r0
      0006CB 34 00            [12] 1433 	addc	a,#0x00
      0006CD F2               [24] 1434 	movx	@r0,a
      0006CE 80 47            [24] 1435 	sjmp	00114$
      0006D0                       1436 00105$:
                                   1437 ;	time.c:200: seconds+= 60*60*24L*monthDays[i];
      0006D0 78r4D            [12] 1438 	mov	r0,#_mktime_i_1_46
      0006D2 E2               [24] 1439 	movx	a,@r0
      0006D3 24r00            [12] 1440 	add	a,#_monthDays
      0006D5 F5 82            [12] 1441 	mov	dpl,a
      0006D7 08               [12] 1442 	inc	r0
      0006D8 E2               [24] 1443 	movx	a,@r0
      0006D9 34s00            [12] 1444 	addc	a,#(_monthDays >> 8)
      0006DB F5 83            [12] 1445 	mov	dph,a
      0006DD E4               [12] 1446 	clr	a
      0006DE 93               [24] 1447 	movc	a,@a+dptr
      0006DF FB               [12] 1448 	mov	r3,a
      0006E0 78r00            [12] 1449 	mov	r0,#__mullong_PARM_2
      0006E2 F2               [24] 1450 	movx	@r0,a
      0006E3 EB               [12] 1451 	mov	a,r3
      0006E4 33               [12] 1452 	rlc	a
      0006E5 95 E0            [12] 1453 	subb	a,acc
      0006E7 08               [12] 1454 	inc	r0
      0006E8 F2               [24] 1455 	movx	@r0,a
      0006E9 08               [12] 1456 	inc	r0
      0006EA F2               [24] 1457 	movx	@r0,a
      0006EB 08               [12] 1458 	inc	r0
      0006EC F2               [24] 1459 	movx	@r0,a
      0006ED 90 51 80         [24] 1460 	mov	dptr,#0x5180
      0006F0 75 F0 01         [24] 1461 	mov	b,#0x01
      0006F3 E4               [12] 1462 	clr	a
      0006F4 C0 07            [24] 1463 	push	ar7
      0006F6 C0 06            [24] 1464 	push	ar6
      0006F8 12r00r00         [24] 1465 	lcall	__mullong
      0006FB AA 82            [24] 1466 	mov	r2,dpl
      0006FD AB 83            [24] 1467 	mov	r3,dph
      0006FF AC F0            [24] 1468 	mov	r4,b
      000701 FD               [12] 1469 	mov	r5,a
      000702 D0 06            [24] 1470 	pop	ar6
      000704 D0 07            [24] 1471 	pop	ar7
      000706 78r4F            [12] 1472 	mov	r0,#_mktime_seconds_1_46
      000708 E2               [24] 1473 	movx	a,@r0
      000709 2A               [12] 1474 	add	a,r2
      00070A F2               [24] 1475 	movx	@r0,a
      00070B 08               [12] 1476 	inc	r0
      00070C E2               [24] 1477 	movx	a,@r0
      00070D 3B               [12] 1478 	addc	a,r3
      00070E F2               [24] 1479 	movx	@r0,a
      00070F 08               [12] 1480 	inc	r0
      000710 E2               [24] 1481 	movx	a,@r0
      000711 3C               [12] 1482 	addc	a,r4
      000712 F2               [24] 1483 	movx	@r0,a
      000713 08               [12] 1484 	inc	r0
      000714 E2               [24] 1485 	movx	a,@r0
      000715 3D               [12] 1486 	addc	a,r5
      000716 F2               [24] 1487 	movx	@r0,a
      000717                       1488 00114$:
                                   1489 ;	time.c:196: for (i=0; i<month; i++) {
      000717 78r4D            [12] 1490 	mov	r0,#_mktime_i_1_46
      000719 E2               [24] 1491 	movx	a,@r0
      00071A 24 01            [12] 1492 	add	a,#0x01
      00071C F2               [24] 1493 	movx	@r0,a
      00071D 08               [12] 1494 	inc	r0
      00071E E2               [24] 1495 	movx	a,@r0
      00071F 34 00            [12] 1496 	addc	a,#0x00
      000721 F2               [24] 1497 	movx	@r0,a
      000722 02r06r8F         [24] 1498 	ljmp	00113$
      000725                       1499 00108$:
                                   1500 ;	time.c:204: seconds+= (timeptr->tm_mday-1)*60*60*24L;
      000725 78r46            [12] 1501 	mov	r0,#_mktime_timeptr_1_45
      000727 E2               [24] 1502 	movx	a,@r0
      000728 24 03            [12] 1503 	add	a,#0x03
      00072A FD               [12] 1504 	mov	r5,a
      00072B 08               [12] 1505 	inc	r0
      00072C E2               [24] 1506 	movx	a,@r0
      00072D 34 00            [12] 1507 	addc	a,#0x00
      00072F FE               [12] 1508 	mov	r6,a
      000730 08               [12] 1509 	inc	r0
      000731 E2               [24] 1510 	movx	a,@r0
      000732 FF               [12] 1511 	mov	r7,a
      000733 8D 82            [24] 1512 	mov	dpl,r5
      000735 8E 83            [24] 1513 	mov	dph,r6
      000737 8F F0            [24] 1514 	mov	b,r7
      000739 12r00r00         [24] 1515 	lcall	__gptrget
      00073C FD               [12] 1516 	mov	r5,a
      00073D 7F 00            [12] 1517 	mov	r7,#0x00
      00073F 1D               [12] 1518 	dec	r5
      000740 BD FF 01         [24] 1519 	cjne	r5,#0xFF,00147$
      000743 1F               [12] 1520 	dec	r7
      000744                       1521 00147$:
      000744 78r00            [12] 1522 	mov	r0,#__mullong_PARM_2
      000746 ED               [12] 1523 	mov	a,r5
      000747 F2               [24] 1524 	movx	@r0,a
      000748 08               [12] 1525 	inc	r0
      000749 EF               [12] 1526 	mov	a,r7
      00074A F2               [24] 1527 	movx	@r0,a
      00074B EF               [12] 1528 	mov	a,r7
      00074C 33               [12] 1529 	rlc	a
      00074D 95 E0            [12] 1530 	subb	a,acc
      00074F 08               [12] 1531 	inc	r0
      000750 F2               [24] 1532 	movx	@r0,a
      000751 08               [12] 1533 	inc	r0
      000752 F2               [24] 1534 	movx	@r0,a
      000753 90 51 80         [24] 1535 	mov	dptr,#0x5180
      000756 75 F0 01         [24] 1536 	mov	b,#0x01
      000759 E4               [12] 1537 	clr	a
      00075A 12r00r00         [24] 1538 	lcall	__mullong
      00075D AC 82            [24] 1539 	mov	r4,dpl
      00075F AD 83            [24] 1540 	mov	r5,dph
      000761 AE F0            [24] 1541 	mov	r6,b
      000763 FF               [12] 1542 	mov	r7,a
      000764 78r4F            [12] 1543 	mov	r0,#_mktime_seconds_1_46
      000766 E2               [24] 1544 	movx	a,@r0
      000767 2C               [12] 1545 	add	a,r4
      000768 F2               [24] 1546 	movx	@r0,a
      000769 08               [12] 1547 	inc	r0
      00076A E2               [24] 1548 	movx	a,@r0
      00076B 3D               [12] 1549 	addc	a,r5
      00076C F2               [24] 1550 	movx	@r0,a
      00076D 08               [12] 1551 	inc	r0
      00076E E2               [24] 1552 	movx	a,@r0
      00076F 3E               [12] 1553 	addc	a,r6
      000770 F2               [24] 1554 	movx	@r0,a
      000771 08               [12] 1555 	inc	r0
      000772 E2               [24] 1556 	movx	a,@r0
      000773 3F               [12] 1557 	addc	a,r7
      000774 F2               [24] 1558 	movx	@r0,a
                                   1559 ;	time.c:205: seconds+= timeptr->tm_hour*60*60L;
      000775 78r46            [12] 1560 	mov	r0,#_mktime_timeptr_1_45
      000777 E2               [24] 1561 	movx	a,@r0
      000778 24 02            [12] 1562 	add	a,#0x02
      00077A FD               [12] 1563 	mov	r5,a
      00077B 08               [12] 1564 	inc	r0
      00077C E2               [24] 1565 	movx	a,@r0
      00077D 34 00            [12] 1566 	addc	a,#0x00
      00077F FE               [12] 1567 	mov	r6,a
      000780 08               [12] 1568 	inc	r0
      000781 E2               [24] 1569 	movx	a,@r0
      000782 FF               [12] 1570 	mov	r7,a
      000783 8D 82            [24] 1571 	mov	dpl,r5
      000785 8E 83            [24] 1572 	mov	dph,r6
      000787 8F F0            [24] 1573 	mov	b,r7
      000789 12r00r00         [24] 1574 	lcall	__gptrget
      00078C 78r00            [12] 1575 	mov	r0,#__mullong_PARM_2
      00078E F2               [24] 1576 	movx	@r0,a
      00078F 08               [12] 1577 	inc	r0
      000790 E4               [12] 1578 	clr	a
      000791 F2               [24] 1579 	movx	@r0,a
      000792 08               [12] 1580 	inc	r0
      000793 F2               [24] 1581 	movx	@r0,a
      000794 08               [12] 1582 	inc	r0
      000795 F2               [24] 1583 	movx	@r0,a
      000796 90 0E 10         [24] 1584 	mov	dptr,#0x0E10
      000799 E4               [12] 1585 	clr	a
      00079A F5 F0            [12] 1586 	mov	b,a
      00079C 12r00r00         [24] 1587 	lcall	__mullong
      00079F AC 82            [24] 1588 	mov	r4,dpl
      0007A1 AD 83            [24] 1589 	mov	r5,dph
      0007A3 AE F0            [24] 1590 	mov	r6,b
      0007A5 FF               [12] 1591 	mov	r7,a
      0007A6 78r4F            [12] 1592 	mov	r0,#_mktime_seconds_1_46
      0007A8 E2               [24] 1593 	movx	a,@r0
      0007A9 2C               [12] 1594 	add	a,r4
      0007AA F2               [24] 1595 	movx	@r0,a
      0007AB 08               [12] 1596 	inc	r0
      0007AC E2               [24] 1597 	movx	a,@r0
      0007AD 3D               [12] 1598 	addc	a,r5
      0007AE F2               [24] 1599 	movx	@r0,a
      0007AF 08               [12] 1600 	inc	r0
      0007B0 E2               [24] 1601 	movx	a,@r0
      0007B1 3E               [12] 1602 	addc	a,r6
      0007B2 F2               [24] 1603 	movx	@r0,a
      0007B3 08               [12] 1604 	inc	r0
      0007B4 E2               [24] 1605 	movx	a,@r0
      0007B5 3F               [12] 1606 	addc	a,r7
      0007B6 F2               [24] 1607 	movx	@r0,a
                                   1608 ;	time.c:206: seconds+= timeptr->tm_min*60;
      0007B7 78r46            [12] 1609 	mov	r0,#_mktime_timeptr_1_45
      0007B9 E2               [24] 1610 	movx	a,@r0
      0007BA 24 01            [12] 1611 	add	a,#0x01
      0007BC FD               [12] 1612 	mov	r5,a
      0007BD 08               [12] 1613 	inc	r0
      0007BE E2               [24] 1614 	movx	a,@r0
      0007BF 34 00            [12] 1615 	addc	a,#0x00
      0007C1 FE               [12] 1616 	mov	r6,a
      0007C2 08               [12] 1617 	inc	r0
      0007C3 E2               [24] 1618 	movx	a,@r0
      0007C4 FF               [12] 1619 	mov	r7,a
      0007C5 8D 82            [24] 1620 	mov	dpl,r5
      0007C7 8E 83            [24] 1621 	mov	dph,r6
      0007C9 8F F0            [24] 1622 	mov	b,r7
      0007CB 12r00r00         [24] 1623 	lcall	__gptrget
      0007CE 75 F0 3C         [24] 1624 	mov	b,#0x3C
      0007D1 A4               [48] 1625 	mul	ab
      0007D2 FD               [12] 1626 	mov	r5,a
      0007D3 E5 F0            [12] 1627 	mov	a,b
      0007D5 FF               [12] 1628 	mov	r7,a
      0007D6 33               [12] 1629 	rlc	a
      0007D7 95 E0            [12] 1630 	subb	a,acc
      0007D9 FE               [12] 1631 	mov	r6,a
      0007DA FC               [12] 1632 	mov	r4,a
      0007DB 78r4F            [12] 1633 	mov	r0,#_mktime_seconds_1_46
      0007DD E2               [24] 1634 	movx	a,@r0
      0007DE 2D               [12] 1635 	add	a,r5
      0007DF F2               [24] 1636 	movx	@r0,a
      0007E0 08               [12] 1637 	inc	r0
      0007E1 E2               [24] 1638 	movx	a,@r0
      0007E2 3F               [12] 1639 	addc	a,r7
      0007E3 F2               [24] 1640 	movx	@r0,a
      0007E4 08               [12] 1641 	inc	r0
      0007E5 E2               [24] 1642 	movx	a,@r0
      0007E6 3E               [12] 1643 	addc	a,r6
      0007E7 F2               [24] 1644 	movx	@r0,a
      0007E8 08               [12] 1645 	inc	r0
      0007E9 E2               [24] 1646 	movx	a,@r0
      0007EA 3C               [12] 1647 	addc	a,r4
      0007EB F2               [24] 1648 	movx	@r0,a
                                   1649 ;	time.c:207: seconds+= timeptr->tm_sec;
      0007EC 78r46            [12] 1650 	mov	r0,#_mktime_timeptr_1_45
      0007EE E2               [24] 1651 	movx	a,@r0
      0007EF F5 82            [12] 1652 	mov	dpl,a
      0007F1 08               [12] 1653 	inc	r0
      0007F2 E2               [24] 1654 	movx	a,@r0
      0007F3 F5 83            [12] 1655 	mov	dph,a
      0007F5 08               [12] 1656 	inc	r0
      0007F6 E2               [24] 1657 	movx	a,@r0
      0007F7 F5 F0            [12] 1658 	mov	b,a
      0007F9 12r00r00         [24] 1659 	lcall	__gptrget
      0007FC FF               [12] 1660 	mov	r7,a
      0007FD E4               [12] 1661 	clr	a
      0007FE FE               [12] 1662 	mov	r6,a
      0007FF 33               [12] 1663 	rlc	a
      000800 95 E0            [12] 1664 	subb	a,acc
      000802 FD               [12] 1665 	mov	r5,a
      000803 FC               [12] 1666 	mov	r4,a
      000804 78r4F            [12] 1667 	mov	r0,#_mktime_seconds_1_46
      000806 E2               [24] 1668 	movx	a,@r0
      000807 2F               [12] 1669 	add	a,r7
      000808 F2               [24] 1670 	movx	@r0,a
      000809 08               [12] 1671 	inc	r0
      00080A E2               [24] 1672 	movx	a,@r0
      00080B 3E               [12] 1673 	addc	a,r6
      00080C F2               [24] 1674 	movx	@r0,a
      00080D 08               [12] 1675 	inc	r0
      00080E E2               [24] 1676 	movx	a,@r0
      00080F 3D               [12] 1677 	addc	a,r5
      000810 F2               [24] 1678 	movx	@r0,a
      000811 08               [12] 1679 	inc	r0
      000812 E2               [24] 1680 	movx	a,@r0
      000813 3C               [12] 1681 	addc	a,r4
      000814 F2               [24] 1682 	movx	@r0,a
                                   1683 ;	time.c:208: return seconds;
      000815 78r4F            [12] 1684 	mov	r0,#_mktime_seconds_1_46
      000817 E2               [24] 1685 	movx	a,@r0
      000818 F5 82            [12] 1686 	mov	dpl,a
      00081A 08               [12] 1687 	inc	r0
      00081B E2               [24] 1688 	movx	a,@r0
      00081C F5 83            [12] 1689 	mov	dph,a
      00081E 08               [12] 1690 	inc	r0
      00081F E2               [24] 1691 	movx	a,@r0
      000820 F5 F0            [12] 1692 	mov	b,a
      000822 08               [12] 1693 	inc	r0
      000823 E2               [24] 1694 	movx	a,@r0
      000824 22               [24] 1695 	ret
                                   1696 	.area CSEG    (CODE)
                                   1697 	.area CONST   (CODE)
      000000                       1698 _monthDays:
      000000 1F                    1699 	.db #0x1F	;  31
      000001 1C                    1700 	.db #0x1C	;  28
      000002 1F                    1701 	.db #0x1F	;  31
      000003 1E                    1702 	.db #0x1E	;  30
      000004 1F                    1703 	.db #0x1F	;  31
      000005 1E                    1704 	.db #0x1E	;  30
      000006 1F                    1705 	.db #0x1F	;  31
      000007 1F                    1706 	.db #0x1F	;  31
      000008 1E                    1707 	.db #0x1E	;  30
      000009 1F                    1708 	.db #0x1F	;  31
      00000A 1E                    1709 	.db #0x1E	;  30
      00000B 1F                    1710 	.db #0x1F	;  31
      00000C                       1711 ___month:
      00000Cr51s00                 1712 	.byte __str_1, (__str_1 >> 8)
      00000Er55s00                 1713 	.byte __str_2, (__str_2 >> 8)
      000010r59s00                 1714 	.byte __str_3, (__str_3 >> 8)
      000012r5Ds00                 1715 	.byte __str_4, (__str_4 >> 8)
      000014r61s00                 1716 	.byte __str_5, (__str_5 >> 8)
      000016r65s00                 1717 	.byte __str_6, (__str_6 >> 8)
      000018r69s00                 1718 	.byte __str_7, (__str_7 >> 8)
      00001Ar6Ds00                 1719 	.byte __str_8, (__str_8 >> 8)
      00001Cr71s00                 1720 	.byte __str_9, (__str_9 >> 8)
      00001Er75s00                 1721 	.byte __str_10, (__str_10 >> 8)
      000020r79s00                 1722 	.byte __str_11, (__str_11 >> 8)
      000022r7Ds00                 1723 	.byte __str_12, (__str_12 >> 8)
      000024                       1724 ___day:
      000024r81s00                 1725 	.byte __str_13, (__str_13 >> 8)
      000026r85s00                 1726 	.byte __str_14, (__str_14 >> 8)
      000028r89s00                 1727 	.byte __str_15, (__str_15 >> 8)
      00002Ar8Ds00                 1728 	.byte __str_16, (__str_16 >> 8)
      00002Cr91s00                 1729 	.byte __str_17, (__str_17 >> 8)
      00002Er95s00                 1730 	.byte __str_18, (__str_18 >> 8)
      000030r99s00                 1731 	.byte __str_19, (__str_19 >> 8)
      000032                       1732 ___str_0:
      000032 25 73 20 25 73 20 25  1733 	.ascii "%s %s %2d %02d:%02d:%02d %04d"
             32 64 20 25 30 32 64
             3A 25 30 32 64 3A 25
             30 32 64 20 25 30 34
             64
      00004F 0A                    1734 	.db 0x0A
      000050 00                    1735 	.db 0x00
      000051                       1736 __str_1:
      000051 4A 61 6E              1737 	.ascii "Jan"
      000054 00                    1738 	.db 0x00
      000055                       1739 __str_2:
      000055 46 65 62              1740 	.ascii "Feb"
      000058 00                    1741 	.db 0x00
      000059                       1742 __str_3:
      000059 4D 61 72              1743 	.ascii "Mar"
      00005C 00                    1744 	.db 0x00
      00005D                       1745 __str_4:
      00005D 41 70 72              1746 	.ascii "Apr"
      000060 00                    1747 	.db 0x00
      000061                       1748 __str_5:
      000061 4D 61 79              1749 	.ascii "May"
      000064 00                    1750 	.db 0x00
      000065                       1751 __str_6:
      000065 4A 75 6E              1752 	.ascii "Jun"
      000068 00                    1753 	.db 0x00
      000069                       1754 __str_7:
      000069 4A 75 6C              1755 	.ascii "Jul"
      00006C 00                    1756 	.db 0x00
      00006D                       1757 __str_8:
      00006D 41 75 67              1758 	.ascii "Aug"
      000070 00                    1759 	.db 0x00
      000071                       1760 __str_9:
      000071 53 65 70              1761 	.ascii "Sep"
      000074 00                    1762 	.db 0x00
      000075                       1763 __str_10:
      000075 4F 63 74              1764 	.ascii "Oct"
      000078 00                    1765 	.db 0x00
      000079                       1766 __str_11:
      000079 4E 6F 76              1767 	.ascii "Nov"
      00007C 00                    1768 	.db 0x00
      00007D                       1769 __str_12:
      00007D 44 65 63              1770 	.ascii "Dec"
      000080 00                    1771 	.db 0x00
      000081                       1772 __str_13:
      000081 53 75 6E              1773 	.ascii "Sun"
      000084 00                    1774 	.db 0x00
      000085                       1775 __str_14:
      000085 4D 6F 6E              1776 	.ascii "Mon"
      000088 00                    1777 	.db 0x00
      000089                       1778 __str_15:
      000089 54 75 65              1779 	.ascii "Tue"
      00008C 00                    1780 	.db 0x00
      00008D                       1781 __str_16:
      00008D 57 65 64              1782 	.ascii "Wed"
      000090 00                    1783 	.db 0x00
      000091                       1784 __str_17:
      000091 54 68 75              1785 	.ascii "Thu"
      000094 00                    1786 	.db 0x00
      000095                       1787 __str_18:
      000095 46 72 69              1788 	.ascii "Fri"
      000098 00                    1789 	.db 0x00
      000099                       1790 __str_19:
      000099 53 61 74              1791 	.ascii "Sat"
      00009C 00                    1792 	.db 0x00
                                   1793 	.area XINIT   (CODE)
                                   1794 	.area CABS    (ABS,CODE)
