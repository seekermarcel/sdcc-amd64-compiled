                              1 ;--------------------------------------------------------
                              2 ; File Created by SDCC : free open source ANSI-C Compiler
                              3 ; Version 3.5.0 #9253 (Apr  4 2022) (Linux)
                              4 ; This file was generated Mon Apr  4 14:16:48 2022
                              5 ;--------------------------------------------------------
                              6 	.module _strrchr
                              7 	.optsdcc -mgbz80
                              8 	
                              9 ;--------------------------------------------------------
                             10 ; Public variables in this module
                             11 ;--------------------------------------------------------
                             12 	.globl _strrchr
                             13 ;--------------------------------------------------------
                             14 ; ram data
                             15 ;--------------------------------------------------------
                             16 	.area _DATA
                             17 ;--------------------------------------------------------
                             18 ; absolute external ram data
                             19 ;--------------------------------------------------------
                             20 	.area _DABS (ABS)
                             21 ;--------------------------------------------------------
                             22 ; global & static initialisations
                             23 ;--------------------------------------------------------
                             24 	.area _HOME
                             25 	.area _GSINIT
                             26 	.area _GSFINAL
                             27 	.area _GSINIT
                             28 ;--------------------------------------------------------
                             29 ; Home
                             30 ;--------------------------------------------------------
                             31 	.area _HOME
                             32 	.area _HOME
                             33 ;--------------------------------------------------------
                             34 ; code
                             35 ;--------------------------------------------------------
                             36 	.area _CODE
                             37 ;../_strrchr.c:34: char * strrchr ( const char * string, int ch )
                             38 ;	---------------------------------
                             39 ; Function strrchr
                             40 ; ---------------------------------
   0000                      41 _strrchr::
   0000 E8 FE                42 	add	sp, #-2
                             43 ;../_strrchr.c:37: const char * start = string;
   0002 F8 04                44 	ldhl	sp,#4
   0004 2A                   45 	ld	a,(hl+)
   0005 5E                   46 	ld	e, (hl)
   0006 F8 00                47 	ldhl	sp,#0
   0008 22                   48 	ld	(hl+),a
   0009 73                   49 	ld	(hl),e
                             50 ;../_strrchr.c:39: while (*string++)                       /* find end of string */
   000A C1                   51 	pop	bc
   000B C5                   52 	push	bc
   000C                      53 00101$:
   000C 0A                   54 	ld	a,(bc)
   000D 03                   55 	inc	bc
   000E B7                   56 	or	a, a
   000F 20 FB                57 	jr	NZ,00101$
                             58 ;../_strrchr.c:42: while (--string != start && *string != ch)
   0011                      59 00105$:
   0011 0B                   60 	dec	bc
   0012 0A                   61 	ld	a,(bc)
   0013 57                   62 	ld	d,a
   0014 17                   63 	rla
   0015 9F                   64 	sbc	a, a
   0016 5F                   65 	ld	e,a
   0017 F8 06                66 	ldhl	sp,#6
   0019 7E                   67 	ld	a,(hl)
   001A 92                   68 	sub	a, d
   001B 20 09                69 	jr	NZ,00133$
   001D 23                   70 	inc	hl
   001E 7E                   71 	ld	a,(hl)
   001F 93                   72 	sub	a, e
   0020 20 04                73 	jr	NZ,00133$
   0022 3E 01                74 	ld	a,#0x01
   0024 18 01                75 	jr	00134$
   0026                      76 00133$:
   0026 AF                   77 	xor	a,a
   0027                      78 00134$:
   0027 57                   79 	ld	d,a
   0028 F8 00                80 	ldhl	sp,#0
   002A 7E                   81 	ld	a,(hl)
   002B 91                   82 	sub	a, c
   002C 20 05                83 	jr	NZ,00135$
   002E 23                   84 	inc	hl
   002F 7E                   85 	ld	a,(hl)
   0030 90                   86 	sub	a, b
   0031 28 04                87 	jr	Z,00107$
   0033                      88 00135$:
   0033 7A                   89 	ld	a,d
   0034 B7                   90 	or	a, a
   0035 28 DA                91 	jr	Z,00105$
   0037                      92 00107$:
                             93 ;../_strrchr.c:45: if (*string == ch)                      /* char found ? */
   0037 7A                   94 	ld	a,d
   0038 B7                   95 	or	a, a
   0039 28 04                96 	jr	Z,00109$
                             97 ;../_strrchr.c:46: return( (char *)string );
   003B 59                   98 	ld	e, c
   003C 50                   99 	ld	d, b
   003D 18 03               100 	jr	00110$
   003F                     101 00109$:
                            102 ;../_strrchr.c:48: return (NULL) ;
   003F 11 00 00            103 	ld	de,#0x0000
   0042                     104 00110$:
   0042 E8 02               105 	add	sp, #2
   0044 C9                  106 	ret
                            107 	.area _CODE
                            108 	.area _CABS (ABS)
