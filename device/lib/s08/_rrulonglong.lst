                              1 ;--------------------------------------------------------
                              2 ; File Created by SDCC : free open source ANSI-C Compiler
                              3 ; Version 3.5.0 #9253 (Apr  4 2022) (Linux)
                              4 ; This file was generated Mon Apr  4 14:10:36 2022
                              5 ;--------------------------------------------------------
                              6 	.cs08
                              7 	.module _rrulonglong
                              8 	.optsdcc -ms08
                              9 	
                             10 	.area HOME    (CODE)
                             11 	.area GSINIT0 (CODE)
                             12 	.area GSINIT  (CODE)
                             13 	.area GSFINAL (CODE)
                             14 	.area CSEG    (CODE)
                             15 	.area XINIT   (CODE)
                             16 	.area CONST   (CODE)
                             17 	.area DSEG    (PAG)
                             18 	.area OSEG    (PAG, OVR)
                             19 	.area XSEG
                             20 	.area XISEG
                             21 ;--------------------------------------------------------
                             22 ; Public variables in this module
                             23 ;--------------------------------------------------------
                             24 	.globl __rrulonglong_PARM_2
                             25 	.globl __rrulonglong_PARM_1
                             26 	.globl __rrulonglong
                             27 ;--------------------------------------------------------
                             28 ; ram data
                             29 ;--------------------------------------------------------
                             30 	.area DSEG    (PAG)
                             31 ;--------------------------------------------------------
                             32 ; overlayable items in ram 
                             33 ;--------------------------------------------------------
                             34 	.area	OSEG    (PAG, OVR)
   0000                      35 __rrulonglong_sloc0_1_0:
   0000                      36 	.ds 1
   0001                      37 __rrulonglong_sloc1_1_0:
   0001                      38 	.ds 4
   0005                      39 __rrulonglong_sloc2_1_0:
   0005                      40 	.ds 4
                             41 ;--------------------------------------------------------
                             42 ; absolute ram data
                             43 ;--------------------------------------------------------
                             44 	.area IABS    (ABS)
                             45 	.area IABS    (ABS)
                             46 ;--------------------------------------------------------
                             47 ; absolute external ram data
                             48 ;--------------------------------------------------------
                             49 	.area XABS    (ABS)
                             50 ;--------------------------------------------------------
                             51 ; external initialized ram data
                             52 ;--------------------------------------------------------
                             53 	.area XISEG
                             54 ;--------------------------------------------------------
                             55 ; extended address mode data
                             56 ;--------------------------------------------------------
                             57 	.area XSEG
   0000                      58 __rrulonglong_PARM_1:
   0000                      59 	.ds 8
   0008                      60 __rrulonglong_PARM_2:
   0008                      61 	.ds 1
                             62 ;--------------------------------------------------------
                             63 ; global & static initialisations
                             64 ;--------------------------------------------------------
                             65 	.area HOME    (CODE)
                             66 	.area GSINIT  (CODE)
                             67 	.area GSFINAL (CODE)
                             68 	.area GSINIT  (CODE)
                             69 ;--------------------------------------------------------
                             70 ; Home
                             71 ;--------------------------------------------------------
                             72 	.area HOME    (CODE)
                             73 	.area HOME    (CODE)
                             74 ;--------------------------------------------------------
                             75 ; code
                             76 ;--------------------------------------------------------
                             77 	.area CSEG    (CODE)
                             78 ;------------------------------------------------------------
                             79 ;Allocation info for local variables in function '_rrulonglong'
                             80 ;------------------------------------------------------------
                             81 ;l                         Allocated with name '__rrulonglong_PARM_1'
                             82 ;s                         Allocated with name '__rrulonglong_PARM_2'
                             83 ;top                       Allocated to registers 
                             84 ;middle                    Allocated to registers 
                             85 ;bottom                    Allocated to registers 
                             86 ;b                         Allocated to registers 
                             87 ;sloc0                     Allocated with name '__rrulonglong_sloc0_1_0'
                             88 ;sloc1                     Allocated with name '__rrulonglong_sloc1_1_0'
                             89 ;sloc2                     Allocated with name '__rrulonglong_sloc2_1_0'
                             90 ;------------------------------------------------------------
                             91 ;../_rrulonglong.c:35: unsigned long long _rrulonglong(unsigned long long l, signed char s)
                             92 ;	-----------------------------------------
                             93 ;	 function _rrulonglong
                             94 ;	-----------------------------------------
                             95 ;	Register assignment is optimal.
                             96 ;	Stack space usage: 0 bytes.
   0000                      97 __rrulonglong:
                             98 ;../_rrulonglong.c:37: uint32_t *const top = (uint32_t *)((char *)(&l) + 4);
                             99 ;../_rrulonglong.c:38: uint16_t *const middle = (uint16_t *)((char *)(&l) + 3);
                            100 ;../_rrulonglong.c:39: uint32_t *const bottom = (uint32_t *)(&l);
                            101 ;../_rrulonglong.c:40: uint16_t *const b = (uint16_t *)(&l);
                            102 ;../_rrulonglong.c:50: (*bottom) >>= s;
   0000 C6r00r08      [ 4]  103 	lda	__rrulonglong_PARM_2
   0003 B7*00         [ 3]  104 	sta	*__rrulonglong_sloc0_1_0
   0005                     105 00103$:
                            106 ;../_rrulonglong.c:42: for(;s >= 16; s -= 16)
   0005 B6*00         [ 3]  107 	lda	*__rrulonglong_sloc0_1_0
   0007 A1 10         [ 2]  108 	cmp	#0x10
   0009 91 21         [ 3]  109 	blt	00101$
                            110 ;../_rrulonglong.c:44: b[0] = b[1];
   000B 32r00r02      [ 5]  111 	ldhx	(__rrulonglong_PARM_1 + 0x0002)
   000E 96r00r00      [ 5]  112 	sthx	__rrulonglong_PARM_1
                            113 ;../_rrulonglong.c:45: b[1] = b[2];
   0011 32r00r04      [ 5]  114 	ldhx	(__rrulonglong_PARM_1 + 0x0004)
   0014 96r00r02      [ 5]  115 	sthx	(__rrulonglong_PARM_1 + 0x0002)
                            116 ;../_rrulonglong.c:46: b[2] = b[3];
   0017 32r00r06      [ 5]  117 	ldhx	(__rrulonglong_PARM_1 + 0x0006)
   001A 96r00r04      [ 5]  118 	sthx	(__rrulonglong_PARM_1 + 0x0004)
                            119 ;../_rrulonglong.c:47: b[3] = 0x000000;
   001D 4F            [ 1]  120 	clra
   001E C7r00r06      [ 4]  121 	sta	(__rrulonglong_PARM_1 + 0x0006)
   0021 C7r00r07      [ 4]  122 	sta	((__rrulonglong_PARM_1 + 0x0006) + 1)
                            123 ;../_rrulonglong.c:42: for(;s >= 16; s -= 16)
   0024 B6*00         [ 3]  124 	lda	*__rrulonglong_sloc0_1_0
   0026 A0 10         [ 2]  125 	sub	#0x10
   0028 B7*00         [ 3]  126 	sta	*__rrulonglong_sloc0_1_0
   002A 20 D9         [ 3]  127 	bra	00103$
   002C                     128 00101$:
                            129 ;../_rrulonglong.c:50: (*bottom) >>= s;
   002C C6r00r00      [ 4]  130 	lda	__rrulonglong_PARM_1
   002F B7*01         [ 3]  131 	sta	*__rrulonglong_sloc1_1_0
   0031 C6r00r01      [ 4]  132 	lda	(__rrulonglong_PARM_1 + 1)
   0034 B7*02         [ 3]  133 	sta	*(__rrulonglong_sloc1_1_0 + 1)
   0036 C6r00r02      [ 4]  134 	lda	(__rrulonglong_PARM_1 + 2)
   0039 B7*03         [ 3]  135 	sta	*(__rrulonglong_sloc1_1_0 + 2)
   003B C6r00r03      [ 4]  136 	lda	(__rrulonglong_PARM_1 + 3)
   003E B7*04         [ 3]  137 	sta	*(__rrulonglong_sloc1_1_0 + 3)
   0040 BE*00         [ 3]  138 	ldx	*__rrulonglong_sloc0_1_0
   0042 27 0A         [ 3]  139 	beq	00118$
   0044                     140 00117$:
   0044 34*01         [ 5]  141 	lsr	*__rrulonglong_sloc1_1_0
   0046 36*02         [ 5]  142 	ror	*(__rrulonglong_sloc1_1_0 + 1)
   0048 36*03         [ 5]  143 	ror	*(__rrulonglong_sloc1_1_0 + 2)
   004A 36*04         [ 5]  144 	ror	*(__rrulonglong_sloc1_1_0 + 3)
   004C 5B F6         [ 4]  145 	dbnzx	00117$
   004E                     146 00118$:
   004E B6*01         [ 3]  147 	lda	*__rrulonglong_sloc1_1_0
   0050 C7r00r00      [ 4]  148 	sta	__rrulonglong_PARM_1
   0053 B6*02         [ 3]  149 	lda	*(__rrulonglong_sloc1_1_0 + 1)
   0055 C7r00r01      [ 4]  150 	sta	(__rrulonglong_PARM_1 + 1)
   0058 B6*03         [ 3]  151 	lda	*(__rrulonglong_sloc1_1_0 + 2)
   005A C7r00r02      [ 4]  152 	sta	(__rrulonglong_PARM_1 + 2)
   005D B6*04         [ 3]  153 	lda	*(__rrulonglong_sloc1_1_0 + 3)
   005F C7r00r03      [ 4]  154 	sta	(__rrulonglong_PARM_1 + 3)
                            155 ;../_rrulonglong.c:51: (*middle) |= (((*middle) & 0xffff0000ul) >> s);
   0062 32r00r03      [ 5]  156 	ldhx	(__rrulonglong_PARM_1 + 0x0003)
   0065 BF*04         [ 3]  157 	stx	*(__rrulonglong_sloc1_1_0 + 3)
   0067 8B            [ 2]  158 	pshh
   0068 86            [ 3]  159 	pula
   0069 B7*03         [ 3]  160 	sta	*(__rrulonglong_sloc1_1_0 + 2)
   006B 6E 00*02      [ 4]  161 	mov	#0x00,*(__rrulonglong_sloc1_1_0 + 1)
   006E 6E 00*01      [ 4]  162 	mov	#0x00,*__rrulonglong_sloc1_1_0
   0071 6E 00*08      [ 4]  163 	mov	#0x00,*(__rrulonglong_sloc2_1_0 + 3)
   0074 6E 00*07      [ 4]  164 	mov	#0x00,*(__rrulonglong_sloc2_1_0 + 2)
   0077 4E*02*06      [ 6]  165 	mov	*(__rrulonglong_sloc1_1_0 + 1),*(__rrulonglong_sloc2_1_0 + 1)
   007A 4E*01*05      [ 6]  166 	mov	*__rrulonglong_sloc1_1_0,*__rrulonglong_sloc2_1_0
   007D BE*00         [ 3]  167 	ldx	*__rrulonglong_sloc0_1_0
   007F 27 0A         [ 3]  168 	beq	00120$
   0081                     169 00119$:
   0081 34*05         [ 5]  170 	lsr	*__rrulonglong_sloc2_1_0
   0083 36*06         [ 5]  171 	ror	*(__rrulonglong_sloc2_1_0 + 1)
   0085 36*07         [ 5]  172 	ror	*(__rrulonglong_sloc2_1_0 + 2)
   0087 36*08         [ 5]  173 	ror	*(__rrulonglong_sloc2_1_0 + 3)
   0089 5B F6         [ 4]  174 	dbnzx	00119$
   008B                     175 00120$:
   008B B6*04         [ 3]  176 	lda	*(__rrulonglong_sloc1_1_0 + 3)
   008D BA*08         [ 3]  177 	ora	*(__rrulonglong_sloc2_1_0 + 3)
   008F B7*08         [ 3]  178 	sta	*(__rrulonglong_sloc2_1_0 + 3)
   0091 B6*03         [ 3]  179 	lda	*(__rrulonglong_sloc1_1_0 + 2)
   0093 BA*07         [ 3]  180 	ora	*(__rrulonglong_sloc2_1_0 + 2)
   0095 B7*07         [ 3]  181 	sta	*(__rrulonglong_sloc2_1_0 + 2)
   0097 B6*02         [ 3]  182 	lda	*(__rrulonglong_sloc1_1_0 + 1)
   0099 BA*06         [ 3]  183 	ora	*(__rrulonglong_sloc2_1_0 + 1)
   009B B7*06         [ 3]  184 	sta	*(__rrulonglong_sloc2_1_0 + 1)
   009D B6*01         [ 3]  185 	lda	*__rrulonglong_sloc1_1_0
   009F BA*05         [ 3]  186 	ora	*__rrulonglong_sloc2_1_0
   00A1 B7*05         [ 3]  187 	sta	*__rrulonglong_sloc2_1_0
   00A3 BE*08         [ 3]  188 	ldx	*(__rrulonglong_sloc2_1_0 + 3)
   00A5 B6*07         [ 3]  189 	lda	*(__rrulonglong_sloc2_1_0 + 2)
   00A7 87            [ 2]  190 	psha
   00A8 8A            [ 3]  191 	pulh
   00A9 96r00r03      [ 5]  192 	sthx	(__rrulonglong_PARM_1 + 0x0003)
                            193 ;../_rrulonglong.c:52: (*top) |= (((*middle) & 0xffff0000ul) >> s);
   00AC C6r00r04      [ 4]  194 	lda	(__rrulonglong_PARM_1 + 0x0004)
   00AF B7*05         [ 3]  195 	sta	*__rrulonglong_sloc2_1_0
   00B1 C6r00r05      [ 4]  196 	lda	((__rrulonglong_PARM_1 + 0x0004) + 1)
   00B4 B7*06         [ 3]  197 	sta	*(__rrulonglong_sloc2_1_0 + 1)
   00B6 C6r00r06      [ 4]  198 	lda	((__rrulonglong_PARM_1 + 0x0004) + 2)
   00B9 B7*07         [ 3]  199 	sta	*(__rrulonglong_sloc2_1_0 + 2)
   00BB C6r00r07      [ 4]  200 	lda	((__rrulonglong_PARM_1 + 0x0004) + 3)
   00BE B7*08         [ 3]  201 	sta	*(__rrulonglong_sloc2_1_0 + 3)
   00C0 BF*04         [ 3]  202 	stx	*(__rrulonglong_sloc1_1_0 + 3)
   00C2 8B            [ 2]  203 	pshh
   00C3 86            [ 3]  204 	pula
   00C4 B7*03         [ 3]  205 	sta	*(__rrulonglong_sloc1_1_0 + 2)
   00C6 6E 00*02      [ 4]  206 	mov	#0x00,*(__rrulonglong_sloc1_1_0 + 1)
   00C9 6E 00*01      [ 4]  207 	mov	#0x00,*__rrulonglong_sloc1_1_0
   00CC 6E 00*04      [ 4]  208 	mov	#0x00,*(__rrulonglong_sloc1_1_0 + 3)
   00CF 6E 00*03      [ 4]  209 	mov	#0x00,*(__rrulonglong_sloc1_1_0 + 2)
   00D2 BE*00         [ 3]  210 	ldx	*__rrulonglong_sloc0_1_0
   00D4 27 0A         [ 3]  211 	beq	00122$
   00D6                     212 00121$:
   00D6 34*01         [ 5]  213 	lsr	*__rrulonglong_sloc1_1_0
   00D8 36*02         [ 5]  214 	ror	*(__rrulonglong_sloc1_1_0 + 1)
   00DA 36*03         [ 5]  215 	ror	*(__rrulonglong_sloc1_1_0 + 2)
   00DC 36*04         [ 5]  216 	ror	*(__rrulonglong_sloc1_1_0 + 3)
   00DE 5B F6         [ 4]  217 	dbnzx	00121$
   00E0                     218 00122$:
   00E0 B6*08         [ 3]  219 	lda	*(__rrulonglong_sloc2_1_0 + 3)
   00E2 BA*04         [ 3]  220 	ora	*(__rrulonglong_sloc1_1_0 + 3)
   00E4 B7*08         [ 3]  221 	sta	*(__rrulonglong_sloc2_1_0 + 3)
   00E6 B6*07         [ 3]  222 	lda	*(__rrulonglong_sloc2_1_0 + 2)
   00E8 BA*03         [ 3]  223 	ora	*(__rrulonglong_sloc1_1_0 + 2)
   00EA B7*07         [ 3]  224 	sta	*(__rrulonglong_sloc2_1_0 + 2)
   00EC B6*06         [ 3]  225 	lda	*(__rrulonglong_sloc2_1_0 + 1)
   00EE BA*02         [ 3]  226 	ora	*(__rrulonglong_sloc1_1_0 + 1)
   00F0 B7*06         [ 3]  227 	sta	*(__rrulonglong_sloc2_1_0 + 1)
   00F2 B6*05         [ 3]  228 	lda	*__rrulonglong_sloc2_1_0
   00F4 BA*01         [ 3]  229 	ora	*__rrulonglong_sloc1_1_0
   00F6 B7*05         [ 3]  230 	sta	*__rrulonglong_sloc2_1_0
   00F8 B6*05         [ 3]  231 	lda	*__rrulonglong_sloc2_1_0
   00FA C7r00r04      [ 4]  232 	sta	(__rrulonglong_PARM_1 + 0x0004)
   00FD B6*06         [ 3]  233 	lda	*(__rrulonglong_sloc2_1_0 + 1)
   00FF C7r00r05      [ 4]  234 	sta	((__rrulonglong_PARM_1 + 0x0004) + 1)
   0102 B6*07         [ 3]  235 	lda	*(__rrulonglong_sloc2_1_0 + 2)
   0104 C7r00r06      [ 4]  236 	sta	((__rrulonglong_PARM_1 + 0x0004) + 2)
   0107 B6*08         [ 3]  237 	lda	*(__rrulonglong_sloc2_1_0 + 3)
   0109 C7r00r07      [ 4]  238 	sta	((__rrulonglong_PARM_1 + 0x0004) + 3)
                            239 ;../_rrulonglong.c:54: return(l);
   010C C6r00r00      [ 4]  240 	lda	__rrulonglong_PARM_1
   010F B7*00         [ 3]  241 	sta	*___SDCC_hc08_ret7
   0111 C6r00r01      [ 4]  242 	lda	(__rrulonglong_PARM_1 + 1)
   0114 B7*00         [ 3]  243 	sta	*___SDCC_hc08_ret6
   0116 C6r00r02      [ 4]  244 	lda	(__rrulonglong_PARM_1 + 2)
   0119 B7*00         [ 3]  245 	sta	*___SDCC_hc08_ret5
   011B C6r00r03      [ 4]  246 	lda	(__rrulonglong_PARM_1 + 3)
   011E B7*00         [ 3]  247 	sta	*___SDCC_hc08_ret4
   0120 C6r00r04      [ 4]  248 	lda	(__rrulonglong_PARM_1 + 4)
   0123 B7*00         [ 3]  249 	sta	*___SDCC_hc08_ret3
   0125 C6r00r05      [ 4]  250 	lda	(__rrulonglong_PARM_1 + 5)
   0128 B7*00         [ 3]  251 	sta	*___SDCC_hc08_ret2
   012A CEr00r06      [ 4]  252 	ldx	(__rrulonglong_PARM_1 + 6)
   012D C6r00r07      [ 4]  253 	lda	(__rrulonglong_PARM_1 + 7)
   0130 81            [ 6]  254 	rts
                            255 	.area CSEG    (CODE)
                            256 	.area CONST   (CODE)
                            257 	.area XINIT   (CODE)
                            258 	.area CABS    (ABS,CODE)
