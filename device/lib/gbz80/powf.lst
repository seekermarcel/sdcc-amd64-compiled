                              1 ;--------------------------------------------------------
                              2 ; File Created by SDCC : free open source ANSI-C Compiler
                              3 ; Version 3.5.0 #9253 (Apr  4 2022) (Linux)
                              4 ; This file was generated Mon Apr  4 14:16:45 2022
                              5 ;--------------------------------------------------------
                              6 	.module powf
                              7 	.optsdcc -mgbz80
                              8 	
                              9 ;--------------------------------------------------------
                             10 ; Public variables in this module
                             11 ;--------------------------------------------------------
                             12 	.globl _logf
                             13 	.globl _expf
                             14 	.globl _powf
                             15 ;--------------------------------------------------------
                             16 ; ram data
                             17 ;--------------------------------------------------------
                             18 	.area _DATA
                             19 ;--------------------------------------------------------
                             20 ; absolute external ram data
                             21 ;--------------------------------------------------------
                             22 	.area _DABS (ABS)
                             23 ;--------------------------------------------------------
                             24 ; global & static initialisations
                             25 ;--------------------------------------------------------
                             26 	.area _HOME
                             27 	.area _GSINIT
                             28 	.area _GSFINAL
                             29 	.area _GSINIT
                             30 ;--------------------------------------------------------
                             31 ; Home
                             32 ;--------------------------------------------------------
                             33 	.area _HOME
                             34 	.area _HOME
                             35 ;--------------------------------------------------------
                             36 ; code
                             37 ;--------------------------------------------------------
                             38 	.area _CODE
                             39 ;../powf.c:35: float powf(float x, float y)
                             40 ;	---------------------------------
                             41 ; Function powf
                             42 ; ---------------------------------
   0000                      43 _powf::
                             44 ;../powf.c:37: if(y == 0.0) return 1.0;
   0000 F8 09                45 	ldhl	sp,#9
   0002 7E                   46 	ld	a,(hl)
   0003 CB BF                47 	res	7, a
   0005 2B                   48 	dec	hl
   0006 B6                   49 	or	a, (hl)
   0007 2B                   50 	dec	hl
   0008 B6                   51 	or	a, (hl)
   0009 2B                   52 	dec	hl
   000A B6                   53 	or	a,(hl)
   000B 20 07                54 	jr	NZ,00102$
   000D 11 00 00             55 	ld	de,#0x0000
   0010 21 80 3F             56 	ld	hl,#0x3F80
   0013 C9                   57 	ret
   0014                      58 00102$:
                             59 ;../powf.c:38: if(y == 1.0) return x;
   0014 21 80 3F             60 	ld	hl,#0x3F80
   0017 E5                   61 	push	hl
   0018 21 00 00             62 	ld	hl,#0x0000
   001B E5                   63 	push	hl
   001C F8 0C                64 	ldhl	sp,#12
   001E 2A                   65 	ld	a,(hl+)
   001F 66                   66 	ld	h,(hl)
   0020 6F                   67 	ld	l,a
   0021 E5                   68 	push	hl
   0022 F8 0C                69 	ldhl	sp,#12
   0024 2A                   70 	ld	a,(hl+)
   0025 66                   71 	ld	h,(hl)
   0026 6F                   72 	ld	l,a
   0027 E5                   73 	push	hl
   0028 CDr00r00             74 	call	___fseq
   002B E8 08                75 	add	sp, #8
   002D 7B                   76 	ld	a,e
   002E B7                   77 	or	a, a
   002F 28 0B                78 	jr	Z,00104$
   0031 F8 03                79 	ldhl	sp,#3
   0033 2B                   80 	dec	hl
   0034 5E                   81 	ld	e,(hl)
   0035 23                   82 	inc	hl
   0036 56                   83 	ld	d,(hl)
   0037 23                   84 	inc	hl
   0038 2A                   85 	ld	a,(hl+)
   0039 66                   86 	ld	h,(hl)
   003A 6F                   87 	ld	l,a
   003B C9                   88 	ret
   003C                      89 00104$:
                             90 ;../powf.c:39: if(x <= 0.0) return 0.0;
   003C 21 00 00             91 	ld	hl,#0x0000
   003F E5                   92 	push	hl
   0040 21 00 00             93 	ld	hl,#0x0000
   0043 E5                   94 	push	hl
   0044 F8 08                95 	ldhl	sp,#8
   0046 2A                   96 	ld	a,(hl+)
   0047 66                   97 	ld	h,(hl)
   0048 6F                   98 	ld	l,a
   0049 E5                   99 	push	hl
   004A F8 08               100 	ldhl	sp,#8
   004C 2A                  101 	ld	a,(hl+)
   004D 66                  102 	ld	h,(hl)
   004E 6F                  103 	ld	l,a
   004F E5                  104 	push	hl
   0050 CDr00r00            105 	call	___fsgt
   0053 E8 08               106 	add	sp, #8
   0055 7B                  107 	ld	a,e
   0056 B7                  108 	or	a, a
   0057 20 07               109 	jr	NZ,00106$
   0059 11 00 00            110 	ld	de,#0x0000
   005C 21 00 00            111 	ld	hl,#0x0000
   005F C9                  112 	ret
   0060                     113 00106$:
                            114 ;../powf.c:40: return expf(logf(x) * y);
   0060 F8 04               115 	ldhl	sp,#4
   0062 2A                  116 	ld	a,(hl+)
   0063 66                  117 	ld	h,(hl)
   0064 6F                  118 	ld	l,a
   0065 E5                  119 	push	hl
   0066 F8 04               120 	ldhl	sp,#4
   0068 2A                  121 	ld	a,(hl+)
   0069 66                  122 	ld	h,(hl)
   006A 6F                  123 	ld	l,a
   006B E5                  124 	push	hl
   006C CDr00r00            125 	call	_logf
   006F E8 04               126 	add	sp, #4
   0071 4D                  127 	ld	c,l
   0072 44                  128 	ld	b,h
   0073 F8 08               129 	ldhl	sp,#8
   0075 2A                  130 	ld	a,(hl+)
   0076 66                  131 	ld	h,(hl)
   0077 6F                  132 	ld	l,a
   0078 E5                  133 	push	hl
   0079 F8 08               134 	ldhl	sp,#8
   007B 2A                  135 	ld	a,(hl+)
   007C 66                  136 	ld	h,(hl)
   007D 6F                  137 	ld	l,a
   007E E5                  138 	push	hl
   007F C5                  139 	push	bc
   0080 D5                  140 	push	de
   0081 CDr00r00            141 	call	___fsmul
   0084 E8 08               142 	add	sp, #8
   0086 4D                  143 	ld	c,l
   0087 44                  144 	ld	b,h
   0088 C5                  145 	push	bc
   0089 D5                  146 	push	de
   008A CDr00r00            147 	call	_expf
   008D E8 04               148 	add	sp, #4
   008F 45                  149 	ld	b,l
   0090 4C                  150 	ld	c,h
   0091 C9                  151 	ret
                            152 	.area _CODE
                            153 	.area _CABS (ABS)
