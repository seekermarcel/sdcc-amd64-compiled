                              1 ;--------------------------------------------------------
                              2 ; File Created by SDCC : free open source ANSI-C Compiler
                              3 ; Version 3.5.0 #9253 (Apr  4 2022) (Linux)
                              4 ; This file was generated Mon Apr  4 14:15:44 2022
                              5 ;--------------------------------------------------------
                              6 	.hd64
                              7 	.module _strncmp
                              8 	.optsdcc -mz180
                              9 	
                             10 ;--------------------------------------------------------
                             11 ; Public variables in this module
                             12 ;--------------------------------------------------------
                             13 	.globl _strncmp
                             14 ;--------------------------------------------------------
                             15 ; special function registers
                             16 ;--------------------------------------------------------
                             17 ;--------------------------------------------------------
                             18 ; ram data
                             19 ;--------------------------------------------------------
                             20 	.area _DATA
                             21 ;--------------------------------------------------------
                             22 ; ram data
                             23 ;--------------------------------------------------------
                             24 	.area _INITIALIZED
                             25 ;--------------------------------------------------------
                             26 ; absolute external ram data
                             27 ;--------------------------------------------------------
                             28 	.area _DABS (ABS)
                             29 ;--------------------------------------------------------
                             30 ; global & static initialisations
                             31 ;--------------------------------------------------------
                             32 	.area _HOME
                             33 	.area _GSINIT
                             34 	.area _GSFINAL
                             35 	.area _GSINIT
                             36 ;--------------------------------------------------------
                             37 ; Home
                             38 ;--------------------------------------------------------
                             39 	.area _HOME
                             40 	.area _HOME
                             41 ;--------------------------------------------------------
                             42 ; code
                             43 ;--------------------------------------------------------
                             44 	.area _CODE
                             45 ;../_strncmp.c:31: int strncmp ( const char * first, const char * last, size_t count )
                             46 ;	---------------------------------
                             47 ; Function strncmp
                             48 ; ---------------------------------
   0000                      49 _strncmp::
   0000 DD E5         [14]   50 	push	ix
   0002 DD 21 00 00   [12]   51 	ld	ix,#0
   0006 DD 39         [10]   52 	add	ix,sp
   0008 21 FA FF      [ 9]   53 	ld	hl,#-6
   000B 39            [ 7]   54 	add	hl,sp
   000C F9            [ 4]   55 	ld	sp,hl
                             56 ;../_strncmp.c:33: if (!count)
   000D DD 7E 09      [14]   57 	ld	a,9 (ix)
   0010 DD B6 08      [14]   58 	or	a,8 (ix)
   0013 20 05         [ 8]   59 	jr	NZ,00114$
                             60 ;../_strncmp.c:34: return(0);
   0015 21 00 00      [ 9]   61 	ld	hl,#0x0000
   0018 18 69         [ 8]   62 	jr	00108$
                             63 ;../_strncmp.c:36: while (--count && *first && *first == *last) {
   001A                      64 00114$:
   001A DD 7E 04      [14]   65 	ld	a,4 (ix)
   001D DD 77 FA      [15]   66 	ld	-6 (ix),a
   0020 DD 7E 05      [14]   67 	ld	a,5 (ix)
   0023 DD 77 FB      [15]   68 	ld	-5 (ix),a
   0026 DD 7E 06      [14]   69 	ld	a,6 (ix)
   0029 DD 77 FE      [15]   70 	ld	-2 (ix),a
   002C DD 7E 07      [14]   71 	ld	a,7 (ix)
   002F DD 77 FF      [15]   72 	ld	-1 (ix),a
   0032 DD 7E 08      [14]   73 	ld	a,8 (ix)
   0035 DD 77 FC      [15]   74 	ld	-4 (ix),a
   0038 DD 7E 09      [14]   75 	ld	a,9 (ix)
   003B DD 77 FD      [15]   76 	ld	-3 (ix),a
   003E                      77 00105$:
   003E DD 6E FC      [14]   78 	ld	l,-4 (ix)
   0041 DD 66 FD      [14]   79 	ld	h,-3 (ix)
   0044 2B            [ 4]   80 	dec	hl
   0045 DD 75 FC      [15]   81 	ld	-4 (ix),l
   0048 DD 74 FD      [15]   82 	ld	-3 (ix),h
   004B E1            [ 9]   83 	pop	hl
   004C E5            [11]   84 	push	hl
   004D 5E            [ 6]   85 	ld	e,(hl)
   004E DD 6E FE      [14]   86 	ld	l,-2 (ix)
   0051 DD 66 FF      [14]   87 	ld	h,-1 (ix)
   0054 4E            [ 6]   88 	ld	c,(hl)
   0055 DD 7E FD      [14]   89 	ld	a,-3 (ix)
   0058 DD B6 FC      [14]   90 	or	a,-4 (ix)
   005B 28 1A         [ 8]   91 	jr	Z,00107$
   005D 7B            [ 4]   92 	ld	a,e
   005E B7            [ 4]   93 	or	a, a
   005F 28 16         [ 8]   94 	jr	Z,00107$
   0061 7B            [ 4]   95 	ld	a,e
   0062 91            [ 4]   96 	sub	a, c
   0063 20 12         [ 8]   97 	jr	NZ,00107$
                             98 ;../_strncmp.c:37: first++;
   0065 DD 34 FA      [18]   99 	inc	-6 (ix)
   0068 20 03         [ 8]  100 	jr	NZ,00133$
   006A DD 34 FB      [18]  101 	inc	-5 (ix)
   006D                     102 00133$:
                            103 ;../_strncmp.c:38: last++;
   006D DD 34 FE      [18]  104 	inc	-2 (ix)
   0070 20 CC         [ 8]  105 	jr	NZ,00105$
   0072 DD 34 FF      [18]  106 	inc	-1 (ix)
   0075 18 C7         [ 8]  107 	jr	00105$
   0077                     108 00107$:
                            109 ;../_strncmp.c:41: return( *first - *last );
   0077 7B            [ 4]  110 	ld	a,e
   0078 6F            [ 4]  111 	ld	l,a
   0079 17            [ 3]  112 	rla
   007A 9F            [ 4]  113 	sbc	a, a
   007B 67            [ 4]  114 	ld	h,a
   007C 79            [ 4]  115 	ld	a,c
   007D 17            [ 3]  116 	rla
   007E 9F            [ 4]  117 	sbc	a, a
   007F 47            [ 4]  118 	ld	b,a
   0080 BF            [ 4]  119 	cp	a, a
   0081 ED 42         [10]  120 	sbc	hl, bc
   0083                     121 00108$:
   0083 DD F9         [ 7]  122 	ld	sp, ix
   0085 DD E1         [12]  123 	pop	ix
   0087 C9            [ 9]  124 	ret
                            125 	.area _CODE
                            126 	.area _INITIALIZER
                            127 	.area _CABS (ABS)
