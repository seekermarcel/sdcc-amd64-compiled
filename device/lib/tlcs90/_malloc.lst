                              1 ;--------------------------------------------------------
                              2 ; File Created by SDCC : free open source ANSI-C Compiler
                              3 ; Version 3.5.0 #9253 (Apr  4 2022) (Linux)
                              4 ; This file was generated Mon Apr  4 14:16:37 2022
                              5 ;--------------------------------------------------------
                              6 	.module _malloc
                              7 	.optsdcc -mtlcs90
                              8 	
                              9 ;--------------------------------------------------------
                             10 ; Public variables in this module
                             11 ;--------------------------------------------------------
                             12 	.globl __sdcc_heap_init
                             13 	.globl _malloc
                             14 ;--------------------------------------------------------
                             15 ; ram data
                             16 ;--------------------------------------------------------
                             17 	.area _DATA
                             18 ;--------------------------------------------------------
                             19 ; ram data
                             20 ;--------------------------------------------------------
                             21 	.area _INITIALIZED
                             22 ;--------------------------------------------------------
                             23 ; absolute external ram data
                             24 ;--------------------------------------------------------
                             25 	.area _DABS (ABS)
                             26 ;--------------------------------------------------------
                             27 ; global & static initialisations
                             28 ;--------------------------------------------------------
                             29 	.area _HOME
                             30 	.area _GSINIT
                             31 	.area _GSFINAL
                             32 	.area _GSINIT
                             33 ;--------------------------------------------------------
                             34 ; Home
                             35 ;--------------------------------------------------------
                             36 	.area _HOME
                             37 	.area _HOME
                             38 ;--------------------------------------------------------
                             39 ; code
                             40 ;--------------------------------------------------------
                             41 	.area _CODE
                             42 ;../_malloc.c:59: _sdcc_heap_init(void)
                             43 ;	---------------------------------
                             44 ; Function _sdcc_heap_init
                             45 ; ---------------------------------
   0000                      46 __sdcc_heap_init::
                             47 ;../_malloc.c:61: MEMHEADER *pbase = &_sdcc_heap_start;
                             48 ;../_malloc.c:62: unsigned int size = &_sdcc_heap_end - (char *)pbase;
   0000 3Ar00r00      [13]   49 	ld	hl,#__sdcc_heap_end+0
   0003 39r00r00      [11]   50 	ld	de,#__sdcc_heap_start
   0006 FE 67         [ 7]   51 	cp	a, a
   0008 F9 73         [ 6]   52 	sbc	hl, de
                             53 ;../_malloc.c:64: pbase->next = (MEMHEADER *)((char *)pbase + size - HEADER_SIZE);
   000A F9 70         [ 6]   54 	add	hl,de
   000C 25            [ 4]   55 	ld	a,l
   000D 68 FA         [ 4]   56 	add	a,#0xFA
   000F 2B            [ 6]   57 	ld	e,a
   0010 24            [ 4]   58 	ld	a,h
   0011 69 FF         [ 4]   59 	adc	a,#0xFF
   0013 2A            [16]   60 	ld	d,a
   0014 EBr00r00 41   [ 4]   61 	ld	(__sdcc_heap_start), de
                             62 ;../_malloc.c:65: pbase->next->next = NULL; //And mark it as last
   0018 36 00         [10]   63 	ld	a,#0x00
   001A E9 26         [ 4]   64 	ld	(de),a
   001C 91            [ 4]   65 	inc	de
   001D 36 00         [10]   66 	ld	a,#0x00
   001F E9 26         [ 4]   67 	ld	(de),a
                             68 ;../_malloc.c:66: pbase->prev       = NULL; //and mark first as first
   0021 3A 00 00      [13]   69 	ld	hl,#0x0000
   0024 EBr02r00 42   [ 4]   70 	ld	((__sdcc_heap_start + 0x0002)), hl
                             71 ;../_malloc.c:67: pbase->len        = 0;    //Empty and ready.
   0028 35 00         [11]   72 	ld	l, #0x00
   002A EBr04r00 42   [ 4]   73 	ld	((__sdcc_heap_start + 0x0004)), hl
   002E 1E            [ 7]   74 	ret
                             75 ;../_malloc.c:71: malloc (unsigned int size)
                             76 ;	---------------------------------
                             77 ; Function malloc
                             78 ; ---------------------------------
   002F                      79 _malloc::
   002F 54            [ 4]   80 	push	ix
   0030 3C 00 00      [ 4]   81 	ld	ix,#0
   0033 FE 14         [ 7]   82 	add	ix,sp
   0035 16 FE FF      [ 7]   83 	add	sp, #-2
                             84 ;../_malloc.c:77: if (size>(0xFFFF-HEADER_SIZE))
   0038 36 F9         [10]   85 	ld	a,#0xF9
   003A F0 04 67      [11]   86 	cp	a, 4 (ix)
   003D 36 FF         [10]   87 	ld	a,#0xFF
   003F F0 05 63      [11]   88 	sbc	a, 5 (ix)
   0042 CF 06         [11]   89 	jr	NC,00102$
                             90 ;../_malloc.c:79: return NULL; //To prevent overflow in next line
   0044 3A 00 00      [13]   91 	ld	hl,#0x0000
   0047 1Ar3Dr01      [ 7]   92 	jp	00117$
   004A                      93 00102$:
                             94 ;../_malloc.c:82: size += HEADER_SIZE; //We need a memory for header too
   004A F0 04 2E      [11]   95 	ld	a,4 (ix)
   004D 68 06         [ 4]   96 	add	a, #0x06
   004F F4 04 26      [17]   97 	ld	4 (ix),a
   0052 F0 05 2E      [11]   98 	ld	a,5 (ix)
   0055 69 00         [ 4]   99 	adc	a, #0x00
   0057 F4 05 26      [17]  100 	ld	5 (ix),a
                            101 ;../_malloc.c:83: current_header = &_sdcc_heap_start;
   005A 3Ar00r00      [13]  102 	ld	hl,#__sdcc_heap_start+0
   005D EE 42         [ 7]  103 	ld	0 (sp), hl
                            104 ;../_malloc.c:132: }
   005F 02            [ 7]  105 	di
                            106 ;../_malloc.c:87: while (1)
   0060                     107 00108$:
                            108 ;../_malloc.c:96: if ((((unsigned int)current_header->next) -
   0060 5A            [ 4]  109 	pop	hl
   0061 52            [ 4]  110 	push	hl
   0062 E2 2B         [10]  111 	ld	e,(hl)
   0064 92            [ 4]  112 	inc	hl
   0065 E2 2A         [10]  113 	ld	d,(hl)
   0067 FB 31         [ 4]  114 	ld	c, e
   0069 FA 30         [10]  115 	ld	b, d
                            116 ;../_malloc.c:97: ((unsigned int)current_header) -
   006B 5A            [ 4]  117 	pop	hl
   006C 52            [ 4]  118 	push	hl
   006D 21            [10]  119 	ld	a,c
   006E FD 62               120 	sub	a, l
   0070 29            [11]  121 	ld	c,a
   0071 20            [12]  122 	ld	a,b
   0072 FC 63         [17]  123 	sbc	a, h
   0074 28            [12]  124 	ld	b,a
                            125 ;../_malloc.c:98: current_header->len) >= size)
   0075 F0 FE 2E      [11]  126 	ld	a,-2 (ix)
   0078 68 04         [ 4]  127 	add	a, #0x04
   007A 2D            [ 4]  128 	ld	l,a
   007B F0 FF 2E      [11]  129 	ld	a,-1 (ix)
   007E 69 00         [ 4]  130 	adc	a, #0x00
   0080 2C            [ 4]  131 	ld	h,a
   0081 E2 2E         [10]  132 	ld	a, (hl)
   0083 92            [ 4]  133 	inc	hl
   0084 E2 2C         [10]  134 	ld	h,(hl)
   0086 2D            [ 4]  135 	ld	l,a
   0087 21            [10]  136 	ld	a,c
   0088 FD 62               137 	sub	a, l
   008A 2D            [ 4]  138 	ld	l,a
   008B 20            [12]  139 	ld	a,b
   008C FC 63         [17]  140 	sbc	a, h
   008E 2C            [ 4]  141 	ld	h,a
   008F 25            [ 4]  142 	ld	a,l
   0090 F0 04 62      [11]  143 	sub	a, 4 (ix)
   0093 24            [ 4]  144 	ld	a,h
   0094 F0 05 63      [11]  145 	sbc	a, 5 (ix)
   0097 C7 0E         [11]  146 	jr	C,00104$
                            147 ;../_malloc.c:100: ret = &current_header->mem;
   0099 F0 FE 2E      [11]  148 	ld	a,-2 (ix)
   009C 68 06         [ 4]  149 	add	a, #0x06
   009E 29            [11]  150 	ld	c,a
   009F F0 FF 2E      [11]  151 	ld	a,-1 (ix)
   00A2 69 00         [ 4]  152 	adc	a, #0x00
   00A4 28            [12]  153 	ld	b,a
                            154 ;../_malloc.c:101: break;
   00A5 C8 14         [11]  155 	jr	00109$
   00A7                     156 00104$:
                            157 ;../_malloc.c:103: current_header = current_header->next;    //else try next
   00A7 08            [ 4]  158 	ex	de,hl
   00A8 EE 42         [ 7]  159 	ld	0 (sp), hl
                            160 ;../_malloc.c:96: if ((((unsigned int)current_header->next) -
   00AA 5A            [ 4]  161 	pop	hl
   00AB 52            [ 4]  162 	push	hl
   00AC E2 2B         [10]  163 	ld	e,(hl)
   00AE 92            [ 4]  164 	inc	hl
   00AF E2 2A         [10]  165 	ld	d,(hl)
                            166 ;../_malloc.c:104: if (!current_header->next)
   00B1 22            [16]  167 	ld	a,d
   00B2 FB 66         [ 4]  168 	or	a,e
   00B4 EBr60r00 CE   [ 4]  169 	jp	NZ,00108$
                            170 ;../_malloc.c:106: ret = NULL;
   00B8 38 00 00      [12]  171 	ld	bc,#0x0000
                            172 ;../_malloc.c:107: break;
   00BB                     173 00109$:
                            174 ;../_malloc.c:111: if (ret)
   00BB 20            [12]  175 	ld	a,b
   00BC F9 66         [ 6]  176 	or	a,c
   00BE EBr38r01 C6   [ 4]  177 	jp	Z,00116$
                            178 ;../_malloc.c:113: if (!current_header->len)
   00C2 3D 04 00      [ 4]  179 	ld	iy,#0x0004
   00C5 50            [ 4]  180 	push	bc
   00C6 F0 FE 29      [11]  181 	ld	c,-2 (ix)
   00C9 F0 FF 28      [11]  182 	ld	b,-1 (ix)
   00CC F8 15         [11]  183 	add	iy, bc
   00CE 58            [ 4]  184 	pop	bc
   00CF E5 4A         [11]  185 	ld	hl, 0 (iy)
   00D1 24            [ 4]  186 	ld	a,h
   00D2 FD 66         [19]  187 	or	a,l
   00D4 CE 0E         [ 7]  188 	jr	NZ,00113$
                            189 ;../_malloc.c:115: current_header->len = size; //for first allocation
   00D6 F0 04 2E      [11]  190 	ld	a,4 (ix)
   00D9 ED 26               191 	ld	0 (iy),a
   00DB F0 05 2E      [11]  192 	ld	a,5 (ix)
   00DE F5 01 26      [11]  193 	ld	1 (iy),a
   00E1 1Ar38r01      [ 7]  194 	jp	00116$
   00E4                     195 00113$:
                            196 ;../_malloc.c:120: new_header = (MEMHEADER * )((char *)current_header + current_header->len);
   00E4 58            [ 4]  197 	pop	bc
   00E5 50            [ 4]  198 	push	bc
   00E6 F8 70         [11]  199 	add	hl,bc
                            200 ;../_malloc.c:121: new_header->next = current_header->next; //and plug it into the chain
   00E8 FD 31               201 	ld	c,l
   00EA FC 30         [17]  202 	ld	b,h
   00EC EA 23         [10]  203 	ld	(hl),e
   00EE 92            [ 4]  204 	inc	hl
   00EF EA 22         [10]  205 	ld	(hl),d
                            206 ;../_malloc.c:122: new_header->prev = current_header;
   00F1 F9 35         [ 6]  207 	ld	l, c
   00F3 F8 34         [11]  208 	ld	h, b
   00F5 92            [ 4]  209 	inc	hl
   00F6 92            [ 4]  210 	inc	hl
   00F7 F0 FE 2E      [11]  211 	ld	a,-2 (ix)
   00FA EA 26         [10]  212 	ld	(hl),a
   00FC 92            [ 4]  213 	inc	hl
   00FD F0 FF 2E      [11]  214 	ld	a,-1 (ix)
   0100 EA 26         [10]  215 	ld	(hl),a
                            216 ;../_malloc.c:123: current_header->next  = new_header;
   0102 5A            [ 4]  217 	pop	hl
   0103 52            [ 4]  218 	push	hl
   0104 EA 21         [10]  219 	ld	(hl),c
   0106 92            [ 4]  220 	inc	hl
   0107 EA 20         [10]  221 	ld	(hl),b
                            222 ;../_malloc.c:124: if (new_header->next)
   0109 F9 35         [ 6]  223 	ld	l, c
   010B F8 34         [11]  224 	ld	h, b
   010D E2 2E         [10]  225 	ld	a, (hl)
   010F 92            [ 4]  226 	inc	hl
   0110 E2 2C         [10]  227 	ld	h,(hl)
   0112 2D            [ 4]  228 	ld	l,a
   0113 22            [16]  229 	ld	a,d
   0114 FB 66         [ 4]  230 	or	a,e
   0116 C6 07         [ 7]  231 	jr	Z,00111$
                            232 ;../_malloc.c:126: new_header->next->prev = new_header;
   0118 92            [ 4]  233 	inc	hl
   0119 92            [ 4]  234 	inc	hl
   011A EA 21         [10]  235 	ld	(hl),c
   011C 92            [ 4]  236 	inc	hl
   011D EA 20         [10]  237 	ld	(hl),b
   011F                     238 00111$:
                            239 ;../_malloc.c:128: new_header->len  = size; //mark as used
   011F 3A 04 00      [13]  240 	ld	hl,#0x0004
   0122 F8 70         [11]  241 	add	hl,bc
   0124 F0 04 2E      [11]  242 	ld	a,4 (ix)
   0127 EA 26         [10]  243 	ld	(hl),a
   0129 92            [ 4]  244 	inc	hl
   012A F0 05 2E      [11]  245 	ld	a,5 (ix)
   012D EA 26         [10]  246 	ld	(hl),a
                            247 ;../_malloc.c:129: ret = &new_header->mem;
   012F 3A 06 00      [13]  248 	ld	hl,#0x0006
   0132 F8 70         [11]  249 	add	hl,bc
   0134 FD 31               250 	ld	c, l
   0136 FC 30         [17]  251 	ld	b, h
   0138                     252 00116$:
   0138 03            [ 6]  253 	ei
                            254 ;../_malloc.c:133: return ret;
   0139 F9 35         [ 6]  255 	ld	l, c
   013B F8 34         [11]  256 	ld	h, b
   013D                     257 00117$:
   013D FC 3E         [17]  258 	ld	sp, ix
   013F 5C            [ 4]  259 	pop	ix
   0140 1E            [ 7]  260 	ret
                            261 	.area _CODE
                            262 	.area _INITIALIZER
                            263 	.area _CABS (ABS)
