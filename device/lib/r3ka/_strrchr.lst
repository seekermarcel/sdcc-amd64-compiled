                              1 ;--------------------------------------------------------
                              2 ; File Created by SDCC : free open source ANSI-C Compiler
                              3 ; Version 3.5.0 #9253 (Apr  4 2022) (Linux)
                              4 ; This file was generated Mon Apr  4 14:16:19 2022
                              5 ;--------------------------------------------------------
                              6 	.r3k
                              7 	.module _strrchr
                              8 	.optsdcc -mr3ka
                              9 	
                             10 ;--------------------------------------------------------
                             11 ; Public variables in this module
                             12 ;--------------------------------------------------------
                             13 	.globl _strrchr
                             14 ;--------------------------------------------------------
                             15 ; special function registers
                             16 ;--------------------------------------------------------
                             17 ;--------------------------------------------------------
                             18 ; ram data
                             19 ;--------------------------------------------------------
                             20 	.area _DATA
                             21 ;--------------------------------------------------------
                             22 ; ram data
                             23 ;--------------------------------------------------------
                             24 	.area _INITIALIZED
                             25 ;--------------------------------------------------------
                             26 ; absolute external ram data
                             27 ;--------------------------------------------------------
                             28 	.area _DABS (ABS)
                             29 ;--------------------------------------------------------
                             30 ; global & static initialisations
                             31 ;--------------------------------------------------------
                             32 	.area _HOME
                             33 	.area _GSINIT
                             34 	.area _GSFINAL
                             35 	.area _GSINIT
                             36 ;--------------------------------------------------------
                             37 ; Home
                             38 ;--------------------------------------------------------
                             39 	.area _HOME
                             40 	.area _HOME
                             41 ;--------------------------------------------------------
                             42 ; code
                             43 ;--------------------------------------------------------
                             44 	.area _CODE
                             45 ;../_strrchr.c:34: char * strrchr ( const char * string, int ch )
                             46 ;	---------------------------------
                             47 ; Function strrchr
                             48 ; ---------------------------------
   0000                      49 _strrchr::
   0000 DD E5                50 	push	ix
   0002 DD 21 00 00          51 	ld	ix,#0
   0006 DD 39                52 	add	ix,sp
   0008 27 FE                53 	add	sp, #-2
                             54 ;../_strrchr.c:37: const char * start = string;
   000A DD 7E 04             55 	ld	a,4 (ix)
   000D DD 77 FE             56 	ld	-2 (ix),a
   0010 DD 7E 05             57 	ld	a,5 (ix)
   0013 DD 77 FF             58 	ld	-1 (ix),a
                             59 ;../_strrchr.c:39: while (*string++)                       /* find end of string */
   0016 C4 00                60 	ld	hl, 0 (sp)
   0018                      61 00101$:
   0018 7E                   62 	ld	a,(hl)
   0019 23                   63 	inc	hl
   001A B7                   64 	or	a, a
   001B 20 FB                65 	jr	NZ,00101$
                             66 ;../_strrchr.c:42: while (--string != start && *string != ch)
   001D 4D                   67 	ld	c, l
   001E 44                   68 	ld	b, h
   001F                      69 00105$:
   001F 0B                   70 	dec	bc
   0020 0A                   71 	ld	a,(bc)
   0021 57                   72 	ld	d,a
   0022 17                   73 	rla
   0023 9F                   74 	sbc	a, a
   0024 5F                   75 	ld	e,a
   0025 DD 7E 06             76 	ld	a,6 (ix)
   0028 92                   77 	sub	a, d
   0029 20 0A                78 	jr	NZ,00133$
   002B DD 7E 07             79 	ld	a,7 (ix)
   002E 93                   80 	sub	a, e
   002F 20 04                81 	jr	NZ,00133$
   0031 3E 01                82 	ld	a,#0x01
   0033 18 01                83 	jr	00134$
   0035                      84 00133$:
   0035 AF                   85 	xor	a,a
   0036                      86 00134$:
   0036 57                   87 	ld	d,a
   0037 DD 7E FE             88 	ld	a,-2 (ix)
   003A 91                   89 	sub	a, c
   003B 20 06                90 	jr	NZ,00135$
   003D DD 7E FF             91 	ld	a,-1 (ix)
   0040 90                   92 	sub	a, b
   0041 28 04                93 	jr	Z,00107$
   0043                      94 00135$:
   0043 7A                   95 	ld	a,d
   0044 B7                   96 	or	a, a
   0045 28 D8                97 	jr	Z,00105$
   0047                      98 00107$:
                             99 ;../_strrchr.c:45: if (*string == ch)                      /* char found ? */
   0047 7A                  100 	ld	a,d
   0048 B7                  101 	or	a, a
   0049 28 04               102 	jr	Z,00109$
                            103 ;../_strrchr.c:46: return( (char *)string );
   004B 69                  104 	ld	l, c
   004C 60                  105 	ld	h, b
   004D 18 03               106 	jr	00110$
   004F                     107 00109$:
                            108 ;../_strrchr.c:48: return (NULL) ;
   004F 21 00 00            109 	ld	hl,#0x0000
   0052                     110 00110$:
   0052 DD F9               111 	ld	sp, ix
   0054 DD E1               112 	pop	ix
   0056 C9                  113 	ret
                            114 	.area _CODE
                            115 	.area _INITIALIZER
                            116 	.area _CABS (ABS)
