                              1 ;--------------------------------------------------------
                              2 ; File Created by SDCC : free open source ANSI-C Compiler
                              3 ; Version 3.5.0 #9253 (Apr  4 2022) (Linux)
                              4 ; This file was generated Mon Apr  4 14:16:46 2022
                              5 ;--------------------------------------------------------
                              6 	.module acosf
                              7 	.optsdcc -mgbz80
                              8 	
                              9 ;--------------------------------------------------------
                             10 ; Public variables in this module
                             11 ;--------------------------------------------------------
                             12 	.globl _asincosf
                             13 	.globl _acosf
                             14 ;--------------------------------------------------------
                             15 ; ram data
                             16 ;--------------------------------------------------------
                             17 	.area _DATA
                             18 ;--------------------------------------------------------
                             19 ; absolute external ram data
                             20 ;--------------------------------------------------------
                             21 	.area _DABS (ABS)
                             22 ;--------------------------------------------------------
                             23 ; global & static initialisations
                             24 ;--------------------------------------------------------
                             25 	.area _HOME
                             26 	.area _GSINIT
                             27 	.area _GSFINAL
                             28 	.area _GSINIT
                             29 ;--------------------------------------------------------
                             30 ; Home
                             31 ;--------------------------------------------------------
                             32 	.area _HOME
                             33 	.area _HOME
                             34 ;--------------------------------------------------------
                             35 ; code
                             36 ;--------------------------------------------------------
                             37 	.area _CODE
                             38 ;../acosf.c:36: float acosf(float x) _FLOAT_FUNC_REENTRANT
                             39 ;	---------------------------------
                             40 ; Function acosf
                             41 ; ---------------------------------
   0000                      42 _acosf::
                             43 ;../acosf.c:38: if (x == 1.0) return 0.0;
   0000 21 80 3F             44 	ld	hl,#0x3F80
   0003 E5                   45 	push	hl
   0004 21 00 00             46 	ld	hl,#0x0000
   0007 E5                   47 	push	hl
   0008 F8 08                48 	ldhl	sp,#8
   000A 2A                   49 	ld	a,(hl+)
   000B 66                   50 	ld	h,(hl)
   000C 6F                   51 	ld	l,a
   000D E5                   52 	push	hl
   000E F8 08                53 	ldhl	sp,#8
   0010 2A                   54 	ld	a,(hl+)
   0011 66                   55 	ld	h,(hl)
   0012 6F                   56 	ld	l,a
   0013 E5                   57 	push	hl
   0014 CDr00r00             58 	call	___fseq
   0017 E8 08                59 	add	sp, #8
   0019 7B                   60 	ld	a,e
   001A B7                   61 	or	a, a
   001B 28 07                62 	jr	Z,00108$
   001D 11 00 00             63 	ld	de,#0x0000
   0020 21 00 00             64 	ld	hl,#0x0000
   0023 C9                   65 	ret
   0024                      66 00108$:
                             67 ;../acosf.c:39: else if (x ==-1.0) return PI;
   0024 21 80 BF             68 	ld	hl,#0xBF80
   0027 E5                   69 	push	hl
   0028 21 00 00             70 	ld	hl,#0x0000
   002B E5                   71 	push	hl
   002C F8 08                72 	ldhl	sp,#8
   002E 2A                   73 	ld	a,(hl+)
   002F 66                   74 	ld	h,(hl)
   0030 6F                   75 	ld	l,a
   0031 E5                   76 	push	hl
   0032 F8 08                77 	ldhl	sp,#8
   0034 2A                   78 	ld	a,(hl+)
   0035 66                   79 	ld	h,(hl)
   0036 6F                   80 	ld	l,a
   0037 E5                   81 	push	hl
   0038 CDr00r00             82 	call	___fseq
   003B E8 08                83 	add	sp, #8
   003D 7B                   84 	ld	a,e
   003E B7                   85 	or	a, a
   003F 28 07                86 	jr	Z,00105$
   0041 11 DB 0F             87 	ld	de,#0x0FDB
   0044 21 49 40             88 	ld	hl,#0x4049
   0047 C9                   89 	ret
   0048                      90 00105$:
                             91 ;../acosf.c:40: else if (x == 0.0) return HALF_PI;
   0048 F8 05                92 	ldhl	sp,#5
   004A 7E                   93 	ld	a,(hl)
   004B CB BF                94 	res	7, a
   004D 2B                   95 	dec	hl
   004E B6                   96 	or	a, (hl)
   004F 2B                   97 	dec	hl
   0050 B6                   98 	or	a, (hl)
   0051 2B                   99 	dec	hl
   0052 B6                  100 	or	a,(hl)
   0053 20 07               101 	jr	NZ,00102$
   0055 11 DB 0F            102 	ld	de,#0x0FDB
   0058 21 C9 3F            103 	ld	hl,#0x3FC9
   005B C9                  104 	ret
   005C                     105 00102$:
                            106 ;../acosf.c:41: else               return asincosf(x, true);
   005C 3E 01               107 	ld	a,#0x01
   005E F5                  108 	push	af
   005F 33                  109 	inc	sp
   0060 F8 05               110 	ldhl	sp,#5
   0062 2A                  111 	ld	a,(hl+)
   0063 66                  112 	ld	h,(hl)
   0064 6F                  113 	ld	l,a
   0065 E5                  114 	push	hl
   0066 F8 05               115 	ldhl	sp,#5
   0068 2A                  116 	ld	a,(hl+)
   0069 66                  117 	ld	h,(hl)
   006A 6F                  118 	ld	l,a
   006B E5                  119 	push	hl
   006C CDr00r00            120 	call	_asincosf
   006F E8 05               121 	add	sp, #5
   0071 45                  122 	ld	b,l
   0072 4C                  123 	ld	c,h
   0073 C9                  124 	ret
                            125 	.area _CODE
                            126 	.area _CABS (ABS)
