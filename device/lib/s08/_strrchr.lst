                              1 ;--------------------------------------------------------
                              2 ; File Created by SDCC : free open source ANSI-C Compiler
                              3 ; Version 3.5.0 #9253 (Apr  4 2022) (Linux)
                              4 ; This file was generated Mon Apr  4 14:10:37 2022
                              5 ;--------------------------------------------------------
                              6 	.cs08
                              7 	.module _strrchr
                              8 	.optsdcc -ms08
                              9 	
                             10 	.area HOME    (CODE)
                             11 	.area GSINIT0 (CODE)
                             12 	.area GSINIT  (CODE)
                             13 	.area GSFINAL (CODE)
                             14 	.area CSEG    (CODE)
                             15 	.area XINIT   (CODE)
                             16 	.area CONST   (CODE)
                             17 	.area DSEG    (PAG)
                             18 	.area OSEG    (PAG, OVR)
                             19 	.area XSEG
                             20 	.area XISEG
                             21 ;--------------------------------------------------------
                             22 ; Public variables in this module
                             23 ;--------------------------------------------------------
                             24 	.globl _strrchr_PARM_2
                             25 	.globl _strrchr
                             26 ;--------------------------------------------------------
                             27 ; ram data
                             28 ;--------------------------------------------------------
                             29 	.area DSEG    (PAG)
                             30 ;--------------------------------------------------------
                             31 ; overlayable items in ram 
                             32 ;--------------------------------------------------------
                             33 	.area	OSEG    (PAG, OVR)
   0000                      34 _strrchr_sloc0_1_0:
   0000                      35 	.ds 2
                             36 ;--------------------------------------------------------
                             37 ; absolute ram data
                             38 ;--------------------------------------------------------
                             39 	.area IABS    (ABS)
                             40 	.area IABS    (ABS)
                             41 ;--------------------------------------------------------
                             42 ; absolute external ram data
                             43 ;--------------------------------------------------------
                             44 	.area XABS    (ABS)
                             45 ;--------------------------------------------------------
                             46 ; external initialized ram data
                             47 ;--------------------------------------------------------
                             48 	.area XISEG
                             49 ;--------------------------------------------------------
                             50 ; extended address mode data
                             51 ;--------------------------------------------------------
                             52 	.area XSEG
   0000                      53 _strrchr_PARM_2:
   0000                      54 	.ds 2
   0002                      55 _strrchr_start_1_22:
   0002                      56 	.ds 2
                             57 ;--------------------------------------------------------
                             58 ; global & static initialisations
                             59 ;--------------------------------------------------------
                             60 	.area HOME    (CODE)
                             61 	.area GSINIT  (CODE)
                             62 	.area GSFINAL (CODE)
                             63 	.area GSINIT  (CODE)
                             64 ;--------------------------------------------------------
                             65 ; Home
                             66 ;--------------------------------------------------------
                             67 	.area HOME    (CODE)
                             68 	.area HOME    (CODE)
                             69 ;--------------------------------------------------------
                             70 ; code
                             71 ;--------------------------------------------------------
                             72 	.area CSEG    (CODE)
                             73 ;------------------------------------------------------------
                             74 ;Allocation info for local variables in function 'strrchr'
                             75 ;------------------------------------------------------------
                             76 ;ch                        Allocated with name '_strrchr_PARM_2'
                             77 ;string                    Allocated to registers x h 
                             78 ;start                     Allocated with name '_strrchr_start_1_22'
                             79 ;sloc0                     Allocated with name '_strrchr_sloc0_1_0'
                             80 ;------------------------------------------------------------
                             81 ;../_strrchr.c:34: char * strrchr ( const char * string, int ch )
                             82 ;	-----------------------------------------
                             83 ;	 function strrchr
                             84 ;	-----------------------------------------
                             85 ;	Register assignment is optimal.
                             86 ;	Stack space usage: 0 bytes.
   0000                      87 _strrchr:
   0000 89            [ 2]   88 	pshx
   0001 97            [ 1]   89 	tax
   0002 8A            [ 3]   90 	pulh
                             91 ;../_strrchr.c:37: const char * start = string;
   0003 96r00r02      [ 5]   92 	sthx	_strrchr_start_1_22
                             93 ;../_strrchr.c:39: while (*string++)                       /* find end of string */
   0006                      94 00101$:
   0006 F6            [ 3]   95 	lda	,x
   0007 AF 01         [ 2]   96 	aix	#1
   0009 4D            [ 1]   97 	tsta
   000A 26 FA         [ 3]   98 	bne	00101$
                             99 ;../_strrchr.c:42: while (--string != start && *string != ch)
   000C 35*00         [ 4]  100 	sthx	*_strrchr_sloc0_1_0
   000E                     101 00105$:
   000E 55*00         [ 4]  102 	ldhx	*_strrchr_sloc0_1_0
   0010 AF FF         [ 2]  103 	aix	#-1
   0012 35*00         [ 4]  104 	sthx	*_strrchr_sloc0_1_0
   0014 55*00         [ 4]  105 	ldhx	*_strrchr_sloc0_1_0
   0016 FE            [ 3]  106 	ldx	,x
   0017 9F            [ 1]  107 	txa
   0018 49            [ 1]  108 	rola	
   0019 4F            [ 1]  109 	clra	
   001A A2 00         [ 2]  110 	sbc	#0x00
   001C 87            [ 2]  111 	psha
   001D 8A            [ 3]  112 	pulh
   001E 3Er00r00      [ 6]  113 	cphx	_strrchr_PARM_2
   0021 27 03         [ 3]  114 	beq	00135$
   0023 4F            [ 1]  115 	clra
   0024 20 02         [ 3]  116 	bra	00134$
   0026                     117 00135$:
   0026 A6 01         [ 2]  118 	lda	#0x01
   0028                     119 00134$:
   0028 55*00         [ 4]  120 	ldhx	*_strrchr_sloc0_1_0
   002A 3Er00r02      [ 6]  121 	cphx	_strrchr_start_1_22
   002D 27 03         [ 3]  122 	beq	00107$
   002F 4D            [ 1]  123 	tsta
   0030 27 DC         [ 3]  124 	beq	00105$
   0032                     125 00107$:
                            126 ;../_strrchr.c:45: if (*string == ch)                      /* char found ? */
   0032 4D            [ 1]  127 	tsta
   0033 27 05         [ 3]  128 	beq	00109$
                            129 ;../_strrchr.c:46: return( (char *)string );
   0035 BE*00         [ 3]  130 	ldx	*_strrchr_sloc0_1_0
   0037 B6*01         [ 3]  131 	lda	*(_strrchr_sloc0_1_0 + 1)
   0039 81            [ 6]  132 	rts
   003A                     133 00109$:
                            134 ;../_strrchr.c:48: return (NULL) ;
   003A 4F            [ 1]  135 	clra
   003B 97            [ 1]  136 	tax
   003C 81            [ 6]  137 	rts
                            138 	.area CSEG    (CODE)
                            139 	.area CONST   (CODE)
                            140 	.area XINIT   (CODE)
                            141 	.area CABS    (ABS,CODE)
