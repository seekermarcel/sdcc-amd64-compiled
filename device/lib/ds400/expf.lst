                                      1 ;--------------------------------------------------------
                                      2 ; File Created by SDCC : free open source ANSI-C Compiler
                                      3 ; Version 3.5.0 #9253 (Apr  4 2022) (Linux)
                                      4 ; This file was generated Mon Apr  4 14:10:28 2022
                                      5 ;--------------------------------------------------------
                                      6 	.module expf
                                      7 	.optsdcc -mds400 --model-flat24
                                      8 	
                                      9 ;--------------------------------------------------------
                                     10 ; CPU specific extensions
                                     11 ;--------------------------------------------------------
                                     12 	.DS80C390
                                     13 	.amode	2	; 24 bit flat addressing
                           000082    14 dpl	=	0x82
                           000083    15 dph	=	0x83
                           000084    16 dpl1	=	0x84
                           000085    17 dph1	=	0x85
                           000086    18 dps	=	0x86
                           000093    19 dpx	=	0x93
                           000095    20 dpx1	=	0x95
                           00009B    21 esp	=	0x9B
                           00009C    22 ap	=	0x9C
                           00009C    23 acc1	=	0x9C
                           0000D1    24 mcnt0	=	0xD1
                           0000D2    25 mcnt1	=	0xD2
                           0000D3    26 ma	=	0xD3
                           0000D4    27 mb	=	0xD4
                           0000D5    28 mc	=	0xD5
                           00009D    29 acon	=	0x9D
                           0000D1    30 F1	=	0xD1	; user flag
                                     31 ;--------------------------------------------------------
                                     32 ; Public variables in this module
                                     33 ;--------------------------------------------------------
                                     34 	.globl _ldexpf
                                     35 	.globl _expf
                                     36 ;--------------------------------------------------------
                                     37 ; special function registers
                                     38 ;--------------------------------------------------------
                                     39 ;--------------------------------------------------------
                                     40 ; special function bits
                                     41 ;--------------------------------------------------------
                                     42 ;--------------------------------------------------------
                                     43 ; overlayable register banks
                                     44 ;--------------------------------------------------------
                                     45 	.area REG_BANK_0	(REL,OVR,DATA)
      000000                         46 	.ds 8
                                     47 	.area REG_BANK_3	(REL,OVR,DATA)
      000000                         48 	.ds 8
                                     49 ;--------------------------------------------------------
                                     50 ; internal ram data
                                     51 ;--------------------------------------------------------
                                     52 	.area DSEG    (DATA)
                                     53 ;--------------------------------------------------------
                                     54 ; overlayable items in internal ram 
                                     55 ;--------------------------------------------------------
                                     56 ;--------------------------------------------------------
                                     57 ; indirectly addressable internal ram data
                                     58 ;--------------------------------------------------------
                                     59 	.area ISEG    (DATA)
                                     60 ;--------------------------------------------------------
                                     61 ; absolute internal ram data
                                     62 ;--------------------------------------------------------
                                     63 	.area IABS    (ABS,DATA)
                                     64 	.area IABS    (ABS,DATA)
                                     65 ;--------------------------------------------------------
                                     66 ; bit data
                                     67 ;--------------------------------------------------------
                                     68 	.area BSEG    (BIT)
                                     69 ;--------------------------------------------------------
                                     70 ; paged external ram data
                                     71 ;--------------------------------------------------------
                                     72 	.area PSEG    (PAG,XDATA)
                                     73 ;--------------------------------------------------------
                                     74 ; external ram data
                                     75 ;--------------------------------------------------------
                                     76 	.area XSEG    (XDATA)
                                     77 ;--------------------------------------------------------
                                     78 ; absolute external ram data
                                     79 ;--------------------------------------------------------
                                     80 	.area XABS    (ABS,XDATA)
                                     81 ;--------------------------------------------------------
                                     82 ; external initialized ram data
                                     83 ;--------------------------------------------------------
                                     84 	.area XISEG   (XDATA)
                                     85 ;--------------------------------------------------------
                                     86 ; global & static initialisations
                                     87 ;--------------------------------------------------------
                                     88 	.area HOME    (CODE)
                                     89 	.area GSINIT  (CODE)
                                     90 	.area GSFINAL (CODE)
                                     91 	.area GSINIT  (CODE)
                                     92 ;--------------------------------------------------------
                                     93 ; Home
                                     94 ;--------------------------------------------------------
                                     95 	.area HOME    (CODE)
                                     96 	.area HOME    (CODE)
                                     97 ;--------------------------------------------------------
                                     98 ; code
                                     99 ;--------------------------------------------------------
                                    100 	.area CSEG    (CODE)
                                    101 ;------------------------------------------------------------
                                    102 ;Allocation info for local variables in function 'expf'
                                    103 ;------------------------------------------------------------
                                    104 ;x                         Allocated to registers r2 r3 r4 r5 
                                    105 ;n                         Allocated to stack - _bp +5
                                    106 ;xn                        Allocated to registers r2 r3 r4 r5 
                                    107 ;g                         Allocated to stack - _bp +7
                                    108 ;r                         Allocated to stack - _bp +11
                                    109 ;z                         Allocated to registers r2 r3 r4 r5 
                                    110 ;y                         Allocated to stack - _bp +15
                                    111 ;sign                      Allocated to stack - _bp +19
                                    112 ;sloc0                     Allocated to stack - _bp +1
                                    113 ;------------------------------------------------------------
                                    114 ;	expf.c:330: float expf(float x) _FLOAT_FUNC_REENTRANT
                                    115 ;	-----------------------------------------
                                    116 ;	 function expf
                                    117 ;	-----------------------------------------
      000000                        118 _expf:
                           000002   119 	ar2 = 0x02
                           000003   120 	ar3 = 0x03
                           000004   121 	ar4 = 0x04
                           000005   122 	ar5 = 0x05
                           000006   123 	ar6 = 0x06
                           000007   124 	ar7 = 0x07
                           000000   125 	ar0 = 0x00
                           000001   126 	ar1 = 0x01
      000000 C0*00            [ 8]  127 	push	_bpx
      000002 C0*01            [ 8]  128 	push	_bpx+1
      000004 85 81*00         [12]  129 	mov	_bpx,sp
      000007 85 9B*01         [12]  130 	mov	_bpx+1,esp
      00000A 53*01 03         [12]  131 	anl	_bpx+1,#3
      00000D 43*01 DC         [12]  132 	orl	_bpx+1,#0xDC
      000010 E5 81            [ 8]  133 	mov	a,sp
      000012 24 13            [ 8]  134 	add	a,#0x13
      000014 F5 81            [ 8]  135 	mov	sp,a
      000016 E5 9B            [ 8]  136 	mov	a,esp
      000018 54 03            [ 8]  137 	anl	a,#3
      00001A 44 DC            [ 8]  138 	orl	a,#0xDC
      00001C 34 00            [ 8]  139 	addc	a,#0x00
      00001E F5 9B            [ 8]  140 	mov	esp,a
      000020 AA 82            [ 8]  141 	mov	r2,dpl
      000022 AB 83            [ 8]  142 	mov	r3,dph
      000024 AC 93            [ 8]  143 	mov	r4,dpx
      000026 AD F0            [ 8]  144 	mov	r5,b
                                    145 ;	expf.c:336: if(x>=0.0)
                                    146 ;	genAssign: resultIsFar = TRUE
      000028 90s00r00r00      [12]  147 	mov	dptr,#___fslt_PARM_2
      00002C E4               [ 4]  148 	clr	a
      00002D F0               [ 8]  149 	movx	@dptr,a
      00002E A3               [12]  150 	inc	dptr
      00002F F0               [ 8]  151 	movx	@dptr,a
      000030 A3               [12]  152 	inc	dptr
      000031 F0               [ 8]  153 	movx	@dptr,a
      000032 A3               [12]  154 	inc	dptr
      000033 F0               [ 8]  155 	movx	@dptr,a
      000034 C0 02            [ 8]  156 	push	ar2
      000036 C0 03            [ 8]  157 	push	ar3
      000038 C0 04            [ 8]  158 	push	ar4
      00003A C0 05            [ 8]  159 	push	ar5
      00003C 8A 82            [ 8]  160 	mov	dpl,r2
      00003E 8B 83            [ 8]  161 	mov	dph,r3
      000040 8C 93            [ 8]  162 	mov	dpx,r4
      000042 8D F0            [ 8]  163 	mov	b,r5
      000044 12s00r00r00      [16]  164 	lcall	___fslt
      000048 D0 05            [ 8]  165 	pop	ar5
      00004A D0 04            [ 8]  166 	pop	ar4
      00004C D0 03            [ 8]  167 	pop	ar3
      00004E D0 02            [ 8]  168 	pop	ar2
      000050 E5 82            [ 8]  169 	mov	a,dpl
      000052 70 2F            [12]  170 	jnz  00102$
      000054                        171 00141$:
                                    172 ;	expf.c:337: { y=x;  sign=0; }
                                    173 ;	genAssign: resultIsFar = TRUE
      000054 E5*00            [ 8]  174 	mov	a,_bpx
      000056 C3               [ 4]  175 	clr	c
      000057 94 F1            [ 8]  176 	subb	a,#0xF1
      000059 F5 82            [ 8]  177 	mov	dpl,a
      00005B E5*01            [ 8]  178 	mov	a,_bpx+1
      00005D 94 FF            [ 8]  179 	subb	a,#0xFF
      00005F F5 83            [ 8]  180 	mov	dph,a
      000061 75 93 FF         [12]  181 	mov	dpx,#0xFF
      000064 EA               [ 4]  182 	mov	a,r2
      000065 F0               [ 8]  183 	movx	@dptr,a
      000066 A3               [12]  184 	inc	dptr
      000067 EB               [ 4]  185 	mov	a,r3
      000068 F0               [ 8]  186 	movx	@dptr,a
      000069 A3               [12]  187 	inc	dptr
      00006A EC               [ 4]  188 	mov	a,r4
      00006B F0               [ 8]  189 	movx	@dptr,a
      00006C A3               [12]  190 	inc	dptr
      00006D ED               [ 4]  191 	mov	a,r5
      00006E F0               [ 8]  192 	movx	@dptr,a
                                    193 ;	genAssign: resultIsFar = TRUE
      00006F E5*00            [ 8]  194 	mov	a,_bpx
      000071 C3               [ 4]  195 	clr	c
      000072 94 ED            [ 8]  196 	subb	a,#0xED
      000074 F5 82            [ 8]  197 	mov	dpl,a
      000076 E5*01            [ 8]  198 	mov	a,_bpx+1
      000078 94 FF            [ 8]  199 	subb	a,#0xFF
      00007A F5 83            [ 8]  200 	mov	dph,a
      00007C 75 93 FF         [12]  201 	mov	dpx,#0xFF
      00007F E4               [ 4]  202 	clr	a
      000080 F0               [ 8]  203 	movx	@dptr,a
      000081 80 32            [12]  204 	sjmp 00103$
      000083                        205 00102$:
                                    206 ;	expf.c:339: { y=-x; sign=1; }
      000083 ED               [ 4]  207 	mov	a,r5
      000084 B2 E7            [ 8]  208 	cpl	acc[7]
      000086 FD               [ 4]  209 	mov	r5,a
                                    210 ;	genAssign: resultIsFar = TRUE
      000087 E5*00            [ 8]  211 	mov	a,_bpx
      000089 C3               [ 4]  212 	clr	c
      00008A 94 F1            [ 8]  213 	subb	a,#0xF1
      00008C F5 82            [ 8]  214 	mov	dpl,a
      00008E E5*01            [ 8]  215 	mov	a,_bpx+1
      000090 94 FF            [ 8]  216 	subb	a,#0xFF
      000092 F5 83            [ 8]  217 	mov	dph,a
      000094 75 93 FF         [12]  218 	mov	dpx,#0xFF
      000097 EA               [ 4]  219 	mov	a,r2
      000098 F0               [ 8]  220 	movx	@dptr,a
      000099 A3               [12]  221 	inc	dptr
      00009A EB               [ 4]  222 	mov	a,r3
      00009B F0               [ 8]  223 	movx	@dptr,a
      00009C A3               [12]  224 	inc	dptr
      00009D EC               [ 4]  225 	mov	a,r4
      00009E F0               [ 8]  226 	movx	@dptr,a
      00009F A3               [12]  227 	inc	dptr
      0000A0 ED               [ 4]  228 	mov	a,r5
      0000A1 F0               [ 8]  229 	movx	@dptr,a
                                    230 ;	genAssign: resultIsFar = TRUE
      0000A2 E5*00            [ 8]  231 	mov	a,_bpx
      0000A4 C3               [ 4]  232 	clr	c
      0000A5 94 ED            [ 8]  233 	subb	a,#0xED
      0000A7 F5 82            [ 8]  234 	mov	dpl,a
      0000A9 E5*01            [ 8]  235 	mov	a,_bpx+1
      0000AB 94 FF            [ 8]  236 	subb	a,#0xFF
      0000AD F5 83            [ 8]  237 	mov	dph,a
      0000AF 75 93 FF         [12]  238 	mov	dpx,#0xFF
      0000B2 74 01            [ 8]  239 	mov	a,#0x01
      0000B4 F0               [ 8]  240 	movx	@dptr,a
      0000B5                        241 00103$:
                                    242 ;	expf.c:341: if(y<EXPEPS) return 1.0;
                                    243 ;	genAssign: resultIsFar = TRUE
      0000B5 90s00r00r00      [12]  244 	mov	dptr,#___fslt_PARM_2
      0000B9 74 95            [ 8]  245 	mov	a,#0x95
      0000BB F0               [ 8]  246 	movx	@dptr,a
      0000BC A3               [12]  247 	inc	dptr
      0000BD 74 BF            [ 8]  248 	mov	a,#0xBF
      0000BF F0               [ 8]  249 	movx	@dptr,a
      0000C0 A3               [12]  250 	inc	dptr
      0000C1 74 D6            [ 8]  251 	mov	a,#0xD6
      0000C3 F0               [ 8]  252 	movx	@dptr,a
      0000C4 A3               [12]  253 	inc	dptr
      0000C5 74 33            [ 8]  254 	mov	a,#0x33
      0000C7 F0               [ 8]  255 	movx	@dptr,a
      0000C8 E5*00            [ 8]  256 	mov	a,_bpx
      0000CA C3               [ 4]  257 	clr	c
      0000CB 94 F1            [ 8]  258 	subb	a,#0xF1
      0000CD F5 84            [ 8]  259 	mov	dpl1,a
      0000CF E5*01            [ 8]  260 	mov	a,_bpx+1
      0000D1 94 FF            [ 8]  261 	subb	a,#0xFF
      0000D3 F5 85            [ 8]  262 	mov	dph1,a
      0000D5 75 95 FF         [12]  263 	mov	dpx1,#0xFF
      0000D8 05 86            [ 8]  264 	inc	dps
      0000DA E0               [ 8]  265 	movx	a,@dptr
      0000DB F5 82            [ 8]  266 	mov	dpl,a
      0000DD A3               [12]  267 	inc	dptr
      0000DE E0               [ 8]  268 	movx	a,@dptr
      0000DF F5 83            [ 8]  269 	mov	dph,a
      0000E1 A3               [12]  270 	inc	dptr
      0000E2 E0               [ 8]  271 	movx	a,@dptr
      0000E3 F5 93            [ 8]  272 	mov	dpx,a
      0000E5 A3               [12]  273 	inc	dptr
      0000E6 E0               [ 8]  274 	movx	a,@dptr
      0000E7 F5 F0            [ 8]  275 	mov	b,a
      0000E9 75 86 00         [12]  276 	mov	dps,#0
      0000EC 12s00r00r00      [16]  277 	lcall	___fslt
      0000F0 E5 82            [ 8]  278 	mov	a,dpl
      0000F2 60 0E            [12]  279 	jz  00105$
      0000F4                        280 00142$:
      0000F4 90 00 00 00      [12]  281 	mov  dptr,#0x0000
      0000F8 75 93 80         [12]  282 	mov	dpx,#0x80
      0000FB 75 F0 3F         [12]  283 	mov	b,#0x3F
      0000FE 02s00r06rCC      [16]  284 	ljmp	00118$
      000102                        285 00105$:
                                    286 ;	expf.c:343: if(y>BIGX)
                                    287 ;	genAssign: resultIsFar = TRUE
      000102 90s00r00r00      [12]  288 	mov	dptr,#___fsgt_PARM_2
      000106 74 18            [ 8]  289 	mov	a,#0x18
      000108 F0               [ 8]  290 	movx	@dptr,a
      000109 A3               [12]  291 	inc	dptr
      00010A 74 72            [ 8]  292 	mov	a,#0x72
      00010C F0               [ 8]  293 	movx	@dptr,a
      00010D A3               [12]  294 	inc	dptr
      00010E 74 B1            [ 8]  295 	mov	a,#0xB1
      000110 F0               [ 8]  296 	movx	@dptr,a
      000111 A3               [12]  297 	inc	dptr
      000112 74 42            [ 8]  298 	mov	a,#0x42
      000114 F0               [ 8]  299 	movx	@dptr,a
      000115 E5*00            [ 8]  300 	mov	a,_bpx
      000117 C3               [ 4]  301 	clr	c
      000118 94 F1            [ 8]  302 	subb	a,#0xF1
      00011A F5 84            [ 8]  303 	mov	dpl1,a
      00011C E5*01            [ 8]  304 	mov	a,_bpx+1
      00011E 94 FF            [ 8]  305 	subb	a,#0xFF
      000120 F5 85            [ 8]  306 	mov	dph1,a
      000122 75 95 FF         [12]  307 	mov	dpx1,#0xFF
      000125 05 86            [ 8]  308 	inc	dps
      000127 E0               [ 8]  309 	movx	a,@dptr
      000128 F5 82            [ 8]  310 	mov	dpl,a
      00012A A3               [12]  311 	inc	dptr
      00012B E0               [ 8]  312 	movx	a,@dptr
      00012C F5 83            [ 8]  313 	mov	dph,a
      00012E A3               [12]  314 	inc	dptr
      00012F E0               [ 8]  315 	movx	a,@dptr
      000130 F5 93            [ 8]  316 	mov	dpx,a
      000132 A3               [12]  317 	inc	dptr
      000133 E0               [ 8]  318 	movx	a,@dptr
      000134 F5 F0            [ 8]  319 	mov	b,a
      000136 75 86 00         [12]  320 	mov	dps,#0
      000139 12s00r00r00      [16]  321 	lcall	___fsgt
      00013D E5 82            [ 8]  322 	mov	a,dpl
      00013F 60 33            [12]  323 	jz  00110$
      000141                        324 00143$:
                                    325 ;	expf.c:345: if(sign)
      000141 E5*00            [ 8]  326 	mov	a,_bpx
      000143 C3               [ 4]  327 	clr	c
      000144 94 ED            [ 8]  328 	subb	a,#0xED
      000146 F5 82            [ 8]  329 	mov	dpl,a
      000148 E5*01            [ 8]  330 	mov	a,_bpx+1
      00014A 94 FF            [ 8]  331 	subb	a,#0xFF
      00014C F5 83            [ 8]  332 	mov	dph,a
      00014E 75 93 FF         [12]  333 	mov	dpx,#0xFF
      000151 E0               [ 8]  334 	movx	a,@dptr
      000152 60 15            [12]  335 	jz  00107$
      000154                        336 00144$:
                                    337 ;	expf.c:347: errno=ERANGE;
                                    338 ;	genAssign: resultIsFar = TRUE
      000154 90s00r00r00      [12]  339 	mov	dptr,#_errno
      000158 74 22            [ 8]  340 	mov	a,#0x22
      00015A F0               [ 8]  341 	movx	@dptr,a
      00015B E4               [ 4]  342 	clr	a
      00015C A3               [12]  343 	inc	dptr
      00015D F0               [ 8]  344 	movx	@dptr,a
                                    345 ;	expf.c:349: ;
      00015E 90 7F FF FF      [12]  346 	mov	dptr,#0x7FFFFF
      000162 75 F0 7F         [12]  347 	mov	b,#0x7F
      000165 02s00r06rCC      [16]  348 	ljmp	00118$
      000169                        349 00107$:
                                    350 ;	expf.c:353: return 0.0;
      000169 90 00 00 00      [12]  351 	mov  dptr,#0x0000
      00016D 75 F0 00         [12]  352 	mov	b,#0x00
      000170 02s00r06rCC      [16]  353 	ljmp	00118$
      000174                        354 00110$:
                                    355 ;	expf.c:357: z=y*K1;
      000174 E5*00            [ 8]  356 	mov	a,_bpx
      000176 C3               [ 4]  357 	clr	c
      000177 94 F1            [ 8]  358 	subb	a,#0xF1
      000179 F5 82            [ 8]  359 	mov	dpl,a
      00017B E5*01            [ 8]  360 	mov	a,_bpx+1
      00017D 94 FF            [ 8]  361 	subb	a,#0xFF
      00017F F5 83            [ 8]  362 	mov	dph,a
      000181 75 93 FF         [12]  363 	mov	dpx,#0xFF
                                    364 ;	genAssign: resultIsFar = TRUE
      000184 75 86 21         [12]  365 	mov	dps,#0x21
      000187 90s00r00r00      [12]  366 	mov	dptr,#___fsmul_PARM_2
      00018B E0               [ 8]  367 	movx	a,@dptr
      00018C F0               [ 8]  368 	movx	@dptr,a
      00018D A3               [12]  369 	inc	dptr
      00018E A3               [12]  370 	inc	dptr
      00018F E0               [ 8]  371 	movx	a,@dptr
      000190 F0               [ 8]  372 	movx	@dptr,a
      000191 A3               [12]  373 	inc	dptr
      000192 A3               [12]  374 	inc	dptr
      000193 E0               [ 8]  375 	movx	a,@dptr
      000194 F0               [ 8]  376 	movx	@dptr,a
      000195 A3               [12]  377 	inc	dptr
      000196 A3               [12]  378 	inc	dptr
      000197 E0               [ 8]  379 	movx	a,@dptr
      000198 F0               [ 8]  380 	movx	@dptr,a
      000199 75 86 00         [12]  381 	mov	dps,#0
      00019C 90 B8 AA 3B      [12]  382 	mov	dptr,#0xB8AA3B
      0001A0 75 F0 3F         [12]  383 	mov	b,#0x3F
      0001A3 12s00r00r00      [16]  384 	lcall	___fsmul
      0001A7 AA 82            [ 8]  385 	mov	r2,dpl
      0001A9 AB 83            [ 8]  386 	mov	r3,dph
      0001AB AC 93            [ 8]  387 	mov	r4,dpx
      0001AD AD F0            [ 8]  388 	mov	r5,b
                                    389 ;	genAssign: resultIsFar = TRUE
                                    390 ;	expf.c:358: n=z;
      0001AF C0 02            [ 8]  391 	push	ar2
      0001B1 C0 03            [ 8]  392 	push	ar3
      0001B3 C0 04            [ 8]  393 	push	ar4
      0001B5 C0 05            [ 8]  394 	push	ar5
      0001B7 8A 82            [ 8]  395 	mov	dpl,r2
      0001B9 8B 83            [ 8]  396 	mov	dph,r3
      0001BB 8C 93            [ 8]  397 	mov	dpx,r4
      0001BD 8D F0            [ 8]  398 	mov	b,r5
      0001BF 12s00r00r00      [16]  399 	lcall	___fs2sint
      0001C3 AE 82            [ 8]  400 	mov	r6,dpl
      0001C5 AF 83            [ 8]  401 	mov	r7,dph
      0001C7 D0 05            [ 8]  402 	pop	ar5
      0001C9 D0 04            [ 8]  403 	pop	ar4
      0001CB D0 03            [ 8]  404 	pop	ar3
      0001CD D0 02            [ 8]  405 	pop	ar2
                                    406 ;	genAssign: resultIsFar = TRUE
      0001CF E5*00            [ 8]  407 	mov	a,_bpx
      0001D1 C3               [ 4]  408 	clr	c
      0001D2 94 FB            [ 8]  409 	subb	a,#0xFB
      0001D4 F5 82            [ 8]  410 	mov	dpl,a
      0001D6 E5*01            [ 8]  411 	mov	a,_bpx+1
      0001D8 94 FF            [ 8]  412 	subb	a,#0xFF
      0001DA F5 83            [ 8]  413 	mov	dph,a
      0001DC 75 93 FF         [12]  414 	mov	dpx,#0xFF
      0001DF EE               [ 4]  415 	mov	a,r6
      0001E0 F0               [ 8]  416 	movx	@dptr,a
      0001E1 A3               [12]  417 	inc	dptr
      0001E2 EF               [ 4]  418 	mov	a,r7
      0001E3 F0               [ 8]  419 	movx	@dptr,a
                                    420 ;	expf.c:360: if(n<0) --n;
      0001E4 E5*00            [ 8]  421 	mov	a,_bpx
      0001E6 C3               [ 4]  422 	clr	c
      0001E7 94 FB            [ 8]  423 	subb	a,#0xFB
      0001E9 F5 82            [ 8]  424 	mov	dpl,a
      0001EB E5*01            [ 8]  425 	mov	a,_bpx+1
      0001ED 94 FF            [ 8]  426 	subb	a,#0xFF
      0001EF F5 83            [ 8]  427 	mov	dph,a
      0001F1 75 93 FF         [12]  428 	mov	dpx,#0xFF
      0001F4 A3               [12]  429 	inc	dptr
      0001F5 E0               [ 8]  430 	movx	a,@dptr
      0001F6 30 E7 2E         [12]  431 	jnb  acc[7],00112$
      0001F9                        432 00145$:
      0001F9 E5*00            [ 8]  433 	mov	a,_bpx
      0001FB C3               [ 4]  434 	clr	c
      0001FC 94 FB            [ 8]  435 	subb	a,#0xFB
      0001FE F5 82            [ 8]  436 	mov	dpl,a
      000200 E5*01            [ 8]  437 	mov	a,_bpx+1
      000202 94 FF            [ 8]  438 	subb	a,#0xFF
      000204 F5 83            [ 8]  439 	mov	dph,a
      000206 75 93 FF         [12]  440 	mov	dpx,#0xFF
      000209 E0               [ 8]  441 	movx	a,@dptr
      00020A 24 FF            [ 8]  442 	add	a,#0xFF
      00020C F8               [ 4]  443 	mov	r0,a
      00020D A3               [12]  444 	inc	dptr
      00020E E0               [ 8]  445 	movx	a,@dptr
      00020F 34 FF            [ 8]  446 	addc	a,#0xFF
      000211 F9               [ 4]  447 	mov	r1,a
                                    448 ;	genAssign: resultIsFar = TRUE
      000212 E5*00            [ 8]  449 	mov	a,_bpx
      000214 C3               [ 4]  450 	clr	c
      000215 94 FB            [ 8]  451 	subb	a,#0xFB
      000217 F5 82            [ 8]  452 	mov	dpl,a
      000219 E5*01            [ 8]  453 	mov	a,_bpx+1
      00021B 94 FF            [ 8]  454 	subb	a,#0xFF
      00021D F5 83            [ 8]  455 	mov	dph,a
      00021F 75 93 FF         [12]  456 	mov	dpx,#0xFF
      000222 E8               [ 4]  457 	mov	a,r0
      000223 F0               [ 8]  458 	movx	@dptr,a
      000224 A3               [12]  459 	inc	dptr
      000225 E9               [ 4]  460 	mov	a,r1
      000226 F0               [ 8]  461 	movx	@dptr,a
      000227                        462 00112$:
                                    463 ;	expf.c:361: if(z-n>=0.5) ++n;
      000227 C0 02            [ 8]  464 	push	ar2
      000229 C0 03            [ 8]  465 	push	ar3
      00022B C0 04            [ 8]  466 	push	ar4
      00022D C0 05            [ 8]  467 	push	ar5
      00022F E5*00            [ 8]  468 	mov	a,_bpx
      000231 C3               [ 4]  469 	clr	c
      000232 94 FB            [ 8]  470 	subb	a,#0xFB
      000234 F5 84            [ 8]  471 	mov	dpl1,a
      000236 E5*01            [ 8]  472 	mov	a,_bpx+1
      000238 94 FF            [ 8]  473 	subb	a,#0xFF
      00023A F5 85            [ 8]  474 	mov	dph1,a
      00023C 75 95 FF         [12]  475 	mov	dpx1,#0xFF
      00023F 05 86            [ 8]  476 	inc	dps
      000241 E0               [ 8]  477 	movx	a,@dptr
      000242 F5 82            [ 8]  478 	mov	dpl,a
      000244 A3               [12]  479 	inc	dptr
      000245 E0               [ 8]  480 	movx	a,@dptr
      000246 F5 83            [ 8]  481 	mov	dph,a
      000248 75 86 00         [12]  482 	mov	dps,#0
      00024B 12s00r00r00      [16]  483 	lcall	___sint2fs
      00024F A8 82            [ 8]  484 	mov	r0,dpl
      000251 A9 83            [ 8]  485 	mov	r1,dph
      000253 AE 93            [ 8]  486 	mov	r6,dpx
      000255 AF F0            [ 8]  487 	mov	r7,b
      000257 D0 05            [ 8]  488 	pop	ar5
      000259 D0 04            [ 8]  489 	pop	ar4
      00025B D0 03            [ 8]  490 	pop	ar3
      00025D D0 02            [ 8]  491 	pop	ar2
                                    492 ;	genAssign: resultIsFar = TRUE
      00025F 90s00r00r00      [12]  493 	mov	dptr,#___fssub_PARM_2
      000263 E8               [ 4]  494 	mov	a,r0
      000264 F0               [ 8]  495 	movx	@dptr,a
      000265 A3               [12]  496 	inc	dptr
      000266 E9               [ 4]  497 	mov	a,r1
      000267 F0               [ 8]  498 	movx	@dptr,a
      000268 A3               [12]  499 	inc	dptr
      000269 EE               [ 4]  500 	mov	a,r6
      00026A F0               [ 8]  501 	movx	@dptr,a
      00026B A3               [12]  502 	inc	dptr
      00026C EF               [ 4]  503 	mov	a,r7
      00026D F0               [ 8]  504 	movx	@dptr,a
      00026E 8A 82            [ 8]  505 	mov	dpl,r2
      000270 8B 83            [ 8]  506 	mov	dph,r3
      000272 8C 93            [ 8]  507 	mov	dpx,r4
      000274 8D F0            [ 8]  508 	mov	b,r5
      000276 12s00r00r00      [16]  509 	lcall	___fssub
      00027A AE 82            [ 8]  510 	mov	r6,dpl
      00027C AF 83            [ 8]  511 	mov	r7,dph
      00027E A8 93            [ 8]  512 	mov	r0,dpx
      000280 A9 F0            [ 8]  513 	mov	r1,b
                                    514 ;	genAssign: resultIsFar = TRUE
      000282 90s00r00r00      [12]  515 	mov	dptr,#___fslt_PARM_2
      000286 E4               [ 4]  516 	clr	a
      000287 F0               [ 8]  517 	movx	@dptr,a
      000288 A3               [12]  518 	inc	dptr
      000289 E4               [ 4]  519 	clr	a
      00028A F0               [ 8]  520 	movx	@dptr,a
      00028B A3               [12]  521 	inc	dptr
      00028C E4               [ 4]  522 	clr	a
      00028D F0               [ 8]  523 	movx	@dptr,a
      00028E A3               [12]  524 	inc	dptr
      00028F 74 3F            [ 8]  525 	mov	a,#0x3F
      000291 F0               [ 8]  526 	movx	@dptr,a
      000292 8E 82            [ 8]  527 	mov	dpl,r6
      000294 8F 83            [ 8]  528 	mov	dph,r7
      000296 88 93            [ 8]  529 	mov	dpx,r0
      000298 89 F0            [ 8]  530 	mov	b,r1
      00029A 12s00r00r00      [16]  531 	lcall	___fslt
      00029E E5 82            [ 8]  532 	mov	a,dpl
      0002A0 70 19            [12]  533 	jnz  00114$
      0002A2                        534 00146$:
      0002A2 E5*00            [ 8]  535 	mov	a,_bpx
      0002A4 C3               [ 4]  536 	clr	c
      0002A5 94 FB            [ 8]  537 	subb	a,#0xFB
      0002A7 F5 82            [ 8]  538 	mov	dpl,a
      0002A9 E5*01            [ 8]  539 	mov	a,_bpx+1
      0002AB 94 FF            [ 8]  540 	subb	a,#0xFF
      0002AD F5 83            [ 8]  541 	mov	dph,a
      0002AF 75 93 FF         [12]  542 	mov	dpx,#0xFF
      0002B2 E0               [ 8]  543 	movx	a,@dptr
      0002B3 24 01            [ 8]  544 	add	a,#0x01
      0002B5 F0               [ 8]  545 	movx	@dptr,a
      0002B6 A3               [12]  546 	inc	dptr
      0002B7 E0               [ 8]  547 	movx	a,@dptr
      0002B8 34 00            [ 8]  548 	addc	a,#0x00
      0002BA F0               [ 8]  549 	movx	@dptr,a
      0002BB                        550 00114$:
                                    551 ;	expf.c:362: xn=n;
      0002BB E5*00            [ 8]  552 	mov	a,_bpx
      0002BD C3               [ 4]  553 	clr	c
      0002BE 94 FB            [ 8]  554 	subb	a,#0xFB
      0002C0 F5 84            [ 8]  555 	mov	dpl1,a
      0002C2 E5*01            [ 8]  556 	mov	a,_bpx+1
      0002C4 94 FF            [ 8]  557 	subb	a,#0xFF
      0002C6 F5 85            [ 8]  558 	mov	dph1,a
      0002C8 75 95 FF         [12]  559 	mov	dpx1,#0xFF
      0002CB 05 86            [ 8]  560 	inc	dps
      0002CD E0               [ 8]  561 	movx	a,@dptr
      0002CE F5 82            [ 8]  562 	mov	dpl,a
      0002D0 A3               [12]  563 	inc	dptr
      0002D1 E0               [ 8]  564 	movx	a,@dptr
      0002D2 F5 83            [ 8]  565 	mov	dph,a
      0002D4 75 86 00         [12]  566 	mov	dps,#0
      0002D7 12s00r00r00      [16]  567 	lcall	___sint2fs
      0002DB AE 82            [ 8]  568 	mov	r6,dpl
      0002DD AF 83            [ 8]  569 	mov	r7,dph
      0002DF A8 93            [ 8]  570 	mov	r0,dpx
      0002E1 A9 F0            [ 8]  571 	mov	r1,b
                                    572 ;	genAssign: resultIsFar = FALSE
      0002E3 8E 02            [ 8]  573 	mov	ar2,r6
      0002E5 8F 03            [ 8]  574 	mov	ar3,r7
      0002E7 88 04            [ 8]  575 	mov	ar4,r0
      0002E9 89 05            [ 8]  576 	mov	ar5,r1
                                    577 ;	expf.c:363: g=((y-xn*C1))-xn*C2;
                                    578 ;	genAssign: resultIsFar = TRUE
      0002EB 90s00r00r00      [12]  579 	mov	dptr,#___fsmul_PARM_2
      0002EF EA               [ 4]  580 	mov	a,r2
      0002F0 F0               [ 8]  581 	movx	@dptr,a
      0002F1 A3               [12]  582 	inc	dptr
      0002F2 EB               [ 4]  583 	mov	a,r3
      0002F3 F0               [ 8]  584 	movx	@dptr,a
      0002F4 A3               [12]  585 	inc	dptr
      0002F5 EC               [ 4]  586 	mov	a,r4
      0002F6 F0               [ 8]  587 	movx	@dptr,a
      0002F7 A3               [12]  588 	inc	dptr
      0002F8 ED               [ 4]  589 	mov	a,r5
      0002F9 F0               [ 8]  590 	movx	@dptr,a
      0002FA C0 02            [ 8]  591 	push	ar2
      0002FC C0 03            [ 8]  592 	push	ar3
      0002FE C0 04            [ 8]  593 	push	ar4
      000300 C0 05            [ 8]  594 	push	ar5
      000302 90 31 80 00      [12]  595 	mov	dptr,#0x318000
      000306 75 F0 3F         [12]  596 	mov	b,#0x3F
      000309 12s00r00r00      [16]  597 	lcall	___fsmul
      00030D AE 82            [ 8]  598 	mov	r6,dpl
      00030F AF 83            [ 8]  599 	mov	r7,dph
      000311 A8 93            [ 8]  600 	mov	r0,dpx
      000313 A9 F0            [ 8]  601 	mov	r1,b
      000315 D0 05            [ 8]  602 	pop	ar5
      000317 D0 04            [ 8]  603 	pop	ar4
      000319 D0 03            [ 8]  604 	pop	ar3
      00031B D0 02            [ 8]  605 	pop	ar2
                                    606 ;	genAssign: resultIsFar = TRUE
      00031D 90s00r00r00      [12]  607 	mov	dptr,#___fssub_PARM_2
      000321 EE               [ 4]  608 	mov	a,r6
      000322 F0               [ 8]  609 	movx	@dptr,a
      000323 A3               [12]  610 	inc	dptr
      000324 EF               [ 4]  611 	mov	a,r7
      000325 F0               [ 8]  612 	movx	@dptr,a
      000326 A3               [12]  613 	inc	dptr
      000327 E8               [ 4]  614 	mov	a,r0
      000328 F0               [ 8]  615 	movx	@dptr,a
      000329 A3               [12]  616 	inc	dptr
      00032A E9               [ 4]  617 	mov	a,r1
      00032B F0               [ 8]  618 	movx	@dptr,a
      00032C C0 02            [ 8]  619 	push	ar2
      00032E C0 03            [ 8]  620 	push	ar3
      000330 C0 04            [ 8]  621 	push	ar4
      000332 C0 05            [ 8]  622 	push	ar5
      000334 E5*00            [ 8]  623 	mov	a,_bpx
      000336 C3               [ 4]  624 	clr	c
      000337 94 F1            [ 8]  625 	subb	a,#0xF1
      000339 F5 84            [ 8]  626 	mov	dpl1,a
      00033B E5*01            [ 8]  627 	mov	a,_bpx+1
      00033D 94 FF            [ 8]  628 	subb	a,#0xFF
      00033F F5 85            [ 8]  629 	mov	dph1,a
      000341 75 95 FF         [12]  630 	mov	dpx1,#0xFF
      000344 05 86            [ 8]  631 	inc	dps
      000346 E0               [ 8]  632 	movx	a,@dptr
      000347 F5 82            [ 8]  633 	mov	dpl,a
      000349 A3               [12]  634 	inc	dptr
      00034A E0               [ 8]  635 	movx	a,@dptr
      00034B F5 83            [ 8]  636 	mov	dph,a
      00034D A3               [12]  637 	inc	dptr
      00034E E0               [ 8]  638 	movx	a,@dptr
      00034F F5 93            [ 8]  639 	mov	dpx,a
      000351 A3               [12]  640 	inc	dptr
      000352 E0               [ 8]  641 	movx	a,@dptr
      000353 F5 F0            [ 8]  642 	mov	b,a
      000355 75 86 00         [12]  643 	mov	dps,#0
      000358 12s00r00r00      [16]  644 	lcall	___fssub
      00035C 75 95 FF         [12]  645 	mov	dpx1,#0xFF
      00035F 85*01 85         [12]  646 	mov	dph1,_bpx+1
      000362 85*00 84         [12]  647 	mov	dpl1,_bpx
      000365 75 86 01         [12]  648 	mov	dps,#1
      000368 A3               [12]  649 	inc	dptr
      000369 75 86 01         [12]  650 	mov	dps, #1
      00036C E5 82            [ 8]  651 	mov	a,dpl
      00036E F0               [ 8]  652 	movx	@dptr,a
      00036F A3               [12]  653 	inc	dptr
      000370 E5 83            [ 8]  654 	mov	a,dph
      000372 F0               [ 8]  655 	movx	@dptr,a
      000373 A3               [12]  656 	inc	dptr
      000374 E5 93            [ 8]  657 	mov	a,dpx
      000376 F0               [ 8]  658 	movx	@dptr,a
      000377 A3               [12]  659 	inc	dptr
      000378 E5 F0            [ 8]  660 	mov	a,b
      00037A F0               [ 8]  661 	movx	@dptr,a
      00037B 75 86 00         [12]  662 	mov	dps,#0
      00037E D0 05            [ 8]  663 	pop	ar5
      000380 D0 04            [ 8]  664 	pop	ar4
      000382 D0 03            [ 8]  665 	pop	ar3
      000384 D0 02            [ 8]  666 	pop	ar2
                                    667 ;	genAssign: resultIsFar = TRUE
      000386 90s00r00r00      [12]  668 	mov	dptr,#___fsmul_PARM_2
      00038A EA               [ 4]  669 	mov	a,r2
      00038B F0               [ 8]  670 	movx	@dptr,a
      00038C A3               [12]  671 	inc	dptr
      00038D EB               [ 4]  672 	mov	a,r3
      00038E F0               [ 8]  673 	movx	@dptr,a
      00038F A3               [12]  674 	inc	dptr
      000390 EC               [ 4]  675 	mov	a,r4
      000391 F0               [ 8]  676 	movx	@dptr,a
      000392 A3               [12]  677 	inc	dptr
      000393 ED               [ 4]  678 	mov	a,r5
      000394 F0               [ 8]  679 	movx	@dptr,a
      000395 90 5E 80 83      [12]  680 	mov	dptr,#0x5E8083
      000399 75 F0 B9         [12]  681 	mov	b,#0xB9
      00039C 12s00r00r00      [16]  682 	lcall	___fsmul
      0003A0 AE 82            [ 8]  683 	mov	r6,dpl
      0003A2 AF 83            [ 8]  684 	mov	r7,dph
      0003A4 A8 93            [ 8]  685 	mov	r0,dpx
      0003A6 A9 F0            [ 8]  686 	mov	r1,b
                                    687 ;	genAssign: resultIsFar = TRUE
      0003A8 90s00r00r00      [12]  688 	mov	dptr,#___fssub_PARM_2
      0003AC EE               [ 4]  689 	mov	a,r6
      0003AD F0               [ 8]  690 	movx	@dptr,a
      0003AE A3               [12]  691 	inc	dptr
      0003AF EF               [ 4]  692 	mov	a,r7
      0003B0 F0               [ 8]  693 	movx	@dptr,a
      0003B1 A3               [12]  694 	inc	dptr
      0003B2 E8               [ 4]  695 	mov	a,r0
      0003B3 F0               [ 8]  696 	movx	@dptr,a
      0003B4 A3               [12]  697 	inc	dptr
      0003B5 E9               [ 4]  698 	mov	a,r1
      0003B6 F0               [ 8]  699 	movx	@dptr,a
      0003B7 75 95 FF         [12]  700 	mov	dpx1,#0xFF
      0003BA 85*01 85         [12]  701 	mov	dph1,_bpx+1
      0003BD 85*00 84         [12]  702 	mov	dpl1,_bpx
      0003C0 75 86 01         [12]  703 	mov	dps,#1
      0003C3 A3               [12]  704 	inc	dptr
      0003C4 75 86 01         [12]  705 	mov	dps, #1
      0003C7 E0               [ 8]  706 	movx	a,@dptr
      0003C8 F5 82            [ 8]  707 	mov	dpl,a
      0003CA A3               [12]  708 	inc	dptr
      0003CB E0               [ 8]  709 	movx	a,@dptr
      0003CC F5 83            [ 8]  710 	mov	dph,a
      0003CE A3               [12]  711 	inc	dptr
      0003CF E0               [ 8]  712 	movx	a,@dptr
      0003D0 F5 93            [ 8]  713 	mov	dpx,a
      0003D2 A3               [12]  714 	inc	dptr
      0003D3 E0               [ 8]  715 	movx	a,@dptr
      0003D4 F5 F0            [ 8]  716 	mov	b,a
      0003D6 75 86 00         [12]  717 	mov	dps,#0
      0003D9 12s00r00r00      [16]  718 	lcall	___fssub
      0003DD AE 82            [ 8]  719 	mov	r6,dpl
      0003DF AF 83            [ 8]  720 	mov	r7,dph
      0003E1 A8 93            [ 8]  721 	mov	r0,dpx
      0003E3 A9 F0            [ 8]  722 	mov	r1,b
                                    723 ;	genAssign: resultIsFar = TRUE
      0003E5 E5*00            [ 8]  724 	mov	a,_bpx
      0003E7 C3               [ 4]  725 	clr	c
      0003E8 94 F9            [ 8]  726 	subb	a,#0xF9
      0003EA F5 82            [ 8]  727 	mov	dpl,a
      0003EC E5*01            [ 8]  728 	mov	a,_bpx+1
      0003EE 94 FF            [ 8]  729 	subb	a,#0xFF
      0003F0 F5 83            [ 8]  730 	mov	dph,a
      0003F2 75 93 FF         [12]  731 	mov	dpx,#0xFF
      0003F5 EE               [ 4]  732 	mov	a,r6
      0003F6 F0               [ 8]  733 	movx	@dptr,a
      0003F7 A3               [12]  734 	inc	dptr
      0003F8 EF               [ 4]  735 	mov	a,r7
      0003F9 F0               [ 8]  736 	movx	@dptr,a
      0003FA A3               [12]  737 	inc	dptr
      0003FB E8               [ 4]  738 	mov	a,r0
      0003FC F0               [ 8]  739 	movx	@dptr,a
      0003FD A3               [12]  740 	inc	dptr
      0003FE E9               [ 4]  741 	mov	a,r1
      0003FF F0               [ 8]  742 	movx	@dptr,a
                                    743 ;	expf.c:364: z=g*g;
      000400 E5*00            [ 8]  744 	mov	a,_bpx
      000402 C3               [ 4]  745 	clr	c
      000403 94 F9            [ 8]  746 	subb	a,#0xF9
      000405 F5 82            [ 8]  747 	mov	dpl,a
      000407 E5*01            [ 8]  748 	mov	a,_bpx+1
      000409 94 FF            [ 8]  749 	subb	a,#0xFF
      00040B F5 83            [ 8]  750 	mov	dph,a
      00040D 75 93 FF         [12]  751 	mov	dpx,#0xFF
                                    752 ;	genAssign: resultIsFar = TRUE
      000410 75 86 21         [12]  753 	mov	dps,#0x21
      000413 90s00r00r00      [12]  754 	mov	dptr,#___fsmul_PARM_2
      000417 E0               [ 8]  755 	movx	a,@dptr
      000418 F0               [ 8]  756 	movx	@dptr,a
      000419 A3               [12]  757 	inc	dptr
      00041A A3               [12]  758 	inc	dptr
      00041B E0               [ 8]  759 	movx	a,@dptr
      00041C F0               [ 8]  760 	movx	@dptr,a
      00041D A3               [12]  761 	inc	dptr
      00041E A3               [12]  762 	inc	dptr
      00041F E0               [ 8]  763 	movx	a,@dptr
      000420 F0               [ 8]  764 	movx	@dptr,a
      000421 A3               [12]  765 	inc	dptr
      000422 A3               [12]  766 	inc	dptr
      000423 E0               [ 8]  767 	movx	a,@dptr
      000424 F0               [ 8]  768 	movx	@dptr,a
      000425 75 86 00         [12]  769 	mov	dps,#0
      000428 E5*00            [ 8]  770 	mov	a,_bpx
      00042A C3               [ 4]  771 	clr	c
      00042B 94 F9            [ 8]  772 	subb	a,#0xF9
      00042D F5 84            [ 8]  773 	mov	dpl1,a
      00042F E5*01            [ 8]  774 	mov	a,_bpx+1
      000431 94 FF            [ 8]  775 	subb	a,#0xFF
      000433 F5 85            [ 8]  776 	mov	dph1,a
      000435 75 95 FF         [12]  777 	mov	dpx1,#0xFF
      000438 05 86            [ 8]  778 	inc	dps
      00043A E0               [ 8]  779 	movx	a,@dptr
      00043B F5 82            [ 8]  780 	mov	dpl,a
      00043D A3               [12]  781 	inc	dptr
      00043E E0               [ 8]  782 	movx	a,@dptr
      00043F F5 83            [ 8]  783 	mov	dph,a
      000441 A3               [12]  784 	inc	dptr
      000442 E0               [ 8]  785 	movx	a,@dptr
      000443 F5 93            [ 8]  786 	mov	dpx,a
      000445 A3               [12]  787 	inc	dptr
      000446 E0               [ 8]  788 	movx	a,@dptr
      000447 F5 F0            [ 8]  789 	mov	b,a
      000449 75 86 00         [12]  790 	mov	dps,#0
      00044C 12s00r00r00      [16]  791 	lcall	___fsmul
      000450 AE 82            [ 8]  792 	mov	r6,dpl
      000452 AF 83            [ 8]  793 	mov	r7,dph
      000454 A8 93            [ 8]  794 	mov	r0,dpx
      000456 A9 F0            [ 8]  795 	mov	r1,b
                                    796 ;	genAssign: resultIsFar = TRUE
      000458 8E 02            [ 8]  797 	mov	ar2,r6
      00045A 8F 03            [ 8]  798 	mov	ar3,r7
      00045C 88 04            [ 8]  799 	mov	ar4,r0
      00045E 89 05            [ 8]  800 	mov	ar5,r1
                                    801 ;	expf.c:365: r=P(z)*g;
                                    802 ;	genAssign: resultIsFar = TRUE
      000460 90s00r00r00      [12]  803 	mov	dptr,#___fsmul_PARM_2
      000464 EA               [ 4]  804 	mov	a,r2
      000465 F0               [ 8]  805 	movx	@dptr,a
      000466 A3               [12]  806 	inc	dptr
      000467 EB               [ 4]  807 	mov	a,r3
      000468 F0               [ 8]  808 	movx	@dptr,a
      000469 A3               [12]  809 	inc	dptr
      00046A EC               [ 4]  810 	mov	a,r4
      00046B F0               [ 8]  811 	movx	@dptr,a
      00046C A3               [12]  812 	inc	dptr
      00046D ED               [ 4]  813 	mov	a,r5
      00046E F0               [ 8]  814 	movx	@dptr,a
      00046F C0 02            [ 8]  815 	push	ar2
      000471 C0 03            [ 8]  816 	push	ar3
      000473 C0 04            [ 8]  817 	push	ar4
      000475 C0 05            [ 8]  818 	push	ar5
      000477 90 88 53 08      [12]  819 	mov	dptr,#0x885308
      00047B 75 F0 3B         [12]  820 	mov	b,#0x3B
      00047E 12s00r00r00      [16]  821 	lcall	___fsmul
      000482 AE 82            [ 8]  822 	mov	r6,dpl
      000484 AF 83            [ 8]  823 	mov	r7,dph
      000486 A8 93            [ 8]  824 	mov	r0,dpx
      000488 A9 F0            [ 8]  825 	mov	r1,b
      00048A D0 05            [ 8]  826 	pop	ar5
      00048C D0 04            [ 8]  827 	pop	ar4
      00048E D0 03            [ 8]  828 	pop	ar3
      000490 D0 02            [ 8]  829 	pop	ar2
                                    830 ;	genAssign: resultIsFar = TRUE
      000492 90s00r00r00      [12]  831 	mov	dptr,#___fsadd_PARM_2
      000496 E4               [ 4]  832 	clr	a
      000497 F0               [ 8]  833 	movx	@dptr,a
      000498 A3               [12]  834 	inc	dptr
      000499 E4               [ 4]  835 	clr	a
      00049A F0               [ 8]  836 	movx	@dptr,a
      00049B A3               [12]  837 	inc	dptr
      00049C 74 80            [ 8]  838 	mov	a,#0x80
      00049E F0               [ 8]  839 	movx	@dptr,a
      00049F A3               [12]  840 	inc	dptr
      0004A0 74 3E            [ 8]  841 	mov	a,#0x3E
      0004A2 F0               [ 8]  842 	movx	@dptr,a
      0004A3 C0 02            [ 8]  843 	push	ar2
      0004A5 C0 03            [ 8]  844 	push	ar3
      0004A7 C0 04            [ 8]  845 	push	ar4
      0004A9 C0 05            [ 8]  846 	push	ar5
      0004AB 8E 82            [ 8]  847 	mov	dpl,r6
      0004AD 8F 83            [ 8]  848 	mov	dph,r7
      0004AF 88 93            [ 8]  849 	mov	dpx,r0
      0004B1 89 F0            [ 8]  850 	mov	b,r1
      0004B3 12s00r00r00      [16]  851 	lcall	___fsadd
      0004B7 AE 82            [ 8]  852 	mov	r6,dpl
      0004B9 AF 83            [ 8]  853 	mov	r7,dph
      0004BB A8 93            [ 8]  854 	mov	r0,dpx
      0004BD A9 F0            [ 8]  855 	mov	r1,b
      0004BF D0 05            [ 8]  856 	pop	ar5
      0004C1 D0 04            [ 8]  857 	pop	ar4
      0004C3 D0 03            [ 8]  858 	pop	ar3
      0004C5 D0 02            [ 8]  859 	pop	ar2
      0004C7 E5*00            [ 8]  860 	mov	a,_bpx
      0004C9 C3               [ 4]  861 	clr	c
      0004CA 94 F9            [ 8]  862 	subb	a,#0xF9
      0004CC F5 82            [ 8]  863 	mov	dpl,a
      0004CE E5*01            [ 8]  864 	mov	a,_bpx+1
      0004D0 94 FF            [ 8]  865 	subb	a,#0xFF
      0004D2 F5 83            [ 8]  866 	mov	dph,a
      0004D4 75 93 FF         [12]  867 	mov	dpx,#0xFF
                                    868 ;	genAssign: resultIsFar = TRUE
      0004D7 75 86 21         [12]  869 	mov	dps,#0x21
      0004DA 90s00r00r00      [12]  870 	mov	dptr,#___fsmul_PARM_2
      0004DE E0               [ 8]  871 	movx	a,@dptr
      0004DF F0               [ 8]  872 	movx	@dptr,a
      0004E0 A3               [12]  873 	inc	dptr
      0004E1 A3               [12]  874 	inc	dptr
      0004E2 E0               [ 8]  875 	movx	a,@dptr
      0004E3 F0               [ 8]  876 	movx	@dptr,a
      0004E4 A3               [12]  877 	inc	dptr
      0004E5 A3               [12]  878 	inc	dptr
      0004E6 E0               [ 8]  879 	movx	a,@dptr
      0004E7 F0               [ 8]  880 	movx	@dptr,a
      0004E8 A3               [12]  881 	inc	dptr
      0004E9 A3               [12]  882 	inc	dptr
      0004EA E0               [ 8]  883 	movx	a,@dptr
      0004EB F0               [ 8]  884 	movx	@dptr,a
      0004EC 75 86 00         [12]  885 	mov	dps,#0
      0004EF C0 02            [ 8]  886 	push	ar2
      0004F1 C0 03            [ 8]  887 	push	ar3
      0004F3 C0 04            [ 8]  888 	push	ar4
      0004F5 C0 05            [ 8]  889 	push	ar5
      0004F7 8E 82            [ 8]  890 	mov	dpl,r6
      0004F9 8F 83            [ 8]  891 	mov	dph,r7
      0004FB 88 93            [ 8]  892 	mov	dpx,r0
      0004FD 89 F0            [ 8]  893 	mov	b,r1
      0004FF 12s00r00r00      [16]  894 	lcall	___fsmul
      000503 AE 82            [ 8]  895 	mov	r6,dpl
      000505 AF 83            [ 8]  896 	mov	r7,dph
      000507 A8 93            [ 8]  897 	mov	r0,dpx
      000509 A9 F0            [ 8]  898 	mov	r1,b
      00050B D0 05            [ 8]  899 	pop	ar5
      00050D D0 04            [ 8]  900 	pop	ar4
      00050F D0 03            [ 8]  901 	pop	ar3
      000511 D0 02            [ 8]  902 	pop	ar2
                                    903 ;	genAssign: resultIsFar = TRUE
      000513 E5*00            [ 8]  904 	mov	a,_bpx
      000515 C3               [ 4]  905 	clr	c
      000516 94 F5            [ 8]  906 	subb	a,#0xF5
      000518 F5 82            [ 8]  907 	mov	dpl,a
      00051A E5*01            [ 8]  908 	mov	a,_bpx+1
      00051C 94 FF            [ 8]  909 	subb	a,#0xFF
      00051E F5 83            [ 8]  910 	mov	dph,a
      000520 75 93 FF         [12]  911 	mov	dpx,#0xFF
      000523 EE               [ 4]  912 	mov	a,r6
      000524 F0               [ 8]  913 	movx	@dptr,a
      000525 A3               [12]  914 	inc	dptr
      000526 EF               [ 4]  915 	mov	a,r7
      000527 F0               [ 8]  916 	movx	@dptr,a
      000528 A3               [12]  917 	inc	dptr
      000529 E8               [ 4]  918 	mov	a,r0
      00052A F0               [ 8]  919 	movx	@dptr,a
      00052B A3               [12]  920 	inc	dptr
      00052C E9               [ 4]  921 	mov	a,r1
      00052D F0               [ 8]  922 	movx	@dptr,a
                                    923 ;	expf.c:366: r=0.5+(r/(Q(z)-r));
                                    924 ;	genAssign: resultIsFar = TRUE
      00052E 90s00r00r00      [12]  925 	mov	dptr,#___fsmul_PARM_2
      000532 EA               [ 4]  926 	mov	a,r2
      000533 F0               [ 8]  927 	movx	@dptr,a
      000534 A3               [12]  928 	inc	dptr
      000535 EB               [ 4]  929 	mov	a,r3
      000536 F0               [ 8]  930 	movx	@dptr,a
      000537 A3               [12]  931 	inc	dptr
      000538 EC               [ 4]  932 	mov	a,r4
      000539 F0               [ 8]  933 	movx	@dptr,a
      00053A A3               [12]  934 	inc	dptr
      00053B ED               [ 4]  935 	mov	a,r5
      00053C F0               [ 8]  936 	movx	@dptr,a
      00053D 90 4C BF 5B      [12]  937 	mov	dptr,#0x4CBF5B
      000541 75 F0 3D         [12]  938 	mov	b,#0x3D
      000544 12s00r00r00      [16]  939 	lcall	___fsmul
      000548 AE 82            [ 8]  940 	mov	r6,dpl
      00054A AF 83            [ 8]  941 	mov	r7,dph
      00054C A8 93            [ 8]  942 	mov	r0,dpx
      00054E A9 F0            [ 8]  943 	mov	r1,b
                                    944 ;	genAssign: resultIsFar = TRUE
      000550 90s00r00r00      [12]  945 	mov	dptr,#___fsadd_PARM_2
      000554 E4               [ 4]  946 	clr	a
      000555 F0               [ 8]  947 	movx	@dptr,a
      000556 A3               [12]  948 	inc	dptr
      000557 E4               [ 4]  949 	clr	a
      000558 F0               [ 8]  950 	movx	@dptr,a
      000559 A3               [12]  951 	inc	dptr
      00055A E4               [ 4]  952 	clr	a
      00055B F0               [ 8]  953 	movx	@dptr,a
      00055C A3               [12]  954 	inc	dptr
      00055D 74 3F            [ 8]  955 	mov	a,#0x3F
      00055F F0               [ 8]  956 	movx	@dptr,a
      000560 8E 82            [ 8]  957 	mov	dpl,r6
      000562 8F 83            [ 8]  958 	mov	dph,r7
      000564 88 93            [ 8]  959 	mov	dpx,r0
      000566 89 F0            [ 8]  960 	mov	b,r1
      000568 12s00r00r00      [16]  961 	lcall	___fsadd
      00056C AE 82            [ 8]  962 	mov	r6,dpl
      00056E AF 83            [ 8]  963 	mov	r7,dph
      000570 A8 93            [ 8]  964 	mov	r0,dpx
      000572 A9 F0            [ 8]  965 	mov	r1,b
      000574 E5*00            [ 8]  966 	mov	a,_bpx
      000576 C3               [ 4]  967 	clr	c
      000577 94 F5            [ 8]  968 	subb	a,#0xF5
      000579 F5 82            [ 8]  969 	mov	dpl,a
      00057B E5*01            [ 8]  970 	mov	a,_bpx+1
      00057D 94 FF            [ 8]  971 	subb	a,#0xFF
      00057F F5 83            [ 8]  972 	mov	dph,a
      000581 75 93 FF         [12]  973 	mov	dpx,#0xFF
                                    974 ;	genAssign: resultIsFar = TRUE
      000584 75 86 21         [12]  975 	mov	dps,#0x21
      000587 90s00r00r00      [12]  976 	mov	dptr,#___fssub_PARM_2
      00058B E0               [ 8]  977 	movx	a,@dptr
      00058C F0               [ 8]  978 	movx	@dptr,a
      00058D A3               [12]  979 	inc	dptr
      00058E A3               [12]  980 	inc	dptr
      00058F E0               [ 8]  981 	movx	a,@dptr
      000590 F0               [ 8]  982 	movx	@dptr,a
      000591 A3               [12]  983 	inc	dptr
      000592 A3               [12]  984 	inc	dptr
      000593 E0               [ 8]  985 	movx	a,@dptr
      000594 F0               [ 8]  986 	movx	@dptr,a
      000595 A3               [12]  987 	inc	dptr
      000596 A3               [12]  988 	inc	dptr
      000597 E0               [ 8]  989 	movx	a,@dptr
      000598 F0               [ 8]  990 	movx	@dptr,a
      000599 75 86 00         [12]  991 	mov	dps,#0
      00059C 8E 82            [ 8]  992 	mov	dpl,r6
      00059E 8F 83            [ 8]  993 	mov	dph,r7
      0005A0 88 93            [ 8]  994 	mov	dpx,r0
      0005A2 89 F0            [ 8]  995 	mov	b,r1
      0005A4 12s00r00r00      [16]  996 	lcall	___fssub
      0005A8 AE 82            [ 8]  997 	mov	r6,dpl
      0005AA AF 83            [ 8]  998 	mov	r7,dph
      0005AC A8 93            [ 8]  999 	mov	r0,dpx
      0005AE A9 F0            [ 8] 1000 	mov	r1,b
                                   1001 ;	genAssign: resultIsFar = TRUE
      0005B0 90s00r00r00      [12] 1002 	mov	dptr,#___fsdiv_PARM_2
      0005B4 EE               [ 4] 1003 	mov	a,r6
      0005B5 F0               [ 8] 1004 	movx	@dptr,a
      0005B6 A3               [12] 1005 	inc	dptr
      0005B7 EF               [ 4] 1006 	mov	a,r7
      0005B8 F0               [ 8] 1007 	movx	@dptr,a
      0005B9 A3               [12] 1008 	inc	dptr
      0005BA E8               [ 4] 1009 	mov	a,r0
      0005BB F0               [ 8] 1010 	movx	@dptr,a
      0005BC A3               [12] 1011 	inc	dptr
      0005BD E9               [ 4] 1012 	mov	a,r1
      0005BE F0               [ 8] 1013 	movx	@dptr,a
      0005BF E5*00            [ 8] 1014 	mov	a,_bpx
      0005C1 C3               [ 4] 1015 	clr	c
      0005C2 94 F5            [ 8] 1016 	subb	a,#0xF5
      0005C4 F5 84            [ 8] 1017 	mov	dpl1,a
      0005C6 E5*01            [ 8] 1018 	mov	a,_bpx+1
      0005C8 94 FF            [ 8] 1019 	subb	a,#0xFF
      0005CA F5 85            [ 8] 1020 	mov	dph1,a
      0005CC 75 95 FF         [12] 1021 	mov	dpx1,#0xFF
      0005CF 05 86            [ 8] 1022 	inc	dps
      0005D1 E0               [ 8] 1023 	movx	a,@dptr
      0005D2 F5 82            [ 8] 1024 	mov	dpl,a
      0005D4 A3               [12] 1025 	inc	dptr
      0005D5 E0               [ 8] 1026 	movx	a,@dptr
      0005D6 F5 83            [ 8] 1027 	mov	dph,a
      0005D8 A3               [12] 1028 	inc	dptr
      0005D9 E0               [ 8] 1029 	movx	a,@dptr
      0005DA F5 93            [ 8] 1030 	mov	dpx,a
      0005DC A3               [12] 1031 	inc	dptr
      0005DD E0               [ 8] 1032 	movx	a,@dptr
      0005DE F5 F0            [ 8] 1033 	mov	b,a
      0005E0 75 86 00         [12] 1034 	mov	dps,#0
      0005E3 12s00r00r00      [16] 1035 	lcall	___fsdiv
      0005E7 AE 82            [ 8] 1036 	mov	r6,dpl
      0005E9 AF 83            [ 8] 1037 	mov	r7,dph
      0005EB A8 93            [ 8] 1038 	mov	r0,dpx
      0005ED A9 F0            [ 8] 1039 	mov	r1,b
                                   1040 ;	genAssign: resultIsFar = TRUE
      0005EF 90s00r00r00      [12] 1041 	mov	dptr,#___fsadd_PARM_2
      0005F3 E4               [ 4] 1042 	clr	a
      0005F4 F0               [ 8] 1043 	movx	@dptr,a
      0005F5 A3               [12] 1044 	inc	dptr
      0005F6 E4               [ 4] 1045 	clr	a
      0005F7 F0               [ 8] 1046 	movx	@dptr,a
      0005F8 A3               [12] 1047 	inc	dptr
      0005F9 E4               [ 4] 1048 	clr	a
      0005FA F0               [ 8] 1049 	movx	@dptr,a
      0005FB A3               [12] 1050 	inc	dptr
      0005FC 74 3F            [ 8] 1051 	mov	a,#0x3F
      0005FE F0               [ 8] 1052 	movx	@dptr,a
      0005FF 8E 82            [ 8] 1053 	mov	dpl,r6
      000601 8F 83            [ 8] 1054 	mov	dph,r7
      000603 88 93            [ 8] 1055 	mov	dpx,r0
      000605 89 F0            [ 8] 1056 	mov	b,r1
      000607 12s00r00r00      [16] 1057 	lcall	___fsadd
      00060B AE 82            [ 8] 1058 	mov	r6,dpl
      00060D AF 83            [ 8] 1059 	mov	r7,dph
      00060F A8 93            [ 8] 1060 	mov	r0,dpx
      000611 A9 F0            [ 8] 1061 	mov	r1,b
                                   1062 ;	genAssign: resultIsFar = TRUE
      000613 E5*00            [ 8] 1063 	mov	a,_bpx
      000615 C3               [ 4] 1064 	clr	c
      000616 94 F5            [ 8] 1065 	subb	a,#0xF5
      000618 F5 82            [ 8] 1066 	mov	dpl,a
      00061A E5*01            [ 8] 1067 	mov	a,_bpx+1
      00061C 94 FF            [ 8] 1068 	subb	a,#0xFF
      00061E F5 83            [ 8] 1069 	mov	dph,a
      000620 75 93 FF         [12] 1070 	mov	dpx,#0xFF
      000623 EE               [ 4] 1071 	mov	a,r6
      000624 F0               [ 8] 1072 	movx	@dptr,a
      000625 A3               [12] 1073 	inc	dptr
      000626 EF               [ 4] 1074 	mov	a,r7
      000627 F0               [ 8] 1075 	movx	@dptr,a
      000628 A3               [12] 1076 	inc	dptr
      000629 E8               [ 4] 1077 	mov	a,r0
      00062A F0               [ 8] 1078 	movx	@dptr,a
      00062B A3               [12] 1079 	inc	dptr
      00062C E9               [ 4] 1080 	mov	a,r1
      00062D F0               [ 8] 1081 	movx	@dptr,a
                                   1082 ;	expf.c:368: n++;
      00062E E5*00            [ 8] 1083 	mov	a,_bpx
      000630 C3               [ 4] 1084 	clr	c
      000631 94 FB            [ 8] 1085 	subb	a,#0xFB
      000633 F5 82            [ 8] 1086 	mov	dpl,a
      000635 E5*01            [ 8] 1087 	mov	a,_bpx+1
      000637 94 FF            [ 8] 1088 	subb	a,#0xFF
      000639 F5 83            [ 8] 1089 	mov	dph,a
      00063B 75 93 FF         [12] 1090 	mov	dpx,#0xFF
      00063E 75 86 01         [12] 1091 	mov	dps, #1
      000641 90s00r00r00      [12] 1092 	mov	dptr, #_ldexpf_PARM_2
      000645 15 86            [ 8] 1093 	dec	dps
      000647 E0               [ 8] 1094 	movx	a,@dptr
      000648 24 01            [ 8] 1095 	add	a,#0x01
      00064A 05 86            [ 8] 1096 	inc	dps
      00064C F0               [ 8] 1097 	movx	@dptr,a
      00064D 15 86            [ 8] 1098 	dec	dps
      00064F A3               [12] 1099 	inc	dptr
      000650 E0               [ 8] 1100 	movx	a,@dptr
      000651 34 00            [ 8] 1101 	addc	a,#0x00
      000653 05 86            [ 8] 1102 	inc	dps
      000655 A3               [12] 1103 	inc	dptr
      000656 F0               [ 8] 1104 	movx	@dptr,a
      000657 75 86 00         [12] 1105 	mov	dps,#0
                                   1106 ;	expf.c:369: z=ldexpf(r, n);
      00065A E5*00            [ 8] 1107 	mov	a,_bpx
      00065C C3               [ 4] 1108 	clr	c
      00065D 94 F5            [ 8] 1109 	subb	a,#0xF5
      00065F F5 84            [ 8] 1110 	mov	dpl1,a
      000661 E5*01            [ 8] 1111 	mov	a,_bpx+1
      000663 94 FF            [ 8] 1112 	subb	a,#0xFF
      000665 F5 85            [ 8] 1113 	mov	dph1,a
      000667 75 95 FF         [12] 1114 	mov	dpx1,#0xFF
      00066A 05 86            [ 8] 1115 	inc	dps
      00066C E0               [ 8] 1116 	movx	a,@dptr
      00066D F5 82            [ 8] 1117 	mov	dpl,a
      00066F A3               [12] 1118 	inc	dptr
      000670 E0               [ 8] 1119 	movx	a,@dptr
      000671 F5 83            [ 8] 1120 	mov	dph,a
      000673 A3               [12] 1121 	inc	dptr
      000674 E0               [ 8] 1122 	movx	a,@dptr
      000675 F5 93            [ 8] 1123 	mov	dpx,a
      000677 A3               [12] 1124 	inc	dptr
      000678 E0               [ 8] 1125 	movx	a,@dptr
      000679 F5 F0            [ 8] 1126 	mov	b,a
      00067B 75 86 00         [12] 1127 	mov	dps,#0
      00067E 12s00r00r00      [16] 1128 	lcall	_ldexpf
      000682 AE 82            [ 8] 1129 	mov	r6,dpl
      000684 AF 83            [ 8] 1130 	mov	r7,dph
      000686 A8 93            [ 8] 1131 	mov	r0,dpx
      000688 A9 F0            [ 8] 1132 	mov	r1,b
                                   1133 ;	genAssign: resultIsFar = TRUE
      00068A 8E 02            [ 8] 1134 	mov	ar2,r6
      00068C 8F 03            [ 8] 1135 	mov	ar3,r7
      00068E 88 04            [ 8] 1136 	mov	ar4,r0
      000690 89 05            [ 8] 1137 	mov	ar5,r1
                                   1138 ;	expf.c:370: if(sign)
      000692 E5*00            [ 8] 1139 	mov	a,_bpx
      000694 C3               [ 4] 1140 	clr	c
      000695 94 ED            [ 8] 1141 	subb	a,#0xED
      000697 F5 82            [ 8] 1142 	mov	dpl,a
      000699 E5*01            [ 8] 1143 	mov	a,_bpx+1
      00069B 94 FF            [ 8] 1144 	subb	a,#0xFF
      00069D F5 83            [ 8] 1145 	mov	dph,a
      00069F 75 93 FF         [12] 1146 	mov	dpx,#0xFF
      0006A2 E0               [ 8] 1147 	movx	a,@dptr
      0006A3 60 1F            [12] 1148 	jz  00116$
      0006A5                       1149 00147$:
                                   1150 ;	expf.c:371: return 1.0/z;
                                   1151 ;	genAssign: resultIsFar = TRUE
      0006A5 90s00r00r00      [12] 1152 	mov	dptr,#___fsdiv_PARM_2
      0006A9 EA               [ 4] 1153 	mov	a,r2
      0006AA F0               [ 8] 1154 	movx	@dptr,a
      0006AB A3               [12] 1155 	inc	dptr
      0006AC EB               [ 4] 1156 	mov	a,r3
      0006AD F0               [ 8] 1157 	movx	@dptr,a
      0006AE A3               [12] 1158 	inc	dptr
      0006AF EC               [ 4] 1159 	mov	a,r4
      0006B0 F0               [ 8] 1160 	movx	@dptr,a
      0006B1 A3               [12] 1161 	inc	dptr
      0006B2 ED               [ 4] 1162 	mov	a,r5
      0006B3 F0               [ 8] 1163 	movx	@dptr,a
      0006B4 90 00 00 00      [12] 1164 	mov  dptr,#0x0000
      0006B8 75 93 80         [12] 1165 	mov	dpx,#0x80
      0006BB 75 F0 3F         [12] 1166 	mov	b,#0x3F
      0006BE 12s00r00r00      [16] 1167 	lcall	___fsdiv
      0006C2 80 08            [12] 1168 	sjmp 00118$
      0006C4                       1169 00116$:
                                   1170 ;	expf.c:373: return z;
      0006C4 8A 82            [ 8] 1171 	mov	dpl,r2
      0006C6 8B 83            [ 8] 1172 	mov	dph,r3
      0006C8 8C 93            [ 8] 1173 	mov	dpx,r4
      0006CA 8D F0            [ 8] 1174 	mov	b,r5
      0006CC                       1175 00118$:
      0006CC 85*00 81         [12] 1176 	mov	sp,_bpx
      0006CF 85*01 9B         [12] 1177 	mov	esp,_bpx+1
      0006D2 D0*01            [ 8] 1178 	pop	_bpx+1
      0006D4 D0*00            [ 8] 1179 	pop	_bpx
      0006D6 22               [16] 1180 	ret
                                   1181 	.area CSEG    (CODE)
                                   1182 	.area CONST   (CODE)
                                   1183 	.area XINIT   (CODE)
                                   1184 	.area CABS    (ABS,CODE)
