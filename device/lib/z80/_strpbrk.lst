                              1 ;--------------------------------------------------------
                              2 ; File Created by SDCC : free open source ANSI-C Compiler
                              3 ; Version 3.5.0 #9253 (Apr  4 2022) (Linux)
                              4 ; This file was generated Mon Apr  4 14:15:27 2022
                              5 ;--------------------------------------------------------
                              6 	.module _strpbrk
                              7 	.optsdcc -mz80
                              8 	
                              9 ;--------------------------------------------------------
                             10 ; Public variables in this module
                             11 ;--------------------------------------------------------
                             12 	.globl _strpbrk
                             13 ;--------------------------------------------------------
                             14 ; special function registers
                             15 ;--------------------------------------------------------
                             16 ;--------------------------------------------------------
                             17 ; ram data
                             18 ;--------------------------------------------------------
                             19 	.area _DATA
                             20 ;--------------------------------------------------------
                             21 ; ram data
                             22 ;--------------------------------------------------------
                             23 	.area _INITIALIZED
                             24 ;--------------------------------------------------------
                             25 ; absolute external ram data
                             26 ;--------------------------------------------------------
                             27 	.area _DABS (ABS)
                             28 ;--------------------------------------------------------
                             29 ; global & static initialisations
                             30 ;--------------------------------------------------------
                             31 	.area _HOME
                             32 	.area _GSINIT
                             33 	.area _GSFINAL
                             34 	.area _GSINIT
                             35 ;--------------------------------------------------------
                             36 ; Home
                             37 ;--------------------------------------------------------
                             38 	.area _HOME
                             39 	.area _HOME
                             40 ;--------------------------------------------------------
                             41 ; code
                             42 ;--------------------------------------------------------
                             43 	.area _CODE
                             44 ;../_strpbrk.c:31: char * strpbrk ( const char * string, const char * control )
                             45 ;	---------------------------------
                             46 ; Function strpbrk
                             47 ; ---------------------------------
   0000                      48 _strpbrk::
   0000 DD E5         [15]   49 	push	ix
   0002 DD 21 00 00   [14]   50 	ld	ix,#0
   0006 DD 39         [15]   51 	add	ix,sp
   0008 F5            [11]   52 	push	af
                             53 ;../_strpbrk.c:33: char *ret = NULL;
   0009 21 00 00      [10]   54 	ld	hl,#0x0000
   000C E3            [19]   55 	ex	(sp), hl
                             56 ;../_strpbrk.c:36: while (ch = *control) {
   000D DD 6E 06      [19]   57 	ld	l,6 (ix)
   0010 DD 66 07      [19]   58 	ld	h,7 (ix)
   0013                      59 00105$:
   0013 7E            [ 7]   60 	ld	a,(hl)
                             61 ;../_strpbrk.c:37: char * p = strchr(string, ch);
   0014 4F            [ 4]   62 	ld	c,a
   0015 B7            [ 4]   63 	or	a,a
   0016 28 2E         [12]   64 	jr	Z,00107$
   0018 17            [ 4]   65 	rla
   0019 9F            [ 4]   66 	sbc	a, a
   001A DD 5E 04      [19]   67 	ld	e,4 (ix)
   001D DD 56 05      [19]   68 	ld	d,5 (ix)
   0020                      69 00128$:
   0020 1A            [ 7]   70 	ld	a, (de)
   0021 B9            [ 4]   71 	cp	a, c
   0022 28 06         [12]   72 	jr	Z,00127$
   0024 B7            [ 4]   73 	or	a, a
   0025 13            [ 6]   74 	inc	de
   0026 20 F8         [12]   75 	jr	NZ, 00128$
   0028 5F            [ 4]   76 	ld	e, a
   0029 57            [ 4]   77 	ld	d, a
   002A                      78 00127$:
                             79 ;../_strpbrk.c:38: if (p != NULL && (ret == NULL || p < ret)) {
   002A 7A            [ 4]   80 	ld	a,d
   002B B3            [ 4]   81 	or	a,e
   002C 28 15         [12]   82 	jr	Z,00102$
   002E DD 7E FF      [19]   83 	ld	a,-1 (ix)
   0031 DD B6 FE      [19]   84 	or	a,-2 (ix)
   0034 28 0A         [12]   85 	jr	Z,00101$
   0036 7B            [ 4]   86 	ld	a,e
   0037 DD 96 FE      [19]   87 	sub	a, -2 (ix)
   003A 7A            [ 4]   88 	ld	a,d
   003B DD 9E FF      [19]   89 	sbc	a, -1 (ix)
   003E 30 03         [12]   90 	jr	NC,00102$
   0040                      91 00101$:
                             92 ;../_strpbrk.c:39: ret = p;
   0040 33            [ 6]   93 	inc	sp
   0041 33            [ 6]   94 	inc	sp
   0042 D5            [11]   95 	push	de
   0043                      96 00102$:
                             97 ;../_strpbrk.c:41: control++;
   0043 23            [ 6]   98 	inc	hl
   0044 18 CD         [12]   99 	jr	00105$
   0046                     100 00107$:
                            101 ;../_strpbrk.c:44: return (ret);
   0046 E1            [10]  102 	pop	hl
   0047 E5            [11]  103 	push	hl
   0048 DD F9         [10]  104 	ld	sp, ix
   004A DD E1         [14]  105 	pop	ix
   004C C9            [10]  106 	ret
                            107 	.area _CODE
                            108 	.area _INITIALIZER
                            109 	.area _CABS (ABS)
