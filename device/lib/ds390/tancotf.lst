                                      1 ;--------------------------------------------------------
                                      2 ; File Created by SDCC : free open source ANSI-C Compiler
                                      3 ; Version 3.5.0 #9253 (Apr  4 2022) (Linux)
                                      4 ; This file was generated Mon Apr  4 14:10:25 2022
                                      5 ;--------------------------------------------------------
                                      6 	.module tancotf
                                      7 	.optsdcc -mds390 --model-flat24
                                      8 	
                                      9 ;--------------------------------------------------------
                                     10 ; CPU specific extensions
                                     11 ;--------------------------------------------------------
                                     12 	.DS80C390
                                     13 	.amode	2	; 24 bit flat addressing
                           000082    14 dpl	=	0x82
                           000083    15 dph	=	0x83
                           000084    16 dpl1	=	0x84
                           000085    17 dph1	=	0x85
                           000086    18 dps	=	0x86
                           000093    19 dpx	=	0x93
                           000095    20 dpx1	=	0x95
                           00009B    21 esp	=	0x9B
                           00009C    22 ap	=	0x9C
                           00009C    23 acc1	=	0x9C
                           0000D1    24 mcnt0	=	0xD1
                           0000D2    25 mcnt1	=	0xD2
                           0000D3    26 ma	=	0xD3
                           0000D4    27 mb	=	0xD4
                           0000D5    28 mc	=	0xD5
                           00009D    29 acon	=	0x9D
                           0000D1    30 F1	=	0xD1	; user flag
                                     31 ;--------------------------------------------------------
                                     32 ; Public variables in this module
                                     33 ;--------------------------------------------------------
                                     34 	.globl _tancotf
                                     35 	.globl _fabsf
                                     36 	.globl _tancotf_PARM_2
                                     37 ;--------------------------------------------------------
                                     38 ; special function registers
                                     39 ;--------------------------------------------------------
                                     40 ;--------------------------------------------------------
                                     41 ; special function bits
                                     42 ;--------------------------------------------------------
                                     43 ;--------------------------------------------------------
                                     44 ; overlayable register banks
                                     45 ;--------------------------------------------------------
                                     46 	.area REG_BANK_0	(REL,OVR,DATA)
      000000                         47 	.ds 8
                                     48 ;--------------------------------------------------------
                                     49 ; internal ram data
                                     50 ;--------------------------------------------------------
                                     51 	.area DSEG    (DATA)
                                     52 ;--------------------------------------------------------
                                     53 ; overlayable items in internal ram 
                                     54 ;--------------------------------------------------------
                                     55 ;--------------------------------------------------------
                                     56 ; indirectly addressable internal ram data
                                     57 ;--------------------------------------------------------
                                     58 	.area ISEG    (DATA)
                                     59 ;--------------------------------------------------------
                                     60 ; absolute internal ram data
                                     61 ;--------------------------------------------------------
                                     62 	.area IABS    (ABS,DATA)
                                     63 	.area IABS    (ABS,DATA)
                                     64 ;--------------------------------------------------------
                                     65 ; bit data
                                     66 ;--------------------------------------------------------
                                     67 	.area BSEG    (BIT)
      000000                         68 _tancotf_PARM_2:
      000000                         69 	.ds 1
                                     70 ;--------------------------------------------------------
                                     71 ; paged external ram data
                                     72 ;--------------------------------------------------------
                                     73 	.area PSEG    (PAG,XDATA)
                                     74 ;--------------------------------------------------------
                                     75 ; external ram data
                                     76 ;--------------------------------------------------------
                                     77 	.area XSEG    (XDATA)
      000000                         78 _tancotf_f_1_24:
      000000                         79 	.ds 4
      000004                         80 _tancotf_g_1_24:
      000004                         81 	.ds 4
      000008                         82 _tancotf_xn_1_24:
      000008                         83 	.ds 4
      00000C                         84 _tancotf_xden_1_24:
      00000C                         85 	.ds 4
      000010                         86 _tancotf_n_1_24:
      000010                         87 	.ds 2
      000012                         88 _tancotf_sloc0_1_0:
      000012                         89 	.ds 4
                                     90 ;--------------------------------------------------------
                                     91 ; absolute external ram data
                                     92 ;--------------------------------------------------------
                                     93 	.area XABS    (ABS,XDATA)
                                     94 ;--------------------------------------------------------
                                     95 ; external initialized ram data
                                     96 ;--------------------------------------------------------
                                     97 	.area XISEG   (XDATA)
                                     98 ;--------------------------------------------------------
                                     99 ; global & static initialisations
                                    100 ;--------------------------------------------------------
                                    101 	.area HOME    (CODE)
                                    102 	.area GSINIT  (CODE)
                                    103 	.area GSFINAL (CODE)
                                    104 	.area GSINIT  (CODE)
                                    105 ;--------------------------------------------------------
                                    106 ; Home
                                    107 ;--------------------------------------------------------
                                    108 	.area HOME    (CODE)
                                    109 	.area HOME    (CODE)
                                    110 ;--------------------------------------------------------
                                    111 ; code
                                    112 ;--------------------------------------------------------
                                    113 	.area CSEG    (CODE)
                                    114 ;------------------------------------------------------------
                                    115 ;Allocation info for local variables in function 'tancotf'
                                    116 ;------------------------------------------------------------
                                    117 ;x                         Allocated to registers r2 r3 r4 r5 
                                    118 ;f                         Allocated with name '_tancotf_f_1_24'
                                    119 ;g                         Allocated with name '_tancotf_g_1_24'
                                    120 ;xn                        Allocated with name '_tancotf_xn_1_24'
                                    121 ;xnum                      Allocated to registers r6 r7 r0 r1 
                                    122 ;xden                      Allocated with name '_tancotf_xden_1_24'
                                    123 ;n                         Allocated with name '_tancotf_n_1_24'
                                    124 ;sloc0                     Allocated with name '_tancotf_sloc0_1_0'
                                    125 ;------------------------------------------------------------
                                    126 ;	tancotf.c:53: float tancotf(float x, bool iscotan)
                                    127 ;	-----------------------------------------
                                    128 ;	 function tancotf
                                    129 ;	-----------------------------------------
      000000                        130 _tancotf:
                           000002   131 	ar2 = 0x02
                           000003   132 	ar3 = 0x03
                           000004   133 	ar4 = 0x04
                           000005   134 	ar5 = 0x05
                           000006   135 	ar6 = 0x06
                           000007   136 	ar7 = 0x07
                           000000   137 	ar0 = 0x00
                           000001   138 	ar1 = 0x01
      000000 AA 82            [ 8]  139 	mov	r2,dpl
      000002 AB 83            [ 8]  140 	mov	r3,dph
      000004 AC 93            [ 8]  141 	mov	r4,dpx
      000006 AD F0            [ 8]  142 	mov	r5,b
                                    143 ;	tancotf.c:58: if (fabsf(x) > YMAX)
      000008 C0 02            [ 8]  144 	push	ar2
      00000A C0 03            [ 8]  145 	push	ar3
      00000C C0 04            [ 8]  146 	push	ar4
      00000E C0 05            [ 8]  147 	push	ar5
      000010 8A 82            [ 8]  148 	mov	dpl,r2
      000012 8B 83            [ 8]  149 	mov	dph,r3
      000014 8C 93            [ 8]  150 	mov	dpx,r4
      000016 8D F0            [ 8]  151 	mov	b,r5
      000018 12s00r00r00      [16]  152 	lcall	_fabsf
      00001C AE 82            [ 8]  153 	mov	r6,dpl
      00001E AF 83            [ 8]  154 	mov	r7,dph
      000020 A8 93            [ 8]  155 	mov	r0,dpx
      000022 A9 F0            [ 8]  156 	mov	r1,b
      000024 D0 05            [ 8]  157 	pop	ar5
      000026 D0 04            [ 8]  158 	pop	ar4
      000028 D0 03            [ 8]  159 	pop	ar3
      00002A D0 02            [ 8]  160 	pop	ar2
                                    161 ;	genAssign: resultIsFar = TRUE
      00002C 90s00r00r00      [12]  162 	mov	dptr,#___fsgt_PARM_2
      000030 E4               [ 4]  163 	clr	a
      000031 F0               [ 8]  164 	movx	@dptr,a
      000032 A3               [12]  165 	inc	dptr
      000033 74 08            [ 8]  166 	mov	a,#0x08
      000035 F0               [ 8]  167 	movx	@dptr,a
      000036 A3               [12]  168 	inc	dptr
      000037 74 C9            [ 8]  169 	mov	a,#0xC9
      000039 F0               [ 8]  170 	movx	@dptr,a
      00003A A3               [12]  171 	inc	dptr
      00003B 74 45            [ 8]  172 	mov	a,#0x45
      00003D F0               [ 8]  173 	movx	@dptr,a
      00003E C0 02            [ 8]  174 	push	ar2
      000040 C0 03            [ 8]  175 	push	ar3
      000042 C0 04            [ 8]  176 	push	ar4
      000044 C0 05            [ 8]  177 	push	ar5
      000046 8E 82            [ 8]  178 	mov	dpl,r6
      000048 8F 83            [ 8]  179 	mov	dph,r7
      00004A 88 93            [ 8]  180 	mov	dpx,r0
      00004C 89 F0            [ 8]  181 	mov	b,r1
      00004E 12s00r00r00      [16]  182 	lcall	___fsgt
      000052 D0 05            [ 8]  183 	pop	ar5
      000054 D0 04            [ 8]  184 	pop	ar4
      000056 D0 03            [ 8]  185 	pop	ar3
      000058 D0 02            [ 8]  186 	pop	ar2
      00005A E5 82            [ 8]  187 	mov	a,dpl
      00005C 60 15            [12]  188 	jz  00102$
      00005E                        189 00137$:
                                    190 ;	tancotf.c:60: errno = ERANGE;
                                    191 ;	genAssign: resultIsFar = TRUE
      00005E 90s00r00r00      [12]  192 	mov	dptr,#_errno
      000062 74 22            [ 8]  193 	mov	a,#0x22
      000064 F0               [ 8]  194 	movx	@dptr,a
      000065 E4               [ 4]  195 	clr	a
      000066 A3               [12]  196 	inc	dptr
      000067 F0               [ 8]  197 	movx	@dptr,a
                                    198 ;	tancotf.c:61: return 0.0;
      000068 90 00 00 00      [12]  199 	mov  dptr,#0x0000
      00006C 75 F0 00         [12]  200 	mov	b,#0x00
      00006F 02s00r06r25      [16]  201 	ljmp	00115$
      000073                        202 00102$:
                                    203 ;	tancotf.c:65: n=(x*TWO_O_PI+(x>0.0?0.5:-0.5)); /*works for +-x*/
                                    204 ;	genAssign: resultIsFar = TRUE
      000073 90s00r00r00      [12]  205 	mov	dptr,#___fsmul_PARM_2
      000077 EA               [ 4]  206 	mov	a,r2
      000078 F0               [ 8]  207 	movx	@dptr,a
      000079 A3               [12]  208 	inc	dptr
      00007A EB               [ 4]  209 	mov	a,r3
      00007B F0               [ 8]  210 	movx	@dptr,a
      00007C A3               [12]  211 	inc	dptr
      00007D EC               [ 4]  212 	mov	a,r4
      00007E F0               [ 8]  213 	movx	@dptr,a
      00007F A3               [12]  214 	inc	dptr
      000080 ED               [ 4]  215 	mov	a,r5
      000081 F0               [ 8]  216 	movx	@dptr,a
      000082 C0 02            [ 8]  217 	push	ar2
      000084 C0 03            [ 8]  218 	push	ar3
      000086 C0 04            [ 8]  219 	push	ar4
      000088 C0 05            [ 8]  220 	push	ar5
      00008A 90 22 F9 83      [12]  221 	mov	dptr,#0x22F983
      00008E 75 F0 3F         [12]  222 	mov	b,#0x3F
      000091 12s00r00r00      [16]  223 	lcall	___fsmul
      000095 AE 82            [ 8]  224 	mov	r6,dpl
      000097 AF 83            [ 8]  225 	mov	r7,dph
      000099 A8 93            [ 8]  226 	mov	r0,dpx
      00009B A9 F0            [ 8]  227 	mov	r1,b
      00009D D0 05            [ 8]  228 	pop	ar5
      00009F D0 04            [ 8]  229 	pop	ar4
      0000A1 D0 03            [ 8]  230 	pop	ar3
      0000A3 D0 02            [ 8]  231 	pop	ar2
                                    232 ;	genAssign: resultIsFar = TRUE
      0000A5 90s00r00r00      [12]  233 	mov	dptr,#___fsgt_PARM_2
      0000A9 E4               [ 4]  234 	clr	a
      0000AA F0               [ 8]  235 	movx	@dptr,a
      0000AB A3               [12]  236 	inc	dptr
      0000AC F0               [ 8]  237 	movx	@dptr,a
      0000AD A3               [12]  238 	inc	dptr
      0000AE F0               [ 8]  239 	movx	@dptr,a
      0000AF A3               [12]  240 	inc	dptr
      0000B0 F0               [ 8]  241 	movx	@dptr,a
      0000B1 C0 02            [ 8]  242 	push	ar2
      0000B3 C0 03            [ 8]  243 	push	ar3
      0000B5 C0 04            [ 8]  244 	push	ar4
      0000B7 C0 05            [ 8]  245 	push	ar5
      0000B9 C0 06            [ 8]  246 	push	ar6
      0000BB C0 07            [ 8]  247 	push	ar7
      0000BD C0 00            [ 8]  248 	push	ar0
      0000BF C0 01            [ 8]  249 	push	ar1
      0000C1 8A 82            [ 8]  250 	mov	dpl,r2
      0000C3 8B 83            [ 8]  251 	mov	dph,r3
      0000C5 8C 93            [ 8]  252 	mov	dpx,r4
      0000C7 8D F0            [ 8]  253 	mov	b,r5
      0000C9 12s00r00r00      [16]  254 	lcall	___fsgt
      0000CD D0 01            [ 8]  255 	pop	ar1
      0000CF D0 00            [ 8]  256 	pop	ar0
      0000D1 D0 07            [ 8]  257 	pop	ar7
      0000D3 D0 06            [ 8]  258 	pop	ar6
      0000D5 D0 05            [ 8]  259 	pop	ar5
      0000D7 D0 04            [ 8]  260 	pop	ar4
      0000D9 D0 03            [ 8]  261 	pop	ar3
      0000DB D0 02            [ 8]  262 	pop	ar2
      0000DD E5 82            [ 8]  263 	mov	a,dpl
      0000DF 60 12            [12]  264 	jz  00117$
      0000E1                        265 00138$:
                                    266 ;	genAssign: resultIsFar = TRUE
      0000E1 90s00r00r12      [12]  267 	mov	dptr,#_tancotf_sloc0_1_0
      0000E5 E4               [ 4]  268 	clr	a
      0000E6 F0               [ 8]  269 	movx	@dptr,a
      0000E7 A3               [12]  270 	inc	dptr
      0000E8 E4               [ 4]  271 	clr	a
      0000E9 F0               [ 8]  272 	movx	@dptr,a
      0000EA A3               [12]  273 	inc	dptr
      0000EB E4               [ 4]  274 	clr	a
      0000EC F0               [ 8]  275 	movx	@dptr,a
      0000ED A3               [12]  276 	inc	dptr
      0000EE 74 3F            [ 8]  277 	mov	a,#0x3F
      0000F0 F0               [ 8]  278 	movx	@dptr,a
      0000F1 80 10            [12]  279 	sjmp 00118$
      0000F3                        280 00117$:
                                    281 ;	genAssign: resultIsFar = TRUE
      0000F3 90s00r00r12      [12]  282 	mov	dptr,#_tancotf_sloc0_1_0
      0000F7 E4               [ 4]  283 	clr	a
      0000F8 F0               [ 8]  284 	movx	@dptr,a
      0000F9 A3               [12]  285 	inc	dptr
      0000FA E4               [ 4]  286 	clr	a
      0000FB F0               [ 8]  287 	movx	@dptr,a
      0000FC A3               [12]  288 	inc	dptr
      0000FD E4               [ 4]  289 	clr	a
      0000FE F0               [ 8]  290 	movx	@dptr,a
      0000FF A3               [12]  291 	inc	dptr
      000100 74 BF            [ 8]  292 	mov	a,#0xBF
      000102 F0               [ 8]  293 	movx	@dptr,a
      000103                        294 00118$:
      000103 90s00r00r12      [12]  295 	mov	dptr,#_tancotf_sloc0_1_0
                                    296 ;	genAssign: resultIsFar = TRUE
      000107 75 86 21         [12]  297 	mov	dps,#0x21
      00010A 90s00r00r00      [12]  298 	mov	dptr,#___fsadd_PARM_2
      00010E E0               [ 8]  299 	movx	a,@dptr
      00010F F0               [ 8]  300 	movx	@dptr,a
      000110 A3               [12]  301 	inc	dptr
      000111 A3               [12]  302 	inc	dptr
      000112 E0               [ 8]  303 	movx	a,@dptr
      000113 F0               [ 8]  304 	movx	@dptr,a
      000114 A3               [12]  305 	inc	dptr
      000115 A3               [12]  306 	inc	dptr
      000116 E0               [ 8]  307 	movx	a,@dptr
      000117 F0               [ 8]  308 	movx	@dptr,a
      000118 A3               [12]  309 	inc	dptr
      000119 A3               [12]  310 	inc	dptr
      00011A E0               [ 8]  311 	movx	a,@dptr
      00011B F0               [ 8]  312 	movx	@dptr,a
      00011C 75 86 00         [12]  313 	mov	dps,#0
      00011F C0 02            [ 8]  314 	push	ar2
      000121 C0 03            [ 8]  315 	push	ar3
      000123 C0 04            [ 8]  316 	push	ar4
      000125 C0 05            [ 8]  317 	push	ar5
      000127 8E 82            [ 8]  318 	mov	dpl,r6
      000129 8F 83            [ 8]  319 	mov	dph,r7
      00012B 88 93            [ 8]  320 	mov	dpx,r0
      00012D 89 F0            [ 8]  321 	mov	b,r1
      00012F 12s00r00r00      [16]  322 	lcall	___fsadd
      000133 D0 05            [ 8]  323 	pop	ar5
      000135 D0 04            [ 8]  324 	pop	ar4
      000137 D0 03            [ 8]  325 	pop	ar3
      000139 D0 02            [ 8]  326 	pop	ar2
      00013B C0 02            [ 8]  327 	push	ar2
      00013D C0 03            [ 8]  328 	push	ar3
      00013F C0 04            [ 8]  329 	push	ar4
      000141 C0 05            [ 8]  330 	push	ar5
      000143 12s00r00r00      [16]  331 	lcall	___fs2sint
      000147 AE 82            [ 8]  332 	mov	r6,dpl
      000149 AF 83            [ 8]  333 	mov	r7,dph
      00014B D0 05            [ 8]  334 	pop	ar5
      00014D D0 04            [ 8]  335 	pop	ar4
      00014F D0 03            [ 8]  336 	pop	ar3
      000151 D0 02            [ 8]  337 	pop	ar2
                                    338 ;	genAssign: resultIsFar = TRUE
      000153 90s00r00r10      [12]  339 	mov	dptr,#_tancotf_n_1_24
      000157 EE               [ 4]  340 	mov	a,r6
      000158 F0               [ 8]  341 	movx	@dptr,a
      000159 A3               [12]  342 	inc	dptr
      00015A EF               [ 4]  343 	mov	a,r7
      00015B F0               [ 8]  344 	movx	@dptr,a
                                    345 ;	tancotf.c:66: xn=n;
      00015C C0 02            [ 8]  346 	push	ar2
      00015E C0 03            [ 8]  347 	push	ar3
      000160 C0 04            [ 8]  348 	push	ar4
      000162 C0 05            [ 8]  349 	push	ar5
      000164 05 86            [ 8]  350 	inc	dps
      000166 90s00r00r10      [12]  351 	mov	dptr,#_tancotf_n_1_24
      00016A E0               [ 8]  352 	movx	a,@dptr
      00016B F5 82            [ 8]  353 	mov	dpl,a
      00016D A3               [12]  354 	inc	dptr
      00016E E0               [ 8]  355 	movx	a,@dptr
      00016F F5 83            [ 8]  356 	mov	dph,a
      000171 75 86 00         [12]  357 	mov	dps,#0
      000174 12s00r00r00      [16]  358 	lcall	___sint2fs
      000178 A8 82            [ 8]  359 	mov	r0,dpl
      00017A A9 83            [ 8]  360 	mov	r1,dph
      00017C AE 93            [ 8]  361 	mov	r6,dpx
      00017E AF F0            [ 8]  362 	mov	r7,b
      000180 D0 05            [ 8]  363 	pop	ar5
      000182 D0 04            [ 8]  364 	pop	ar4
      000184 D0 03            [ 8]  365 	pop	ar3
      000186 D0 02            [ 8]  366 	pop	ar2
                                    367 ;	genAssign: resultIsFar = TRUE
      000188 90s00r00r08      [12]  368 	mov	dptr,#_tancotf_xn_1_24
      00018C E8               [ 4]  369 	mov	a,r0
      00018D F0               [ 8]  370 	movx	@dptr,a
      00018E A3               [12]  371 	inc	dptr
      00018F E9               [ 4]  372 	mov	a,r1
      000190 F0               [ 8]  373 	movx	@dptr,a
      000191 A3               [12]  374 	inc	dptr
      000192 EE               [ 4]  375 	mov	a,r6
      000193 F0               [ 8]  376 	movx	@dptr,a
      000194 A3               [12]  377 	inc	dptr
      000195 EF               [ 4]  378 	mov	a,r7
      000196 F0               [ 8]  379 	movx	@dptr,a
                                    380 ;	tancotf.c:68: xnum=(int)x;
      000197 C0 02            [ 8]  381 	push	ar2
      000199 C0 03            [ 8]  382 	push	ar3
      00019B C0 04            [ 8]  383 	push	ar4
      00019D C0 05            [ 8]  384 	push	ar5
      00019F 8A 82            [ 8]  385 	mov	dpl,r2
      0001A1 8B 83            [ 8]  386 	mov	dph,r3
      0001A3 8C 93            [ 8]  387 	mov	dpx,r4
      0001A5 8D F0            [ 8]  388 	mov	b,r5
      0001A7 12s00r00r00      [16]  389 	lcall	___fs2sint
      0001AB D0 05            [ 8]  390 	pop	ar5
      0001AD D0 04            [ 8]  391 	pop	ar4
      0001AF D0 03            [ 8]  392 	pop	ar3
      0001B1 D0 02            [ 8]  393 	pop	ar2
      0001B3 C0 02            [ 8]  394 	push	ar2
      0001B5 C0 03            [ 8]  395 	push	ar3
      0001B7 C0 04            [ 8]  396 	push	ar4
      0001B9 C0 05            [ 8]  397 	push	ar5
      0001BB 12s00r00r00      [16]  398 	lcall	___sint2fs
      0001BF AE 82            [ 8]  399 	mov	r6,dpl
      0001C1 AF 83            [ 8]  400 	mov	r7,dph
      0001C3 A8 93            [ 8]  401 	mov	r0,dpx
      0001C5 A9 F0            [ 8]  402 	mov	r1,b
      0001C7 D0 05            [ 8]  403 	pop	ar5
      0001C9 D0 04            [ 8]  404 	pop	ar4
      0001CB D0 03            [ 8]  405 	pop	ar3
      0001CD D0 02            [ 8]  406 	pop	ar2
                                    407 ;	genAssign: resultIsFar = TRUE
                                    408 ;	tancotf.c:69: xden=x-xnum;
                                    409 ;	genAssign: resultIsFar = TRUE
      0001CF 90s00r00r00      [12]  410 	mov	dptr,#___fssub_PARM_2
      0001D3 EE               [ 4]  411 	mov	a,r6
      0001D4 F0               [ 8]  412 	movx	@dptr,a
      0001D5 A3               [12]  413 	inc	dptr
      0001D6 EF               [ 4]  414 	mov	a,r7
      0001D7 F0               [ 8]  415 	movx	@dptr,a
      0001D8 A3               [12]  416 	inc	dptr
      0001D9 E8               [ 4]  417 	mov	a,r0
      0001DA F0               [ 8]  418 	movx	@dptr,a
      0001DB A3               [12]  419 	inc	dptr
      0001DC E9               [ 4]  420 	mov	a,r1
      0001DD F0               [ 8]  421 	movx	@dptr,a
      0001DE C0 06            [ 8]  422 	push	ar6
      0001E0 C0 07            [ 8]  423 	push	ar7
      0001E2 C0 00            [ 8]  424 	push	ar0
      0001E4 C0 01            [ 8]  425 	push	ar1
      0001E6 8A 82            [ 8]  426 	mov	dpl,r2
      0001E8 8B 83            [ 8]  427 	mov	dph,r3
      0001EA 8C 93            [ 8]  428 	mov	dpx,r4
      0001EC 8D F0            [ 8]  429 	mov	b,r5
      0001EE 12s00r00r00      [16]  430 	lcall	___fssub
      0001F2 AA 82            [ 8]  431 	mov	r2,dpl
      0001F4 AB 83            [ 8]  432 	mov	r3,dph
      0001F6 AC 93            [ 8]  433 	mov	r4,dpx
      0001F8 AD F0            [ 8]  434 	mov	r5,b
      0001FA D0 01            [ 8]  435 	pop	ar1
      0001FC D0 00            [ 8]  436 	pop	ar0
      0001FE D0 07            [ 8]  437 	pop	ar7
      000200 D0 06            [ 8]  438 	pop	ar6
                                    439 ;	genAssign: resultIsFar = TRUE
      000202 90s00r00r0C      [12]  440 	mov	dptr,#_tancotf_xden_1_24
      000206 EA               [ 4]  441 	mov	a,r2
      000207 F0               [ 8]  442 	movx	@dptr,a
      000208 A3               [12]  443 	inc	dptr
      000209 EB               [ 4]  444 	mov	a,r3
      00020A F0               [ 8]  445 	movx	@dptr,a
      00020B A3               [12]  446 	inc	dptr
      00020C EC               [ 4]  447 	mov	a,r4
      00020D F0               [ 8]  448 	movx	@dptr,a
      00020E A3               [12]  449 	inc	dptr
      00020F ED               [ 4]  450 	mov	a,r5
      000210 F0               [ 8]  451 	movx	@dptr,a
                                    452 ;	tancotf.c:70: f=((xnum-xn*C1)+xden)-xn*C2;
      000211 90s00r00r08      [12]  453 	mov	dptr,#_tancotf_xn_1_24
                                    454 ;	genAssign: resultIsFar = TRUE
      000215 75 86 21         [12]  455 	mov	dps,#0x21
      000218 90s00r00r00      [12]  456 	mov	dptr,#___fsmul_PARM_2
      00021C E0               [ 8]  457 	movx	a,@dptr
      00021D F0               [ 8]  458 	movx	@dptr,a
      00021E A3               [12]  459 	inc	dptr
      00021F A3               [12]  460 	inc	dptr
      000220 E0               [ 8]  461 	movx	a,@dptr
      000221 F0               [ 8]  462 	movx	@dptr,a
      000222 A3               [12]  463 	inc	dptr
      000223 A3               [12]  464 	inc	dptr
      000224 E0               [ 8]  465 	movx	a,@dptr
      000225 F0               [ 8]  466 	movx	@dptr,a
      000226 A3               [12]  467 	inc	dptr
      000227 A3               [12]  468 	inc	dptr
      000228 E0               [ 8]  469 	movx	a,@dptr
      000229 F0               [ 8]  470 	movx	@dptr,a
      00022A 75 86 00         [12]  471 	mov	dps,#0
      00022D C0 06            [ 8]  472 	push	ar6
      00022F C0 07            [ 8]  473 	push	ar7
      000231 C0 00            [ 8]  474 	push	ar0
      000233 C0 01            [ 8]  475 	push	ar1
      000235 90 00 00 00      [12]  476 	mov  dptr,#0x0000
      000239 75 93 C9         [12]  477 	mov	dpx,#0xC9
      00023C 75 F0 3F         [12]  478 	mov	b,#0x3F
      00023F 12s00r00r00      [16]  479 	lcall	___fsmul
      000243 AA 82            [ 8]  480 	mov	r2,dpl
      000245 AB 83            [ 8]  481 	mov	r3,dph
      000247 AC 93            [ 8]  482 	mov	r4,dpx
      000249 AD F0            [ 8]  483 	mov	r5,b
      00024B D0 01            [ 8]  484 	pop	ar1
      00024D D0 00            [ 8]  485 	pop	ar0
      00024F D0 07            [ 8]  486 	pop	ar7
      000251 D0 06            [ 8]  487 	pop	ar6
                                    488 ;	genAssign: resultIsFar = TRUE
      000253 90s00r00r00      [12]  489 	mov	dptr,#___fssub_PARM_2
      000257 EA               [ 4]  490 	mov	a,r2
      000258 F0               [ 8]  491 	movx	@dptr,a
      000259 A3               [12]  492 	inc	dptr
      00025A EB               [ 4]  493 	mov	a,r3
      00025B F0               [ 8]  494 	movx	@dptr,a
      00025C A3               [12]  495 	inc	dptr
      00025D EC               [ 4]  496 	mov	a,r4
      00025E F0               [ 8]  497 	movx	@dptr,a
      00025F A3               [12]  498 	inc	dptr
      000260 ED               [ 4]  499 	mov	a,r5
      000261 F0               [ 8]  500 	movx	@dptr,a
      000262 8E 82            [ 8]  501 	mov	dpl,r6
      000264 8F 83            [ 8]  502 	mov	dph,r7
      000266 88 93            [ 8]  503 	mov	dpx,r0
      000268 89 F0            [ 8]  504 	mov	b,r1
      00026A 12s00r00r00      [16]  505 	lcall	___fssub
      00026E AA 82            [ 8]  506 	mov	r2,dpl
      000270 AB 83            [ 8]  507 	mov	r3,dph
      000272 AC 93            [ 8]  508 	mov	r4,dpx
      000274 AD F0            [ 8]  509 	mov	r5,b
      000276 90s00r00r0C      [12]  510 	mov	dptr,#_tancotf_xden_1_24
                                    511 ;	genAssign: resultIsFar = TRUE
      00027A 75 86 21         [12]  512 	mov	dps,#0x21
      00027D 90s00r00r00      [12]  513 	mov	dptr,#___fsadd_PARM_2
      000281 E0               [ 8]  514 	movx	a,@dptr
      000282 F0               [ 8]  515 	movx	@dptr,a
      000283 A3               [12]  516 	inc	dptr
      000284 A3               [12]  517 	inc	dptr
      000285 E0               [ 8]  518 	movx	a,@dptr
      000286 F0               [ 8]  519 	movx	@dptr,a
      000287 A3               [12]  520 	inc	dptr
      000288 A3               [12]  521 	inc	dptr
      000289 E0               [ 8]  522 	movx	a,@dptr
      00028A F0               [ 8]  523 	movx	@dptr,a
      00028B A3               [12]  524 	inc	dptr
      00028C A3               [12]  525 	inc	dptr
      00028D E0               [ 8]  526 	movx	a,@dptr
      00028E F0               [ 8]  527 	movx	@dptr,a
      00028F 75 86 00         [12]  528 	mov	dps,#0
      000292 8A 82            [ 8]  529 	mov	dpl,r2
      000294 8B 83            [ 8]  530 	mov	dph,r3
      000296 8C 93            [ 8]  531 	mov	dpx,r4
      000298 8D F0            [ 8]  532 	mov	b,r5
      00029A 12s00r00r00      [16]  533 	lcall	___fsadd
      00029E AE 82            [ 8]  534 	mov	r6,dpl
      0002A0 AF 83            [ 8]  535 	mov	r7,dph
      0002A2 A8 93            [ 8]  536 	mov	r0,dpx
      0002A4 A9 F0            [ 8]  537 	mov	r1,b
      0002A6 90s00r00r08      [12]  538 	mov	dptr,#_tancotf_xn_1_24
                                    539 ;	genAssign: resultIsFar = TRUE
      0002AA 75 86 21         [12]  540 	mov	dps,#0x21
      0002AD 90s00r00r00      [12]  541 	mov	dptr,#___fsmul_PARM_2
      0002B1 E0               [ 8]  542 	movx	a,@dptr
      0002B2 F0               [ 8]  543 	movx	@dptr,a
      0002B3 A3               [12]  544 	inc	dptr
      0002B4 A3               [12]  545 	inc	dptr
      0002B5 E0               [ 8]  546 	movx	a,@dptr
      0002B6 F0               [ 8]  547 	movx	@dptr,a
      0002B7 A3               [12]  548 	inc	dptr
      0002B8 A3               [12]  549 	inc	dptr
      0002B9 E0               [ 8]  550 	movx	a,@dptr
      0002BA F0               [ 8]  551 	movx	@dptr,a
      0002BB A3               [12]  552 	inc	dptr
      0002BC A3               [12]  553 	inc	dptr
      0002BD E0               [ 8]  554 	movx	a,@dptr
      0002BE F0               [ 8]  555 	movx	@dptr,a
      0002BF 75 86 00         [12]  556 	mov	dps,#0
      0002C2 C0 06            [ 8]  557 	push	ar6
      0002C4 C0 07            [ 8]  558 	push	ar7
      0002C6 C0 00            [ 8]  559 	push	ar0
      0002C8 C0 01            [ 8]  560 	push	ar1
      0002CA 90 FD AA 22      [12]  561 	mov	dptr,#0xFDAA22
      0002CE 75 F0 39         [12]  562 	mov	b,#0x39
      0002D1 12s00r00r00      [16]  563 	lcall	___fsmul
      0002D5 AA 82            [ 8]  564 	mov	r2,dpl
      0002D7 AB 83            [ 8]  565 	mov	r3,dph
      0002D9 AC 93            [ 8]  566 	mov	r4,dpx
      0002DB AD F0            [ 8]  567 	mov	r5,b
      0002DD D0 01            [ 8]  568 	pop	ar1
      0002DF D0 00            [ 8]  569 	pop	ar0
      0002E1 D0 07            [ 8]  570 	pop	ar7
      0002E3 D0 06            [ 8]  571 	pop	ar6
                                    572 ;	genAssign: resultIsFar = TRUE
      0002E5 90s00r00r00      [12]  573 	mov	dptr,#___fssub_PARM_2
      0002E9 EA               [ 4]  574 	mov	a,r2
      0002EA F0               [ 8]  575 	movx	@dptr,a
      0002EB A3               [12]  576 	inc	dptr
      0002EC EB               [ 4]  577 	mov	a,r3
      0002ED F0               [ 8]  578 	movx	@dptr,a
      0002EE A3               [12]  579 	inc	dptr
      0002EF EC               [ 4]  580 	mov	a,r4
      0002F0 F0               [ 8]  581 	movx	@dptr,a
      0002F1 A3               [12]  582 	inc	dptr
      0002F2 ED               [ 4]  583 	mov	a,r5
      0002F3 F0               [ 8]  584 	movx	@dptr,a
      0002F4 8E 82            [ 8]  585 	mov	dpl,r6
      0002F6 8F 83            [ 8]  586 	mov	dph,r7
      0002F8 88 93            [ 8]  587 	mov	dpx,r0
      0002FA 89 F0            [ 8]  588 	mov	b,r1
      0002FC 12s00r00r00      [16]  589 	lcall	___fssub
      000300 AA 82            [ 8]  590 	mov	r2,dpl
      000302 AB 83            [ 8]  591 	mov	r3,dph
      000304 AC 93            [ 8]  592 	mov	r4,dpx
      000306 AD F0            [ 8]  593 	mov	r5,b
                                    594 ;	genAssign: resultIsFar = TRUE
      000308 90s00r00r00      [12]  595 	mov	dptr,#_tancotf_f_1_24
      00030C EA               [ 4]  596 	mov	a,r2
      00030D F0               [ 8]  597 	movx	@dptr,a
      00030E A3               [12]  598 	inc	dptr
      00030F EB               [ 4]  599 	mov	a,r3
      000310 F0               [ 8]  600 	movx	@dptr,a
      000311 A3               [12]  601 	inc	dptr
      000312 EC               [ 4]  602 	mov	a,r4
      000313 F0               [ 8]  603 	movx	@dptr,a
      000314 A3               [12]  604 	inc	dptr
      000315 ED               [ 4]  605 	mov	a,r5
      000316 F0               [ 8]  606 	movx	@dptr,a
                                    607 ;	tancotf.c:72: if (fabsf(f) < EPS)
      000317 05 86            [ 8]  608 	inc	dps
      000319 90s00r00r00      [12]  609 	mov	dptr,#_tancotf_f_1_24
      00031D E0               [ 8]  610 	movx	a,@dptr
      00031E F5 82            [ 8]  611 	mov	dpl,a
      000320 A3               [12]  612 	inc	dptr
      000321 E0               [ 8]  613 	movx	a,@dptr
      000322 F5 83            [ 8]  614 	mov	dph,a
      000324 A3               [12]  615 	inc	dptr
      000325 E0               [ 8]  616 	movx	a,@dptr
      000326 F5 93            [ 8]  617 	mov	dpx,a
      000328 A3               [12]  618 	inc	dptr
      000329 E0               [ 8]  619 	movx	a,@dptr
      00032A F5 F0            [ 8]  620 	mov	b,a
      00032C 75 86 00         [12]  621 	mov	dps,#0
      00032F 12s00r00r00      [16]  622 	lcall	_fabsf
      000333 AA 82            [ 8]  623 	mov	r2,dpl
      000335 AB 83            [ 8]  624 	mov	r3,dph
      000337 AC 93            [ 8]  625 	mov	r4,dpx
      000339 AD F0            [ 8]  626 	mov	r5,b
                                    627 ;	genAssign: resultIsFar = TRUE
      00033B 90s00r00r00      [12]  628 	mov	dptr,#___fslt_PARM_2
      00033F E4               [ 4]  629 	clr	a
      000340 F0               [ 8]  630 	movx	@dptr,a
      000341 A3               [12]  631 	inc	dptr
      000342 E4               [ 4]  632 	clr	a
      000343 F0               [ 8]  633 	movx	@dptr,a
      000344 A3               [12]  634 	inc	dptr
      000345 74 80            [ 8]  635 	mov	a,#0x80
      000347 F0               [ 8]  636 	movx	@dptr,a
      000348 A3               [12]  637 	inc	dptr
      000349 74 39            [ 8]  638 	mov	a,#0x39
      00034B F0               [ 8]  639 	movx	@dptr,a
      00034C 8A 82            [ 8]  640 	mov	dpl,r2
      00034E 8B 83            [ 8]  641 	mov	dph,r3
      000350 8C 93            [ 8]  642 	mov	dpx,r4
      000352 8D F0            [ 8]  643 	mov	b,r5
      000354 12s00r00r00      [16]  644 	lcall	___fslt
      000358 E5 82            [ 8]  645 	mov	a,dpl
      00035A 60 24            [12]  646 	jz  00104$
      00035C                        647 00139$:
                                    648 ;	tancotf.c:74: xnum = f;
      00035C 90s00r00r00      [12]  649 	mov	dptr,#_tancotf_f_1_24
                                    650 ;	genAssign: resultIsFar = TRUE
      000360 E0               [ 8]  651 	movx	a,@dptr
      000361 FE               [ 4]  652 	mov	r6,a
      000362 A3               [12]  653 	inc	dptr
      000363 E0               [ 8]  654 	movx	a,@dptr
      000364 FF               [ 4]  655 	mov	r7,a
      000365 A3               [12]  656 	inc	dptr
      000366 E0               [ 8]  657 	movx	a,@dptr
      000367 F8               [ 4]  658 	mov	r0,a
      000368 A3               [12]  659 	inc	dptr
      000369 E0               [ 8]  660 	movx	a,@dptr
      00036A F9               [ 4]  661 	mov	r1,a
                                    662 ;	tancotf.c:75: xden = 1.0;
                                    663 ;	genAssign: resultIsFar = TRUE
      00036B 90s00r00r0C      [12]  664 	mov	dptr,#_tancotf_xden_1_24
      00036F E4               [ 4]  665 	clr	a
      000370 F0               [ 8]  666 	movx	@dptr,a
      000371 A3               [12]  667 	inc	dptr
      000372 E4               [ 4]  668 	clr	a
      000373 F0               [ 8]  669 	movx	@dptr,a
      000374 A3               [12]  670 	inc	dptr
      000375 74 80            [ 8]  671 	mov	a,#0x80
      000377 F0               [ 8]  672 	movx	@dptr,a
      000378 A3               [12]  673 	inc	dptr
      000379 74 3F            [ 8]  674 	mov	a,#0x3F
      00037B F0               [ 8]  675 	movx	@dptr,a
      00037C 02s00r05r5E      [16]  676 	ljmp	00105$
      000380                        677 00104$:
                                    678 ;	tancotf.c:79: g = f*f;
      000380 90s00r00r00      [12]  679 	mov	dptr,#_tancotf_f_1_24
                                    680 ;	genAssign: resultIsFar = TRUE
      000384 75 86 21         [12]  681 	mov	dps,#0x21
      000387 90s00r00r00      [12]  682 	mov	dptr,#___fsmul_PARM_2
      00038B E0               [ 8]  683 	movx	a,@dptr
      00038C F0               [ 8]  684 	movx	@dptr,a
      00038D A3               [12]  685 	inc	dptr
      00038E A3               [12]  686 	inc	dptr
      00038F E0               [ 8]  687 	movx	a,@dptr
      000390 F0               [ 8]  688 	movx	@dptr,a
      000391 A3               [12]  689 	inc	dptr
      000392 A3               [12]  690 	inc	dptr
      000393 E0               [ 8]  691 	movx	a,@dptr
      000394 F0               [ 8]  692 	movx	@dptr,a
      000395 A3               [12]  693 	inc	dptr
      000396 A3               [12]  694 	inc	dptr
      000397 E0               [ 8]  695 	movx	a,@dptr
      000398 F0               [ 8]  696 	movx	@dptr,a
      000399 75 86 01         [12]  697 	mov	dps, #1
      00039C 90s00r00r00      [12]  698 	mov	dptr,#_tancotf_f_1_24
      0003A0 E0               [ 8]  699 	movx	a,@dptr
      0003A1 F5 82            [ 8]  700 	mov	dpl,a
      0003A3 A3               [12]  701 	inc	dptr
      0003A4 E0               [ 8]  702 	movx	a,@dptr
      0003A5 F5 83            [ 8]  703 	mov	dph,a
      0003A7 A3               [12]  704 	inc	dptr
      0003A8 E0               [ 8]  705 	movx	a,@dptr
      0003A9 F5 93            [ 8]  706 	mov	dpx,a
      0003AB A3               [12]  707 	inc	dptr
      0003AC E0               [ 8]  708 	movx	a,@dptr
      0003AD F5 F0            [ 8]  709 	mov	b,a
      0003AF 75 86 00         [12]  710 	mov	dps,#0
      0003B2 12s00r00r00      [16]  711 	lcall	___fsmul
      0003B6 AA 82            [ 8]  712 	mov	r2,dpl
      0003B8 AB 83            [ 8]  713 	mov	r3,dph
      0003BA AC 93            [ 8]  714 	mov	r4,dpx
      0003BC AD F0            [ 8]  715 	mov	r5,b
                                    716 ;	genAssign: resultIsFar = TRUE
      0003BE 90s00r00r04      [12]  717 	mov	dptr,#_tancotf_g_1_24
      0003C2 EA               [ 4]  718 	mov	a,r2
      0003C3 F0               [ 8]  719 	movx	@dptr,a
      0003C4 A3               [12]  720 	inc	dptr
      0003C5 EB               [ 4]  721 	mov	a,r3
      0003C6 F0               [ 8]  722 	movx	@dptr,a
      0003C7 A3               [12]  723 	inc	dptr
      0003C8 EC               [ 4]  724 	mov	a,r4
      0003C9 F0               [ 8]  725 	movx	@dptr,a
      0003CA A3               [12]  726 	inc	dptr
      0003CB ED               [ 4]  727 	mov	a,r5
      0003CC F0               [ 8]  728 	movx	@dptr,a
                                    729 ;	tancotf.c:80: xnum = P(f,g);
      0003CD 90s00r00r04      [12]  730 	mov	dptr,#_tancotf_g_1_24
                                    731 ;	genAssign: resultIsFar = TRUE
      0003D1 75 86 21         [12]  732 	mov	dps,#0x21
      0003D4 90s00r00r00      [12]  733 	mov	dptr,#___fsmul_PARM_2
      0003D8 E0               [ 8]  734 	movx	a,@dptr
      0003D9 F0               [ 8]  735 	movx	@dptr,a
      0003DA A3               [12]  736 	inc	dptr
      0003DB A3               [12]  737 	inc	dptr
      0003DC E0               [ 8]  738 	movx	a,@dptr
      0003DD F0               [ 8]  739 	movx	@dptr,a
      0003DE A3               [12]  740 	inc	dptr
      0003DF A3               [12]  741 	inc	dptr
      0003E0 E0               [ 8]  742 	movx	a,@dptr
      0003E1 F0               [ 8]  743 	movx	@dptr,a
      0003E2 A3               [12]  744 	inc	dptr
      0003E3 A3               [12]  745 	inc	dptr
      0003E4 E0               [ 8]  746 	movx	a,@dptr
      0003E5 F0               [ 8]  747 	movx	@dptr,a
      0003E6 75 86 00         [12]  748 	mov	dps,#0
      0003E9 90 C4 33 B8      [12]  749 	mov	dptr,#0xC433B8
      0003ED 75 F0 BD         [12]  750 	mov	b,#0xBD
      0003F0 12s00r00r00      [16]  751 	lcall	___fsmul
      0003F4 AA 82            [ 8]  752 	mov	r2,dpl
      0003F6 AB 83            [ 8]  753 	mov	r3,dph
      0003F8 AC 93            [ 8]  754 	mov	r4,dpx
      0003FA AD F0            [ 8]  755 	mov	r5,b
      0003FC 90s00r00r00      [12]  756 	mov	dptr,#_tancotf_f_1_24
                                    757 ;	genAssign: resultIsFar = TRUE
      000400 75 86 21         [12]  758 	mov	dps,#0x21
      000403 90s00r00r00      [12]  759 	mov	dptr,#___fsmul_PARM_2
      000407 E0               [ 8]  760 	movx	a,@dptr
      000408 F0               [ 8]  761 	movx	@dptr,a
      000409 A3               [12]  762 	inc	dptr
      00040A A3               [12]  763 	inc	dptr
      00040B E0               [ 8]  764 	movx	a,@dptr
      00040C F0               [ 8]  765 	movx	@dptr,a
      00040D A3               [12]  766 	inc	dptr
      00040E A3               [12]  767 	inc	dptr
      00040F E0               [ 8]  768 	movx	a,@dptr
      000410 F0               [ 8]  769 	movx	@dptr,a
      000411 A3               [12]  770 	inc	dptr
      000412 A3               [12]  771 	inc	dptr
      000413 E0               [ 8]  772 	movx	a,@dptr
      000414 F0               [ 8]  773 	movx	@dptr,a
      000415 75 86 00         [12]  774 	mov	dps,#0
      000418 8A 82            [ 8]  775 	mov	dpl,r2
      00041A 8B 83            [ 8]  776 	mov	dph,r3
      00041C 8C 93            [ 8]  777 	mov	dpx,r4
      00041E 8D F0            [ 8]  778 	mov	b,r5
      000420 12s00r00r00      [16]  779 	lcall	___fsmul
      000424 AA 82            [ 8]  780 	mov	r2,dpl
      000426 AB 83            [ 8]  781 	mov	r3,dph
      000428 AC 93            [ 8]  782 	mov	r4,dpx
      00042A AD F0            [ 8]  783 	mov	r5,b
      00042C 90s00r00r00      [12]  784 	mov	dptr,#_tancotf_f_1_24
                                    785 ;	genAssign: resultIsFar = TRUE
      000430 75 86 21         [12]  786 	mov	dps,#0x21
      000433 90s00r00r00      [12]  787 	mov	dptr,#___fsadd_PARM_2
      000437 E0               [ 8]  788 	movx	a,@dptr
      000438 F0               [ 8]  789 	movx	@dptr,a
      000439 A3               [12]  790 	inc	dptr
      00043A A3               [12]  791 	inc	dptr
      00043B E0               [ 8]  792 	movx	a,@dptr
      00043C F0               [ 8]  793 	movx	@dptr,a
      00043D A3               [12]  794 	inc	dptr
      00043E A3               [12]  795 	inc	dptr
      00043F E0               [ 8]  796 	movx	a,@dptr
      000440 F0               [ 8]  797 	movx	@dptr,a
      000441 A3               [12]  798 	inc	dptr
      000442 A3               [12]  799 	inc	dptr
      000443 E0               [ 8]  800 	movx	a,@dptr
      000444 F0               [ 8]  801 	movx	@dptr,a
      000445 75 86 00         [12]  802 	mov	dps,#0
      000448 8A 82            [ 8]  803 	mov	dpl,r2
      00044A 8B 83            [ 8]  804 	mov	dph,r3
      00044C 8C 93            [ 8]  805 	mov	dpx,r4
      00044E 8D F0            [ 8]  806 	mov	b,r5
      000450 12s00r00r00      [16]  807 	lcall	___fsadd
      000454 AA 82            [ 8]  808 	mov	r2,dpl
      000456 AB 83            [ 8]  809 	mov	r3,dph
      000458 AC 93            [ 8]  810 	mov	r4,dpx
      00045A AD F0            [ 8]  811 	mov	r5,b
                                    812 ;	genAssign: resultIsFar = TRUE
      00045C 8A 06            [ 8]  813 	mov	ar6,r2
      00045E 8B 07            [ 8]  814 	mov	ar7,r3
      000460 8C 00            [ 8]  815 	mov	ar0,r4
      000462 8D 01            [ 8]  816 	mov	ar1,r5
                                    817 ;	tancotf.c:81: xden = Q(g);
      000464 90s00r00r04      [12]  818 	mov	dptr,#_tancotf_g_1_24
                                    819 ;	genAssign: resultIsFar = TRUE
      000468 75 86 21         [12]  820 	mov	dps,#0x21
      00046B 90s00r00r00      [12]  821 	mov	dptr,#___fsmul_PARM_2
      00046F E0               [ 8]  822 	movx	a,@dptr
      000470 F0               [ 8]  823 	movx	@dptr,a
      000471 A3               [12]  824 	inc	dptr
      000472 A3               [12]  825 	inc	dptr
      000473 E0               [ 8]  826 	movx	a,@dptr
      000474 F0               [ 8]  827 	movx	@dptr,a
      000475 A3               [12]  828 	inc	dptr
      000476 A3               [12]  829 	inc	dptr
      000477 E0               [ 8]  830 	movx	a,@dptr
      000478 F0               [ 8]  831 	movx	@dptr,a
      000479 A3               [12]  832 	inc	dptr
      00047A A3               [12]  833 	inc	dptr
      00047B E0               [ 8]  834 	movx	a,@dptr
      00047C F0               [ 8]  835 	movx	@dptr,a
      00047D 75 86 00         [12]  836 	mov	dps,#0
      000480 C0 06            [ 8]  837 	push	ar6
      000482 C0 07            [ 8]  838 	push	ar7
      000484 C0 00            [ 8]  839 	push	ar0
      000486 C0 01            [ 8]  840 	push	ar1
      000488 90 1F 33 75      [12]  841 	mov	dptr,#0x1F3375
      00048C 75 F0 3C         [12]  842 	mov	b,#0x3C
      00048F 12s00r00r00      [16]  843 	lcall	___fsmul
      000493 AA 82            [ 8]  844 	mov	r2,dpl
      000495 AB 83            [ 8]  845 	mov	r3,dph
      000497 AC 93            [ 8]  846 	mov	r4,dpx
      000499 AD F0            [ 8]  847 	mov	r5,b
      00049B D0 01            [ 8]  848 	pop	ar1
      00049D D0 00            [ 8]  849 	pop	ar0
      00049F D0 07            [ 8]  850 	pop	ar7
      0004A1 D0 06            [ 8]  851 	pop	ar6
                                    852 ;	genAssign: resultIsFar = TRUE
      0004A3 90s00r00r00      [12]  853 	mov	dptr,#___fsadd_PARM_2
      0004A7 74 AF            [ 8]  854 	mov	a,#0xAF
      0004A9 F0               [ 8]  855 	movx	@dptr,a
      0004AA A3               [12]  856 	inc	dptr
      0004AB 74 B7            [ 8]  857 	mov	a,#0xB7
      0004AD F0               [ 8]  858 	movx	@dptr,a
      0004AE A3               [12]  859 	inc	dptr
      0004AF 74 DB            [ 8]  860 	mov	a,#0xDB
      0004B1 F0               [ 8]  861 	movx	@dptr,a
      0004B2 A3               [12]  862 	inc	dptr
      0004B3 74 BE            [ 8]  863 	mov	a,#0xBE
      0004B5 F0               [ 8]  864 	movx	@dptr,a
      0004B6 C0 06            [ 8]  865 	push	ar6
      0004B8 C0 07            [ 8]  866 	push	ar7
      0004BA C0 00            [ 8]  867 	push	ar0
      0004BC C0 01            [ 8]  868 	push	ar1
      0004BE 8A 82            [ 8]  869 	mov	dpl,r2
      0004C0 8B 83            [ 8]  870 	mov	dph,r3
      0004C2 8C 93            [ 8]  871 	mov	dpx,r4
      0004C4 8D F0            [ 8]  872 	mov	b,r5
      0004C6 12s00r00r00      [16]  873 	lcall	___fsadd
      0004CA AA 82            [ 8]  874 	mov	r2,dpl
      0004CC AB 83            [ 8]  875 	mov	r3,dph
      0004CE AC 93            [ 8]  876 	mov	r4,dpx
      0004D0 AD F0            [ 8]  877 	mov	r5,b
      0004D2 D0 01            [ 8]  878 	pop	ar1
      0004D4 D0 00            [ 8]  879 	pop	ar0
      0004D6 D0 07            [ 8]  880 	pop	ar7
      0004D8 D0 06            [ 8]  881 	pop	ar6
      0004DA 90s00r00r04      [12]  882 	mov	dptr,#_tancotf_g_1_24
                                    883 ;	genAssign: resultIsFar = TRUE
      0004DE 75 86 21         [12]  884 	mov	dps,#0x21
      0004E1 90s00r00r00      [12]  885 	mov	dptr,#___fsmul_PARM_2
      0004E5 E0               [ 8]  886 	movx	a,@dptr
      0004E6 F0               [ 8]  887 	movx	@dptr,a
      0004E7 A3               [12]  888 	inc	dptr
      0004E8 A3               [12]  889 	inc	dptr
      0004E9 E0               [ 8]  890 	movx	a,@dptr
      0004EA F0               [ 8]  891 	movx	@dptr,a
      0004EB A3               [12]  892 	inc	dptr
      0004EC A3               [12]  893 	inc	dptr
      0004ED E0               [ 8]  894 	movx	a,@dptr
      0004EE F0               [ 8]  895 	movx	@dptr,a
      0004EF A3               [12]  896 	inc	dptr
      0004F0 A3               [12]  897 	inc	dptr
      0004F1 E0               [ 8]  898 	movx	a,@dptr
      0004F2 F0               [ 8]  899 	movx	@dptr,a
      0004F3 75 86 00         [12]  900 	mov	dps,#0
      0004F6 C0 06            [ 8]  901 	push	ar6
      0004F8 C0 07            [ 8]  902 	push	ar7
      0004FA C0 00            [ 8]  903 	push	ar0
      0004FC C0 01            [ 8]  904 	push	ar1
      0004FE 8A 82            [ 8]  905 	mov	dpl,r2
      000500 8B 83            [ 8]  906 	mov	dph,r3
      000502 8C 93            [ 8]  907 	mov	dpx,r4
      000504 8D F0            [ 8]  908 	mov	b,r5
      000506 12s00r00r00      [16]  909 	lcall	___fsmul
      00050A AA 82            [ 8]  910 	mov	r2,dpl
      00050C AB 83            [ 8]  911 	mov	r3,dph
      00050E AC 93            [ 8]  912 	mov	r4,dpx
      000510 AD F0            [ 8]  913 	mov	r5,b
      000512 D0 01            [ 8]  914 	pop	ar1
      000514 D0 00            [ 8]  915 	pop	ar0
      000516 D0 07            [ 8]  916 	pop	ar7
      000518 D0 06            [ 8]  917 	pop	ar6
                                    918 ;	genAssign: resultIsFar = TRUE
      00051A 90s00r00r00      [12]  919 	mov	dptr,#___fsadd_PARM_2
      00051E E4               [ 4]  920 	clr	a
      00051F F0               [ 8]  921 	movx	@dptr,a
      000520 A3               [12]  922 	inc	dptr
      000521 E4               [ 4]  923 	clr	a
      000522 F0               [ 8]  924 	movx	@dptr,a
      000523 A3               [12]  925 	inc	dptr
      000524 74 80            [ 8]  926 	mov	a,#0x80
      000526 F0               [ 8]  927 	movx	@dptr,a
      000527 A3               [12]  928 	inc	dptr
      000528 74 3F            [ 8]  929 	mov	a,#0x3F
      00052A F0               [ 8]  930 	movx	@dptr,a
      00052B C0 06            [ 8]  931 	push	ar6
      00052D C0 07            [ 8]  932 	push	ar7
      00052F C0 00            [ 8]  933 	push	ar0
      000531 C0 01            [ 8]  934 	push	ar1
      000533 8A 82            [ 8]  935 	mov	dpl,r2
      000535 8B 83            [ 8]  936 	mov	dph,r3
      000537 8C 93            [ 8]  937 	mov	dpx,r4
      000539 8D F0            [ 8]  938 	mov	b,r5
      00053B 12s00r00r00      [16]  939 	lcall	___fsadd
      00053F AA 82            [ 8]  940 	mov	r2,dpl
      000541 AB 83            [ 8]  941 	mov	r3,dph
      000543 AC 93            [ 8]  942 	mov	r4,dpx
      000545 AD F0            [ 8]  943 	mov	r5,b
      000547 D0 01            [ 8]  944 	pop	ar1
      000549 D0 00            [ 8]  945 	pop	ar0
      00054B D0 07            [ 8]  946 	pop	ar7
      00054D D0 06            [ 8]  947 	pop	ar6
                                    948 ;	genAssign: resultIsFar = TRUE
      00054F 90s00r00r0C      [12]  949 	mov	dptr,#_tancotf_xden_1_24
      000553 EA               [ 4]  950 	mov	a,r2
      000554 F0               [ 8]  951 	movx	@dptr,a
      000555 A3               [12]  952 	inc	dptr
      000556 EB               [ 4]  953 	mov	a,r3
      000557 F0               [ 8]  954 	movx	@dptr,a
      000558 A3               [12]  955 	inc	dptr
      000559 EC               [ 4]  956 	mov	a,r4
      00055A F0               [ 8]  957 	movx	@dptr,a
      00055B A3               [12]  958 	inc	dptr
      00055C ED               [ 4]  959 	mov	a,r5
      00055D F0               [ 8]  960 	movx	@dptr,a
      00055E                        961 00105$:
                                    962 ;	tancotf.c:84: if(n&1)
      00055E 90s00r00r10      [12]  963 	mov	dptr,#_tancotf_n_1_24
      000562 E0               [ 8]  964 	movx	a,@dptr
      000563 30 E0 67         [12]  965 	jnb  acc[0],00113$
      000566                        966 00140$:
                                    967 ;	tancotf.c:87: if(iscotan) return (-xnum/xden);
      000566 30*00 36         [12]  968 	jnb  _tancotf_PARM_2,00107$
      000569                        969 00141$:
      000569 8E 02            [ 8]  970 	mov	ar2,r6
      00056B 8F 03            [ 8]  971 	mov	ar3,r7
      00056D 88 04            [ 8]  972 	mov	ar4,r0
      00056F E9               [ 4]  973 	mov	a,r1
      000570 B2 E7            [ 8]  974 	cpl	acc[7]
      000572 FD               [ 4]  975 	mov	r5,a
      000573 90s00r00r0C      [12]  976 	mov	dptr,#_tancotf_xden_1_24
                                    977 ;	genAssign: resultIsFar = TRUE
      000577 75 86 21         [12]  978 	mov	dps,#0x21
      00057A 90s00r00r00      [12]  979 	mov	dptr,#___fsdiv_PARM_2
      00057E E0               [ 8]  980 	movx	a,@dptr
      00057F F0               [ 8]  981 	movx	@dptr,a
      000580 A3               [12]  982 	inc	dptr
      000581 A3               [12]  983 	inc	dptr
      000582 E0               [ 8]  984 	movx	a,@dptr
      000583 F0               [ 8]  985 	movx	@dptr,a
      000584 A3               [12]  986 	inc	dptr
      000585 A3               [12]  987 	inc	dptr
      000586 E0               [ 8]  988 	movx	a,@dptr
      000587 F0               [ 8]  989 	movx	@dptr,a
      000588 A3               [12]  990 	inc	dptr
      000589 A3               [12]  991 	inc	dptr
      00058A E0               [ 8]  992 	movx	a,@dptr
      00058B F0               [ 8]  993 	movx	@dptr,a
      00058C 75 86 00         [12]  994 	mov	dps,#0
      00058F 8A 82            [ 8]  995 	mov	dpl,r2
      000591 8B 83            [ 8]  996 	mov	dph,r3
      000593 8C 93            [ 8]  997 	mov	dpx,r4
      000595 8D F0            [ 8]  998 	mov	b,r5
      000597 12s00r00r00      [16]  999 	lcall	___fsdiv
      00059B 02s00r06r25      [16] 1000 	ljmp	00115$
      00059F                       1001 00107$:
                                   1002 ;	tancotf.c:88: else return (-xden/xnum);
      00059F 90s00r00r0C      [12] 1003 	mov	dptr,#_tancotf_xden_1_24
      0005A3 E0               [ 8] 1004 	movx	a,@dptr
      0005A4 FA               [ 4] 1005 	mov	r2,a
      0005A5 A3               [12] 1006 	inc	dptr
      0005A6 E0               [ 8] 1007 	movx	a,@dptr
      0005A7 FB               [ 4] 1008 	mov	r3,a
      0005A8 A3               [12] 1009 	inc	dptr
      0005A9 E0               [ 8] 1010 	movx	a,@dptr
      0005AA FC               [ 4] 1011 	mov	r4,a
      0005AB A3               [12] 1012 	inc	dptr
      0005AC E0               [ 8] 1013 	movx	a,@dptr
      0005AD B2 E7            [ 8] 1014 	cpl	acc[7]
      0005AF FD               [ 4] 1015 	mov	r5,a
                                   1016 ;	genAssign: resultIsFar = TRUE
      0005B0 90s00r00r00      [12] 1017 	mov	dptr,#___fsdiv_PARM_2
      0005B4 EE               [ 4] 1018 	mov	a,r6
      0005B5 F0               [ 8] 1019 	movx	@dptr,a
      0005B6 A3               [12] 1020 	inc	dptr
      0005B7 EF               [ 4] 1021 	mov	a,r7
      0005B8 F0               [ 8] 1022 	movx	@dptr,a
      0005B9 A3               [12] 1023 	inc	dptr
      0005BA E8               [ 4] 1024 	mov	a,r0
      0005BB F0               [ 8] 1025 	movx	@dptr,a
      0005BC A3               [12] 1026 	inc	dptr
      0005BD E9               [ 4] 1027 	mov	a,r1
      0005BE F0               [ 8] 1028 	movx	@dptr,a
      0005BF 8A 82            [ 8] 1029 	mov	dpl,r2
      0005C1 8B 83            [ 8] 1030 	mov	dph,r3
      0005C3 8C 93            [ 8] 1031 	mov	dpx,r4
      0005C5 8D F0            [ 8] 1032 	mov	b,r5
      0005C7 12s00r00r00      [16] 1033 	lcall	___fsdiv
      0005CB 80 58            [12] 1034 	sjmp 00115$
      0005CD                       1035 00113$:
                                   1036 ;	tancotf.c:92: if(iscotan) return (xden/xnum);
      0005CD 30*00 2D         [12] 1037 	jnb  _tancotf_PARM_2,00110$
      0005D0                       1038 00142$:
                                   1039 ;	genAssign: resultIsFar = TRUE
      0005D0 90s00r00r00      [12] 1040 	mov	dptr,#___fsdiv_PARM_2
      0005D4 EE               [ 4] 1041 	mov	a,r6
      0005D5 F0               [ 8] 1042 	movx	@dptr,a
      0005D6 A3               [12] 1043 	inc	dptr
      0005D7 EF               [ 4] 1044 	mov	a,r7
      0005D8 F0               [ 8] 1045 	movx	@dptr,a
      0005D9 A3               [12] 1046 	inc	dptr
      0005DA E8               [ 4] 1047 	mov	a,r0
      0005DB F0               [ 8] 1048 	movx	@dptr,a
      0005DC A3               [12] 1049 	inc	dptr
      0005DD E9               [ 4] 1050 	mov	a,r1
      0005DE F0               [ 8] 1051 	movx	@dptr,a
      0005DF 05 86            [ 8] 1052 	inc	dps
      0005E1 90s00r00r0C      [12] 1053 	mov	dptr,#_tancotf_xden_1_24
      0005E5 E0               [ 8] 1054 	movx	a,@dptr
      0005E6 F5 82            [ 8] 1055 	mov	dpl,a
      0005E8 A3               [12] 1056 	inc	dptr
      0005E9 E0               [ 8] 1057 	movx	a,@dptr
      0005EA F5 83            [ 8] 1058 	mov	dph,a
      0005EC A3               [12] 1059 	inc	dptr
      0005ED E0               [ 8] 1060 	movx	a,@dptr
      0005EE F5 93            [ 8] 1061 	mov	dpx,a
      0005F0 A3               [12] 1062 	inc	dptr
      0005F1 E0               [ 8] 1063 	movx	a,@dptr
      0005F2 F5 F0            [ 8] 1064 	mov	b,a
      0005F4 75 86 00         [12] 1065 	mov	dps,#0
      0005F7 12s00r00r00      [16] 1066 	lcall	___fsdiv
      0005FB 80 28            [12] 1067 	sjmp 00115$
      0005FD                       1068 00110$:
                                   1069 ;	tancotf.c:93: else return (xnum/xden);
      0005FD 90s00r00r0C      [12] 1070 	mov	dptr,#_tancotf_xden_1_24
                                   1071 ;	genAssign: resultIsFar = TRUE
      000601 75 86 21         [12] 1072 	mov	dps,#0x21
      000604 90s00r00r00      [12] 1073 	mov	dptr,#___fsdiv_PARM_2
      000608 E0               [ 8] 1074 	movx	a,@dptr
      000609 F0               [ 8] 1075 	movx	@dptr,a
      00060A A3               [12] 1076 	inc	dptr
      00060B A3               [12] 1077 	inc	dptr
      00060C E0               [ 8] 1078 	movx	a,@dptr
      00060D F0               [ 8] 1079 	movx	@dptr,a
      00060E A3               [12] 1080 	inc	dptr
      00060F A3               [12] 1081 	inc	dptr
      000610 E0               [ 8] 1082 	movx	a,@dptr
      000611 F0               [ 8] 1083 	movx	@dptr,a
      000612 A3               [12] 1084 	inc	dptr
      000613 A3               [12] 1085 	inc	dptr
      000614 E0               [ 8] 1086 	movx	a,@dptr
      000615 F0               [ 8] 1087 	movx	@dptr,a
      000616 75 86 00         [12] 1088 	mov	dps,#0
      000619 8E 82            [ 8] 1089 	mov	dpl,r6
      00061B 8F 83            [ 8] 1090 	mov	dph,r7
      00061D 88 93            [ 8] 1091 	mov	dpx,r0
      00061F 89 F0            [ 8] 1092 	mov	b,r1
      000621 12s00r00r00      [16] 1093 	lcall	___fsdiv
      000625                       1094 00115$:
      000625 22               [16] 1095 	ret
                                   1096 	.area CSEG    (CODE)
                                   1097 	.area CONST   (CODE)
                                   1098 	.area XINIT   (CODE)
                                   1099 	.area CABS    (ABS,CODE)
