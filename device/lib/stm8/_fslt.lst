                                      1 ;--------------------------------------------------------
                                      2 ; File Created by SDCC : free open source ANSI-C Compiler
                                      3 ; Version 3.5.0 #9253 (Apr  4 2022) (Linux)
                                      4 ; This file was generated Mon Apr  4 14:17:00 2022
                                      5 ;--------------------------------------------------------
                                      6 	.module _fslt
                                      7 	.optsdcc -mstm8
                                      8 	
                                      9 ;--------------------------------------------------------
                                     10 ; Public variables in this module
                                     11 ;--------------------------------------------------------
                                     12 	.globl ___fslt
                                     13 ;--------------------------------------------------------
                                     14 ; ram data
                                     15 ;--------------------------------------------------------
                                     16 	.area DATA
                                     17 ;--------------------------------------------------------
                                     18 ; ram data
                                     19 ;--------------------------------------------------------
                                     20 	.area INITIALIZED
                                     21 ;--------------------------------------------------------
                                     22 ; absolute external ram data
                                     23 ;--------------------------------------------------------
                                     24 	.area DABS (ABS)
                                     25 ;--------------------------------------------------------
                                     26 ; global & static initialisations
                                     27 ;--------------------------------------------------------
                                     28 	.area HOME
                                     29 	.area GSINIT
                                     30 	.area GSFINAL
                                     31 	.area GSINIT
                                     32 ;--------------------------------------------------------
                                     33 ; Home
                                     34 ;--------------------------------------------------------
                                     35 	.area HOME
                                     36 	.area HOME
                                     37 ;--------------------------------------------------------
                                     38 ; code
                                     39 ;--------------------------------------------------------
                                     40 	.area CODE
                                     41 ;	../_fslt.c: 108: char __fslt (float a1, float a2)
                                     42 ;	-----------------------------------------
                                     43 ;	 function __fslt
                                     44 ;	-----------------------------------------
      000000                         45 ___fslt:
      000000 52 34            [ 2]   46 	sub	sp, #52
                                     47 ;	../_fslt.c: 112: fl1.f = a1;
      000002 96               [ 1]   48 	ldw	x, sp
      000003 1C 00 05         [ 2]   49 	addw	x, #5
      000006 16 39            [ 2]   50 	ldw	y, (0x39, sp)
      000008 EF 02            [ 2]   51 	ldw	(0x2, x), y
      00000A 16 37            [ 2]   52 	ldw	y, (0x37, sp)
      00000C FF               [ 2]   53 	ldw	(x), y
                                     54 ;	../_fslt.c: 113: fl2.f = a2;
      00000D 96               [ 1]   55 	ldw	x, sp
      00000E 5C               [ 2]   56 	incw	x
      00000F 16 3D            [ 2]   57 	ldw	y, (0x3d, sp)
      000011 EF 02            [ 2]   58 	ldw	(0x2, x), y
      000013 16 3B            [ 2]   59 	ldw	y, (0x3b, sp)
      000015 FF               [ 2]   60 	ldw	(x), y
                                     61 ;	../_fslt.c: 115: if (((fl1.l | fl2.l) & 0x7FFFFFFF) == 0)
      000016 96               [ 1]   62 	ldw	x, sp
      000017 1C 00 05         [ 2]   63 	addw	x, #5
      00001A E6 03            [ 1]   64 	ld	a, (0x3, x)
      00001C 90 97            [ 1]   65 	ld	yl, a
      00001E E6 02            [ 1]   66 	ld	a, (0x2, x)
      000020 6B 19            [ 1]   67 	ld	(0x19, sp), a
      000022 FE               [ 2]   68 	ldw	x, (x)
      000023 1F 17            [ 2]   69 	ldw	(0x17, sp), x
      000025 96               [ 1]   70 	ldw	x, sp
      000026 5C               [ 2]   71 	incw	x
      000027 E6 03            [ 1]   72 	ld	a, (0x3, x)
      000029 6B 16            [ 1]   73 	ld	(0x16, sp), a
      00002B E6 02            [ 1]   74 	ld	a, (0x2, x)
      00002D FE               [ 2]   75 	ldw	x, (x)
      00002E 1F 13            [ 2]   76 	ldw	(0x13, sp), x
      000030 1A 19            [ 1]   77 	or	a, (0x19, sp)
      000032 95               [ 1]   78 	ld	xh, a
      000033 90 9F            [ 1]   79 	ld	a, yl
      000035 1A 16            [ 1]   80 	or	a, (0x16, sp)
      000037 97               [ 1]   81 	ld	xl, a
      000038 7B 18            [ 1]   82 	ld	a, (0x18, sp)
      00003A 1A 14            [ 1]   83 	or	a, (0x14, sp)
      00003C 90 97            [ 1]   84 	ld	yl, a
      00003E 7B 17            [ 1]   85 	ld	a, (0x17, sp)
      000040 1A 13            [ 1]   86 	or	a, (0x13, sp)
      000042 A4 7F            [ 1]   87 	and	a, #0x7f
      000044 6B 2B            [ 1]   88 	ld	(0x2b, sp), a
      000046 1F 2D            [ 2]   89 	ldw	(0x2d, sp), x
      000048 61               [ 1]   90 	exg	a, yl
      000049 6B 2C            [ 1]   91 	ld	(0x2c, sp), a
      00004B 61               [ 1]   92 	exg	a, yl
      00004C 1E 2D            [ 2]   93 	ldw	x, (0x2d, sp)
      00004E 26 08            [ 1]   94 	jrne	00102$
      000050 1E 2B            [ 2]   95 	ldw	x, (0x2b, sp)
      000052 26 04            [ 1]   96 	jrne	00102$
                                     97 ;	../_fslt.c: 116: return (0);
      000054 4F               [ 1]   98 	clr	a
      000055 CCr00rEB         [ 2]   99 	jp	00110$
      000058                        100 00102$:
                                    101 ;	../_fslt.c: 118: if (fl1.l<0 && fl2.l<0) {
      000058 96               [ 1]  102 	ldw	x, sp
      000059 1C 00 05         [ 2]  103 	addw	x, #5
      00005C 1F 27            [ 2]  104 	ldw	(0x27, sp), x
      00005E 1E 27            [ 2]  105 	ldw	x, (0x27, sp)
      000060 E6 03            [ 1]  106 	ld	a, (0x3, x)
      000062 6B 26            [ 1]  107 	ld	(0x26, sp), a
      000064 E6 02            [ 1]  108 	ld	a, (0x2, x)
      000066 6B 25            [ 1]  109 	ld	(0x25, sp), a
      000068 FE               [ 2]  110 	ldw	x, (x)
      000069 1F 23            [ 2]  111 	ldw	(0x23, sp), x
      00006B 0D 23            [ 1]  112 	tnz	(0x23, sp)
      00006D 2A 4E            [ 1]  113 	jrpl	00106$
      00006F 96               [ 1]  114 	ldw	x, sp
      000070 5C               [ 2]  115 	incw	x
      000071 1F 29            [ 2]  116 	ldw	(0x29, sp), x
      000073 1E 29            [ 2]  117 	ldw	x, (0x29, sp)
      000075 E6 03            [ 1]  118 	ld	a, (0x3, x)
      000077 6B 34            [ 1]  119 	ld	(0x34, sp), a
      000079 E6 02            [ 1]  120 	ld	a, (0x2, x)
      00007B 6B 33            [ 1]  121 	ld	(0x33, sp), a
      00007D FE               [ 2]  122 	ldw	x, (x)
      00007E 1F 31            [ 2]  123 	ldw	(0x31, sp), x
      000080 0D 31            [ 1]  124 	tnz	(0x31, sp)
      000082 2A 39            [ 1]  125 	jrpl	00106$
                                    126 ;	../_fslt.c: 119: if (fl2.l < fl1.l)
      000084 96               [ 1]  127 	ldw	x, sp
      000085 5C               [ 2]  128 	incw	x
      000086 1F 2F            [ 2]  129 	ldw	(0x2f, sp), x
      000088 1E 2F            [ 2]  130 	ldw	x, (0x2f, sp)
      00008A E6 03            [ 1]  131 	ld	a, (0x3, x)
      00008C 6B 0C            [ 1]  132 	ld	(0x0c, sp), a
      00008E E6 02            [ 1]  133 	ld	a, (0x2, x)
      000090 6B 0B            [ 1]  134 	ld	(0x0b, sp), a
      000092 FE               [ 2]  135 	ldw	x, (x)
      000093 1F 09            [ 2]  136 	ldw	(0x09, sp), x
      000095 96               [ 1]  137 	ldw	x, sp
      000096 1C 00 05         [ 2]  138 	addw	x, #5
      000099 1F 11            [ 2]  139 	ldw	(0x11, sp), x
      00009B 1E 11            [ 2]  140 	ldw	x, (0x11, sp)
      00009D E6 03            [ 1]  141 	ld	a, (0x3, x)
      00009F 6B 10            [ 1]  142 	ld	(0x10, sp), a
      0000A1 E6 02            [ 1]  143 	ld	a, (0x2, x)
      0000A3 6B 0F            [ 1]  144 	ld	(0x0f, sp), a
      0000A5 FE               [ 2]  145 	ldw	x, (x)
      0000A6 1F 0D            [ 2]  146 	ldw	(0x0d, sp), x
      0000A8 1E 0B            [ 2]  147 	ldw	x, (0x0b, sp)
      0000AA 13 0F            [ 2]  148 	cpw	x, (0x0f, sp)
      0000AC 7B 0A            [ 1]  149 	ld	a, (0x0a, sp)
      0000AE 12 0E            [ 1]  150 	sbc	a, (0x0e, sp)
      0000B0 7B 09            [ 1]  151 	ld	a, (0x09, sp)
      0000B2 12 0D            [ 1]  152 	sbc	a, (0x0d, sp)
      0000B4 2E 04            [ 1]  153 	jrsge	00104$
                                    154 ;	../_fslt.c: 120: return (1);
      0000B6 A6 01            [ 1]  155 	ld	a, #0x01
      0000B8 20 31            [ 2]  156 	jra	00110$
      0000BA                        157 00104$:
                                    158 ;	../_fslt.c: 121: return (0);
      0000BA 4F               [ 1]  159 	clr	a
      0000BB 20 2E            [ 2]  160 	jra	00110$
      0000BD                        161 00106$:
                                    162 ;	../_fslt.c: 124: if (fl1.l < fl2.l)
      0000BD 96               [ 1]  163 	ldw	x, sp
      0000BE 1C 00 05         [ 2]  164 	addw	x, #5
      0000C1 E6 03            [ 1]  165 	ld	a, (0x3, x)
      0000C3 6B 22            [ 1]  166 	ld	(0x22, sp), a
      0000C5 E6 02            [ 1]  167 	ld	a, (0x2, x)
      0000C7 6B 21            [ 1]  168 	ld	(0x21, sp), a
      0000C9 FE               [ 2]  169 	ldw	x, (x)
      0000CA 1F 1F            [ 2]  170 	ldw	(0x1f, sp), x
      0000CC 96               [ 1]  171 	ldw	x, sp
      0000CD 5C               [ 2]  172 	incw	x
      0000CE E6 03            [ 1]  173 	ld	a, (0x3, x)
      0000D0 6B 1E            [ 1]  174 	ld	(0x1e, sp), a
      0000D2 E6 02            [ 1]  175 	ld	a, (0x2, x)
      0000D4 6B 1D            [ 1]  176 	ld	(0x1d, sp), a
      0000D6 FE               [ 2]  177 	ldw	x, (x)
      0000D7 1F 1B            [ 2]  178 	ldw	(0x1b, sp), x
      0000D9 1E 21            [ 2]  179 	ldw	x, (0x21, sp)
      0000DB 13 1D            [ 2]  180 	cpw	x, (0x1d, sp)
      0000DD 7B 20            [ 1]  181 	ld	a, (0x20, sp)
      0000DF 12 1C            [ 1]  182 	sbc	a, (0x1c, sp)
      0000E1 7B 1F            [ 1]  183 	ld	a, (0x1f, sp)
      0000E3 12 1B            [ 1]  184 	sbc	a, (0x1b, sp)
      0000E5 2E 03            [ 1]  185 	jrsge	00109$
                                    186 ;	../_fslt.c: 125: return (1);
      0000E7 A6 01            [ 1]  187 	ld	a, #0x01
                                    188 ;	../_fslt.c: 126: return (0);
      0000E9 21                     189 	.byte 0x21
      0000EA                        190 00109$:
      0000EA 4F               [ 1]  191 	clr	a
      0000EB                        192 00110$:
      0000EB 5B 34            [ 2]  193 	addw	sp, #52
      0000ED 81               [ 4]  194 	ret
                                    195 	.area CODE
                                    196 	.area INITIALIZER
                                    197 	.area CABS (ABS)
