                                      1 ;--------------------------------------------------------
                                      2 ; File Created by SDCC : free open source ANSI-C Compiler
                                      3 ; Version 3.5.0 #9253 (Apr  4 2022) (Linux)
                                      4 ; This file was generated Mon Apr  4 14:10:26 2022
                                      5 ;--------------------------------------------------------
                                      6 	.module _divulong
                                      7 	.optsdcc -mds390 --model-flat24
                                      8 	
                                      9 ;--------------------------------------------------------
                                     10 ; CPU specific extensions
                                     11 ;--------------------------------------------------------
                                     12 	.DS80C390
                                     13 	.amode	2	; 24 bit flat addressing
                           000082    14 dpl	=	0x82
                           000083    15 dph	=	0x83
                           000084    16 dpl1	=	0x84
                           000085    17 dph1	=	0x85
                           000086    18 dps	=	0x86
                           000093    19 dpx	=	0x93
                           000095    20 dpx1	=	0x95
                           00009B    21 esp	=	0x9B
                           00009C    22 ap	=	0x9C
                           00009C    23 acc1	=	0x9C
                           0000D1    24 mcnt0	=	0xD1
                           0000D2    25 mcnt1	=	0xD2
                           0000D3    26 ma	=	0xD3
                           0000D4    27 mb	=	0xD4
                           0000D5    28 mc	=	0xD5
                           00009D    29 acon	=	0x9D
                           0000D1    30 F1	=	0xD1	; user flag
                                     31 ;--------------------------------------------------------
                                     32 ; Public variables in this module
                                     33 ;--------------------------------------------------------
                                     34 	.globl __divulong_PARM_2
                                     35 	.globl __divulong
                                     36 ;--------------------------------------------------------
                                     37 ; special function registers
                                     38 ;--------------------------------------------------------
                                     39 ;--------------------------------------------------------
                                     40 ; special function bits
                                     41 ;--------------------------------------------------------
                                     42 ;--------------------------------------------------------
                                     43 ; overlayable register banks
                                     44 ;--------------------------------------------------------
                                     45 	.area REG_BANK_0	(REL,OVR,DATA)
      000000                         46 	.ds 8
                                     47 ;--------------------------------------------------------
                                     48 ; internal ram data
                                     49 ;--------------------------------------------------------
                                     50 	.area DSEG    (DATA)
                                     51 ;--------------------------------------------------------
                                     52 ; overlayable items in internal ram 
                                     53 ;--------------------------------------------------------
                                     54 ;--------------------------------------------------------
                                     55 ; indirectly addressable internal ram data
                                     56 ;--------------------------------------------------------
                                     57 	.area ISEG    (DATA)
                                     58 ;--------------------------------------------------------
                                     59 ; absolute internal ram data
                                     60 ;--------------------------------------------------------
                                     61 	.area IABS    (ABS,DATA)
                                     62 	.area IABS    (ABS,DATA)
                                     63 ;--------------------------------------------------------
                                     64 ; bit data
                                     65 ;--------------------------------------------------------
                                     66 	.area BSEG    (BIT)
      000000                         67 __divulong_c_1_2:
      000000                         68 	.ds 1
                                     69 ;--------------------------------------------------------
                                     70 ; paged external ram data
                                     71 ;--------------------------------------------------------
                                     72 	.area PSEG    (PAG,XDATA)
                                     73 ;--------------------------------------------------------
                                     74 ; external ram data
                                     75 ;--------------------------------------------------------
                                     76 	.area XSEG    (XDATA)
      000000                         77 __divulong_PARM_2:
      000000                         78 	.ds 4
      000004                         79 __divulong_reste_1_2:
      000004                         80 	.ds 4
      000008                         81 __divulong_count_1_2:
      000008                         82 	.ds 1
                                     83 ;--------------------------------------------------------
                                     84 ; absolute external ram data
                                     85 ;--------------------------------------------------------
                                     86 	.area XABS    (ABS,XDATA)
                                     87 ;--------------------------------------------------------
                                     88 ; external initialized ram data
                                     89 ;--------------------------------------------------------
                                     90 	.area XISEG   (XDATA)
                                     91 ;--------------------------------------------------------
                                     92 ; global & static initialisations
                                     93 ;--------------------------------------------------------
                                     94 	.area HOME    (CODE)
                                     95 	.area GSINIT  (CODE)
                                     96 	.area GSFINAL (CODE)
                                     97 	.area GSINIT  (CODE)
                                     98 ;--------------------------------------------------------
                                     99 ; Home
                                    100 ;--------------------------------------------------------
                                    101 	.area HOME    (CODE)
                                    102 	.area HOME    (CODE)
                                    103 ;--------------------------------------------------------
                                    104 ; code
                                    105 ;--------------------------------------------------------
                                    106 	.area CSEG    (CODE)
                                    107 ;------------------------------------------------------------
                                    108 ;Allocation info for local variables in function '_divulong'
                                    109 ;------------------------------------------------------------
                                    110 ;y                         Allocated with name '__divulong_PARM_2'
                                    111 ;x                         Allocated to registers r2 r3 r4 r5 
                                    112 ;reste                     Allocated with name '__divulong_reste_1_2'
                                    113 ;count                     Allocated with name '__divulong_count_1_2'
                                    114 ;------------------------------------------------------------
                                    115 ;	_divulong.c:331: _divulong (unsigned long x, unsigned long y)
                                    116 ;	-----------------------------------------
                                    117 ;	 function _divulong
                                    118 ;	-----------------------------------------
      000000                        119 __divulong:
                           000002   120 	ar2 = 0x02
                           000003   121 	ar3 = 0x03
                           000004   122 	ar4 = 0x04
                           000005   123 	ar5 = 0x05
                           000006   124 	ar6 = 0x06
                           000007   125 	ar7 = 0x07
                           000000   126 	ar0 = 0x00
                           000001   127 	ar1 = 0x01
      000000 AA 82            [ 8]  128 	mov	r2,dpl
      000002 AB 83            [ 8]  129 	mov	r3,dph
      000004 AC 93            [ 8]  130 	mov	r4,dpx
      000006 AD F0            [ 8]  131 	mov	r5,b
                                    132 ;	_divulong.c:333: unsigned long reste = 0L;
                                    133 ;	genAssign: resultIsFar = TRUE
      000008 90s00r00r04      [12]  134 	mov	dptr,#__divulong_reste_1_2
      00000C E4               [ 4]  135 	clr	a
      00000D F0               [ 8]  136 	movx	@dptr,a
      00000E A3               [12]  137 	inc	dptr
      00000F F0               [ 8]  138 	movx	@dptr,a
      000010 A3               [12]  139 	inc	dptr
      000011 F0               [ 8]  140 	movx	@dptr,a
      000012 A3               [12]  141 	inc	dptr
      000013 F0               [ 8]  142 	movx	@dptr,a
                                    143 ;	_divulong.c:334: unsigned char count = 32;
                                    144 ;	genAssign: resultIsFar = TRUE
      000014 90s00r00r08      [12]  145 	mov	dptr,#__divulong_count_1_2
      000018 74 20            [ 8]  146 	mov	a,#0x20
      00001A F0               [ 8]  147 	movx	@dptr,a
                                    148 ;	_divulong.c:337: do
      00001B                        149 00105$:
                                    150 ;	_divulong.c:340: c = MSB_SET(x);
      00001B ED               [ 4]  151 	mov	a,r5
      00001C 33               [ 4]  152 	rlc	a
      00001D 92*00            [ 8]  153 	mov	__divulong_c_1_2,c
                                    154 ;	_divulong.c:341: x <<= 1;
      00001F EA               [ 4]  155 	mov	a,r2
      000020 25 E0            [ 8]  156 	add	a,acc
      000022 FE               [ 4]  157 	mov	r6,a
      000023 EB               [ 4]  158 	mov	a,r3
      000024 33               [ 4]  159 	rlc	a
      000025 FF               [ 4]  160 	mov	r7,a
      000026 EC               [ 4]  161 	mov	a,r4
      000027 33               [ 4]  162 	rlc	a
      000028 F8               [ 4]  163 	mov	r0,a
      000029 ED               [ 4]  164 	mov	a,r5
      00002A 33               [ 4]  165 	rlc	a
      00002B F9               [ 4]  166 	mov	r1,a
                                    167 ;	genAssign: resultIsFar = TRUE
      00002C 8E 02            [ 8]  168 	mov	ar2,r6
      00002E 8F 03            [ 8]  169 	mov	ar3,r7
      000030 88 04            [ 8]  170 	mov	ar4,r0
      000032 89 05            [ 8]  171 	mov	ar5,r1
                                    172 ;	_divulong.c:342: reste <<= 1;
      000034 90s00r00r04      [12]  173 	mov	dptr,#__divulong_reste_1_2
      000038 E0               [ 8]  174 	movx	a,@dptr
      000039 25 E0            [ 8]  175 	add	a,acc
      00003B FE               [ 4]  176 	mov	r6,a
      00003C A3               [12]  177 	inc	dptr
      00003D E0               [ 8]  178 	movx	a,@dptr
      00003E 33               [ 4]  179 	rlc	a
      00003F FF               [ 4]  180 	mov	r7,a
      000040 A3               [12]  181 	inc	dptr
      000041 E0               [ 8]  182 	movx	a,@dptr
      000042 33               [ 4]  183 	rlc	a
      000043 F8               [ 4]  184 	mov	r0,a
      000044 A3               [12]  185 	inc	dptr
      000045 E0               [ 8]  186 	movx	a,@dptr
      000046 33               [ 4]  187 	rlc	a
      000047 F9               [ 4]  188 	mov	r1,a
                                    189 ;	genAssign: resultIsFar = TRUE
      000048 90s00r00r04      [12]  190 	mov	dptr,#__divulong_reste_1_2
      00004C EE               [ 4]  191 	mov	a,r6
      00004D F0               [ 8]  192 	movx	@dptr,a
      00004E A3               [12]  193 	inc	dptr
      00004F EF               [ 4]  194 	mov	a,r7
      000050 F0               [ 8]  195 	movx	@dptr,a
      000051 A3               [12]  196 	inc	dptr
      000052 E8               [ 4]  197 	mov	a,r0
      000053 F0               [ 8]  198 	movx	@dptr,a
      000054 A3               [12]  199 	inc	dptr
      000055 E9               [ 4]  200 	mov	a,r1
      000056 F0               [ 8]  201 	movx	@dptr,a
                                    202 ;	_divulong.c:343: if (c)
      000057 30*00 11         [12]  203 	jnb  __divulong_c_1_2,00102$
      00005A                        204 00122$:
                                    205 ;	_divulong.c:344: reste |= 1L;
      00005A 90s00r00r04      [12]  206 	mov	dptr,#__divulong_reste_1_2
      00005E E0               [ 8]  207 	movx	a,@dptr
      00005F 44 01            [ 8]  208 	orl	a,#0x01
      000061 F0               [ 8]  209 	movx	@dptr,a
      000062 A3               [12]  210 	inc	dptr
      000063 E0               [ 8]  211 	movx	a,@dptr
      000064 F0               [ 8]  212 	movx	@dptr,a
      000065 A3               [12]  213 	inc	dptr
      000066 E0               [ 8]  214 	movx	a,@dptr
      000067 F0               [ 8]  215 	movx	@dptr,a
      000068 A3               [12]  216 	inc	dptr
      000069 E0               [ 8]  217 	movx	a,@dptr
      00006A F0               [ 8]  218 	movx	@dptr,a
      00006B                        219 00102$:
                                    220 ;	_divulong.c:346: if (reste >= y)
      00006B 90s00r00r00      [12]  221 	mov	dptr,#__divulong_PARM_2
      00006F 75 86 01         [12]  222 	mov	dps, #1
      000072 90s00r00r04      [12]  223 	mov	dptr, #__divulong_reste_1_2
      000076 15 86            [ 8]  224 	dec	dps
      000078 C3               [ 4]  225 	clr	c
      000079 75 86 01         [12]  226 	mov	dps,#1
      00007C E0               [ 8]  227 	movx	a,@dptr
      00007D 75 86 00         [12]  228 	mov	dps,#0
      000080 C5 F0            [ 8]  229 	xch	a, b
      000082 E0               [ 8]  230 	movx	a,@dptr
      000083 C5 F0            [ 8]  231 	xch	a, b
      000085 95 F0            [ 8]  232 	subb	a,b
      000087 75 86 01         [12]  233 	mov	dps,#1
      00008A A3               [12]  234 	inc	dptr
      00008B E0               [ 8]  235 	movx	a,@dptr
      00008C 75 86 00         [12]  236 	mov	dps,#0
      00008F C5 F0            [ 8]  237 	xch	a, b
      000091 A3               [12]  238 	inc	dptr
      000092 E0               [ 8]  239 	movx	a,@dptr
      000093 C5 F0            [ 8]  240 	xch	a, b
      000095 95 F0            [ 8]  241 	subb	a,b
      000097 75 86 01         [12]  242 	mov	dps,#1
      00009A A3               [12]  243 	inc	dptr
      00009B E0               [ 8]  244 	movx	a,@dptr
      00009C 75 86 00         [12]  245 	mov	dps,#0
      00009F C5 F0            [ 8]  246 	xch	a, b
      0000A1 A3               [12]  247 	inc	dptr
      0000A2 E0               [ 8]  248 	movx	a,@dptr
      0000A3 C5 F0            [ 8]  249 	xch	a, b
      0000A5 95 F0            [ 8]  250 	subb	a,b
      0000A7 75 86 01         [12]  251 	mov	dps,#1
      0000AA A3               [12]  252 	inc	dptr
      0000AB E0               [ 8]  253 	movx	a,@dptr
      0000AC 75 86 00         [12]  254 	mov	dps,#0
      0000AF C5 F0            [ 8]  255 	xch	a, b
      0000B1 A3               [12]  256 	inc	dptr
      0000B2 E0               [ 8]  257 	movx	a,@dptr
      0000B3 C5 F0            [ 8]  258 	xch	a, b
      0000B5 95 F0            [ 8]  259 	subb	a,b
      0000B7 40 53            [12]  260 	jc   00106$
      0000B9                        261 00123$:
                                    262 ;	_divulong.c:348: reste -= y;
      0000B9 90s00r00r00      [12]  263 	mov	dptr,#__divulong_PARM_2
      0000BD 75 86 01         [12]  264 	mov	dps, #1
      0000C0 90s00r00r04      [12]  265 	mov	dptr, #__divulong_reste_1_2
      0000C4 15 86            [ 8]  266 	dec	dps
      0000C6 C3               [ 4]  267 	clr	c
      0000C7 E0               [ 8]  268 	movx	a,@dptr
      0000C8 F5 F0            [ 8]  269 	mov	b,a
      0000CA 05 86            [ 8]  270 	inc	dps
      0000CC E0               [ 8]  271 	movx	a,@dptr
      0000CD 95 F0            [ 8]  272 	subb	a,b
      0000CF FE               [ 4]  273 	mov	r6,a
      0000D0 15 86            [ 8]  274 	dec	dps
      0000D2 A3               [12]  275 	inc	dptr
      0000D3 E0               [ 8]  276 	movx	a,@dptr
      0000D4 F5 F0            [ 8]  277 	mov	b,a
      0000D6 05 86            [ 8]  278 	inc	dps
      0000D8 A3               [12]  279 	inc	dptr
      0000D9 E0               [ 8]  280 	movx	a,@dptr
      0000DA 95 F0            [ 8]  281 	subb	a,b
      0000DC FF               [ 4]  282 	mov	r7,a
      0000DD 15 86            [ 8]  283 	dec	dps
      0000DF A3               [12]  284 	inc	dptr
      0000E0 E0               [ 8]  285 	movx	a,@dptr
      0000E1 F5 F0            [ 8]  286 	mov	b,a
      0000E3 05 86            [ 8]  287 	inc	dps
      0000E5 A3               [12]  288 	inc	dptr
      0000E6 E0               [ 8]  289 	movx	a,@dptr
      0000E7 95 F0            [ 8]  290 	subb	a,b
      0000E9 F8               [ 4]  291 	mov	r0,a
      0000EA 15 86            [ 8]  292 	dec	dps
      0000EC A3               [12]  293 	inc	dptr
      0000ED E0               [ 8]  294 	movx	a,@dptr
      0000EE F5 F0            [ 8]  295 	mov	b,a
      0000F0 05 86            [ 8]  296 	inc	dps
      0000F2 A3               [12]  297 	inc	dptr
      0000F3 E0               [ 8]  298 	movx	a,@dptr
      0000F4 95 F0            [ 8]  299 	subb	a,b
      0000F6 F9               [ 4]  300 	mov	r1,a
      0000F7 75 86 00         [12]  301 	mov	dps,#0
                                    302 ;	genAssign: resultIsFar = TRUE
      0000FA 90s00r00r04      [12]  303 	mov	dptr,#__divulong_reste_1_2
      0000FE EE               [ 4]  304 	mov	a,r6
      0000FF F0               [ 8]  305 	movx	@dptr,a
      000100 A3               [12]  306 	inc	dptr
      000101 EF               [ 4]  307 	mov	a,r7
      000102 F0               [ 8]  308 	movx	@dptr,a
      000103 A3               [12]  309 	inc	dptr
      000104 E8               [ 4]  310 	mov	a,r0
      000105 F0               [ 8]  311 	movx	@dptr,a
      000106 A3               [12]  312 	inc	dptr
      000107 E9               [ 4]  313 	mov	a,r1
      000108 F0               [ 8]  314 	movx	@dptr,a
                                    315 ;	_divulong.c:350: x |= 1L;
      000109 43 02 01         [12]  316 	orl	ar2,#0x01
      00010C                        317 00106$:
                                    318 ;	_divulong.c:353: while (--count);
      00010C 90s00r00r08      [12]  319 	mov	dptr,#__divulong_count_1_2
      000110 E0               [ 8]  320 	movx	a,@dptr
      000111 14               [ 4]  321 	dec	a
                                    322 ;	genAssign: resultIsFar = TRUE
      000112 FE               [ 4]  323 	mov  r6,a
      000113 90s00r00r08      [12]  324 	mov  dptr,#__divulong_count_1_2
      000117 F0               [ 8]  325 	movx @dptr,a
      000118 EE               [ 4]  326 	mov	a,r6
      000119 60 04            [12]  327 	jz	00124$
      00011B 02s00r00r1B      [16]  328 	ljmp	00105$
      00011F                        329 00124$:
                                    330 ;	_divulong.c:354: return x;
      00011F 8A 82            [ 8]  331 	mov	dpl,r2
      000121 8B 83            [ 8]  332 	mov	dph,r3
      000123 8C 93            [ 8]  333 	mov	dpx,r4
      000125 8D F0            [ 8]  334 	mov	b,r5
      000127                        335 00108$:
      000127 22               [16]  336 	ret
                                    337 	.area CSEG    (CODE)
                                    338 	.area CONST   (CODE)
                                    339 	.area XINIT   (CODE)
                                    340 	.area CABS    (ABS,CODE)
