                              1 ;--------------------------------------------------------
                              2 ; File Created by SDCC : free open source ANSI-C Compiler
                              3 ; Version 3.5.0 #9253 (Apr  4 2022) (Linux)
                              4 ; This file was generated Mon Apr  4 14:16:32 2022
                              5 ;--------------------------------------------------------
                              6 	.module atan2f
                              7 	.optsdcc -mtlcs90
                              8 	
                              9 ;--------------------------------------------------------
                             10 ; Public variables in this module
                             11 ;--------------------------------------------------------
                             12 	.globl _fabsf
                             13 	.globl _atanf
                             14 	.globl _atan2f
                             15 ;--------------------------------------------------------
                             16 ; ram data
                             17 ;--------------------------------------------------------
                             18 	.area _DATA
                             19 ;--------------------------------------------------------
                             20 ; ram data
                             21 ;--------------------------------------------------------
                             22 	.area _INITIALIZED
                             23 ;--------------------------------------------------------
                             24 ; absolute external ram data
                             25 ;--------------------------------------------------------
                             26 	.area _DABS (ABS)
                             27 ;--------------------------------------------------------
                             28 ; global & static initialisations
                             29 ;--------------------------------------------------------
                             30 	.area _HOME
                             31 	.area _GSINIT
                             32 	.area _GSFINAL
                             33 	.area _GSINIT
                             34 ;--------------------------------------------------------
                             35 ; Home
                             36 ;--------------------------------------------------------
                             37 	.area _HOME
                             38 	.area _HOME
                             39 ;--------------------------------------------------------
                             40 ; code
                             41 ;--------------------------------------------------------
                             42 	.area _CODE
                             43 ;../atan2f.c:34: float atan2f(float x, float y)
                             44 ;	---------------------------------
                             45 ; Function atan2f
                             46 ; ---------------------------------
   0000                      47 _atan2f::
   0000 54            [ 4]   48 	push	ix
   0001 3C 00 00      [ 4]   49 	ld	ix,#0
   0004 FE 14         [ 7]   50 	add	ix,sp
   0006 16 F4 FF      [ 7]   51 	add	sp, #-12
                             52 ;../atan2f.c:38: if ((x==0.0) && (y==0.0))
   0009 F0 07 2E      [11]   53 	ld	a,7 (ix)
   000C FE B7         [ 7]   54 	res	7, a
   000E F0 06 66      [11]   55 	or	a, 6 (ix)
   0011 F0 05 66      [11]   56 	or	a, 5 (ix)
   0014 F0 04 66      [11]   57 	or	a,4 (ix)
   0017 CE 21         [ 7]   58 	jr	NZ,00102$
   0019 F0 0B 2E      [11]   59 	ld	a,11 (ix)
   001C FE B7         [ 7]   60 	res	7, a
   001E F0 0A 66      [11]   61 	or	a, 10 (ix)
   0021 F0 09 66      [11]   62 	or	a, 9 (ix)
   0024 F0 08 66      [11]   63 	or	a,8 (ix)
   0027 CE 11         [ 7]   64 	jr	NZ,00102$
                             65 ;../atan2f.c:40: errno=EDOM;
   0029 3A 21 00      [13]   66 	ld	hl,#0x0021
   002C EBr00r00 42   [ 4]   67 	ld	(_errno),hl
                             68 ;../atan2f.c:41: return 0.0;
   0030 3A 00 00      [13]   69 	ld	hl,#0x0000
   0033 FD 33                70 	ld	e,l
   0035 FC 32         [17]   71 	ld	d,h
   0037 1Ar8Er01      [ 7]   72 	jp	00109$
   003A                      73 00102$:
                             74 ;../atan2f.c:44: if(fabsf(y)>=fabsf(x))
   003A F2 16 4A      [10]   75 	ld	hl, 22 (sp)
   003D 52            [ 4]   76 	push	hl
   003E F2 16 4A      [10]   77 	ld	hl, 22 (sp)
   0041 52            [ 4]   78 	push	hl
   0042 1Cr00r00      [ 4]   79 	call	_fabsf
   0045 16 04 00      [ 7]   80 	add	sp, #4
   0048 F4 FF 22      [17]   81 	ld	-1 (ix),d
   004B F4 FE 23      [17]   82 	ld	-2 (ix),e
   004E F4 FD 24      [17]   83 	ld	-3 (ix),h
   0051 F4 FC 25      [17]   84 	ld	-4 (ix),l
   0054 F2 12 4A      [10]   85 	ld	hl, 18 (sp)
   0057 52            [ 4]   86 	push	hl
   0058 F2 12 4A      [10]   87 	ld	hl, 18 (sp)
   005B 52            [ 4]   88 	push	hl
   005C 1Cr00r00      [ 4]   89 	call	_fabsf
   005F 16 04 00      [ 7]   90 	add	sp, #4
   0062 F4 FB 22      [17]   91 	ld	-5 (ix),d
   0065 F4 FA 23      [17]   92 	ld	-6 (ix),e
   0068 F4 F9 24      [17]   93 	ld	-7 (ix),h
   006B F4 F8 25      [17]   94 	ld	-8 (ix),l
                             95 ;../atan2f.c:47: if(y<0.0) r+=(x>=0?PI:-PI);
   006E 3A 00 00      [13]   96 	ld	hl,#0x0000
   0071 52            [ 4]   97 	push	hl
   0072 3A 00 00      [13]   98 	ld	hl,#0x0000
   0075 52            [ 4]   99 	push	hl
   0076 F2 16 4A      [10]  100 	ld	hl, 22 (sp)
   0079 52            [ 4]  101 	push	hl
   007A F2 16 4A      [10]  102 	ld	hl, 22 (sp)
   007D 52            [ 4]  103 	push	hl
                            104 ;../atan2f.c:44: if(fabsf(y)>=fabsf(x))
   007E 1Cr00r00      [ 4]  105 	call	___fslt
   0081 16 08 00      [ 7]  106 	add	sp, #8
   0084 FD 31               107 	ld	c,l
   0086 50            [ 4]  108 	push	bc
   0087 F2 08 4A      [10]  109 	ld	hl, 8 (sp)
   008A 52            [ 4]  110 	push	hl
   008B F2 08 4A      [10]  111 	ld	hl, 8 (sp)
   008E 52            [ 4]  112 	push	hl
   008F F2 10 4A      [10]  113 	ld	hl, 16 (sp)
   0092 52            [ 4]  114 	push	hl
   0093 F2 10 4A      [10]  115 	ld	hl, 16 (sp)
   0096 52            [ 4]  116 	push	hl
   0097 1Cr00r00      [ 4]  117 	call	___fslt
   009A 16 08 00      [ 7]  118 	add	sp, #8
   009D 25            [ 4]  119 	ld	a, l
   009E 58            [ 4]  120 	pop	bc
   009F 28            [12]  121 	ld	b,a
   00A0 FE 66         [ 7]  122 	or	a, a
   00A2 EBr23r01 CE   [ 4]  123 	jp	NZ,00107$
                            124 ;../atan2f.c:46: r=atanf(x/y);
   00A6 50            [ 4]  125 	push	bc
   00A7 F2 18 4A      [10]  126 	ld	hl, 24 (sp)
   00AA 52            [ 4]  127 	push	hl
   00AB F2 18 4A      [10]  128 	ld	hl, 24 (sp)
   00AE 52            [ 4]  129 	push	hl
   00AF F2 18 4A      [10]  130 	ld	hl, 24 (sp)
   00B2 52            [ 4]  131 	push	hl
   00B3 F2 18 4A      [10]  132 	ld	hl, 24 (sp)
   00B6 52            [ 4]  133 	push	hl
   00B7 1Cr00r00      [ 4]  134 	call	___fsdiv
   00BA 16 08 00      [ 7]  135 	add	sp, #8
   00BD 51            [ 4]  136 	push	de
   00BE 52            [ 4]  137 	push	hl
   00BF 1Cr00r00      [ 4]  138 	call	_atanf
   00C2 16 04 00      [ 7]  139 	add	sp, #4
   00C5 58            [ 4]  140 	pop	bc
   00C6 F4 F8 25      [17]  141 	ld	-8 (ix),l
   00C9 F4 F9 24      [17]  142 	ld	-7 (ix),h
   00CC F4 FA 23      [17]  143 	ld	-6 (ix),e
   00CF F4 FB 22      [17]  144 	ld	-5 (ix),d
                            145 ;../atan2f.c:47: if(y<0.0) r+=(x>=0?PI:-PI);
   00D2 50            [ 4]  146 	push	bc
   00D3 3A 00 00      [13]  147 	ld	hl,#0x0000
   00D6 52            [ 4]  148 	push	hl
   00D7 3A 00 00      [13]  149 	ld	hl,#0x0000
   00DA 52            [ 4]  150 	push	hl
   00DB F2 1C 4A      [10]  151 	ld	hl, 28 (sp)
   00DE 52            [ 4]  152 	push	hl
   00DF F2 1C 4A      [10]  153 	ld	hl, 28 (sp)
   00E2 52            [ 4]  154 	push	hl
   00E3 1Cr00r00      [ 4]  155 	call	___fslt
   00E6 16 08 00      [ 7]  156 	add	sp, #8
   00E9 25            [ 4]  157 	ld	a,l
   00EA 58            [ 4]  158 	pop	bc
   00EB FE 66         [ 7]  159 	or	a, a
   00ED EBr82r01 C6   [ 4]  160 	jp	Z,00108$
   00F1 21            [10]  161 	ld	a,c
   00F2 FE 66         [ 7]  162 	or	a, a
   00F4 CE 08         [ 7]  163 	jr	NZ,00111$
   00F6 39 DB 0F      [11]  164 	ld	de,#0x0FDB
   00F9 3A 49 40      [13]  165 	ld	hl,#0x4049
   00FC C8 06         [11]  166 	jr	00112$
   00FE                     167 00111$:
   00FE 39 DB 0F      [11]  168 	ld	de,#0x0FDB
   0101 3A 49 C0      [13]  169 	ld	hl,#0xC049
   0104                     170 00112$:
   0104 52            [ 4]  171 	push	hl
   0105 51            [ 4]  172 	push	de
   0106 F2 0A 4A      [10]  173 	ld	hl, 10 (sp)
   0109 52            [ 4]  174 	push	hl
   010A F2 0A 4A      [10]  175 	ld	hl, 10 (sp)
   010D 52            [ 4]  176 	push	hl
   010E 1Cr00r00      [ 4]  177 	call	___fsadd
   0111 16 08 00      [ 7]  178 	add	sp, #8
   0114 F4 F8 25      [17]  179 	ld	-8 (ix),l
   0117 F4 F9 24      [17]  180 	ld	-7 (ix),h
   011A F4 FA 23      [17]  181 	ld	-6 (ix),e
   011D F4 FB 22      [17]  182 	ld	-5 (ix),d
   0120 1Ar82r01      [ 7]  183 	jp	00108$
   0123                     184 00107$:
                            185 ;../atan2f.c:51: r=-atanf(y/x);
   0123 50            [ 4]  186 	push	bc
   0124 F2 14 4A      [10]  187 	ld	hl, 20 (sp)
   0127 52            [ 4]  188 	push	hl
   0128 F2 14 4A      [10]  189 	ld	hl, 20 (sp)
   012B 52            [ 4]  190 	push	hl
   012C F2 1C 4A      [10]  191 	ld	hl, 28 (sp)
   012F 52            [ 4]  192 	push	hl
   0130 F2 1C 4A      [10]  193 	ld	hl, 28 (sp)
   0133 52            [ 4]  194 	push	hl
   0134 1Cr00r00      [ 4]  195 	call	___fsdiv
   0137 16 08 00      [ 7]  196 	add	sp, #8
   013A 51            [ 4]  197 	push	de
   013B 52            [ 4]  198 	push	hl
   013C 1Cr00r00      [ 4]  199 	call	_atanf
   013F 16 04 00      [ 7]  200 	add	sp, #4
   0142 58            [ 4]  201 	pop	bc
   0143 22            [16]  202 	ld	a,d
   0144 6D 80         [ 4]  203 	xor	a,#0x80
   0146 2A            [16]  204 	ld	d,a
   0147 F4 F4 25      [17]  205 	ld	-12 (ix),l
   014A F4 F5 24      [17]  206 	ld	-11 (ix),h
   014D F4 F6 23      [17]  207 	ld	-10 (ix),e
   0150 F4 F7 22      [17]  208 	ld	-9 (ix),d
                            209 ;../atan2f.c:52: r+=(x<0.0?-HALF_PI:HALF_PI);
   0153 21            [10]  210 	ld	a,c
   0154 FE 66         [ 7]  211 	or	a, a
   0156 C6 08         [ 7]  212 	jr	Z,00113$
   0158 39 DB 0F      [11]  213 	ld	de,#0x0FDB
   015B 3A C9 BF      [13]  214 	ld	hl,#0xBFC9
   015E C8 06         [11]  215 	jr	00114$
   0160                     216 00113$:
   0160 39 DB 0F      [11]  217 	ld	de,#0x0FDB
   0163 3A C9 3F      [13]  218 	ld	hl,#0x3FC9
   0166                     219 00114$:
   0166 52            [ 4]  220 	push	hl
   0167 51            [ 4]  221 	push	de
   0168 F2 06 4A      [10]  222 	ld	hl, 6 (sp)
   016B 52            [ 4]  223 	push	hl
   016C F2 06 4A      [10]  224 	ld	hl, 6 (sp)
   016F 52            [ 4]  225 	push	hl
   0170 1Cr00r00      [ 4]  226 	call	___fsadd
   0173 16 08 00      [ 7]  227 	add	sp, #8
   0176 F4 F8 25      [17]  228 	ld	-8 (ix),l
   0179 F4 F9 24      [17]  229 	ld	-7 (ix),h
   017C F4 FA 23      [17]  230 	ld	-6 (ix),e
   017F F4 FB 22      [17]  231 	ld	-5 (ix),d
   0182                     232 00108$:
                            233 ;../atan2f.c:54: return r;
   0182 F0 F8 2D      [11]  234 	ld	l,-8 (ix)
   0185 F0 F9 2C      [11]  235 	ld	h,-7 (ix)
   0188 F0 FA 2B      [11]  236 	ld	e,-6 (ix)
   018B F0 FB 2A      [11]  237 	ld	d,-5 (ix)
   018E                     238 00109$:
   018E FC 3E         [17]  239 	ld	sp, ix
   0190 5C            [ 4]  240 	pop	ix
   0191 1E            [ 7]  241 	ret
                            242 	.area _CODE
                            243 	.area _INITIALIZER
                            244 	.area _CABS (ABS)
