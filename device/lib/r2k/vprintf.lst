                              1 ;--------------------------------------------------------
                              2 ; File Created by SDCC : free open source ANSI-C Compiler
                              3 ; Version 3.5.0 #9253 (Apr  4 2022) (Linux)
                              4 ; This file was generated Mon Apr  4 14:16:08 2022
                              5 ;--------------------------------------------------------
                              6 	.module vprintf
                              7 	.optsdcc -mr2k
                              8 	
                              9 ;--------------------------------------------------------
                             10 ; Public variables in this module
                             11 ;--------------------------------------------------------
                             12 	.globl _putchar
                             13 	.globl __print_format
                             14 	.globl _vprintf
                             15 	.globl _printf
                             16 ;--------------------------------------------------------
                             17 ; special function registers
                             18 ;--------------------------------------------------------
                             19 ;--------------------------------------------------------
                             20 ; ram data
                             21 ;--------------------------------------------------------
                             22 	.area _DATA
                             23 ;--------------------------------------------------------
                             24 ; ram data
                             25 ;--------------------------------------------------------
                             26 	.area _INITIALIZED
                             27 ;--------------------------------------------------------
                             28 ; absolute external ram data
                             29 ;--------------------------------------------------------
                             30 	.area _DABS (ABS)
                             31 ;--------------------------------------------------------
                             32 ; global & static initialisations
                             33 ;--------------------------------------------------------
                             34 	.area _HOME
                             35 	.area _GSINIT
                             36 	.area _GSFINAL
                             37 	.area _GSINIT
                             38 ;--------------------------------------------------------
                             39 ; Home
                             40 ;--------------------------------------------------------
                             41 	.area _HOME
                             42 	.area _HOME
                             43 ;--------------------------------------------------------
                             44 ; code
                             45 ;--------------------------------------------------------
                             46 	.area _CODE
                             47 ;../vprintf.c:34: put_char_to_stdout (char c, void* p) _REENTRANT
                             48 ;	---------------------------------
                             49 ; Function put_char_to_stdout
                             50 ; ---------------------------------
   0000                      51 _put_char_to_stdout:
                             52 ;../vprintf.c:37: putchar (c);
   0000 21 02 00             53 	ld	hl, #2+0
   0003 39                   54 	add	hl, sp
   0004 7E                   55 	ld	a, (hl)
   0005 F5                   56 	push	af
   0006 33                   57 	inc	sp
   0007 CDr00r00             58 	call	_putchar
   000A 33                   59 	inc	sp
   000B C9                   60 	ret
                             61 ;../vprintf.c:41: vprintf (const char *format, va_list ap)
                             62 ;	---------------------------------
                             63 ; Function vprintf
                             64 ; ---------------------------------
   000C                      65 _vprintf::
                             66 ;../vprintf.c:43: return _print_format (put_char_to_stdout, NULL, format, ap);
   000C C4 04                67 	ld	hl, 4 (sp)
   000E E5                   68 	push	hl
   000F C4 04                69 	ld	hl, 4 (sp)
   0011 E5                   70 	push	hl
   0012 21 00 00             71 	ld	hl,#0x0000
   0015 E5                   72 	push	hl
   0016 21r00r00             73 	ld	hl,#_put_char_to_stdout
   0019 E5                   74 	push	hl
   001A CDr00r00             75 	call	__print_format
   001D 27 08                76 	add	sp, #8
   001F C9                   77 	ret
                             78 ;../vprintf.c:47: printf (const char *format, ...)
                             79 ;	---------------------------------
                             80 ; Function printf
                             81 ; ---------------------------------
   0020                      82 _printf::
                             83 ;../vprintf.c:52: va_start (arg, format);
   0020 21 04 00             84 	ld	hl,#0x0002+1+1
   0023 39                   85 	add	hl,sp
                             86 ;../vprintf.c:53: i = _print_format (put_char_to_stdout, NULL, format, arg);
   0024 E5                   87 	push	hl
   0025 C4 04                88 	ld	hl, 4 (sp)
   0027 E5                   89 	push	hl
   0028 21 00 00             90 	ld	hl,#0x0000
   002B E5                   91 	push	hl
   002C 21r00r00             92 	ld	hl,#_put_char_to_stdout
   002F E5                   93 	push	hl
   0030 CDr00r00             94 	call	__print_format
   0033 27 08                95 	add	sp, #8
                             96 ;../vprintf.c:56: return i;
   0035 C9                   97 	ret
                             98 	.area _CODE
                             99 	.area _INITIALIZER
                            100 	.area _CABS (ABS)
