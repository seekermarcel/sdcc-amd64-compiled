                                      1 ;--------------------------------------------------------
                                      2 ; File Created by SDCC : free open source ANSI-C Compiler
                                      3 ; Version 3.5.0 #9253 (Apr  4 2022) (Linux)
                                      4 ; This file was generated Mon Apr  4 14:17:08 2022
                                      5 ;--------------------------------------------------------
                                      6 	.module atanf
                                      7 	.optsdcc -mstm8
                                      8 	
                                      9 ;--------------------------------------------------------
                                     10 ; Public variables in this module
                                     11 ;--------------------------------------------------------
                                     12 	.globl _fabsf
                                     13 	.globl _atanf
                                     14 ;--------------------------------------------------------
                                     15 ; ram data
                                     16 ;--------------------------------------------------------
                                     17 	.area DATA
                                     18 ;--------------------------------------------------------
                                     19 ; ram data
                                     20 ;--------------------------------------------------------
                                     21 	.area INITIALIZED
                                     22 ;--------------------------------------------------------
                                     23 ; absolute external ram data
                                     24 ;--------------------------------------------------------
                                     25 	.area DABS (ABS)
                                     26 ;--------------------------------------------------------
                                     27 ; global & static initialisations
                                     28 ;--------------------------------------------------------
                                     29 	.area HOME
                                     30 	.area GSINIT
                                     31 	.area GSFINAL
                                     32 	.area GSINIT
                                     33 ;--------------------------------------------------------
                                     34 ; Home
                                     35 ;--------------------------------------------------------
                                     36 	.area HOME
                                     37 	.area HOME
                                     38 ;--------------------------------------------------------
                                     39 ; code
                                     40 ;--------------------------------------------------------
                                     41 	.area CODE
                                     42 ;	../atanf.c: 55: float atanf(float x) _FLOAT_FUNC_REENTRANT
                                     43 ;	-----------------------------------------
                                     44 ;	 function atanf
                                     45 ;	-----------------------------------------
      000000                         46 _atanf:
      000000 52 2D            [ 2]   47 	sub	sp, #45
                                     48 ;	../atanf.c: 58: int n=0;
      000002 5F               [ 1]   49 	clrw	x
      000003 1F 01            [ 2]   50 	ldw	(0x01, sp), x
                                     51 ;	../atanf.c: 61: f=fabsf(x);
      000005 1E 32            [ 2]   52 	ldw	x, (0x32, sp)
      000007 89               [ 2]   53 	pushw	x
      000008 1E 32            [ 2]   54 	ldw	x, (0x32, sp)
      00000A 89               [ 2]   55 	pushw	x
      00000B CDr00r00         [ 4]   56 	call	_fabsf
      00000E 5B 04            [ 2]   57 	addw	sp, #4
      000010 1F 0D            [ 2]   58 	ldw	(0x0d, sp), x
      000012 17 0B            [ 2]   59 	ldw	(0x0b, sp), y
                                     60 ;	../atanf.c: 62: if(f>1.0)
      000014 5F               [ 1]   61 	clrw	x
      000015 89               [ 2]   62 	pushw	x
      000016 4B 80            [ 1]   63 	push	#0x80
      000018 4B 3F            [ 1]   64 	push	#0x3f
      00001A 1E 11            [ 2]   65 	ldw	x, (0x11, sp)
      00001C 89               [ 2]   66 	pushw	x
      00001D 1E 11            [ 2]   67 	ldw	x, (0x11, sp)
      00001F 89               [ 2]   68 	pushw	x
      000020 CDr00r00         [ 4]   69 	call	___fsgt
      000023 5B 08            [ 2]   70 	addw	sp, #8
      000025 4D               [ 1]   71 	tnz	a
      000026 27 1A            [ 1]   72 	jreq	00102$
                                     73 ;	../atanf.c: 64: f=1.0/f;
      000028 1E 0D            [ 2]   74 	ldw	x, (0x0d, sp)
      00002A 89               [ 2]   75 	pushw	x
      00002B 1E 0D            [ 2]   76 	ldw	x, (0x0d, sp)
      00002D 89               [ 2]   77 	pushw	x
      00002E 5F               [ 1]   78 	clrw	x
      00002F 89               [ 2]   79 	pushw	x
      000030 4B 80            [ 1]   80 	push	#0x80
      000032 4B 3F            [ 1]   81 	push	#0x3f
      000034 CDr00r00         [ 4]   82 	call	___fsdiv
      000037 5B 08            [ 2]   83 	addw	sp, #8
      000039 1F 0D            [ 2]   84 	ldw	(0x0d, sp), x
      00003B 17 0B            [ 2]   85 	ldw	(0x0b, sp), y
                                     86 ;	../atanf.c: 65: n=2;
      00003D AE 00 02         [ 2]   87 	ldw	x, #0x0002
      000040 1F 01            [ 2]   88 	ldw	(0x01, sp), x
      000042                         89 00102$:
                                     90 ;	../atanf.c: 67: if(f>K1)
      000042 4B A3            [ 1]   91 	push	#0xa3
      000044 4B 30            [ 1]   92 	push	#0x30
      000046 4B 89            [ 1]   93 	push	#0x89
      000048 4B 3E            [ 1]   94 	push	#0x3e
      00004A 1E 11            [ 2]   95 	ldw	x, (0x11, sp)
      00004C 89               [ 2]   96 	pushw	x
      00004D 1E 11            [ 2]   97 	ldw	x, (0x11, sp)
      00004F 89               [ 2]   98 	pushw	x
      000050 CDr00r00         [ 4]   99 	call	___fsgt
      000053 5B 08            [ 2]  100 	addw	sp, #8
      000055 4D               [ 1]  101 	tnz	a
      000056 27 63            [ 1]  102 	jreq	00104$
                                    103 ;	../atanf.c: 69: f=((K2*f-1.0)+f)/(K3+f);
      000058 1E 0D            [ 2]  104 	ldw	x, (0x0d, sp)
      00005A 89               [ 2]  105 	pushw	x
      00005B 1E 0D            [ 2]  106 	ldw	x, (0x0d, sp)
      00005D 89               [ 2]  107 	pushw	x
      00005E 4B AF            [ 1]  108 	push	#0xaf
      000060 4B 67            [ 1]  109 	push	#0x67
      000062 4B 3B            [ 1]  110 	push	#0x3b
      000064 4B 3F            [ 1]  111 	push	#0x3f
      000066 CDr00r00         [ 4]  112 	call	___fsmul
      000069 5B 08            [ 2]  113 	addw	sp, #8
      00006B 4B 00            [ 1]  114 	push	#0x00
      00006D 4B 00            [ 1]  115 	push	#0x00
      00006F 4B 80            [ 1]  116 	push	#0x80
      000071 4B 3F            [ 1]  117 	push	#0x3f
      000073 89               [ 2]  118 	pushw	x
      000074 90 89            [ 2]  119 	pushw	y
      000076 CDr00r00         [ 4]  120 	call	___fssub
      000079 5B 08            [ 2]  121 	addw	sp, #8
      00007B 1F 2C            [ 2]  122 	ldw	(0x2c, sp), x
      00007D 1E 0D            [ 2]  123 	ldw	x, (0x0d, sp)
      00007F 89               [ 2]  124 	pushw	x
      000080 1E 0D            [ 2]  125 	ldw	x, (0x0d, sp)
      000082 89               [ 2]  126 	pushw	x
      000083 1E 30            [ 2]  127 	ldw	x, (0x30, sp)
      000085 89               [ 2]  128 	pushw	x
      000086 90 89            [ 2]  129 	pushw	y
      000088 CDr00r00         [ 4]  130 	call	___fsadd
      00008B 5B 08            [ 2]  131 	addw	sp, #8
      00008D 1F 28            [ 2]  132 	ldw	(0x28, sp), x
      00008F 17 26            [ 2]  133 	ldw	(0x26, sp), y
      000091 4B D7            [ 1]  134 	push	#0xd7
      000093 4B B3            [ 1]  135 	push	#0xb3
      000095 4B DD            [ 1]  136 	push	#0xdd
      000097 4B 3F            [ 1]  137 	push	#0x3f
      000099 1E 11            [ 2]  138 	ldw	x, (0x11, sp)
      00009B 89               [ 2]  139 	pushw	x
      00009C 1E 11            [ 2]  140 	ldw	x, (0x11, sp)
      00009E 89               [ 2]  141 	pushw	x
      00009F CDr00r00         [ 4]  142 	call	___fsadd
      0000A2 5B 08            [ 2]  143 	addw	sp, #8
      0000A4 89               [ 2]  144 	pushw	x
      0000A5 90 89            [ 2]  145 	pushw	y
      0000A7 1E 2C            [ 2]  146 	ldw	x, (0x2c, sp)
      0000A9 89               [ 2]  147 	pushw	x
      0000AA 1E 2C            [ 2]  148 	ldw	x, (0x2c, sp)
      0000AC 89               [ 2]  149 	pushw	x
      0000AD CDr00r00         [ 4]  150 	call	___fsdiv
      0000B0 5B 08            [ 2]  151 	addw	sp, #8
      0000B2 1F 0D            [ 2]  152 	ldw	(0x0d, sp), x
      0000B4 17 0B            [ 2]  153 	ldw	(0x0b, sp), y
                                    154 ;	../atanf.c: 73: n++;
      0000B6 1E 01            [ 2]  155 	ldw	x, (0x01, sp)
      0000B8 5C               [ 2]  156 	incw	x
      0000B9 1F 01            [ 2]  157 	ldw	(0x01, sp), x
      0000BB                        158 00104$:
                                    159 ;	../atanf.c: 75: if(fabsf(f)<EPS) r=f;
      0000BB 1E 0D            [ 2]  160 	ldw	x, (0x0d, sp)
      0000BD 89               [ 2]  161 	pushw	x
      0000BE 1E 0D            [ 2]  162 	ldw	x, (0x0d, sp)
      0000C0 89               [ 2]  163 	pushw	x
      0000C1 CDr00r00         [ 4]  164 	call	_fabsf
      0000C4 5B 04            [ 2]  165 	addw	sp, #4
      0000C6 4B 00            [ 1]  166 	push	#0x00
      0000C8 4B 00            [ 1]  167 	push	#0x00
      0000CA 4B 80            [ 1]  168 	push	#0x80
      0000CC 4B 39            [ 1]  169 	push	#0x39
      0000CE 89               [ 2]  170 	pushw	x
      0000CF 90 89            [ 2]  171 	pushw	y
      0000D1 CDr00r00         [ 4]  172 	call	___fslt
      0000D4 5B 08            [ 2]  173 	addw	sp, #8
      0000D6 6B 25            [ 1]  174 	ld	(0x25, sp), a
      0000D8 0D 25            [ 1]  175 	tnz	(0x25, sp)
      0000DA 27 0B            [ 1]  176 	jreq	00106$
      0000DC 16 0D            [ 2]  177 	ldw	y, (0x0d, sp)
      0000DE 17 23            [ 2]  178 	ldw	(0x23, sp), y
      0000E0 16 0B            [ 2]  179 	ldw	y, (0x0b, sp)
      0000E2 17 21            [ 2]  180 	ldw	(0x21, sp), y
      0000E4 CCr01r82         [ 2]  181 	jp	00107$
      0000E7                        182 00106$:
                                    183 ;	../atanf.c: 78: g=f*f;
      0000E7 1E 0D            [ 2]  184 	ldw	x, (0x0d, sp)
      0000E9 89               [ 2]  185 	pushw	x
      0000EA 1E 0D            [ 2]  186 	ldw	x, (0x0d, sp)
      0000EC 89               [ 2]  187 	pushw	x
      0000ED 1E 11            [ 2]  188 	ldw	x, (0x11, sp)
      0000EF 89               [ 2]  189 	pushw	x
      0000F0 1E 11            [ 2]  190 	ldw	x, (0x11, sp)
      0000F2 89               [ 2]  191 	pushw	x
      0000F3 CDr00r00         [ 4]  192 	call	___fsmul
      0000F6 5B 08            [ 2]  193 	addw	sp, #8
      0000F8 1F 05            [ 2]  194 	ldw	(0x05, sp), x
      0000FA 17 03            [ 2]  195 	ldw	(0x03, sp), y
                                    196 ;	../atanf.c: 79: r=f+P(g,f)/Q(g);
      0000FC 1E 05            [ 2]  197 	ldw	x, (0x05, sp)
      0000FE 89               [ 2]  198 	pushw	x
      0000FF 1E 05            [ 2]  199 	ldw	x, (0x05, sp)
      000101 89               [ 2]  200 	pushw	x
      000102 4B 91            [ 1]  201 	push	#0x91
      000104 4B 86            [ 1]  202 	push	#0x86
      000106 4B 50            [ 1]  203 	push	#0x50
      000108 4B BD            [ 1]  204 	push	#0xbd
      00010A CDr00r00         [ 4]  205 	call	___fsmul
      00010D 5B 08            [ 2]  206 	addw	sp, #8
      00010F 4B F6            [ 1]  207 	push	#0xf6
      000111 4B 10            [ 1]  208 	push	#0x10
      000113 4B F1            [ 1]  209 	push	#0xf1
      000115 4B BE            [ 1]  210 	push	#0xbe
      000117 89               [ 2]  211 	pushw	x
      000118 90 89            [ 2]  212 	pushw	y
      00011A CDr00r00         [ 4]  213 	call	___fsadd
      00011D 5B 08            [ 2]  214 	addw	sp, #8
      00011F 1F 1F            [ 2]  215 	ldw	(0x1f, sp), x
      000121 1E 05            [ 2]  216 	ldw	x, (0x05, sp)
      000123 89               [ 2]  217 	pushw	x
      000124 1E 05            [ 2]  218 	ldw	x, (0x05, sp)
      000126 89               [ 2]  219 	pushw	x
      000127 1E 23            [ 2]  220 	ldw	x, (0x23, sp)
      000129 89               [ 2]  221 	pushw	x
      00012A 90 89            [ 2]  222 	pushw	y
      00012C CDr00r00         [ 4]  223 	call	___fsmul
      00012F 5B 08            [ 2]  224 	addw	sp, #8
      000131 1F 1B            [ 2]  225 	ldw	(0x1b, sp), x
      000133 1E 0D            [ 2]  226 	ldw	x, (0x0d, sp)
      000135 89               [ 2]  227 	pushw	x
      000136 1E 0D            [ 2]  228 	ldw	x, (0x0d, sp)
      000138 89               [ 2]  229 	pushw	x
      000139 1E 1F            [ 2]  230 	ldw	x, (0x1f, sp)
      00013B 89               [ 2]  231 	pushw	x
      00013C 90 89            [ 2]  232 	pushw	y
      00013E CDr00r00         [ 4]  233 	call	___fsmul
      000141 5B 08            [ 2]  234 	addw	sp, #8
      000143 1F 17            [ 2]  235 	ldw	(0x17, sp), x
      000145 17 15            [ 2]  236 	ldw	(0x15, sp), y
      000147 4B D3            [ 1]  237 	push	#0xd3
      000149 4B CC            [ 1]  238 	push	#0xcc
      00014B 4B B4            [ 1]  239 	push	#0xb4
      00014D 4B 3F            [ 1]  240 	push	#0x3f
      00014F 1E 09            [ 2]  241 	ldw	x, (0x09, sp)
      000151 89               [ 2]  242 	pushw	x
      000152 1E 09            [ 2]  243 	ldw	x, (0x09, sp)
      000154 89               [ 2]  244 	pushw	x
      000155 CDr00r00         [ 4]  245 	call	___fsadd
      000158 5B 08            [ 2]  246 	addw	sp, #8
      00015A 89               [ 2]  247 	pushw	x
      00015B 90 89            [ 2]  248 	pushw	y
      00015D 1E 1B            [ 2]  249 	ldw	x, (0x1b, sp)
      00015F 89               [ 2]  250 	pushw	x
      000160 1E 1B            [ 2]  251 	ldw	x, (0x1b, sp)
      000162 89               [ 2]  252 	pushw	x
      000163 CDr00r00         [ 4]  253 	call	___fsdiv
      000166 5B 08            [ 2]  254 	addw	sp, #8
      000168 89               [ 2]  255 	pushw	x
      000169 90 89            [ 2]  256 	pushw	y
      00016B 1E 11            [ 2]  257 	ldw	x, (0x11, sp)
      00016D 89               [ 2]  258 	pushw	x
      00016E 1E 11            [ 2]  259 	ldw	x, (0x11, sp)
      000170 89               [ 2]  260 	pushw	x
      000171 CDr00r00         [ 4]  261 	call	___fsadd
      000174 5B 08            [ 2]  262 	addw	sp, #8
      000176 1F 13            [ 2]  263 	ldw	(0x13, sp), x
      000178 17 11            [ 2]  264 	ldw	(0x11, sp), y
      00017A 16 13            [ 2]  265 	ldw	y, (0x13, sp)
      00017C 17 23            [ 2]  266 	ldw	(0x23, sp), y
      00017E 16 11            [ 2]  267 	ldw	y, (0x11, sp)
      000180 17 21            [ 2]  268 	ldw	(0x21, sp), y
      000182                        269 00107$:
                                    270 ;	../atanf.c: 81: if(n>1) r=-r;
      000182 1E 01            [ 2]  271 	ldw	x, (0x01, sp)
      000184 A3 00 01         [ 2]  272 	cpw	x, #0x0001
      000187 2D 0B            [ 1]  273 	jrsle	00109$
      000189 16 23            [ 2]  274 	ldw	y, (0x23, sp)
      00018B 1E 21            [ 2]  275 	ldw	x, (0x21, sp)
      00018D 58               [ 2]  276 	sllw	x
      00018E 8C               [ 1]  277 	ccf
      00018F 56               [ 2]  278 	rrcw	x
      000190 17 23            [ 2]  279 	ldw	(0x23, sp), y
      000192 1F 21            [ 2]  280 	ldw	(0x21, sp), x
      000194                        281 00109$:
                                    282 ;	../atanf.c: 82: r+=a[n];
      000194 AEr01rDD         [ 2]  283 	ldw	x, #_atanf_a_1_24+0
      000197 1F 0F            [ 2]  284 	ldw	(0x0f, sp), x
      000199 1E 01            [ 2]  285 	ldw	x, (0x01, sp)
      00019B 58               [ 2]  286 	sllw	x
      00019C 58               [ 2]  287 	sllw	x
      00019D 72 FB 0F         [ 2]  288 	addw	x, (0x0f, sp)
      0001A0 E6 03            [ 1]  289 	ld	a, (0x3, x)
      0001A2 90 97            [ 1]  290 	ld	yl, a
      0001A4 E6 02            [ 1]  291 	ld	a, (0x2, x)
      0001A6 90 95            [ 1]  292 	ld	yh, a
      0001A8 FE               [ 2]  293 	ldw	x, (x)
      0001A9 90 89            [ 2]  294 	pushw	y
      0001AB 89               [ 2]  295 	pushw	x
      0001AC 1E 27            [ 2]  296 	ldw	x, (0x27, sp)
      0001AE 89               [ 2]  297 	pushw	x
      0001AF 1E 27            [ 2]  298 	ldw	x, (0x27, sp)
      0001B1 89               [ 2]  299 	pushw	x
      0001B2 CDr00r00         [ 4]  300 	call	___fsadd
      0001B5 5B 08            [ 2]  301 	addw	sp, #8
      0001B7 1F 09            [ 2]  302 	ldw	(0x09, sp), x
                                    303 ;	../atanf.c: 83: if(x<0.0) r=-r;
      0001B9 90 89            [ 2]  304 	pushw	y
      0001BB 5F               [ 1]  305 	clrw	x
      0001BC 89               [ 2]  306 	pushw	x
      0001BD 5F               [ 1]  307 	clrw	x
      0001BE 89               [ 2]  308 	pushw	x
      0001BF 1E 38            [ 2]  309 	ldw	x, (0x38, sp)
      0001C1 89               [ 2]  310 	pushw	x
      0001C2 1E 38            [ 2]  311 	ldw	x, (0x38, sp)
      0001C4 89               [ 2]  312 	pushw	x
      0001C5 CDr00r00         [ 4]  313 	call	___fslt
      0001C8 5B 08            [ 2]  314 	addw	sp, #8
      0001CA 90 85            [ 2]  315 	popw	y
      0001CC 4D               [ 1]  316 	tnz	a
      0001CD 27 09            [ 1]  317 	jreq	00111$
      0001CF 1E 09            [ 2]  318 	ldw	x, (0x09, sp)
      0001D1 90 58            [ 2]  319 	sllw	y
      0001D3 8C               [ 1]  320 	ccf
      0001D4 90 56            [ 2]  321 	rrcw	y
      0001D6 1F 09            [ 2]  322 	ldw	(0x09, sp), x
      0001D8                        323 00111$:
                                    324 ;	../atanf.c: 84: return r;
      0001D8 1E 09            [ 2]  325 	ldw	x, (0x09, sp)
      0001DA 5B 2D            [ 2]  326 	addw	sp, #45
      0001DC 81               [ 4]  327 	ret
                                    328 	.area CODE
      0001DD                        329 _atanf_a_1_24:
      0001DD 00 00 00 00            330 	.byte #0x00,#0x00,#0x00,#0x00	;  0.000000e+00
      0001E1 3F 06 0A 92            331 	.byte #0x3F,#0x06,#0x0A,#0x92	;  5.235988e-01
      0001E5 3F C9 0F DB            332 	.byte #0x3F,#0xC9,#0x0F,#0xDB	;  1.570796e+00
      0001E9 3F 86 0A 92            333 	.byte #0x3F,#0x86,#0x0A,#0x92	;  1.047198e+00
                                    334 	.area INITIALIZER
                                    335 	.area CABS (ABS)
