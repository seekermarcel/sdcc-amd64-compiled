                              1 ;--------------------------------------------------------
                              2 ; File Created by SDCC : free open source ANSI-C Compiler
                              3 ; Version 3.5.0 #9253 (Apr  4 2022) (Linux)
                              4 ; This file was generated Mon Apr  4 14:15:34 2022
                              5 ;--------------------------------------------------------
                              6 	.hd64
                              7 	.module _atof
                              8 	.optsdcc -mz180
                              9 	
                             10 ;--------------------------------------------------------
                             11 ; Public variables in this module
                             12 ;--------------------------------------------------------
                             13 	.globl _atoi
                             14 	.globl _toupper
                             15 	.globl _isspace
                             16 	.globl _atof
                             17 ;--------------------------------------------------------
                             18 ; special function registers
                             19 ;--------------------------------------------------------
                             20 ;--------------------------------------------------------
                             21 ; ram data
                             22 ;--------------------------------------------------------
                             23 	.area _DATA
                             24 ;--------------------------------------------------------
                             25 ; ram data
                             26 ;--------------------------------------------------------
                             27 	.area _INITIALIZED
                             28 ;--------------------------------------------------------
                             29 ; absolute external ram data
                             30 ;--------------------------------------------------------
                             31 	.area _DABS (ABS)
                             32 ;--------------------------------------------------------
                             33 ; global & static initialisations
                             34 ;--------------------------------------------------------
                             35 	.area _HOME
                             36 	.area _GSINIT
                             37 	.area _GSFINAL
                             38 	.area _GSINIT
                             39 ;--------------------------------------------------------
                             40 ; Home
                             41 ;--------------------------------------------------------
                             42 	.area _HOME
                             43 	.area _HOME
                             44 ;--------------------------------------------------------
                             45 ; code
                             46 ;--------------------------------------------------------
                             47 	.area _CODE
                             48 ;../_atof.c:33: float atof(const char * s)
                             49 ;	---------------------------------
                             50 ; Function atof
                             51 ; ---------------------------------
   0000                      52 _atof::
   0000 DD E5         [14]   53 	push	ix
   0002 DD 21 00 00   [12]   54 	ld	ix,#0
   0006 DD 39         [10]   55 	add	ix,sp
   0008 21 F0 FF      [ 9]   56 	ld	hl,#-16
   000B 39            [ 7]   57 	add	hl,sp
   000C F9            [ 4]   58 	ld	sp,hl
                             59 ;../_atof.c:40: while (isspace(*s)) s++;
   000D DD 4E 04      [14]   60 	ld	c,4 (ix)
   0010 DD 46 05      [14]   61 	ld	b,5 (ix)
   0013                      62 00101$:
   0013 0A            [ 6]   63 	ld	a,(bc)
   0014 6F            [ 4]   64 	ld	l,a
   0015 17            [ 3]   65 	rla
   0016 9F            [ 4]   66 	sbc	a, a
   0017 67            [ 4]   67 	ld	h,a
   0018 C5            [11]   68 	push	bc
   0019 E5            [11]   69 	push	hl
   001A CDr00r00      [16]   70 	call	_isspace
   001D 33            [ 4]   71 	inc	sp
   001E 33            [ 4]   72 	inc	sp
   001F C1            [ 9]   73 	pop	bc
   0020 59            [ 4]   74 	ld	e, c
   0021 50            [ 4]   75 	ld	d, b
   0022 13            [ 4]   76 	inc	de
   0023 7C            [ 4]   77 	ld	a,h
   0024 B5            [ 4]   78 	or	a,l
   0025 28 04         [ 8]   79 	jr	Z,00145$
   0027 4B            [ 4]   80 	ld	c, e
   0028 42            [ 4]   81 	ld	b, d
   0029 18 E8         [ 8]   82 	jr	00101$
   002B                      83 00145$:
   002B DD 71 04      [15]   84 	ld	4 (ix),c
   002E DD 70 05      [15]   85 	ld	5 (ix),b
                             86 ;../_atof.c:43: if (*s == '-')
   0031 0A            [ 6]   87 	ld	a,(bc)
   0032 67            [ 4]   88 	ld	h,a
   0033 D6 2D         [ 6]   89 	sub	a, #0x2D
   0035 20 0C         [ 8]   90 	jr	NZ,00107$
                             91 ;../_atof.c:45: sign=1;
   0037 DD 36 F0 01   [15]   92 	ld	-16 (ix),#0x01
                             93 ;../_atof.c:46: s++;
   003B DD 73 04      [15]   94 	ld	4 (ix),e
   003E DD 72 05      [15]   95 	ld	5 (ix),d
   0041 18 0F         [ 8]   96 	jr	00108$
   0043                      97 00107$:
                             98 ;../_atof.c:50: sign=0;
   0043 DD 36 F0 00   [15]   99 	ld	-16 (ix),#0x00
                            100 ;../_atof.c:51: if (*s == '+') s++;
   0047 7C            [ 4]  101 	ld	a,h
   0048 D6 2B         [ 6]  102 	sub	a, #0x2B
   004A 20 06         [ 8]  103 	jr	NZ,00108$
   004C DD 73 04      [15]  104 	ld	4 (ix),e
   004F DD 72 05      [15]  105 	ld	5 (ix),d
   0052                     106 00108$:
                            107 ;../_atof.c:55: for (value=0.0; isdigit(*s); s++)
   0052 DD 36 F5 00   [15]  108 	ld	-11 (ix),#0x00
   0056 DD 36 F6 00   [15]  109 	ld	-10 (ix),#0x00
   005A DD 36 F7 00   [15]  110 	ld	-9 (ix),#0x00
   005E DD 36 F8 00   [15]  111 	ld	-8 (ix),#0x00
   0062 DD 4E 04      [14]  112 	ld	c,4 (ix)
   0065 DD 46 05      [14]  113 	ld	b,5 (ix)
   0068                     114 00124$:
   0068 0A            [ 6]  115 	ld	a,(bc)
   0069 6F            [ 4]  116 	ld	l,a
   006A 17            [ 3]  117 	rla
   006B 9F            [ 4]  118 	sbc	a, a
   006C 67            [ 4]  119 	ld	h,a
   006D C5            [11]  120 	push	bc
   006E E5            [11]  121 	push	hl
   006F CDr00r00      [16]  122 	call	_isdigit
   0072 33            [ 4]  123 	inc	sp
   0073 33            [ 4]  124 	inc	sp
   0074 EB            [ 3]  125 	ex	de,hl
   0075 C1            [ 9]  126 	pop	bc
   0076 0A            [ 6]  127 	ld	a,(bc)
   0077 DD 77 FF      [15]  128 	ld	-1 (ix),a
   007A 21 01 00      [ 9]  129 	ld	hl,#0x0001
   007D 09            [ 7]  130 	add	hl,bc
   007E DD 75 FD      [15]  131 	ld	-3 (ix),l
   0081 DD 74 FE      [15]  132 	ld	-2 (ix),h
   0084 7A            [ 4]  133 	ld	a,d
   0085 B3            [ 4]  134 	or	a,e
   0086 28 75         [ 8]  135 	jr	Z,00146$
                            136 ;../_atof.c:57: value=10.0*value+(*s-'0');
   0088 DD 6E F7      [14]  137 	ld	l,-9 (ix)
   008B DD 66 F8      [14]  138 	ld	h,-8 (ix)
   008E E5            [11]  139 	push	hl
   008F DD 6E F5      [14]  140 	ld	l,-11 (ix)
   0092 DD 66 F6      [14]  141 	ld	h,-10 (ix)
   0095 E5            [11]  142 	push	hl
   0096 21 20 41      [ 9]  143 	ld	hl,#0x4120
   0099 E5            [11]  144 	push	hl
   009A 21 00 00      [ 9]  145 	ld	hl,#0x0000
   009D E5            [11]  146 	push	hl
   009E CDr00r00      [16]  147 	call	___fsmul
   00A1 33            [ 4]  148 	inc	sp
   00A2 33            [ 4]  149 	inc	sp
   00A3 33            [ 4]  150 	inc	sp
   00A4 33            [ 4]  151 	inc	sp
   00A5 33            [ 4]  152 	inc	sp
   00A6 33            [ 4]  153 	inc	sp
   00A7 33            [ 4]  154 	inc	sp
   00A8 33            [ 4]  155 	inc	sp
   00A9 DD 72 FC      [15]  156 	ld	-4 (ix),d
   00AC DD 73 FB      [15]  157 	ld	-5 (ix),e
   00AF DD 74 FA      [15]  158 	ld	-6 (ix),h
   00B2 DD 75 F9      [15]  159 	ld	-7 (ix),l
   00B5 DD 66 FF      [14]  160 	ld	h,-1 (ix)
   00B8 DD 7E FF      [14]  161 	ld	a,-1 (ix)
   00BB 17            [ 3]  162 	rla
   00BC 9F            [ 4]  163 	sbc	a, a
   00BD 57            [ 4]  164 	ld	d,a
   00BE 7C            [ 4]  165 	ld	a,h
   00BF C6 D0         [ 6]  166 	add	a,#0xD0
   00C1 6F            [ 4]  167 	ld	l,a
   00C2 7A            [ 4]  168 	ld	a,d
   00C3 CE FF         [ 6]  169 	adc	a,#0xFF
   00C5 67            [ 4]  170 	ld	h,a
   00C6 E5            [11]  171 	push	hl
   00C7 CDr00r00      [16]  172 	call	___sint2fs
   00CA 33            [ 4]  173 	inc	sp
   00CB 33            [ 4]  174 	inc	sp
   00CC EB            [ 3]  175 	ex	de, hl
   00CD E5            [11]  176 	push	hl
   00CE D5            [11]  177 	push	de
   00CF DD 6E FB      [14]  178 	ld	l,-5 (ix)
   00D2 DD 66 FC      [14]  179 	ld	h,-4 (ix)
   00D5 E5            [11]  180 	push	hl
   00D6 DD 6E F9      [14]  181 	ld	l,-7 (ix)
   00D9 DD 66 FA      [14]  182 	ld	h,-6 (ix)
   00DC E5            [11]  183 	push	hl
   00DD CDr00r00      [16]  184 	call	___fsadd
   00E0 33            [ 4]  185 	inc	sp
   00E1 33            [ 4]  186 	inc	sp
   00E2 33            [ 4]  187 	inc	sp
   00E3 33            [ 4]  188 	inc	sp
   00E4 33            [ 4]  189 	inc	sp
   00E5 33            [ 4]  190 	inc	sp
   00E6 33            [ 4]  191 	inc	sp
   00E7 33            [ 4]  192 	inc	sp
   00E8 DD 75 F5      [15]  193 	ld	-11 (ix),l
   00EB DD 74 F6      [15]  194 	ld	-10 (ix),h
   00EE DD 73 F7      [15]  195 	ld	-9 (ix),e
   00F1 DD 72 F8      [15]  196 	ld	-8 (ix),d
                            197 ;../_atof.c:55: for (value=0.0; isdigit(*s); s++)
   00F4 DD 4E FD      [14]  198 	ld	c,-3 (ix)
   00F7 DD 46 FE      [14]  199 	ld	b,-2 (ix)
   00FA C3r68r00      [ 9]  200 	jp	00124$
   00FD                     201 00146$:
   00FD DD 71 04      [15]  202 	ld	4 (ix),c
   0100 DD 70 05      [15]  203 	ld	5 (ix),b
                            204 ;../_atof.c:61: if (*s == '.')
   0103 DD 7E FF      [14]  205 	ld	a,-1 (ix)
   0106 D6 2E         [ 6]  206 	sub	a, #0x2E
   0108 C2rEDr01      [ 9]  207 	jp	NZ,00112$
                            208 ;../_atof.c:64: for (fraction=0.1; isdigit(*s); s++)
   010B DD 36 F1 CD   [15]  209 	ld	-15 (ix),#0xCD
   010F DD 36 F2 CC   [15]  210 	ld	-14 (ix),#0xCC
   0113 DD 36 F3 CC   [15]  211 	ld	-13 (ix),#0xCC
   0117 DD 36 F4 3D   [15]  212 	ld	-12 (ix),#0x3D
   011B DD 7E FD      [14]  213 	ld	a,-3 (ix)
   011E DD 77 F9      [15]  214 	ld	-7 (ix),a
   0121 DD 7E FE      [14]  215 	ld	a,-2 (ix)
   0124 DD 77 FA      [15]  216 	ld	-6 (ix),a
   0127                     217 00127$:
   0127 DD 6E F9      [14]  218 	ld	l,-7 (ix)
   012A DD 66 FA      [14]  219 	ld	h,-6 (ix)
   012D 7E            [ 6]  220 	ld	a,(hl)
   012E DD 77 FD      [15]  221 	ld	-3 (ix), a
   0131 DD 77 FD      [15]  222 	ld	-3 (ix), a
   0134 17            [ 3]  223 	rla
   0135 9F            [ 4]  224 	sbc	a, a
   0136 DD 77 FE      [15]  225 	ld	-2 (ix),a
   0139 DD 6E FD      [14]  226 	ld	l,-3 (ix)
   013C DD 66 FE      [14]  227 	ld	h,-2 (ix)
   013F E5            [11]  228 	push	hl
   0140 CDr00r00      [16]  229 	call	_isdigit
   0143 33            [ 4]  230 	inc	sp
   0144 33            [ 4]  231 	inc	sp
   0145 7C            [ 4]  232 	ld	a,h
   0146 B5            [ 4]  233 	or	a,l
   0147 CArE1r01      [ 9]  234 	jp	Z,00147$
                            235 ;../_atof.c:66: value+=(*s-'0')*fraction;
   014A DD 6E F9      [14]  236 	ld	l,-7 (ix)
   014D DD 66 FA      [14]  237 	ld	h,-6 (ix)
   0150 7E            [ 6]  238 	ld	a,(hl)
   0151 67            [ 4]  239 	ld	h,a
   0152 17            [ 3]  240 	rla
   0153 9F            [ 4]  241 	sbc	a, a
   0154 6F            [ 4]  242 	ld	l,a
   0155 7C            [ 4]  243 	ld	a,h
   0156 C6 D0         [ 6]  244 	add	a,#0xD0
   0158 5F            [ 4]  245 	ld	e,a
   0159 7D            [ 4]  246 	ld	a,l
   015A CE FF         [ 6]  247 	adc	a,#0xFF
   015C 57            [ 4]  248 	ld	d,a
   015D D5            [11]  249 	push	de
   015E CDr00r00      [16]  250 	call	___sint2fs
   0161 33            [ 4]  251 	inc	sp
   0162 33            [ 4]  252 	inc	sp
   0163 4D            [ 4]  253 	ld	c,l
   0164 44            [ 4]  254 	ld	b,h
   0165 DD 6E F3      [14]  255 	ld	l,-13 (ix)
   0168 DD 66 F4      [14]  256 	ld	h,-12 (ix)
   016B E5            [11]  257 	push	hl
   016C DD 6E F1      [14]  258 	ld	l,-15 (ix)
   016F DD 66 F2      [14]  259 	ld	h,-14 (ix)
   0172 E5            [11]  260 	push	hl
   0173 D5            [11]  261 	push	de
   0174 C5            [11]  262 	push	bc
   0175 CDr00r00      [16]  263 	call	___fsmul
   0178 33            [ 4]  264 	inc	sp
   0179 33            [ 4]  265 	inc	sp
   017A 33            [ 4]  266 	inc	sp
   017B 33            [ 4]  267 	inc	sp
   017C 33            [ 4]  268 	inc	sp
   017D 33            [ 4]  269 	inc	sp
   017E 33            [ 4]  270 	inc	sp
   017F 33            [ 4]  271 	inc	sp
   0180 EB            [ 3]  272 	ex	de, hl
   0181 E5            [11]  273 	push	hl
   0182 D5            [11]  274 	push	de
   0183 DD 6E F7      [14]  275 	ld	l,-9 (ix)
   0186 DD 66 F8      [14]  276 	ld	h,-8 (ix)
   0189 E5            [11]  277 	push	hl
   018A DD 6E F5      [14]  278 	ld	l,-11 (ix)
   018D DD 66 F6      [14]  279 	ld	h,-10 (ix)
   0190 E5            [11]  280 	push	hl
   0191 CDr00r00      [16]  281 	call	___fsadd
   0194 33            [ 4]  282 	inc	sp
   0195 33            [ 4]  283 	inc	sp
   0196 33            [ 4]  284 	inc	sp
   0197 33            [ 4]  285 	inc	sp
   0198 33            [ 4]  286 	inc	sp
   0199 33            [ 4]  287 	inc	sp
   019A 33            [ 4]  288 	inc	sp
   019B 33            [ 4]  289 	inc	sp
   019C DD 75 F5      [15]  290 	ld	-11 (ix),l
   019F DD 74 F6      [15]  291 	ld	-10 (ix),h
   01A2 DD 73 F7      [15]  292 	ld	-9 (ix),e
   01A5 DD 72 F8      [15]  293 	ld	-8 (ix),d
                            294 ;../_atof.c:67: fraction*=0.1;
   01A8 DD 6E F3      [14]  295 	ld	l,-13 (ix)
   01AB DD 66 F4      [14]  296 	ld	h,-12 (ix)
   01AE E5            [11]  297 	push	hl
   01AF DD 6E F1      [14]  298 	ld	l,-15 (ix)
   01B2 DD 66 F2      [14]  299 	ld	h,-14 (ix)
   01B5 E5            [11]  300 	push	hl
   01B6 21 CC 3D      [ 9]  301 	ld	hl,#0x3DCC
   01B9 E5            [11]  302 	push	hl
   01BA 21 CD CC      [ 9]  303 	ld	hl,#0xCCCD
   01BD E5            [11]  304 	push	hl
   01BE CDr00r00      [16]  305 	call	___fsmul
   01C1 33            [ 4]  306 	inc	sp
   01C2 33            [ 4]  307 	inc	sp
   01C3 33            [ 4]  308 	inc	sp
   01C4 33            [ 4]  309 	inc	sp
   01C5 33            [ 4]  310 	inc	sp
   01C6 33            [ 4]  311 	inc	sp
   01C7 33            [ 4]  312 	inc	sp
   01C8 33            [ 4]  313 	inc	sp
   01C9 DD 75 F1      [15]  314 	ld	-15 (ix),l
   01CC DD 74 F2      [15]  315 	ld	-14 (ix),h
   01CF DD 73 F3      [15]  316 	ld	-13 (ix),e
   01D2 DD 72 F4      [15]  317 	ld	-12 (ix),d
                            318 ;../_atof.c:64: for (fraction=0.1; isdigit(*s); s++)
   01D5 DD 34 F9      [18]  319 	inc	-7 (ix)
   01D8 C2r27r01      [ 9]  320 	jp	NZ,00127$
   01DB DD 34 FA      [18]  321 	inc	-6 (ix)
   01DE C3r27r01      [ 9]  322 	jp	00127$
   01E1                     323 00147$:
   01E1 DD 7E F9      [14]  324 	ld	a,-7 (ix)
   01E4 DD 77 04      [15]  325 	ld	4 (ix),a
   01E7 DD 7E FA      [14]  326 	ld	a,-6 (ix)
   01EA DD 77 05      [15]  327 	ld	5 (ix),a
   01ED                     328 00112$:
                            329 ;../_atof.c:72: if (toupper(*s)=='E')
   01ED DD 7E 04      [14]  330 	ld	a,4 (ix)
   01F0 DD 77 F9      [15]  331 	ld	-7 (ix),a
   01F3 DD 7E 05      [14]  332 	ld	a,5 (ix)
   01F6 DD 77 FA      [15]  333 	ld	-6 (ix),a
   01F9 DD 6E F9      [14]  334 	ld	l,-7 (ix)
   01FC DD 66 FA      [14]  335 	ld	h,-6 (ix)
   01FF 7E            [ 6]  336 	ld	a,(hl)
   0200 6F            [ 4]  337 	ld	l,a
   0201 17            [ 3]  338 	rla
   0202 9F            [ 4]  339 	sbc	a, a
   0203 67            [ 4]  340 	ld	h,a
   0204 E5            [11]  341 	push	hl
   0205 CDr00r00      [16]  342 	call	_toupper
   0208 33            [ 4]  343 	inc	sp
   0209 33            [ 4]  344 	inc	sp
   020A 7D            [ 4]  345 	ld	a,l
   020B D6 45         [ 6]  346 	sub	a,#0x45
   020D C2r9Dr02      [ 9]  347 	jp	NZ,00120$
   0210 B4            [ 4]  348 	or	a,h
   0211 C2r9Dr02      [ 9]  349 	jp	NZ,00120$
                            350 ;../_atof.c:74: s++;
   0214 DD 7E F9      [14]  351 	ld	a,-7 (ix)
   0217 C6 01         [ 6]  352 	add	a, #0x01
   0219 DD 77 04      [15]  353 	ld	4 (ix),a
   021C DD 7E FA      [14]  354 	ld	a,-6 (ix)
   021F CE 00         [ 6]  355 	adc	a, #0x00
   0221 DD 77 05      [15]  356 	ld	5 (ix),a
                            357 ;../_atof.c:75: iexp=(signed char)atoi(s);
   0224 DD 6E 04      [14]  358 	ld	l,4 (ix)
   0227 DD 66 05      [14]  359 	ld	h,5 (ix)
   022A E5            [11]  360 	push	hl
   022B CDr00r00      [16]  361 	call	_atoi
   022E 33            [ 4]  362 	inc	sp
   022F 33            [ 4]  363 	inc	sp
   0230 45            [ 4]  364 	ld	b,l
                            365 ;../_atof.c:77: while(iexp!=0)
   0231                     366 00116$:
   0231 78            [ 4]  367 	ld	a,b
   0232 B7            [ 4]  368 	or	a, a
   0233 28 68         [ 8]  369 	jr	Z,00120$
                            370 ;../_atof.c:79: if(iexp<0)
   0235 CB 78         [ 7]  371 	bit	7, b
   0237 28 32         [ 8]  372 	jr	Z,00114$
                            373 ;../_atof.c:81: value*=0.1;
   0239 C5            [11]  374 	push	bc
   023A DD 6E F7      [14]  375 	ld	l,-9 (ix)
   023D DD 66 F8      [14]  376 	ld	h,-8 (ix)
   0240 E5            [11]  377 	push	hl
   0241 DD 6E F5      [14]  378 	ld	l,-11 (ix)
   0244 DD 66 F6      [14]  379 	ld	h,-10 (ix)
   0247 E5            [11]  380 	push	hl
   0248 21 CC 3D      [ 9]  381 	ld	hl,#0x3DCC
   024B E5            [11]  382 	push	hl
   024C 21 CD CC      [ 9]  383 	ld	hl,#0xCCCD
   024F E5            [11]  384 	push	hl
   0250 CDr00r00      [16]  385 	call	___fsmul
   0253 33            [ 4]  386 	inc	sp
   0254 33            [ 4]  387 	inc	sp
   0255 33            [ 4]  388 	inc	sp
   0256 33            [ 4]  389 	inc	sp
   0257 33            [ 4]  390 	inc	sp
   0258 33            [ 4]  391 	inc	sp
   0259 33            [ 4]  392 	inc	sp
   025A 33            [ 4]  393 	inc	sp
   025B C1            [ 9]  394 	pop	bc
   025C DD 75 F5      [15]  395 	ld	-11 (ix),l
   025F DD 74 F6      [15]  396 	ld	-10 (ix),h
   0262 DD 73 F7      [15]  397 	ld	-9 (ix),e
   0265 DD 72 F8      [15]  398 	ld	-8 (ix),d
                            399 ;../_atof.c:82: iexp++;
   0268 04            [ 4]  400 	inc	b
   0269 18 C6         [ 8]  401 	jr	00116$
   026B                     402 00114$:
                            403 ;../_atof.c:86: value*=10.0;
   026B C5            [11]  404 	push	bc
   026C DD 6E F7      [14]  405 	ld	l,-9 (ix)
   026F DD 66 F8      [14]  406 	ld	h,-8 (ix)
   0272 E5            [11]  407 	push	hl
   0273 DD 6E F5      [14]  408 	ld	l,-11 (ix)
   0276 DD 66 F6      [14]  409 	ld	h,-10 (ix)
   0279 E5            [11]  410 	push	hl
   027A 21 20 41      [ 9]  411 	ld	hl,#0x4120
   027D E5            [11]  412 	push	hl
   027E 21 00 00      [ 9]  413 	ld	hl,#0x0000
   0281 E5            [11]  414 	push	hl
   0282 CDr00r00      [16]  415 	call	___fsmul
   0285 33            [ 4]  416 	inc	sp
   0286 33            [ 4]  417 	inc	sp
   0287 33            [ 4]  418 	inc	sp
   0288 33            [ 4]  419 	inc	sp
   0289 33            [ 4]  420 	inc	sp
   028A 33            [ 4]  421 	inc	sp
   028B 33            [ 4]  422 	inc	sp
   028C 33            [ 4]  423 	inc	sp
   028D C1            [ 9]  424 	pop	bc
   028E DD 75 F5      [15]  425 	ld	-11 (ix),l
   0291 DD 74 F6      [15]  426 	ld	-10 (ix),h
   0294 DD 73 F7      [15]  427 	ld	-9 (ix),e
   0297 DD 72 F8      [15]  428 	ld	-8 (ix),d
                            429 ;../_atof.c:87: iexp--;
   029A 05            [ 4]  430 	dec	b
   029B 18 94         [ 8]  431 	jr	00116$
   029D                     432 00120$:
                            433 ;../_atof.c:93: if(sign) value*=-1.0;
   029D DD CB F0 46   [19]  434 	bit	0,-16 (ix)
   02A1 28 08         [ 8]  435 	jr	Z,00122$
   02A3 DD 7E F8      [14]  436 	ld	a,-8 (ix)
   02A6 EE 80         [ 6]  437 	xor	a,#0x80
   02A8 DD 77 F8      [15]  438 	ld	-8 (ix),a
   02AB                     439 00122$:
                            440 ;../_atof.c:94: return (value);
   02AB DD 6E F5      [14]  441 	ld	l,-11 (ix)
   02AE DD 66 F6      [14]  442 	ld	h,-10 (ix)
   02B1 DD 5E F7      [14]  443 	ld	e,-9 (ix)
   02B4 DD 56 F8      [14]  444 	ld	d,-8 (ix)
   02B7 DD F9         [ 7]  445 	ld	sp, ix
   02B9 DD E1         [12]  446 	pop	ix
   02BB C9            [ 9]  447 	ret
                            448 	.area _CODE
                            449 	.area _INITIALIZER
                            450 	.area _CABS (ABS)
