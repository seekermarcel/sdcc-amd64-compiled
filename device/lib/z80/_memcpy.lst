                              1 ;--------------------------------------------------------
                              2 ; File Created by SDCC : free open source ANSI-C Compiler
                              3 ; Version 3.5.0 #9253 (Apr  4 2022) (Linux)
                              4 ; This file was generated Mon Apr  4 14:15:28 2022
                              5 ;--------------------------------------------------------
                              6 	.module _memcpy
                              7 	.optsdcc -mz80
                              8 	
                              9 ;--------------------------------------------------------
                             10 ; Public variables in this module
                             11 ;--------------------------------------------------------
                             12 	.globl _memcpy
                             13 ;--------------------------------------------------------
                             14 ; special function registers
                             15 ;--------------------------------------------------------
                             16 ;--------------------------------------------------------
                             17 ; ram data
                             18 ;--------------------------------------------------------
                             19 	.area _DATA
                             20 ;--------------------------------------------------------
                             21 ; ram data
                             22 ;--------------------------------------------------------
                             23 	.area _INITIALIZED
                             24 ;--------------------------------------------------------
                             25 ; absolute external ram data
                             26 ;--------------------------------------------------------
                             27 	.area _DABS (ABS)
                             28 ;--------------------------------------------------------
                             29 ; global & static initialisations
                             30 ;--------------------------------------------------------
                             31 	.area _HOME
                             32 	.area _GSINIT
                             33 	.area _GSFINAL
                             34 	.area _GSINIT
                             35 ;--------------------------------------------------------
                             36 ; Home
                             37 ;--------------------------------------------------------
                             38 	.area _HOME
                             39 	.area _HOME
                             40 ;--------------------------------------------------------
                             41 ; code
                             42 ;--------------------------------------------------------
                             43 	.area _CODE
                             44 ;../_memcpy.c:36: void * memcpy (void * dst, const void * src, size_t acount)
                             45 ;	---------------------------------
                             46 ; Function memcpy
                             47 ; ---------------------------------
   0000                      48 _memcpy::
   0000 DD E5         [15]   49 	push	ix
   0002 DD 21 00 00   [14]   50 	ld	ix,#0
   0006 DD 39         [15]   51 	add	ix,sp
   0008 F5            [11]   52 	push	af
   0009 F5            [11]   53 	push	af
                             54 ;../_memcpy.c:38: void * ret = dst;
   000A DD 7E 04      [19]   55 	ld	a,4 (ix)
   000D DD 77 FC      [19]   56 	ld	-4 (ix),a
   0010 DD 7E 05      [19]   57 	ld	a,5 (ix)
   0013 DD 77 FD      [19]   58 	ld	-3 (ix),a
                             59 ;../_memcpy.c:39: char * d = dst;
   0016 DD 7E 04      [19]   60 	ld	a,4 (ix)
   0019 DD 77 FE      [19]   61 	ld	-2 (ix),a
   001C DD 7E 05      [19]   62 	ld	a,5 (ix)
   001F DD 77 FF      [19]   63 	ld	-1 (ix),a
                             64 ;../_memcpy.c:40: const char * s = src;
   0022 DD 5E 06      [19]   65 	ld	e,6 (ix)
   0025 DD 56 07      [19]   66 	ld	d,7 (ix)
                             67 ;../_memcpy.c:45: while (acount--) {
   0028 DD 4E 08      [19]   68 	ld	c,8 (ix)
   002B DD 46 09      [19]   69 	ld	b,9 (ix)
   002E                      70 00101$:
   002E 61            [ 4]   71 	ld	h,c
   002F 68            [ 4]   72 	ld	l,b
   0030 0B            [ 6]   73 	dec	bc
   0031 7D            [ 4]   74 	ld	a,l
   0032 B4            [ 4]   75 	or	a,h
   0033 28 13         [12]   76 	jr	Z,00103$
                             77 ;../_memcpy.c:46: *d++ = *s++;
   0035 1A            [ 7]   78 	ld	a,(de)
   0036 13            [ 6]   79 	inc	de
   0037 DD 6E FE      [19]   80 	ld	l,-2 (ix)
   003A DD 66 FF      [19]   81 	ld	h,-1 (ix)
   003D 77            [ 7]   82 	ld	(hl),a
   003E DD 34 FE      [23]   83 	inc	-2 (ix)
   0041 20 EB         [12]   84 	jr	NZ,00101$
   0043 DD 34 FF      [23]   85 	inc	-1 (ix)
   0046 18 E6         [12]   86 	jr	00101$
   0048                      87 00103$:
                             88 ;../_memcpy.c:49: return(ret);
   0048 E1            [10]   89 	pop	hl
   0049 E5            [11]   90 	push	hl
   004A DD F9         [10]   91 	ld	sp, ix
   004C DD E1         [14]   92 	pop	ix
   004E C9            [10]   93 	ret
                             94 	.area _CODE
                             95 	.area _INITIALIZER
                             96 	.area _CABS (ABS)
