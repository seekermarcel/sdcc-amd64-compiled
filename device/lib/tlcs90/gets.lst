                              1 ;--------------------------------------------------------
                              2 ; File Created by SDCC : free open source ANSI-C Compiler
                              3 ; Version 3.5.0 #9253 (Apr  4 2022) (Linux)
                              4 ; This file was generated Mon Apr  4 14:16:41 2022
                              5 ;--------------------------------------------------------
                              6 	.module gets
                              7 	.optsdcc -mtlcs90
                              8 	
                              9 ;--------------------------------------------------------
                             10 ; Public variables in this module
                             11 ;--------------------------------------------------------
                             12 	.globl _putchar
                             13 	.globl _getchar
                             14 	.globl _gets
                             15 ;--------------------------------------------------------
                             16 ; ram data
                             17 ;--------------------------------------------------------
                             18 	.area _DATA
                             19 ;--------------------------------------------------------
                             20 ; ram data
                             21 ;--------------------------------------------------------
                             22 	.area _INITIALIZED
                             23 ;--------------------------------------------------------
                             24 ; absolute external ram data
                             25 ;--------------------------------------------------------
                             26 	.area _DABS (ABS)
                             27 ;--------------------------------------------------------
                             28 ; global & static initialisations
                             29 ;--------------------------------------------------------
                             30 	.area _HOME
                             31 	.area _GSINIT
                             32 	.area _GSFINAL
                             33 	.area _GSINIT
                             34 ;--------------------------------------------------------
                             35 ; Home
                             36 ;--------------------------------------------------------
                             37 	.area _HOME
                             38 	.area _HOME
                             39 ;--------------------------------------------------------
                             40 ; code
                             41 ;--------------------------------------------------------
                             42 	.area _CODE
                             43 ;../gets.c:32: gets (char *s)
                             44 ;	---------------------------------
                             45 ; Function gets
                             46 ; ---------------------------------
   0000                      47 _gets::
   0000 16 FE FF      [ 7]   48 	add	sp, #-2
                             49 ;../gets.c:35: unsigned int count = 0;
   0003 3A 00 00      [13]   50 	ld	hl,#0x0000
   0006 E6 52         [ 7]   51 	ex	(sp), hl
                             52 ;../gets.c:37: while (1)
   0008                      53 00109$:
                             54 ;../gets.c:39: c = getchar ();
   0008 1Cr00r00      [ 4]   55 	call	_getchar
   000B FD 30                56 	ld	b,l
                             57 ;../gets.c:40: switch(c)
   000D 20            [12]   58 	ld	a,b
   000E 6A 08         [ 4]   59 	sub	a, #0x08
   0010 C6 15         [ 7]   60 	jr	Z,00101$
                             61 ;../gets.c:57: *s = 0;
   0012 08            [ 4]   62 	ex	de, hl
   0013 F2 04 4A      [10]   63 	ld	hl, 4 (sp)
   0016 08            [ 4]   64 	ex	de, hl
                             65 ;../gets.c:40: switch(c)
   0017 20            [12]   66 	ld	a,b
   0018 6F 0A         [ 4]   67 	cp	a,#0x0A
   001A EBr59r00 C6   [ 4]   68 	jp	Z,00105$
   001E 6A 0D         [ 4]   69 	sub	a, #0x0D
   0020 EBr59r00 C6   [ 4]   70 	jp	Z,00105$
   0024 1Ar72r00      [ 7]   71 	jp	00106$
                             72 ;../gets.c:42: case '\b': /* backspace */
   0027                      73 00101$:
                             74 ;../gets.c:43: if (count)
   0027 3A 01 00      [13]   75 	ld	hl, #0+1
   002A FE 70         [ 7]   76 	add	hl, sp
   002C E2 2E         [10]   77 	ld	a, (hl)
   002E 9A            [ 4]   78 	dec	hl
   002F E2 66         [10]   79 	or	a,(hl)
   0031 C6 D5         [ 7]   80 	jr	Z,00109$
                             81 ;../gets.c:45: putchar ('\b');
   0033 36 08         [10]   82 	ld	a,#0x08
   0035 56            [ 7]   83 	push	af
   0036 96            [ 7]   84 	inc	sp
   0037 1Cr00r00      [ 4]   85 	call	_putchar
   003A 96            [ 7]   86 	inc	sp
                             87 ;../gets.c:46: putchar (' ');
   003B 36 20         [10]   88 	ld	a,#0x20
   003D 56            [ 7]   89 	push	af
   003E 96            [ 7]   90 	inc	sp
   003F 1Cr00r00      [ 4]   91 	call	_putchar
   0042 96            [ 7]   92 	inc	sp
                             93 ;../gets.c:47: putchar ('\b');
   0043 36 08         [10]   94 	ld	a,#0x08
   0045 56            [ 7]   95 	push	af
   0046 96            [ 7]   96 	inc	sp
   0047 1Cr00r00      [ 4]   97 	call	_putchar
   004A 96            [ 7]   98 	inc	sp
                             99 ;../gets.c:48: --s;
   004B F2 04 8F      [10]  100 	dec	4 (sp)
   004E F2 04 4A      [10]  101 	ld	hl, 4 (sp)
                            102 ;../gets.c:49: --count;
   0051 5A            [ 4]  103 	pop	hl
   0052 52            [ 4]  104 	push	hl
   0053 9A            [ 4]  105 	dec	hl
   0054 E6 52         [ 7]  106 	ex	(sp), hl
                            107 ;../gets.c:51: break;
   0056 1Ar08r00      [ 7]  108 	jp	00109$
                            109 ;../gets.c:54: case '\r': /* CR or LF */
   0059                     110 00105$:
                            111 ;../gets.c:55: putchar ('\r');
   0059 51            [ 4]  112 	push	de
   005A 36 0D         [10]  113 	ld	a,#0x0D
   005C 56            [ 7]  114 	push	af
   005D 96            [ 7]  115 	inc	sp
   005E 1Cr00r00      [ 4]  116 	call	_putchar
   0061 96            [ 7]  117 	inc	sp
   0062 36 0A         [10]  118 	ld	a,#0x0A
   0064 56            [ 7]  119 	push	af
   0065 96            [ 7]  120 	inc	sp
   0066 1Cr00r00      [ 4]  121 	call	_putchar
   0069 96            [ 7]  122 	inc	sp
   006A 59            [ 4]  123 	pop	de
                            124 ;../gets.c:57: *s = 0;
   006B FE 65         [ 7]  125 	xor	a, a
   006D E9 26         [ 4]  126 	ld	(de),a
                            127 ;../gets.c:58: return s;
   006F 08            [ 4]  128 	ex	de,hl
   0070 C8 23         [11]  129 	jr	00111$
                            130 ;../gets.c:60: default:
   0072                     131 00106$:
                            132 ;../gets.c:61: *s++ = c;
   0072 20            [12]  133 	ld	a,b
   0073 E9 26         [ 4]  134 	ld	(de),a
   0075 91            [ 4]  135 	inc	de
   0076 3D 04 00      [ 4]  136 	ld	iy,#4
   0079 FE 15         [ 7]  137 	add	iy,sp
   007B ED 23               138 	ld	0 (iy),e
   007D F5 01 22      [11]  139 	ld	1 (iy),d
                            140 ;../gets.c:62: ++count;
   0080 3D 00 00      [ 4]  141 	ld	iy,#0
   0083 FE 15         [ 7]  142 	add	iy,sp
   0085 E5 87         [11]  143 	inc	0 (iy)
   0087 CE 03         [ 7]  144 	jr	NZ,00136$
   0089 F1 01 87      [10]  145 	inc	1 (iy)
   008C                     146 00136$:
                            147 ;../gets.c:63: putchar (c);
   008C 50            [ 4]  148 	push	bc
   008D 96            [ 7]  149 	inc	sp
   008E 1Cr00r00      [ 4]  150 	call	_putchar
   0091 96            [ 7]  151 	inc	sp
                            152 ;../gets.c:65: }
   0092 1Ar08r00      [ 7]  153 	jp	00109$
   0095                     154 00111$:
   0095 16 02 00      [ 7]  155 	add	sp, #2
   0098 1E            [ 7]  156 	ret
                            157 	.area _CODE
                            158 	.area _INITIALIZER
                            159 	.area _CABS (ABS)
