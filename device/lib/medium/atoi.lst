                                      1 ;--------------------------------------------------------
                                      2 ; File Created by SDCC : free open source ANSI-C Compiler
                                      3 ; Version 3.5.0 #9253 (Apr  4 2022) (Linux)
                                      4 ; This file was generated Mon Apr  4 14:10:43 2022
                                      5 ;--------------------------------------------------------
                                      6 	.module atoi
                                      7 	.optsdcc -mmcs51 --model-medium
                                      8 	
                                      9 ;--------------------------------------------------------
                                     10 ; Public variables in this module
                                     11 ;--------------------------------------------------------
                                     12 	.globl _atoi
                                     13 ;--------------------------------------------------------
                                     14 ; special function registers
                                     15 ;--------------------------------------------------------
                                     16 	.area RSEG    (ABS,DATA)
      000000                         17 	.org 0x0000
                                     18 ;--------------------------------------------------------
                                     19 ; special function bits
                                     20 ;--------------------------------------------------------
                                     21 	.area RSEG    (ABS,DATA)
      000000                         22 	.org 0x0000
                                     23 ;--------------------------------------------------------
                                     24 ; overlayable register banks
                                     25 ;--------------------------------------------------------
                                     26 	.area REG_BANK_0	(REL,OVR,DATA)
      000000                         27 	.ds 8
                                     28 ;--------------------------------------------------------
                                     29 ; internal ram data
                                     30 ;--------------------------------------------------------
                                     31 	.area DSEG    (DATA)
      000000                         32 _atoi_sloc0_1_0:
      000000                         33 	.ds 2
                                     34 ;--------------------------------------------------------
                                     35 ; overlayable items in internal ram 
                                     36 ;--------------------------------------------------------
                                     37 ;--------------------------------------------------------
                                     38 ; indirectly addressable internal ram data
                                     39 ;--------------------------------------------------------
                                     40 	.area ISEG    (DATA)
                                     41 ;--------------------------------------------------------
                                     42 ; absolute internal ram data
                                     43 ;--------------------------------------------------------
                                     44 	.area IABS    (ABS,DATA)
                                     45 	.area IABS    (ABS,DATA)
                                     46 ;--------------------------------------------------------
                                     47 ; bit data
                                     48 ;--------------------------------------------------------
                                     49 	.area BSEG    (BIT)
      000000                         50 _atoi_neg_1_37:
      000000                         51 	.ds 1
                                     52 ;--------------------------------------------------------
                                     53 ; paged external ram data
                                     54 ;--------------------------------------------------------
                                     55 	.area PSEG    (PAG,XDATA)
      000000                         56 _atoi_ret_1_37:
      000000                         57 	.ds 2
                                     58 ;--------------------------------------------------------
                                     59 ; external ram data
                                     60 ;--------------------------------------------------------
                                     61 	.area XSEG    (XDATA)
                                     62 ;--------------------------------------------------------
                                     63 ; absolute external ram data
                                     64 ;--------------------------------------------------------
                                     65 	.area XABS    (ABS,XDATA)
                                     66 ;--------------------------------------------------------
                                     67 ; external initialized ram data
                                     68 ;--------------------------------------------------------
                                     69 	.area XISEG   (XDATA)
                                     70 	.area HOME    (CODE)
                                     71 	.area GSINIT0 (CODE)
                                     72 	.area GSINIT1 (CODE)
                                     73 	.area GSINIT2 (CODE)
                                     74 	.area GSINIT3 (CODE)
                                     75 	.area GSINIT4 (CODE)
                                     76 	.area GSINIT5 (CODE)
                                     77 	.area GSINIT  (CODE)
                                     78 	.area GSFINAL (CODE)
                                     79 	.area CSEG    (CODE)
                                     80 ;--------------------------------------------------------
                                     81 ; global & static initialisations
                                     82 ;--------------------------------------------------------
                                     83 	.area HOME    (CODE)
                                     84 	.area GSINIT  (CODE)
                                     85 	.area GSFINAL (CODE)
                                     86 	.area GSINIT  (CODE)
                                     87 ;--------------------------------------------------------
                                     88 ; Home
                                     89 ;--------------------------------------------------------
                                     90 	.area HOME    (CODE)
                                     91 	.area HOME    (CODE)
                                     92 ;--------------------------------------------------------
                                     93 ; code
                                     94 ;--------------------------------------------------------
                                     95 	.area CSEG    (CODE)
                                     96 ;------------------------------------------------------------
                                     97 ;Allocation info for local variables in function 'atoi'
                                     98 ;------------------------------------------------------------
                                     99 ;sloc0                     Allocated with name '_atoi_sloc0_1_0'
                                    100 ;------------------------------------------------------------
                                    101 ;	atoi.c:34: int atoi(const char *nptr)
                                    102 ;	-----------------------------------------
                                    103 ;	 function atoi
                                    104 ;	-----------------------------------------
      000000                        105 _atoi:
                           000007   106 	ar7 = 0x07
                           000006   107 	ar6 = 0x06
                           000005   108 	ar5 = 0x05
                           000004   109 	ar4 = 0x04
                           000003   110 	ar3 = 0x03
                           000002   111 	ar2 = 0x02
                           000001   112 	ar1 = 0x01
                           000000   113 	ar0 = 0x00
      000000 AD 82            [24]  114 	mov	r5,dpl
      000002 AC 83            [24]  115 	mov	r4,dph
      000004 AB F0            [24]  116 	mov	r3,b
                                    117 ;	atoi.c:36: int ret = 0;
      000006 78r00            [12]  118 	mov	r0,#_atoi_ret_1_37
      000008 E4               [12]  119 	clr	a
      000009 F2               [24]  120 	movx	@r0,a
      00000A 08               [12]  121 	inc	r0
      00000B F2               [24]  122 	movx	@r0,a
                                    123 ;	atoi.c:39: while (isblank (*nptr))
      00000C 8D 02            [24]  124 	mov	ar2,r5
      00000E 8C 06            [24]  125 	mov	ar6,r4
      000010 8B 07            [24]  126 	mov	ar7,r3
      000012                        127 00101$:
      000012 8A 82            [24]  128 	mov	dpl,r2
      000014 8E 83            [24]  129 	mov	dph,r6
      000016 8F F0            [24]  130 	mov	b,r7
      000018 12r00r00         [24]  131 	lcall	__gptrget
      00001B FD               [12]  132 	mov	r5,a
      00001C 33               [12]  133 	rlc	a
      00001D 95 E0            [12]  134 	subb	a,acc
      00001F FC               [12]  135 	mov	r4,a
                                    136 ;	../../device/include/ctype.h:53: return ((unsigned char)c == ' ' || (unsigned char)c == '\t');
      000020 BD 20 02         [24]  137 	cjne	r5,#0x20,00147$
      000023 80 03            [24]  138 	sjmp	00115$
      000025                        139 00147$:
      000025 BD 09 07         [24]  140 	cjne	r5,#0x09,00131$
      000028                        141 00115$:
                                    142 ;	atoi.c:40: nptr++;
      000028 0A               [12]  143 	inc	r2
      000029 BA 00 E6         [24]  144 	cjne	r2,#0x00,00101$
      00002C 0E               [12]  145 	inc	r6
      00002D 80 E3            [24]  146 	sjmp	00101$
      00002F                        147 00131$:
      00002F 8A 05            [24]  148 	mov	ar5,r2
      000031 8E 04            [24]  149 	mov	ar4,r6
      000033 8F 03            [24]  150 	mov	ar3,r7
                                    151 ;	atoi.c:42: neg = (*nptr == '-');
      000035 8A 82            [24]  152 	mov	dpl,r2
      000037 8E 83            [24]  153 	mov	dph,r6
      000039 8F F0            [24]  154 	mov	b,r7
      00003B 12r00r00         [24]  155 	lcall	__gptrget
      00003E FF               [12]  156 	mov	r7,a
      00003F BF 2D 03         [24]  157 	cjne	r7,#0x2D,00151$
      000042 D3               [12]  158 	setb	c
      000043 80 01            [24]  159 	sjmp	00152$
      000045                        160 00151$:
      000045 C3               [12]  161 	clr	c
      000046                        162 00152$:
      000046 92*00            [24]  163 	mov	_atoi_neg_1_37,c
                                    164 ;	atoi.c:44: if (*nptr == '-' || *nptr == '+')
      000048 BF 2D 02         [24]  165 	cjne	r7,#0x2D,00153$
      00004B 80 03            [24]  166 	sjmp	00104$
      00004D                        167 00153$:
      00004D BF 2B 05         [24]  168 	cjne	r7,#0x2B,00129$
      000050                        169 00104$:
                                    170 ;	atoi.c:45: nptr++;
      000050 0D               [12]  171 	inc	r5
      000051 BD 00 01         [24]  172 	cjne	r5,#0x00,00156$
      000054 0C               [12]  173 	inc	r4
      000055                        174 00156$:
                                    175 ;	atoi.c:47: while (isdigit (*nptr))
      000055                        176 00129$:
      000055 8C 06            [24]  177 	mov	ar6,r4
      000057 8B 07            [24]  178 	mov	ar7,r3
      000059                        179 00107$:
      000059 8D 82            [24]  180 	mov	dpl,r5
      00005B 8E 83            [24]  181 	mov	dph,r6
      00005D 8F F0            [24]  182 	mov	b,r7
      00005F 12r00r00         [24]  183 	lcall	__gptrget
      000062 FA               [12]  184 	mov	r2,a
      000063 33               [12]  185 	rlc	a
      000064 95 E0            [12]  186 	subb	a,acc
      000066 FC               [12]  187 	mov	r4,a
                                    188 ;	../../device/include/ctype.h:62: return ((unsigned char)c >= '0' && (unsigned char)c <= '9');
      000067 BA 30 00         [24]  189 	cjne	r2,#0x30,00157$
      00006A                        190 00157$:
      00006A 40 50            [24]  191 	jc	00109$
      00006C EA               [12]  192 	mov	a,r2
      00006D 24 C6            [12]  193 	add	a,#0xff - 0x39
      00006F 40 4B            [24]  194 	jc	00109$
                                    195 ;	atoi.c:48: ret = ret * 10 + (*(nptr++) - '0');
      000071 78r00            [12]  196 	mov	r0,#_atoi_ret_1_37
      000073 79r00            [12]  197 	mov	r1,#__mulint_PARM_2
      000075 E2               [24]  198 	movx	a,@r0
      000076 F3               [24]  199 	movx	@r1,a
      000077 08               [12]  200 	inc	r0
      000078 E2               [24]  201 	movx	a,@r0
      000079 09               [12]  202 	inc	r1
      00007A F3               [24]  203 	movx	@r1,a
      00007B 90 00 0A         [24]  204 	mov	dptr,#0x000A
      00007E C0 07            [24]  205 	push	ar7
      000080 C0 06            [24]  206 	push	ar6
      000082 C0 05            [24]  207 	push	ar5
      000084 12r00r00         [24]  208 	lcall	__mulint
      000087 85 82*00         [24]  209 	mov	_atoi_sloc0_1_0,dpl
      00008A 85 83*01         [24]  210 	mov	(_atoi_sloc0_1_0 + 1),dph
      00008D D0 05            [24]  211 	pop	ar5
      00008F D0 06            [24]  212 	pop	ar6
      000091 D0 07            [24]  213 	pop	ar7
      000093 8D 82            [24]  214 	mov	dpl,r5
      000095 8E 83            [24]  215 	mov	dph,r6
      000097 8F F0            [24]  216 	mov	b,r7
      000099 12r00r00         [24]  217 	lcall	__gptrget
      00009C FA               [12]  218 	mov	r2,a
      00009D A3               [24]  219 	inc	dptr
      00009E AD 82            [24]  220 	mov	r5,dpl
      0000A0 AE 83            [24]  221 	mov	r6,dph
      0000A2 EA               [12]  222 	mov	a,r2
      0000A3 33               [12]  223 	rlc	a
      0000A4 95 E0            [12]  224 	subb	a,acc
      0000A6 FC               [12]  225 	mov	r4,a
      0000A7 EA               [12]  226 	mov	a,r2
      0000A8 24 D0            [12]  227 	add	a,#0xD0
      0000AA FA               [12]  228 	mov	r2,a
      0000AB EC               [12]  229 	mov	a,r4
      0000AC 34 FF            [12]  230 	addc	a,#0xFF
      0000AE FC               [12]  231 	mov	r4,a
      0000AF 78r00            [12]  232 	mov	r0,#_atoi_ret_1_37
      0000B1 EA               [12]  233 	mov	a,r2
      0000B2 25*00            [12]  234 	add	a,_atoi_sloc0_1_0
      0000B4 F2               [24]  235 	movx	@r0,a
      0000B5 EC               [12]  236 	mov	a,r4
      0000B6 35*01            [12]  237 	addc	a,(_atoi_sloc0_1_0 + 1)
      0000B8 08               [12]  238 	inc	r0
      0000B9 F2               [24]  239 	movx	@r0,a
      0000BA 80 9D            [24]  240 	sjmp	00107$
      0000BC                        241 00109$:
                                    242 ;	atoi.c:50: return (neg ? -ret : ret); // Since -INT_MIN is INT_MIN in sdcc, the result value always turns out ok.
      0000BC 30*00 10         [24]  243 	jnb	_atoi_neg_1_37,00120$
      0000BF 78r00            [12]  244 	mov	r0,#_atoi_ret_1_37
      0000C1 E2               [24]  245 	movx	a,@r0
      0000C2 D3               [12]  246 	setb	c
      0000C3 F4               [12]  247 	cpl	a
      0000C4 34 00            [12]  248 	addc	a,#0x00
      0000C6 FE               [12]  249 	mov	r6,a
      0000C7 08               [12]  250 	inc	r0
      0000C8 E2               [24]  251 	movx	a,@r0
      0000C9 F4               [12]  252 	cpl	a
      0000CA 34 00            [12]  253 	addc	a,#0x00
      0000CC FF               [12]  254 	mov	r7,a
      0000CD 80 07            [24]  255 	sjmp	00121$
      0000CF                        256 00120$:
      0000CF 78r00            [12]  257 	mov	r0,#_atoi_ret_1_37
      0000D1 E2               [24]  258 	movx	a,@r0
      0000D2 FE               [12]  259 	mov	r6,a
      0000D3 08               [12]  260 	inc	r0
      0000D4 E2               [24]  261 	movx	a,@r0
      0000D5 FF               [12]  262 	mov	r7,a
      0000D6                        263 00121$:
      0000D6 8E 82            [24]  264 	mov	dpl,r6
      0000D8 8F 83            [24]  265 	mov	dph,r7
      0000DA 22               [24]  266 	ret
                                    267 	.area CSEG    (CODE)
                                    268 	.area CONST   (CODE)
                                    269 	.area XINIT   (CODE)
                                    270 	.area CABS    (ABS,CODE)
