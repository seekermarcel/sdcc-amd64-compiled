                                      1 ;--------------------------------------------------------
                                      2 ; File Created by SDCC : free open source ANSI-C Compiler
                                      3 ; Version 3.5.0 #9253 (Apr  4 2022) (Linux)
                                      4 ; This file was generated Mon Apr  4 14:10:30 2022
                                      5 ;--------------------------------------------------------
                                      6 	.module _strspn
                                      7 	.optsdcc -mds400 --model-flat24
                                      8 	
                                      9 ;--------------------------------------------------------
                                     10 ; CPU specific extensions
                                     11 ;--------------------------------------------------------
                                     12 	.DS80C390
                                     13 	.amode	2	; 24 bit flat addressing
                           000082    14 dpl	=	0x82
                           000083    15 dph	=	0x83
                           000084    16 dpl1	=	0x84
                           000085    17 dph1	=	0x85
                           000086    18 dps	=	0x86
                           000093    19 dpx	=	0x93
                           000095    20 dpx1	=	0x95
                           00009B    21 esp	=	0x9B
                           00009C    22 ap	=	0x9C
                           00009C    23 acc1	=	0x9C
                           0000D1    24 mcnt0	=	0xD1
                           0000D2    25 mcnt1	=	0xD2
                           0000D3    26 ma	=	0xD3
                           0000D4    27 mb	=	0xD4
                           0000D5    28 mc	=	0xD5
                           00009D    29 acon	=	0x9D
                           0000D1    30 F1	=	0xD1	; user flag
                                     31 ;--------------------------------------------------------
                                     32 ; Public variables in this module
                                     33 ;--------------------------------------------------------
                                     34 	.globl _strchr
                                     35 	.globl _strspn_PARM_2
                                     36 	.globl _strspn
                                     37 ;--------------------------------------------------------
                                     38 ; special function registers
                                     39 ;--------------------------------------------------------
                                     40 ;--------------------------------------------------------
                                     41 ; special function bits
                                     42 ;--------------------------------------------------------
                                     43 ;--------------------------------------------------------
                                     44 ; overlayable register banks
                                     45 ;--------------------------------------------------------
                                     46 	.area REG_BANK_0	(REL,OVR,DATA)
      000000                         47 	.ds 8
                                     48 	.area REG_BANK_3	(REL,OVR,DATA)
      000000                         49 	.ds 8
                                     50 ;--------------------------------------------------------
                                     51 ; internal ram data
                                     52 ;--------------------------------------------------------
                                     53 	.area DSEG    (DATA)
                                     54 ;--------------------------------------------------------
                                     55 ; overlayable items in internal ram 
                                     56 ;--------------------------------------------------------
                                     57 ;--------------------------------------------------------
                                     58 ; indirectly addressable internal ram data
                                     59 ;--------------------------------------------------------
                                     60 	.area ISEG    (DATA)
                                     61 ;--------------------------------------------------------
                                     62 ; absolute internal ram data
                                     63 ;--------------------------------------------------------
                                     64 	.area IABS    (ABS,DATA)
                                     65 	.area IABS    (ABS,DATA)
                                     66 ;--------------------------------------------------------
                                     67 ; bit data
                                     68 ;--------------------------------------------------------
                                     69 	.area BSEG    (BIT)
                                     70 ;--------------------------------------------------------
                                     71 ; paged external ram data
                                     72 ;--------------------------------------------------------
                                     73 	.area PSEG    (PAG,XDATA)
                                     74 ;--------------------------------------------------------
                                     75 ; external ram data
                                     76 ;--------------------------------------------------------
                                     77 	.area XSEG    (XDATA)
      000000                         78 _strspn_PARM_2:
      000000                         79 	.ds 4
                                     80 ;--------------------------------------------------------
                                     81 ; absolute external ram data
                                     82 ;--------------------------------------------------------
                                     83 	.area XABS    (ABS,XDATA)
                                     84 ;--------------------------------------------------------
                                     85 ; external initialized ram data
                                     86 ;--------------------------------------------------------
                                     87 	.area XISEG   (XDATA)
                                     88 ;--------------------------------------------------------
                                     89 ; global & static initialisations
                                     90 ;--------------------------------------------------------
                                     91 	.area HOME    (CODE)
                                     92 	.area GSINIT  (CODE)
                                     93 	.area GSFINAL (CODE)
                                     94 	.area GSINIT  (CODE)
                                     95 ;--------------------------------------------------------
                                     96 ; Home
                                     97 ;--------------------------------------------------------
                                     98 	.area HOME    (CODE)
                                     99 	.area HOME    (CODE)
                                    100 ;--------------------------------------------------------
                                    101 ; code
                                    102 ;--------------------------------------------------------
                                    103 	.area CSEG    (CODE)
                                    104 ;------------------------------------------------------------
                                    105 ;Allocation info for local variables in function 'strspn'
                                    106 ;------------------------------------------------------------
                                    107 ;count                     Allocated to registers r6 r7 
                                    108 ;ch                        Allocated to registers r1 
                                    109 ;control                   Allocated with name '_strspn_PARM_2'
                                    110 ;string                    Allocated to registers 
                                    111 ;------------------------------------------------------------
                                    112 ;	_strspn.c:31: size_t strspn ( const char * string, const char * control )
                                    113 ;	-----------------------------------------
                                    114 ;	 function strspn
                                    115 ;	-----------------------------------------
      000000                        116 _strspn:
                           000002   117 	ar2 = 0x02
                           000003   118 	ar3 = 0x03
                           000004   119 	ar4 = 0x04
                           000005   120 	ar5 = 0x05
                           000006   121 	ar6 = 0x06
                           000007   122 	ar7 = 0x07
                           000000   123 	ar0 = 0x00
                           000001   124 	ar1 = 0x01
      000000 AA 82            [ 8]  125 	mov	r2,dpl
      000002 AB 83            [ 8]  126 	mov	r3,dph
      000004 AC 93            [ 8]  127 	mov	r4,dpx
      000006 AD F0            [ 8]  128 	mov	r5,b
                                    129 ;	_strspn.c:36: while (ch = *string) {
                                    130 ;	genAssign: resultIsFar = FALSE
      000008 7E 00            [ 8]  131 	mov	r6,#0x00
      00000A 7F 00            [ 8]  132 	mov	r7,#0x00
      00000C                        133 00104$:
      00000C 8A 82            [ 8]  134 	mov	dpl,r2
      00000E 8B 83            [ 8]  135 	mov	dph,r3
      000010 8C 93            [ 8]  136 	mov	dpx,r4
      000012 8D F0            [ 8]  137 	mov	b,r5
      000014 12s00r00r00      [16]  138 	lcall	__gptrget
                                    139 ;	genAssign: resultIsFar = FALSE
      000018 F8               [ 4]  140 	mov  r0,a
      000019 88 01            [ 8]  141 	mov  ar1,r0 
      00001B 60 58            [12]  142 	jz  00106$
      00001D                        143 00119$:
                                    144 ;	_strspn.c:37: if ( strchr(control,ch) )
      00001D 90s00r00r00      [12]  145 	mov	dptr,#_strchr_PARM_2
      000021 E9               [ 4]  146 	mov	a,r1
      000022 F0               [ 8]  147 	movx	@dptr,a
      000023 E9               [ 4]  148 	mov	a,r1
      000024 33               [ 4]  149 	rlc	a
      000025 95 E0            [ 8]  150 	subb	a,acc
      000027 A3               [12]  151 	inc	dptr
      000028 F0               [ 8]  152 	movx	@dptr,a
      000029 C0 02            [ 8]  153 	push	ar2
      00002B C0 03            [ 8]  154 	push	ar3
      00002D C0 04            [ 8]  155 	push	ar4
      00002F C0 05            [ 8]  156 	push	ar5
      000031 C0 06            [ 8]  157 	push	ar6
      000033 C0 07            [ 8]  158 	push	ar7
      000035 05 86            [ 8]  159 	inc	dps
      000037 90s00r00r00      [12]  160 	mov	dptr,#_strspn_PARM_2
      00003B E0               [ 8]  161 	movx	a,@dptr
      00003C F5 82            [ 8]  162 	mov	dpl,a
      00003E A3               [12]  163 	inc	dptr
      00003F E0               [ 8]  164 	movx	a,@dptr
      000040 F5 83            [ 8]  165 	mov	dph,a
      000042 A3               [12]  166 	inc	dptr
      000043 E0               [ 8]  167 	movx	a,@dptr
      000044 F5 93            [ 8]  168 	mov	dpx,a
      000046 A3               [12]  169 	inc	dptr
      000047 E0               [ 8]  170 	movx	a,@dptr
      000048 F5 F0            [ 8]  171 	mov	b,a
      00004A 75 86 00         [12]  172 	mov	dps,#0
      00004D 12s00r00r00      [16]  173 	lcall	_strchr
      000051 D0 07            [ 8]  174 	pop	ar7
      000053 D0 06            [ 8]  175 	pop	ar6
      000055 D0 05            [ 8]  176 	pop	ar5
      000057 D0 04            [ 8]  177 	pop	ar4
      000059 D0 03            [ 8]  178 	pop	ar3
      00005B D0 02            [ 8]  179 	pop	ar2
      00005D E5 82            [ 8]  180 	mov	a,dpl
      00005F 45 83            [ 8]  181 	orl	a,dph
      000061 45 93            [ 8]  182 	orl	a,dpx
      000063 60 10            [12]  183 	jz  00106$
      000065                        184 00120$:
                                    185 ;	_strspn.c:38: count++ ;
      000065 0E               [ 4]  186 	inc	r6
      000066 BE 00 01         [16]  187 	cjne	r6,#0x00,00121$
      000069 0F               [ 4]  188 	inc	r7
      00006A                        189 00121$:
                                    190 ;	_strspn.c:41: string++ ;
      00006A 0A               [ 4]  191 	inc	r2
      00006B BA 00 05         [16]  192 	cjne	r2,#0x00,00122$
      00006E 0B               [ 4]  193 	inc	r3
      00006F BB 00 01         [16]  194 	cjne	r3,#0x00,00122$
      000072 0C               [ 4]  195 	inc	r4
      000073                        196 00122$:
      000073 80 97            [12]  197 	sjmp 00104$
      000075                        198 00106$:
                                    199 ;	_strspn.c:44: return count ;
      000075 8E 82            [ 8]  200 	mov	dpl,r6
      000077 8F 83            [ 8]  201 	mov	dph,r7
      000079                        202 00107$:
      000079 22               [16]  203 	ret
                                    204 	.area CSEG    (CODE)
                                    205 	.area CONST   (CODE)
                                    206 	.area XINIT   (CODE)
                                    207 	.area CABS    (ABS,CODE)
