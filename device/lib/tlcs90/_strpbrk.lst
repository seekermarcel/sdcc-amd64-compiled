                              1 ;--------------------------------------------------------
                              2 ; File Created by SDCC : free open source ANSI-C Compiler
                              3 ; Version 3.5.0 #9253 (Apr  4 2022) (Linux)
                              4 ; This file was generated Mon Apr  4 14:16:36 2022
                              5 ;--------------------------------------------------------
                              6 	.module _strpbrk
                              7 	.optsdcc -mtlcs90
                              8 	
                              9 ;--------------------------------------------------------
                             10 ; Public variables in this module
                             11 ;--------------------------------------------------------
                             12 	.globl _strchr
                             13 	.globl _strpbrk
                             14 ;--------------------------------------------------------
                             15 ; ram data
                             16 ;--------------------------------------------------------
                             17 	.area _DATA
                             18 ;--------------------------------------------------------
                             19 ; ram data
                             20 ;--------------------------------------------------------
                             21 	.area _INITIALIZED
                             22 ;--------------------------------------------------------
                             23 ; absolute external ram data
                             24 ;--------------------------------------------------------
                             25 	.area _DABS (ABS)
                             26 ;--------------------------------------------------------
                             27 ; global & static initialisations
                             28 ;--------------------------------------------------------
                             29 	.area _HOME
                             30 	.area _GSINIT
                             31 	.area _GSFINAL
                             32 	.area _GSINIT
                             33 ;--------------------------------------------------------
                             34 ; Home
                             35 ;--------------------------------------------------------
                             36 	.area _HOME
                             37 	.area _HOME
                             38 ;--------------------------------------------------------
                             39 ; code
                             40 ;--------------------------------------------------------
                             41 	.area _CODE
                             42 ;../_strpbrk.c:31: char * strpbrk ( const char * string, const char * control )
                             43 ;	---------------------------------
                             44 ; Function strpbrk
                             45 ; ---------------------------------
   0000                      46 _strpbrk::
   0000 54            [ 4]   47 	push	ix
   0001 3C 00 00      [ 4]   48 	ld	ix,#0
   0004 FE 14         [ 7]   49 	add	ix,sp
   0006 16 FE FF      [ 7]   50 	add	sp, #-2
                             51 ;../_strpbrk.c:33: char *ret = NULL;
   0009 3A 00 00      [13]   52 	ld	hl,#0x0000
   000C E6 52         [ 7]   53 	ex	(sp), hl
                             54 ;../_strpbrk.c:36: while (ch = *control) {
   000E 08            [ 4]   55 	ex	de, hl
   000F F2 08 4A      [10]   56 	ld	hl, 8 (sp)
   0012 08            [ 4]   57 	ex	de, hl
   0013                      58 00105$:
   0013 E1 2E         [10]   59 	ld	a,(de)
                             60 ;../_strpbrk.c:37: char * p = strchr(string, ch);
   0015 2D            [ 4]   61 	ld	l,a
   0016 FE 66         [ 7]   62 	or	a,a
   0018 EBr4Ar00 C6   [ 4]   63 	jp	Z,00107$
   001C A2            [ 4]   64 	rla
   001D FE 63         [ 7]   65 	sbc	a, a
   001F 2C            [ 4]   66 	ld	h,a
   0020 51            [ 4]   67 	push	de
   0021 52            [ 4]   68 	push	hl
   0022 F2 0A 4A      [10]   69 	ld	hl, 10 (sp)
   0025 52            [ 4]   70 	push	hl
   0026 1Cr00r00      [ 4]   71 	call	_strchr
   0029 16 04 00      [ 7]   72 	add	sp, #4
   002C 59            [ 4]   73 	pop	de
                             74 ;../_strpbrk.c:38: if (p != NULL && (ret == NULL || p < ret)) {
   002D 24            [ 4]   75 	ld	a,h
   002E FD 66         [19]   76 	or	a,l
   0030 C6 14         [ 7]   77 	jr	Z,00102$
   0032 F0 FF 2E      [11]   78 	ld	a,-1 (ix)
   0035 F0 FE 66      [11]   79 	or	a,-2 (ix)
   0038 C6 0A         [ 7]   80 	jr	Z,00101$
   003A 25            [ 4]   81 	ld	a,l
   003B F0 FE 62      [11]   82 	sub	a, -2 (ix)
   003E 24            [ 4]   83 	ld	a,h
   003F F0 FF 63      [11]   84 	sbc	a, -1 (ix)
   0042 CF 02         [11]   85 	jr	NC,00102$
   0044                      86 00101$:
                             87 ;../_strpbrk.c:39: ret = p;
   0044 EE 42         [ 7]   88 	ld	0 (sp), hl
   0046                      89 00102$:
                             90 ;../_strpbrk.c:41: control++;
   0046 91            [ 4]   91 	inc	de
   0047 1Ar13r00      [ 7]   92 	jp	00105$
   004A                      93 00107$:
                             94 ;../_strpbrk.c:44: return (ret);
   004A 5A            [ 4]   95 	pop	hl
   004B 52            [ 4]   96 	push	hl
   004C FC 3E         [17]   97 	ld	sp, ix
   004E 5C            [ 4]   98 	pop	ix
   004F 1E            [ 7]   99 	ret
                            100 	.area _CODE
                            101 	.area _INITIALIZER
                            102 	.area _CABS (ABS)
