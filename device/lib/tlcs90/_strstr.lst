                              1 ;--------------------------------------------------------
                              2 ; File Created by SDCC : free open source ANSI-C Compiler
                              3 ; Version 3.5.0 #9253 (Apr  4 2022) (Linux)
                              4 ; This file was generated Mon Apr  4 14:16:36 2022
                              5 ;--------------------------------------------------------
                              6 	.module _strstr
                              7 	.optsdcc -mtlcs90
                              8 	
                              9 ;--------------------------------------------------------
                             10 ; Public variables in this module
                             11 ;--------------------------------------------------------
                             12 	.globl _strstr
                             13 ;--------------------------------------------------------
                             14 ; ram data
                             15 ;--------------------------------------------------------
                             16 	.area _DATA
                             17 ;--------------------------------------------------------
                             18 ; ram data
                             19 ;--------------------------------------------------------
                             20 	.area _INITIALIZED
                             21 ;--------------------------------------------------------
                             22 ; absolute external ram data
                             23 ;--------------------------------------------------------
                             24 	.area _DABS (ABS)
                             25 ;--------------------------------------------------------
                             26 ; global & static initialisations
                             27 ;--------------------------------------------------------
                             28 	.area _HOME
                             29 	.area _GSINIT
                             30 	.area _GSFINAL
                             31 	.area _GSINIT
                             32 ;--------------------------------------------------------
                             33 ; Home
                             34 ;--------------------------------------------------------
                             35 	.area _HOME
                             36 	.area _HOME
                             37 ;--------------------------------------------------------
                             38 ; code
                             39 ;--------------------------------------------------------
                             40 	.area _CODE
                             41 ;../_strstr.c:31: char * strstr ( const char * str1, const char * str2 )
                             42 ;	---------------------------------
                             43 ; Function strstr
                             44 ; ---------------------------------
   0000                      45 _strstr::
   0000 54            [ 4]   46 	push	ix
   0001 3C 00 00      [ 4]   47 	ld	ix,#0
   0004 FE 14         [ 7]   48 	add	ix,sp
   0006 16 F6 FF      [ 7]   49 	add	sp, #-10
                             50 ;../_strstr.c:33: const char * cp = str1;
   0009 F0 04 29      [11]   51 	ld	c,4 (ix)
   000C F0 05 28      [11]   52 	ld	b,5 (ix)
                             53 ;../_strstr.c:37: if ( !*str2 )
   000F F0 06 2E      [11]   54 	ld	a,6 (ix)
   0012 F4 F6 26      [17]   55 	ld	-10 (ix),a
   0015 F0 07 2E      [11]   56 	ld	a,7 (ix)
   0018 F4 F7 26      [17]   57 	ld	-9 (ix),a
   001B 5A            [ 4]   58 	pop	hl
   001C 52            [ 4]   59 	push	hl
   001D E2 2E         [10]   60 	ld	a,(hl)
   001F F4 F8 26      [17]   61 	ld	-8 (ix), a
   0022 FE 66         [ 7]   62 	or	a, a
   0024 CE 07         [ 7]   63 	jr	NZ,00122$
                             64 ;../_strstr.c:38: return str1;
   0026 F9 35         [ 6]   65 	ld	l, c
   0028 F8 34         [11]   66 	ld	h, b
   002A 1ArC2r00      [ 7]   67 	jp	00113$
                             68 ;../_strstr.c:40: while (*cp)
   002D                      69 00122$:
   002D F9 33         [ 6]   70 	ld	e, c
   002F F8 32         [11]   71 	ld	d, b
   0031                      72 00110$:
   0031 E1 2E         [10]   73 	ld	a,(de)
   0033 FE 66         [ 7]   74 	or	a, a
   0035 EBrBFr00 C6   [ 4]   75 	jp	Z,00112$
                             76 ;../_strstr.c:43: s2 = str2;
   0039 F0 F6 2E      [11]   77 	ld	a,-10 (ix)
   003C F4 F9 26      [17]   78 	ld	-7 (ix),a
   003F F0 F7 2E      [11]   79 	ld	a,-9 (ix)
   0042 F4 FA 26      [17]   80 	ld	-6 (ix),a
                             81 ;../_strstr.c:45: while ( *s1 && *s2 && !(*s1-*s2) )
   0045 F4 FB 23      [17]   82 	ld	-5 (ix),e
   0048 F4 FC 22      [17]   83 	ld	-4 (ix),d
   004B                      84 00105$:
   004B F2 05 4A      [10]   85 	ld	hl, 5 (sp)
   004E E2 2E         [10]   86 	ld	a,(hl)
   0050 F4 F8 26      [17]   87 	ld	-8 (ix),a
   0053 F2 03 4A      [10]   88 	ld	hl, 3 (sp)
   0056 E2 2E         [10]   89 	ld	a,(hl)
   0058 F4 FF 26      [17]   90 	ld	-1 (ix),a
   005B F0 F8 2E      [11]   91 	ld	a,-8 (ix)
   005E FE 66         [ 7]   92 	or	a, a
   0060 EBrAAr00 C6   [ 4]   93 	jp	Z,00107$
   0064 F0 FF 2E      [11]   94 	ld	a,-1 (ix)
   0067 FE 66         [ 7]   95 	or	a, a
   0069 EBrAAr00 C6   [ 4]   96 	jp	Z,00107$
   006D F0 F8 2E      [11]   97 	ld	a,-8 (ix)
   0070 F4 FD 26      [17]   98 	ld	-3 (ix),a
   0073 F0 F8 2E      [11]   99 	ld	a,-8 (ix)
   0076 A2            [ 4]  100 	rla
   0077 FE 63         [ 7]  101 	sbc	a, a
   0079 F4 FE 26      [17]  102 	ld	-2 (ix),a
   007C F0 FF 2C      [11]  103 	ld	h,-1 (ix)
   007F F0 FF 2E      [11]  104 	ld	a,-1 (ix)
   0082 A2            [ 4]  105 	rla
   0083 FE 63         [ 7]  106 	sbc	a, a
   0085 2D            [ 4]  107 	ld	l,a
   0086 F0 FD 2E      [11]  108 	ld	a,-3 (ix)
   0089 FC 62         [17]  109 	sub	a, h
   008B 2C            [ 4]  110 	ld	h,a
   008C F0 FE 2E      [11]  111 	ld	a,-2 (ix)
   008F FD 63               112 	sbc	a, l
   0091 FC 66         [17]  113 	or	a,h
   0093 CE 15         [ 7]  114 	jr	NZ,00107$
                            115 ;../_strstr.c:46: s1++, s2++;
   0095 F0 FB 87      [11]  116 	inc	-5 (ix)
   0098 CE 03         [ 7]  117 	jr	NZ,00148$
   009A F0 FC 87      [11]  118 	inc	-4 (ix)
   009D                     119 00148$:
   009D F0 F9 87      [11]  120 	inc	-7 (ix)
   00A0 EBr4Br00 CE   [ 4]  121 	jp	NZ,00105$
   00A4 F0 FA 87      [11]  122 	inc	-6 (ix)
   00A7 1Ar4Br00      [ 7]  123 	jp	00105$
   00AA                     124 00107$:
                            125 ;../_strstr.c:48: if (!*s2)
   00AA F0 FF 2E      [11]  126 	ld	a,-1 (ix)
   00AD FE 66         [ 7]  127 	or	a, a
   00AF CE 06         [ 7]  128 	jr	NZ,00109$
                            129 ;../_strstr.c:49: return( (char*)cp );
   00B1 F9 35         [ 6]  130 	ld	l, c
   00B3 F8 34         [11]  131 	ld	h, b
   00B5 C8 0B         [11]  132 	jr	00113$
   00B7                     133 00109$:
                            134 ;../_strstr.c:51: cp++;
   00B7 91            [ 4]  135 	inc	de
   00B8 FB 31         [ 4]  136 	ld	c, e
   00BA FA 30         [10]  137 	ld	b, d
   00BC 1Ar31r00      [ 7]  138 	jp	00110$
   00BF                     139 00112$:
                            140 ;../_strstr.c:54: return (NULL) ;
   00BF 3A 00 00      [13]  141 	ld	hl,#0x0000
   00C2                     142 00113$:
   00C2 FC 3E         [17]  143 	ld	sp, ix
   00C4 5C            [ 4]  144 	pop	ix
   00C5 1E            [ 7]  145 	ret
                            146 	.area _CODE
                            147 	.area _INITIALIZER
                            148 	.area _CABS (ABS)
