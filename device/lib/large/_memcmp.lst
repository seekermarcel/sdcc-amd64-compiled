                                      1 ;--------------------------------------------------------
                                      2 ; File Created by SDCC : free open source ANSI-C Compiler
                                      3 ; Version 3.5.0 #9253 (Apr  4 2022) (Linux)
                                      4 ; This file was generated Mon Apr  4 14:10:47 2022
                                      5 ;--------------------------------------------------------
                                      6 	.module _memcmp
                                      7 	.optsdcc -mmcs51 --model-large
                                      8 	
                                      9 ;--------------------------------------------------------
                                     10 ; Public variables in this module
                                     11 ;--------------------------------------------------------
                                     12 	.globl _memcmp_PARM_3
                                     13 	.globl _memcmp_PARM_2
                                     14 	.globl _memcmp
                                     15 ;--------------------------------------------------------
                                     16 ; special function registers
                                     17 ;--------------------------------------------------------
                                     18 	.area RSEG    (ABS,DATA)
      000000                         19 	.org 0x0000
                                     20 ;--------------------------------------------------------
                                     21 ; special function bits
                                     22 ;--------------------------------------------------------
                                     23 	.area RSEG    (ABS,DATA)
      000000                         24 	.org 0x0000
                                     25 ;--------------------------------------------------------
                                     26 ; overlayable register banks
                                     27 ;--------------------------------------------------------
                                     28 	.area REG_BANK_0	(REL,OVR,DATA)
      000000                         29 	.ds 8
                                     30 ;--------------------------------------------------------
                                     31 ; internal ram data
                                     32 ;--------------------------------------------------------
                                     33 	.area DSEG    (DATA)
                                     34 ;--------------------------------------------------------
                                     35 ; overlayable items in internal ram 
                                     36 ;--------------------------------------------------------
                                     37 	.area	OSEG    (OVR,DATA)
      000000                         38 _memcmp_sloc0_1_0:
      000000                         39 	.ds 3
                                     40 ;--------------------------------------------------------
                                     41 ; indirectly addressable internal ram data
                                     42 ;--------------------------------------------------------
                                     43 	.area ISEG    (DATA)
                                     44 ;--------------------------------------------------------
                                     45 ; absolute internal ram data
                                     46 ;--------------------------------------------------------
                                     47 	.area IABS    (ABS,DATA)
                                     48 	.area IABS    (ABS,DATA)
                                     49 ;--------------------------------------------------------
                                     50 ; bit data
                                     51 ;--------------------------------------------------------
                                     52 	.area BSEG    (BIT)
                                     53 ;--------------------------------------------------------
                                     54 ; paged external ram data
                                     55 ;--------------------------------------------------------
                                     56 	.area PSEG    (PAG,XDATA)
                                     57 ;--------------------------------------------------------
                                     58 ; external ram data
                                     59 ;--------------------------------------------------------
                                     60 	.area XSEG    (XDATA)
      000000                         61 _memcmp_PARM_2:
      000000                         62 	.ds 3
      000003                         63 _memcmp_PARM_3:
      000003                         64 	.ds 2
      000005                         65 _memcmp_buf1_1_21:
      000005                         66 	.ds 3
                                     67 ;--------------------------------------------------------
                                     68 ; absolute external ram data
                                     69 ;--------------------------------------------------------
                                     70 	.area XABS    (ABS,XDATA)
                                     71 ;--------------------------------------------------------
                                     72 ; external initialized ram data
                                     73 ;--------------------------------------------------------
                                     74 	.area XISEG   (XDATA)
                                     75 	.area HOME    (CODE)
                                     76 	.area GSINIT0 (CODE)
                                     77 	.area GSINIT1 (CODE)
                                     78 	.area GSINIT2 (CODE)
                                     79 	.area GSINIT3 (CODE)
                                     80 	.area GSINIT4 (CODE)
                                     81 	.area GSINIT5 (CODE)
                                     82 	.area GSINIT  (CODE)
                                     83 	.area GSFINAL (CODE)
                                     84 	.area CSEG    (CODE)
                                     85 ;--------------------------------------------------------
                                     86 ; global & static initialisations
                                     87 ;--------------------------------------------------------
                                     88 	.area HOME    (CODE)
                                     89 	.area GSINIT  (CODE)
                                     90 	.area GSFINAL (CODE)
                                     91 	.area GSINIT  (CODE)
                                     92 ;--------------------------------------------------------
                                     93 ; Home
                                     94 ;--------------------------------------------------------
                                     95 	.area HOME    (CODE)
                                     96 	.area HOME    (CODE)
                                     97 ;--------------------------------------------------------
                                     98 ; code
                                     99 ;--------------------------------------------------------
                                    100 	.area CSEG    (CODE)
                                    101 ;------------------------------------------------------------
                                    102 ;Allocation info for local variables in function 'memcmp'
                                    103 ;------------------------------------------------------------
                                    104 ;buf2                      Allocated with name '_memcmp_PARM_2'
                                    105 ;count                     Allocated with name '_memcmp_PARM_3'
                                    106 ;buf1                      Allocated with name '_memcmp_buf1_1_21'
                                    107 ;sloc0                     Allocated with name '_memcmp_sloc0_1_0'
                                    108 ;------------------------------------------------------------
                                    109 ;	_memcmp.c:31: int memcmp (const void * buf1, const void * buf2, size_t count)
                                    110 ;	-----------------------------------------
                                    111 ;	 function memcmp
                                    112 ;	-----------------------------------------
      000000                        113 _memcmp:
                           000007   114 	ar7 = 0x07
                           000006   115 	ar6 = 0x06
                           000005   116 	ar5 = 0x05
                           000004   117 	ar4 = 0x04
                           000003   118 	ar3 = 0x03
                           000002   119 	ar2 = 0x02
                           000001   120 	ar1 = 0x01
                           000000   121 	ar0 = 0x00
      000000 AF F0            [24]  122 	mov	r7,b
      000002 AE 83            [24]  123 	mov	r6,dph
      000004 E5 82            [12]  124 	mov	a,dpl
      000006 90r00r05         [24]  125 	mov	dptr,#_memcmp_buf1_1_21
      000009 F0               [24]  126 	movx	@dptr,a
      00000A EE               [12]  127 	mov	a,r6
      00000B A3               [24]  128 	inc	dptr
      00000C F0               [24]  129 	movx	@dptr,a
      00000D EF               [12]  130 	mov	a,r7
      00000E A3               [24]  131 	inc	dptr
      00000F F0               [24]  132 	movx	@dptr,a
                                    133 ;	_memcmp.c:33: if (!count)
      000010 90r00r03         [24]  134 	mov	dptr,#_memcmp_PARM_3
      000013 E0               [24]  135 	movx	a,@dptr
      000014 FE               [12]  136 	mov	r6,a
      000015 A3               [24]  137 	inc	dptr
      000016 E0               [24]  138 	movx	a,@dptr
      000017 FF               [12]  139 	mov	r7,a
      000018 90r00r03         [24]  140 	mov	dptr,#_memcmp_PARM_3
      00001B E0               [24]  141 	movx	a,@dptr
      00001C F5 F0            [12]  142 	mov	b,a
      00001E A3               [24]  143 	inc	dptr
      00001F E0               [24]  144 	movx	a,@dptr
      000020 45 F0            [12]  145 	orl	a,b
      000022 70 04            [24]  146 	jnz	00112$
                                    147 ;	_memcmp.c:34: return(0);
      000024 90 00 00         [24]  148 	mov	dptr,#0x0000
      000027 22               [24]  149 	ret
                                    150 ;	_memcmp.c:36: while ( --count && *((char *)buf1) == *((char *)buf2) ) {
      000028                        151 00112$:
      000028                        152 00104$:
      000028 1E               [12]  153 	dec	r6
      000029 BE FF 01         [24]  154 	cjne	r6,#0xFF,00123$
      00002C 1F               [12]  155 	dec	r7
      00002D                        156 00123$:
      00002D EE               [12]  157 	mov	a,r6
      00002E 4F               [12]  158 	orl	a,r7
      00002F 60 75            [24]  159 	jz	00106$
      000031 C0 06            [24]  160 	push	ar6
      000033 C0 07            [24]  161 	push	ar7
      000035 90r00r05         [24]  162 	mov	dptr,#_memcmp_buf1_1_21
      000038 E0               [24]  163 	movx	a,@dptr
      000039 FB               [12]  164 	mov	r3,a
      00003A A3               [24]  165 	inc	dptr
      00003B E0               [24]  166 	movx	a,@dptr
      00003C FC               [12]  167 	mov	r4,a
      00003D A3               [24]  168 	inc	dptr
      00003E E0               [24]  169 	movx	a,@dptr
      00003F FD               [12]  170 	mov	r5,a
      000040 8B 00            [24]  171 	mov	ar0,r3
      000042 8C 01            [24]  172 	mov	ar1,r4
      000044 8D 02            [24]  173 	mov	ar2,r5
      000046 88 82            [24]  174 	mov	dpl,r0
      000048 89 83            [24]  175 	mov	dph,r1
      00004A 8A F0            [24]  176 	mov	b,r2
      00004C 12r00r00         [24]  177 	lcall	__gptrget
      00004F F8               [12]  178 	mov	r0,a
      000050 90r00r00         [24]  179 	mov	dptr,#_memcmp_PARM_2
      000053 E0               [24]  180 	movx	a,@dptr
      000054 F5*00            [12]  181 	mov	_memcmp_sloc0_1_0,a
      000056 A3               [24]  182 	inc	dptr
      000057 E0               [24]  183 	movx	a,@dptr
      000058 F5*01            [12]  184 	mov	(_memcmp_sloc0_1_0 + 1),a
      00005A A3               [24]  185 	inc	dptr
      00005B E0               [24]  186 	movx	a,@dptr
      00005C F5*02            [12]  187 	mov	(_memcmp_sloc0_1_0 + 2),a
      00005E A9*00            [24]  188 	mov	r1,_memcmp_sloc0_1_0
      000060 AA*01            [24]  189 	mov	r2,(_memcmp_sloc0_1_0 + 1)
      000062 AF*02            [24]  190 	mov	r7,(_memcmp_sloc0_1_0 + 2)
      000064 89 82            [24]  191 	mov	dpl,r1
      000066 8A 83            [24]  192 	mov	dph,r2
      000068 8F F0            [24]  193 	mov	b,r7
      00006A 12r00r00         [24]  194 	lcall	__gptrget
      00006D F9               [12]  195 	mov	r1,a
      00006E E8               [12]  196 	mov	a,r0
      00006F B5 01 02         [24]  197 	cjne	a,ar1,00125$
      000072 80 06            [24]  198 	sjmp	00126$
      000074                        199 00125$:
      000074 D0 07            [24]  200 	pop	ar7
      000076 D0 06            [24]  201 	pop	ar6
      000078 80 2C            [24]  202 	sjmp	00106$
      00007A                        203 00126$:
      00007A D0 07            [24]  204 	pop	ar7
      00007C D0 06            [24]  205 	pop	ar6
                                    206 ;	_memcmp.c:37: buf1 = (char *)buf1 + 1;
      00007E 0B               [12]  207 	inc	r3
      00007F BB 00 01         [24]  208 	cjne	r3,#0x00,00127$
      000082 0C               [12]  209 	inc	r4
      000083                        210 00127$:
      000083 90r00r05         [24]  211 	mov	dptr,#_memcmp_buf1_1_21
      000086 EB               [12]  212 	mov	a,r3
      000087 F0               [24]  213 	movx	@dptr,a
      000088 EC               [12]  214 	mov	a,r4
      000089 A3               [24]  215 	inc	dptr
      00008A F0               [24]  216 	movx	@dptr,a
      00008B ED               [12]  217 	mov	a,r5
      00008C A3               [24]  218 	inc	dptr
      00008D F0               [24]  219 	movx	@dptr,a
                                    220 ;	_memcmp.c:38: buf2 = (char *)buf2 + 1;
      00008E AB*00            [24]  221 	mov	r3,_memcmp_sloc0_1_0
      000090 AC*01            [24]  222 	mov	r4,(_memcmp_sloc0_1_0 + 1)
      000092 AD*02            [24]  223 	mov	r5,(_memcmp_sloc0_1_0 + 2)
      000094 0B               [12]  224 	inc	r3
      000095 BB 00 01         [24]  225 	cjne	r3,#0x00,00128$
      000098 0C               [12]  226 	inc	r4
      000099                        227 00128$:
      000099 90r00r00         [24]  228 	mov	dptr,#_memcmp_PARM_2
      00009C EB               [12]  229 	mov	a,r3
      00009D F0               [24]  230 	movx	@dptr,a
      00009E EC               [12]  231 	mov	a,r4
      00009F A3               [24]  232 	inc	dptr
      0000A0 F0               [24]  233 	movx	@dptr,a
      0000A1 ED               [12]  234 	mov	a,r5
      0000A2 A3               [24]  235 	inc	dptr
      0000A3 F0               [24]  236 	movx	@dptr,a
      0000A4 80 82            [24]  237 	sjmp	00104$
      0000A6                        238 00106$:
                                    239 ;	_memcmp.c:41: return( *((unsigned char *)buf1) - *((unsigned char *)buf2) );
      0000A6 90r00r05         [24]  240 	mov	dptr,#_memcmp_buf1_1_21
      0000A9 E0               [24]  241 	movx	a,@dptr
      0000AA FD               [12]  242 	mov	r5,a
      0000AB A3               [24]  243 	inc	dptr
      0000AC E0               [24]  244 	movx	a,@dptr
      0000AD FE               [12]  245 	mov	r6,a
      0000AE A3               [24]  246 	inc	dptr
      0000AF E0               [24]  247 	movx	a,@dptr
      0000B0 FF               [12]  248 	mov	r7,a
      0000B1 8D 82            [24]  249 	mov	dpl,r5
      0000B3 8E 83            [24]  250 	mov	dph,r6
      0000B5 8F F0            [24]  251 	mov	b,r7
      0000B7 12r00r00         [24]  252 	lcall	__gptrget
      0000BA FD               [12]  253 	mov	r5,a
      0000BB 7F 00            [12]  254 	mov	r7,#0x00
      0000BD 90r00r00         [24]  255 	mov	dptr,#_memcmp_PARM_2
      0000C0 E0               [24]  256 	movx	a,@dptr
      0000C1 FB               [12]  257 	mov	r3,a
      0000C2 A3               [24]  258 	inc	dptr
      0000C3 E0               [24]  259 	movx	a,@dptr
      0000C4 FC               [12]  260 	mov	r4,a
      0000C5 A3               [24]  261 	inc	dptr
      0000C6 E0               [24]  262 	movx	a,@dptr
      0000C7 FE               [12]  263 	mov	r6,a
      0000C8 8B 82            [24]  264 	mov	dpl,r3
      0000CA 8C 83            [24]  265 	mov	dph,r4
      0000CC 8E F0            [24]  266 	mov	b,r6
      0000CE 12r00r00         [24]  267 	lcall	__gptrget
      0000D1 FB               [12]  268 	mov	r3,a
      0000D2 7E 00            [12]  269 	mov	r6,#0x00
      0000D4 ED               [12]  270 	mov	a,r5
      0000D5 C3               [12]  271 	clr	c
      0000D6 9B               [12]  272 	subb	a,r3
      0000D7 FD               [12]  273 	mov	r5,a
      0000D8 EF               [12]  274 	mov	a,r7
      0000D9 9E               [12]  275 	subb	a,r6
      0000DA 8D 82            [24]  276 	mov	dpl,r5
      0000DC F5 83            [12]  277 	mov	dph,a
      0000DE 22               [24]  278 	ret
                                    279 	.area CSEG    (CODE)
                                    280 	.area CONST   (CODE)
                                    281 	.area XINIT   (CODE)
                                    282 	.area CABS    (ABS,CODE)
