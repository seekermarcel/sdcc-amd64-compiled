                              1 ;--------------------------------------------------------
                              2 ; File Created by SDCC : free open source ANSI-C Compiler
                              3 ; Version 3.5.0 #9253 (Apr  4 2022) (Linux)
                              4 ; This file was generated Mon Apr  4 14:16:19 2022
                              5 ;--------------------------------------------------------
                              6 	.r3k
                              7 	.module _memchr
                              8 	.optsdcc -mr3ka
                              9 	
                             10 ;--------------------------------------------------------
                             11 ; Public variables in this module
                             12 ;--------------------------------------------------------
                             13 	.globl _memchr
                             14 ;--------------------------------------------------------
                             15 ; special function registers
                             16 ;--------------------------------------------------------
                             17 ;--------------------------------------------------------
                             18 ; ram data
                             19 ;--------------------------------------------------------
                             20 	.area _DATA
                             21 ;--------------------------------------------------------
                             22 ; ram data
                             23 ;--------------------------------------------------------
                             24 	.area _INITIALIZED
                             25 ;--------------------------------------------------------
                             26 ; absolute external ram data
                             27 ;--------------------------------------------------------
                             28 	.area _DABS (ABS)
                             29 ;--------------------------------------------------------
                             30 ; global & static initialisations
                             31 ;--------------------------------------------------------
                             32 	.area _HOME
                             33 	.area _GSINIT
                             34 	.area _GSFINAL
                             35 	.area _GSINIT
                             36 ;--------------------------------------------------------
                             37 ; Home
                             38 ;--------------------------------------------------------
                             39 	.area _HOME
                             40 	.area _HOME
                             41 ;--------------------------------------------------------
                             42 ; code
                             43 ;--------------------------------------------------------
                             44 	.area _CODE
                             45 ;../_memchr.c:31: void *memchr(const void *s, int c, size_t n)
                             46 ;	---------------------------------
                             47 ; Function memchr
                             48 ; ---------------------------------
   0000                      49 _memchr::
   0000 DD E5                50 	push	ix
   0002 DD 21 00 00          51 	ld	ix,#0
   0006 DD 39                52 	add	ix,sp
   0008 27 FC                53 	add	sp, #-4
                             54 ;../_memchr.c:33: unsigned char *p = (unsigned char *)s;
   000A EB                   55 	ex	de, hl
   000B C4 08                56 	ld	hl, 8 (sp)
   000D EB                   57 	ex	de, hl
                             58 ;../_memchr.c:34: unsigned char *end = p + n;
   000E C4 0C                59 	ld	hl, 12 (sp)
   0010 19                   60 	add	hl,de
   0011 D4 00                61 	ld	0 (sp), hl
                             62 ;../_memchr.c:38: return(0);
   0013 DD 73 FE             63 	ld	-2 (ix),e
   0016 DD 72 FF             64 	ld	-1 (ix),d
   0019                      65 00105$:
                             66 ;../_memchr.c:35: for(; p != end; p++)
   0019 DD 7E FC             67 	ld	a,-4 (ix)
   001C DD 96 FE             68 	sub	a, -2 (ix)
   001F 20 08                69 	jr	NZ,00121$
   0021 DD 7E FD             70 	ld	a,-3 (ix)
   0024 DD 96 FF             71 	sub	a, -1 (ix)
   0027 28 22                72 	jr	Z,00103$
   0029                      73 00121$:
                             74 ;../_memchr.c:36: if(*p == c)
   0029 C4 02                75 	ld	hl, 2 (sp)
   002B 46                   76 	ld	b,(hl)
   002C 0E 00                77 	ld	c,#0x00
   002E DD 7E 06             78 	ld	a,6 (ix)
   0031 90                   79 	sub	a, b
   0032 20 09                80 	jr	NZ,00106$
   0034 DD 7E 07             81 	ld	a,7 (ix)
   0037 91                   82 	sub	a, c
   0038 20 03                83 	jr	NZ,00106$
                             84 ;../_memchr.c:37: return((void *)p);
   003A EB                   85 	ex	de,hl
   003B 18 11                86 	jr	00107$
   003D                      87 00106$:
                             88 ;../_memchr.c:35: for(; p != end; p++)
   003D DD 34 FE             89 	inc	-2 (ix)
   0040 20 03                90 	jr	NZ,00124$
   0042 DD 34 FF             91 	inc	-1 (ix)
   0045                      92 00124$:
   0045 EB                   93 	ex	de, hl
   0046 C4 02                94 	ld	hl, 2 (sp)
   0048 EB                   95 	ex	de, hl
   0049 18 CE                96 	jr	00105$
   004B                      97 00103$:
                             98 ;../_memchr.c:38: return(0);
   004B 21 00 00             99 	ld	hl,#0x0000
   004E                     100 00107$:
   004E DD F9               101 	ld	sp, ix
   0050 DD E1               102 	pop	ix
   0052 C9                  103 	ret
                            104 	.area _CODE
                            105 	.area _INITIALIZER
                            106 	.area _CABS (ABS)
