                                      1 ;--------------------------------------------------------
                                      2 ; File Created by SDCC : free open source ANSI-C Compiler
                                      3 ; Version 3.5.0 #9253 (Apr  4 2022) (Linux)
                                      4 ; This file was generated Mon Apr  4 14:10:45 2022
                                      5 ;--------------------------------------------------------
                                      6 	.module _atof
                                      7 	.optsdcc -mmcs51 --model-large
                                      8 	
                                      9 ;--------------------------------------------------------
                                     10 ; Public variables in this module
                                     11 ;--------------------------------------------------------
                                     12 	.globl _atoi
                                     13 	.globl _toupper
                                     14 	.globl _isspace
                                     15 	.globl _atof
                                     16 ;--------------------------------------------------------
                                     17 ; special function registers
                                     18 ;--------------------------------------------------------
                                     19 	.area RSEG    (ABS,DATA)
      000000                         20 	.org 0x0000
                                     21 ;--------------------------------------------------------
                                     22 ; special function bits
                                     23 ;--------------------------------------------------------
                                     24 	.area RSEG    (ABS,DATA)
      000000                         25 	.org 0x0000
                                     26 ;--------------------------------------------------------
                                     27 ; overlayable register banks
                                     28 ;--------------------------------------------------------
                                     29 	.area REG_BANK_0	(REL,OVR,DATA)
      000000                         30 	.ds 8
                                     31 ;--------------------------------------------------------
                                     32 ; internal ram data
                                     33 ;--------------------------------------------------------
                                     34 	.area DSEG    (DATA)
      000000                         35 _atof_sloc0_1_0:
      000000                         36 	.ds 4
      000004                         37 _atof_sloc1_1_0:
      000004                         38 	.ds 4
                                     39 ;--------------------------------------------------------
                                     40 ; overlayable items in internal ram 
                                     41 ;--------------------------------------------------------
                                     42 ;--------------------------------------------------------
                                     43 ; indirectly addressable internal ram data
                                     44 ;--------------------------------------------------------
                                     45 	.area ISEG    (DATA)
                                     46 ;--------------------------------------------------------
                                     47 ; absolute internal ram data
                                     48 ;--------------------------------------------------------
                                     49 	.area IABS    (ABS,DATA)
                                     50 	.area IABS    (ABS,DATA)
                                     51 ;--------------------------------------------------------
                                     52 ; bit data
                                     53 ;--------------------------------------------------------
                                     54 	.area BSEG    (BIT)
      000000                         55 _atof_sign_1_37:
      000000                         56 	.ds 1
                                     57 ;--------------------------------------------------------
                                     58 ; paged external ram data
                                     59 ;--------------------------------------------------------
                                     60 	.area PSEG    (PAG,XDATA)
                                     61 ;--------------------------------------------------------
                                     62 ; external ram data
                                     63 ;--------------------------------------------------------
                                     64 	.area XSEG    (XDATA)
      000000                         65 _atof_s_1_36:
      000000                         66 	.ds 3
      000003                         67 _atof_value_1_37:
      000003                         68 	.ds 4
      000007                         69 _atof_fraction_1_37:
      000007                         70 	.ds 4
      00000B                         71 _atof_iexp_1_37:
      00000B                         72 	.ds 1
                                     73 ;--------------------------------------------------------
                                     74 ; absolute external ram data
                                     75 ;--------------------------------------------------------
                                     76 	.area XABS    (ABS,XDATA)
                                     77 ;--------------------------------------------------------
                                     78 ; external initialized ram data
                                     79 ;--------------------------------------------------------
                                     80 	.area XISEG   (XDATA)
                                     81 	.area HOME    (CODE)
                                     82 	.area GSINIT0 (CODE)
                                     83 	.area GSINIT1 (CODE)
                                     84 	.area GSINIT2 (CODE)
                                     85 	.area GSINIT3 (CODE)
                                     86 	.area GSINIT4 (CODE)
                                     87 	.area GSINIT5 (CODE)
                                     88 	.area GSINIT  (CODE)
                                     89 	.area GSFINAL (CODE)
                                     90 	.area CSEG    (CODE)
                                     91 ;--------------------------------------------------------
                                     92 ; global & static initialisations
                                     93 ;--------------------------------------------------------
                                     94 	.area HOME    (CODE)
                                     95 	.area GSINIT  (CODE)
                                     96 	.area GSFINAL (CODE)
                                     97 	.area GSINIT  (CODE)
                                     98 ;--------------------------------------------------------
                                     99 ; Home
                                    100 ;--------------------------------------------------------
                                    101 	.area HOME    (CODE)
                                    102 	.area HOME    (CODE)
                                    103 ;--------------------------------------------------------
                                    104 ; code
                                    105 ;--------------------------------------------------------
                                    106 	.area CSEG    (CODE)
                                    107 ;------------------------------------------------------------
                                    108 ;Allocation info for local variables in function 'atof'
                                    109 ;------------------------------------------------------------
                                    110 ;sloc0                     Allocated with name '_atof_sloc0_1_0'
                                    111 ;sloc1                     Allocated with name '_atof_sloc1_1_0'
                                    112 ;s                         Allocated with name '_atof_s_1_36'
                                    113 ;value                     Allocated with name '_atof_value_1_37'
                                    114 ;fraction                  Allocated with name '_atof_fraction_1_37'
                                    115 ;iexp                      Allocated with name '_atof_iexp_1_37'
                                    116 ;------------------------------------------------------------
                                    117 ;	_atof.c:33: float atof(const char * s)
                                    118 ;	-----------------------------------------
                                    119 ;	 function atof
                                    120 ;	-----------------------------------------
      000000                        121 _atof:
                           000007   122 	ar7 = 0x07
                           000006   123 	ar6 = 0x06
                           000005   124 	ar5 = 0x05
                           000004   125 	ar4 = 0x04
                           000003   126 	ar3 = 0x03
                           000002   127 	ar2 = 0x02
                           000001   128 	ar1 = 0x01
                           000000   129 	ar0 = 0x00
      000000 AF F0            [24]  130 	mov	r7,b
      000002 AE 83            [24]  131 	mov	r6,dph
      000004 E5 82            [12]  132 	mov	a,dpl
      000006 90r00r00         [24]  133 	mov	dptr,#_atof_s_1_36
      000009 F0               [24]  134 	movx	@dptr,a
      00000A EE               [12]  135 	mov	a,r6
      00000B A3               [24]  136 	inc	dptr
      00000C F0               [24]  137 	movx	@dptr,a
      00000D EF               [12]  138 	mov	a,r7
      00000E A3               [24]  139 	inc	dptr
      00000F F0               [24]  140 	movx	@dptr,a
                                    141 ;	_atof.c:40: while (isspace(*s)) s++;
      000010 90r00r00         [24]  142 	mov	dptr,#_atof_s_1_36
      000013 E0               [24]  143 	movx	a,@dptr
      000014 FD               [12]  144 	mov	r5,a
      000015 A3               [24]  145 	inc	dptr
      000016 E0               [24]  146 	movx	a,@dptr
      000017 FE               [12]  147 	mov	r6,a
      000018 A3               [24]  148 	inc	dptr
      000019 E0               [24]  149 	movx	a,@dptr
      00001A FF               [12]  150 	mov	r7,a
      00001B                        151 00101$:
      00001B 8D 82            [24]  152 	mov	dpl,r5
      00001D 8E 83            [24]  153 	mov	dph,r6
      00001F 8F F0            [24]  154 	mov	b,r7
      000021 12r00r00         [24]  155 	lcall	__gptrget
      000024 FC               [12]  156 	mov	r4,a
      000025 33               [12]  157 	rlc	a
      000026 95 E0            [12]  158 	subb	a,acc
      000028 FB               [12]  159 	mov	r3,a
      000029 8C 82            [24]  160 	mov	dpl,r4
      00002B 8B 83            [24]  161 	mov	dph,r3
      00002D C0 07            [24]  162 	push	ar7
      00002F C0 06            [24]  163 	push	ar6
      000031 C0 05            [24]  164 	push	ar5
      000033 12r00r00         [24]  165 	lcall	_isspace
      000036 E5 82            [12]  166 	mov	a,dpl
      000038 85 83 F0         [24]  167 	mov	b,dph
      00003B D0 05            [24]  168 	pop	ar5
      00003D D0 06            [24]  169 	pop	ar6
      00003F D0 07            [24]  170 	pop	ar7
      000041 45 F0            [12]  171 	orl	a,b
      000043 60 12            [24]  172 	jz	00145$
      000045 0D               [12]  173 	inc	r5
      000046 BD 00 01         [24]  174 	cjne	r5,#0x00,00177$
      000049 0E               [12]  175 	inc	r6
      00004A                        176 00177$:
      00004A 90r00r00         [24]  177 	mov	dptr,#_atof_s_1_36
      00004D ED               [12]  178 	mov	a,r5
      00004E F0               [24]  179 	movx	@dptr,a
      00004F EE               [12]  180 	mov	a,r6
      000050 A3               [24]  181 	inc	dptr
      000051 F0               [24]  182 	movx	@dptr,a
      000052 EF               [12]  183 	mov	a,r7
      000053 A3               [24]  184 	inc	dptr
      000054 F0               [24]  185 	movx	@dptr,a
      000055 80 C4            [24]  186 	sjmp	00101$
      000057                        187 00145$:
      000057 90r00r00         [24]  188 	mov	dptr,#_atof_s_1_36
      00005A ED               [12]  189 	mov	a,r5
      00005B F0               [24]  190 	movx	@dptr,a
      00005C EE               [12]  191 	mov	a,r6
      00005D A3               [24]  192 	inc	dptr
      00005E F0               [24]  193 	movx	@dptr,a
      00005F EF               [12]  194 	mov	a,r7
      000060 A3               [24]  195 	inc	dptr
      000061 F0               [24]  196 	movx	@dptr,a
                                    197 ;	_atof.c:43: if (*s == '-')
      000062 8D 82            [24]  198 	mov	dpl,r5
      000064 8E 83            [24]  199 	mov	dph,r6
      000066 8F F0            [24]  200 	mov	b,r7
      000068 12r00r00         [24]  201 	lcall	__gptrget
      00006B FC               [12]  202 	mov	r4,a
      00006C BC 2D 12         [24]  203 	cjne	r4,#0x2D,00107$
                                    204 ;	_atof.c:45: sign=1;
      00006F D2*00            [12]  205 	setb	_atof_sign_1_37
                                    206 ;	_atof.c:46: s++;
      000071 90r00r00         [24]  207 	mov	dptr,#_atof_s_1_36
      000074 74 01            [12]  208 	mov	a,#0x01
      000076 2D               [12]  209 	add	a,r5
      000077 F0               [24]  210 	movx	@dptr,a
      000078 E4               [12]  211 	clr	a
      000079 3E               [12]  212 	addc	a,r6
      00007A A3               [24]  213 	inc	dptr
      00007B F0               [24]  214 	movx	@dptr,a
      00007C EF               [12]  215 	mov	a,r7
      00007D A3               [24]  216 	inc	dptr
      00007E F0               [24]  217 	movx	@dptr,a
      00007F 80 13            [24]  218 	sjmp	00108$
      000081                        219 00107$:
                                    220 ;	_atof.c:50: sign=0;
      000081 C2*00            [12]  221 	clr	_atof_sign_1_37
                                    222 ;	_atof.c:51: if (*s == '+') s++;
      000083 BC 2B 0E         [24]  223 	cjne	r4,#0x2B,00108$
      000086 90r00r00         [24]  224 	mov	dptr,#_atof_s_1_36
      000089 74 01            [12]  225 	mov	a,#0x01
      00008B 2D               [12]  226 	add	a,r5
      00008C F0               [24]  227 	movx	@dptr,a
      00008D E4               [12]  228 	clr	a
      00008E 3E               [12]  229 	addc	a,r6
      00008F A3               [24]  230 	inc	dptr
      000090 F0               [24]  231 	movx	@dptr,a
      000091 EF               [12]  232 	mov	a,r7
      000092 A3               [24]  233 	inc	dptr
      000093 F0               [24]  234 	movx	@dptr,a
      000094                        235 00108$:
                                    236 ;	_atof.c:55: for (value=0.0; isdigit(*s); s++)
      000094 90r00r03         [24]  237 	mov	dptr,#_atof_value_1_37
      000097 E4               [12]  238 	clr	a
      000098 F0               [24]  239 	movx	@dptr,a
      000099 A3               [24]  240 	inc	dptr
      00009A F0               [24]  241 	movx	@dptr,a
      00009B A3               [24]  242 	inc	dptr
      00009C F0               [24]  243 	movx	@dptr,a
      00009D A3               [24]  244 	inc	dptr
      00009E F0               [24]  245 	movx	@dptr,a
      00009F 90r00r00         [24]  246 	mov	dptr,#_atof_s_1_36
      0000A2 E0               [24]  247 	movx	a,@dptr
      0000A3 FD               [12]  248 	mov	r5,a
      0000A4 A3               [24]  249 	inc	dptr
      0000A5 E0               [24]  250 	movx	a,@dptr
      0000A6 FE               [12]  251 	mov	r6,a
      0000A7 A3               [24]  252 	inc	dptr
      0000A8 E0               [24]  253 	movx	a,@dptr
      0000A9 FF               [12]  254 	mov	r7,a
      0000AA                        255 00124$:
      0000AA 8D 82            [24]  256 	mov	dpl,r5
      0000AC 8E 83            [24]  257 	mov	dph,r6
      0000AE 8F F0            [24]  258 	mov	b,r7
      0000B0 12r00r00         [24]  259 	lcall	__gptrget
      0000B3 FC               [12]  260 	mov	r4,a
      0000B4 33               [12]  261 	rlc	a
      0000B5 95 E0            [12]  262 	subb	a,acc
      0000B7 FB               [12]  263 	mov	r3,a
      0000B8 8C 82            [24]  264 	mov	dpl,r4
      0000BA 8B 83            [24]  265 	mov	dph,r3
      0000BC C0 07            [24]  266 	push	ar7
      0000BE C0 06            [24]  267 	push	ar6
      0000C0 C0 05            [24]  268 	push	ar5
      0000C2 12r00r00         [24]  269 	lcall	_isdigit
      0000C5 E5 82            [12]  270 	mov	a,dpl
      0000C7 85 83 F0         [24]  271 	mov	b,dph
      0000CA D0 05            [24]  272 	pop	ar5
      0000CC D0 06            [24]  273 	pop	ar6
      0000CE D0 07            [24]  274 	pop	ar7
      0000D0 45 F0            [12]  275 	orl	a,b
      0000D2 70 03            [24]  276 	jnz	00182$
      0000D4 02r01r86         [24]  277 	ljmp	00146$
      0000D7                        278 00182$:
                                    279 ;	_atof.c:57: value=10.0*value+(*s-'0');
      0000D7 C0 07            [24]  280 	push	ar7
      0000D9 C0 06            [24]  281 	push	ar6
      0000DB C0 05            [24]  282 	push	ar5
      0000DD 90r00r03         [24]  283 	mov	dptr,#_atof_value_1_37
      0000E0 E0               [24]  284 	movx	a,@dptr
      0000E1 C0 E0            [24]  285 	push	acc
      0000E3 A3               [24]  286 	inc	dptr
      0000E4 E0               [24]  287 	movx	a,@dptr
      0000E5 C0 E0            [24]  288 	push	acc
      0000E7 A3               [24]  289 	inc	dptr
      0000E8 E0               [24]  290 	movx	a,@dptr
      0000E9 C0 E0            [24]  291 	push	acc
      0000EB A3               [24]  292 	inc	dptr
      0000EC E0               [24]  293 	movx	a,@dptr
      0000ED C0 E0            [24]  294 	push	acc
      0000EF 90 00 00         [24]  295 	mov	dptr,#0x0000
      0000F2 75 F0 20         [24]  296 	mov	b,#0x20
      0000F5 74 41            [12]  297 	mov	a,#0x41
      0000F7 12r00r00         [24]  298 	lcall	___fsmul
      0000FA 85 82*00         [24]  299 	mov	_atof_sloc0_1_0,dpl
      0000FD 85 83*01         [24]  300 	mov	(_atof_sloc0_1_0 + 1),dph
      000100 85 F0*02         [24]  301 	mov	(_atof_sloc0_1_0 + 2),b
      000103 F5*03            [12]  302 	mov	(_atof_sloc0_1_0 + 3),a
      000105 E5 81            [12]  303 	mov	a,sp
      000107 24 FC            [12]  304 	add	a,#0xfc
      000109 F5 81            [12]  305 	mov	sp,a
      00010B D0 05            [24]  306 	pop	ar5
      00010D D0 06            [24]  307 	pop	ar6
      00010F D0 07            [24]  308 	pop	ar7
      000111 8D 82            [24]  309 	mov	dpl,r5
      000113 8E 83            [24]  310 	mov	dph,r6
      000115 8F F0            [24]  311 	mov	b,r7
      000117 12r00r00         [24]  312 	lcall	__gptrget
      00011A F8               [12]  313 	mov	r0,a
      00011B A3               [24]  314 	inc	dptr
      00011C AD 82            [24]  315 	mov	r5,dpl
      00011E AE 83            [24]  316 	mov	r6,dph
      000120 E8               [12]  317 	mov	a,r0
      000121 33               [12]  318 	rlc	a
      000122 95 E0            [12]  319 	subb	a,acc
      000124 FC               [12]  320 	mov	r4,a
      000125 E8               [12]  321 	mov	a,r0
      000126 24 D0            [12]  322 	add	a,#0xD0
      000128 F8               [12]  323 	mov	r0,a
      000129 EC               [12]  324 	mov	a,r4
      00012A 34 FF            [12]  325 	addc	a,#0xFF
      00012C FC               [12]  326 	mov	r4,a
      00012D 88 82            [24]  327 	mov	dpl,r0
      00012F 8C 83            [24]  328 	mov	dph,r4
      000131 C0 07            [24]  329 	push	ar7
      000133 C0 06            [24]  330 	push	ar6
      000135 C0 05            [24]  331 	push	ar5
      000137 12r00r00         [24]  332 	lcall	___sint2fs
      00013A A9 82            [24]  333 	mov	r1,dpl
      00013C AA 83            [24]  334 	mov	r2,dph
      00013E AB F0            [24]  335 	mov	r3,b
      000140 FC               [12]  336 	mov	r4,a
      000141 C0 01            [24]  337 	push	ar1
      000143 C0 02            [24]  338 	push	ar2
      000145 C0 03            [24]  339 	push	ar3
      000147 C0 04            [24]  340 	push	ar4
      000149 85*00 82         [24]  341 	mov	dpl,_atof_sloc0_1_0
      00014C 85*01 83         [24]  342 	mov	dph,(_atof_sloc0_1_0 + 1)
      00014F 85*02 F0         [24]  343 	mov	b,(_atof_sloc0_1_0 + 2)
      000152 E5*03            [12]  344 	mov	a,(_atof_sloc0_1_0 + 3)
      000154 12r00r00         [24]  345 	lcall	___fsadd
      000157 A9 82            [24]  346 	mov	r1,dpl
      000159 AA 83            [24]  347 	mov	r2,dph
      00015B AB F0            [24]  348 	mov	r3,b
      00015D FC               [12]  349 	mov	r4,a
      00015E E5 81            [12]  350 	mov	a,sp
      000160 24 FC            [12]  351 	add	a,#0xfc
      000162 F5 81            [12]  352 	mov	sp,a
      000164 D0 05            [24]  353 	pop	ar5
      000166 D0 06            [24]  354 	pop	ar6
      000168 D0 07            [24]  355 	pop	ar7
      00016A 90r00r03         [24]  356 	mov	dptr,#_atof_value_1_37
      00016D E9               [12]  357 	mov	a,r1
      00016E F0               [24]  358 	movx	@dptr,a
      00016F EA               [12]  359 	mov	a,r2
      000170 A3               [24]  360 	inc	dptr
      000171 F0               [24]  361 	movx	@dptr,a
      000172 EB               [12]  362 	mov	a,r3
      000173 A3               [24]  363 	inc	dptr
      000174 F0               [24]  364 	movx	@dptr,a
      000175 EC               [12]  365 	mov	a,r4
      000176 A3               [24]  366 	inc	dptr
      000177 F0               [24]  367 	movx	@dptr,a
                                    368 ;	_atof.c:55: for (value=0.0; isdigit(*s); s++)
      000178 90r00r00         [24]  369 	mov	dptr,#_atof_s_1_36
      00017B ED               [12]  370 	mov	a,r5
      00017C F0               [24]  371 	movx	@dptr,a
      00017D EE               [12]  372 	mov	a,r6
      00017E A3               [24]  373 	inc	dptr
      00017F F0               [24]  374 	movx	@dptr,a
      000180 EF               [12]  375 	mov	a,r7
      000181 A3               [24]  376 	inc	dptr
      000182 F0               [24]  377 	movx	@dptr,a
      000183 02r00rAA         [24]  378 	ljmp	00124$
      000186                        379 00146$:
      000186 90r00r00         [24]  380 	mov	dptr,#_atof_s_1_36
      000189 ED               [12]  381 	mov	a,r5
      00018A F0               [24]  382 	movx	@dptr,a
      00018B EE               [12]  383 	mov	a,r6
      00018C A3               [24]  384 	inc	dptr
      00018D F0               [24]  385 	movx	@dptr,a
      00018E EF               [12]  386 	mov	a,r7
      00018F A3               [24]  387 	inc	dptr
      000190 F0               [24]  388 	movx	@dptr,a
                                    389 ;	_atof.c:61: if (*s == '.')
      000191 8D 82            [24]  390 	mov	dpl,r5
      000193 8E 83            [24]  391 	mov	dph,r6
      000195 8F F0            [24]  392 	mov	b,r7
      000197 12r00r00         [24]  393 	lcall	__gptrget
      00019A FC               [12]  394 	mov	r4,a
      00019B BC 2E 02         [24]  395 	cjne	r4,#0x2E,00183$
      00019E 80 03            [24]  396 	sjmp	00184$
      0001A0                        397 00183$:
      0001A0 02r02rE0         [24]  398 	ljmp	00112$
      0001A3                        399 00184$:
                                    400 ;	_atof.c:63: s++;
      0001A3 0D               [12]  401 	inc	r5
      0001A4 BD 00 01         [24]  402 	cjne	r5,#0x00,00185$
      0001A7 0E               [12]  403 	inc	r6
      0001A8                        404 00185$:
      0001A8 90r00r00         [24]  405 	mov	dptr,#_atof_s_1_36
      0001AB ED               [12]  406 	mov	a,r5
      0001AC F0               [24]  407 	movx	@dptr,a
      0001AD EE               [12]  408 	mov	a,r6
      0001AE A3               [24]  409 	inc	dptr
      0001AF F0               [24]  410 	movx	@dptr,a
      0001B0 EF               [12]  411 	mov	a,r7
      0001B1 A3               [24]  412 	inc	dptr
      0001B2 F0               [24]  413 	movx	@dptr,a
                                    414 ;	_atof.c:64: for (fraction=0.1; isdigit(*s); s++)
      0001B3 90r00r07         [24]  415 	mov	dptr,#_atof_fraction_1_37
      0001B6 74 CD            [12]  416 	mov	a,#0xCD
      0001B8 F0               [24]  417 	movx	@dptr,a
      0001B9 14               [12]  418 	dec	a
      0001BA A3               [24]  419 	inc	dptr
      0001BB F0               [24]  420 	movx	@dptr,a
      0001BC A3               [24]  421 	inc	dptr
      0001BD F0               [24]  422 	movx	@dptr,a
      0001BE 74 3D            [12]  423 	mov	a,#0x3D
      0001C0 A3               [24]  424 	inc	dptr
      0001C1 F0               [24]  425 	movx	@dptr,a
      0001C2                        426 00127$:
      0001C2 8D 82            [24]  427 	mov	dpl,r5
      0001C4 8E 83            [24]  428 	mov	dph,r6
      0001C6 8F F0            [24]  429 	mov	b,r7
      0001C8 12r00r00         [24]  430 	lcall	__gptrget
      0001CB FC               [12]  431 	mov	r4,a
      0001CC 33               [12]  432 	rlc	a
      0001CD 95 E0            [12]  433 	subb	a,acc
      0001CF FB               [12]  434 	mov	r3,a
      0001D0 8C 82            [24]  435 	mov	dpl,r4
      0001D2 8B 83            [24]  436 	mov	dph,r3
      0001D4 C0 07            [24]  437 	push	ar7
      0001D6 C0 06            [24]  438 	push	ar6
      0001D8 C0 05            [24]  439 	push	ar5
      0001DA 12r00r00         [24]  440 	lcall	_isdigit
      0001DD E5 82            [12]  441 	mov	a,dpl
      0001DF 85 83 F0         [24]  442 	mov	b,dph
      0001E2 D0 05            [24]  443 	pop	ar5
      0001E4 D0 06            [24]  444 	pop	ar6
      0001E6 D0 07            [24]  445 	pop	ar7
      0001E8 45 F0            [12]  446 	orl	a,b
      0001EA 70 03            [24]  447 	jnz	00186$
      0001EC 02r02rD5         [24]  448 	ljmp	00147$
      0001EF                        449 00186$:
                                    450 ;	_atof.c:66: value+=(*s-'0')*fraction;
      0001EF 8D 82            [24]  451 	mov	dpl,r5
      0001F1 8E 83            [24]  452 	mov	dph,r6
      0001F3 8F F0            [24]  453 	mov	b,r7
      0001F5 12r00r00         [24]  454 	lcall	__gptrget
      0001F8 FC               [12]  455 	mov	r4,a
      0001F9 A3               [24]  456 	inc	dptr
      0001FA AD 82            [24]  457 	mov	r5,dpl
      0001FC AE 83            [24]  458 	mov	r6,dph
      0001FE EC               [12]  459 	mov	a,r4
      0001FF 33               [12]  460 	rlc	a
      000200 95 E0            [12]  461 	subb	a,acc
      000202 FB               [12]  462 	mov	r3,a
      000203 EC               [12]  463 	mov	a,r4
      000204 24 D0            [12]  464 	add	a,#0xD0
      000206 F5*00            [12]  465 	mov	_atof_sloc0_1_0,a
      000208 EB               [12]  466 	mov	a,r3
      000209 34 FF            [12]  467 	addc	a,#0xFF
      00020B F5*01            [12]  468 	mov	(_atof_sloc0_1_0 + 1),a
      00020D 90r00r07         [24]  469 	mov	dptr,#_atof_fraction_1_37
      000210 E0               [24]  470 	movx	a,@dptr
      000211 F5*04            [12]  471 	mov	_atof_sloc1_1_0,a
      000213 A3               [24]  472 	inc	dptr
      000214 E0               [24]  473 	movx	a,@dptr
      000215 F5*05            [12]  474 	mov	(_atof_sloc1_1_0 + 1),a
      000217 A3               [24]  475 	inc	dptr
      000218 E0               [24]  476 	movx	a,@dptr
      000219 F5*06            [12]  477 	mov	(_atof_sloc1_1_0 + 2),a
      00021B A3               [24]  478 	inc	dptr
      00021C E0               [24]  479 	movx	a,@dptr
      00021D F5*07            [12]  480 	mov	(_atof_sloc1_1_0 + 3),a
      00021F 85*00 82         [24]  481 	mov	dpl,_atof_sloc0_1_0
      000222 85*01 83         [24]  482 	mov	dph,(_atof_sloc0_1_0 + 1)
      000225 C0 07            [24]  483 	push	ar7
      000227 C0 06            [24]  484 	push	ar6
      000229 C0 05            [24]  485 	push	ar5
      00022B 12r00r00         [24]  486 	lcall	___sint2fs
      00022E A9 82            [24]  487 	mov	r1,dpl
      000230 AA 83            [24]  488 	mov	r2,dph
      000232 AB F0            [24]  489 	mov	r3,b
      000234 FC               [12]  490 	mov	r4,a
      000235 C0*04            [24]  491 	push	_atof_sloc1_1_0
      000237 C0*05            [24]  492 	push	(_atof_sloc1_1_0 + 1)
      000239 C0*06            [24]  493 	push	(_atof_sloc1_1_0 + 2)
      00023B C0*07            [24]  494 	push	(_atof_sloc1_1_0 + 3)
      00023D 89 82            [24]  495 	mov	dpl,r1
      00023F 8A 83            [24]  496 	mov	dph,r2
      000241 8B F0            [24]  497 	mov	b,r3
      000243 EC               [12]  498 	mov	a,r4
      000244 12r00r00         [24]  499 	lcall	___fsmul
      000247 85 82*00         [24]  500 	mov	_atof_sloc0_1_0,dpl
      00024A 85 83*01         [24]  501 	mov	(_atof_sloc0_1_0 + 1),dph
      00024D 85 F0*02         [24]  502 	mov	(_atof_sloc0_1_0 + 2),b
      000250 F5*03            [12]  503 	mov	(_atof_sloc0_1_0 + 3),a
      000252 E5 81            [12]  504 	mov	a,sp
      000254 24 FC            [12]  505 	add	a,#0xfc
      000256 F5 81            [12]  506 	mov	sp,a
      000258 90r00r03         [24]  507 	mov	dptr,#_atof_value_1_37
      00025B E0               [24]  508 	movx	a,@dptr
      00025C F8               [12]  509 	mov	r0,a
      00025D A3               [24]  510 	inc	dptr
      00025E E0               [24]  511 	movx	a,@dptr
      00025F FA               [12]  512 	mov	r2,a
      000260 A3               [24]  513 	inc	dptr
      000261 E0               [24]  514 	movx	a,@dptr
      000262 FB               [12]  515 	mov	r3,a
      000263 A3               [24]  516 	inc	dptr
      000264 E0               [24]  517 	movx	a,@dptr
      000265 FC               [12]  518 	mov	r4,a
      000266 C0*00            [24]  519 	push	_atof_sloc0_1_0
      000268 C0*01            [24]  520 	push	(_atof_sloc0_1_0 + 1)
      00026A C0*02            [24]  521 	push	(_atof_sloc0_1_0 + 2)
      00026C C0*03            [24]  522 	push	(_atof_sloc0_1_0 + 3)
      00026E 88 82            [24]  523 	mov	dpl,r0
      000270 8A 83            [24]  524 	mov	dph,r2
      000272 8B F0            [24]  525 	mov	b,r3
      000274 EC               [12]  526 	mov	a,r4
      000275 12r00r00         [24]  527 	lcall	___fsadd
      000278 A9 82            [24]  528 	mov	r1,dpl
      00027A AA 83            [24]  529 	mov	r2,dph
      00027C AB F0            [24]  530 	mov	r3,b
      00027E FC               [12]  531 	mov	r4,a
      00027F E5 81            [12]  532 	mov	a,sp
      000281 24 FC            [12]  533 	add	a,#0xfc
      000283 F5 81            [12]  534 	mov	sp,a
      000285 90r00r03         [24]  535 	mov	dptr,#_atof_value_1_37
      000288 E9               [12]  536 	mov	a,r1
      000289 F0               [24]  537 	movx	@dptr,a
      00028A EA               [12]  538 	mov	a,r2
      00028B A3               [24]  539 	inc	dptr
      00028C F0               [24]  540 	movx	@dptr,a
      00028D EB               [12]  541 	mov	a,r3
      00028E A3               [24]  542 	inc	dptr
      00028F F0               [24]  543 	movx	@dptr,a
      000290 EC               [12]  544 	mov	a,r4
      000291 A3               [24]  545 	inc	dptr
      000292 F0               [24]  546 	movx	@dptr,a
                                    547 ;	_atof.c:67: fraction*=0.1;
      000293 C0*04            [24]  548 	push	_atof_sloc1_1_0
      000295 C0*05            [24]  549 	push	(_atof_sloc1_1_0 + 1)
      000297 C0*06            [24]  550 	push	(_atof_sloc1_1_0 + 2)
      000299 C0*07            [24]  551 	push	(_atof_sloc1_1_0 + 3)
      00029B 90 CC CD         [24]  552 	mov	dptr,#0xCCCD
      00029E 75 F0 CC         [24]  553 	mov	b,#0xCC
      0002A1 74 3D            [12]  554 	mov	a,#0x3D
      0002A3 12r00r00         [24]  555 	lcall	___fsmul
      0002A6 A9 82            [24]  556 	mov	r1,dpl
      0002A8 AA 83            [24]  557 	mov	r2,dph
      0002AA AB F0            [24]  558 	mov	r3,b
      0002AC FC               [12]  559 	mov	r4,a
      0002AD E5 81            [12]  560 	mov	a,sp
      0002AF 24 FC            [12]  561 	add	a,#0xfc
      0002B1 F5 81            [12]  562 	mov	sp,a
      0002B3 D0 05            [24]  563 	pop	ar5
      0002B5 D0 06            [24]  564 	pop	ar6
      0002B7 D0 07            [24]  565 	pop	ar7
      0002B9 90r00r07         [24]  566 	mov	dptr,#_atof_fraction_1_37
      0002BC E9               [12]  567 	mov	a,r1
      0002BD F0               [24]  568 	movx	@dptr,a
      0002BE EA               [12]  569 	mov	a,r2
      0002BF A3               [24]  570 	inc	dptr
      0002C0 F0               [24]  571 	movx	@dptr,a
      0002C1 EB               [12]  572 	mov	a,r3
      0002C2 A3               [24]  573 	inc	dptr
      0002C3 F0               [24]  574 	movx	@dptr,a
      0002C4 EC               [12]  575 	mov	a,r4
      0002C5 A3               [24]  576 	inc	dptr
      0002C6 F0               [24]  577 	movx	@dptr,a
                                    578 ;	_atof.c:64: for (fraction=0.1; isdigit(*s); s++)
      0002C7 90r00r00         [24]  579 	mov	dptr,#_atof_s_1_36
      0002CA ED               [12]  580 	mov	a,r5
      0002CB F0               [24]  581 	movx	@dptr,a
      0002CC EE               [12]  582 	mov	a,r6
      0002CD A3               [24]  583 	inc	dptr
      0002CE F0               [24]  584 	movx	@dptr,a
      0002CF EF               [12]  585 	mov	a,r7
      0002D0 A3               [24]  586 	inc	dptr
      0002D1 F0               [24]  587 	movx	@dptr,a
      0002D2 02r01rC2         [24]  588 	ljmp	00127$
      0002D5                        589 00147$:
      0002D5 90r00r00         [24]  590 	mov	dptr,#_atof_s_1_36
      0002D8 ED               [12]  591 	mov	a,r5
      0002D9 F0               [24]  592 	movx	@dptr,a
      0002DA EE               [12]  593 	mov	a,r6
      0002DB A3               [24]  594 	inc	dptr
      0002DC F0               [24]  595 	movx	@dptr,a
      0002DD EF               [12]  596 	mov	a,r7
      0002DE A3               [24]  597 	inc	dptr
      0002DF F0               [24]  598 	movx	@dptr,a
      0002E0                        599 00112$:
                                    600 ;	_atof.c:72: if (toupper(*s)=='E')
      0002E0 90r00r00         [24]  601 	mov	dptr,#_atof_s_1_36
      0002E3 E0               [24]  602 	movx	a,@dptr
      0002E4 FD               [12]  603 	mov	r5,a
      0002E5 A3               [24]  604 	inc	dptr
      0002E6 E0               [24]  605 	movx	a,@dptr
      0002E7 FE               [12]  606 	mov	r6,a
      0002E8 A3               [24]  607 	inc	dptr
      0002E9 E0               [24]  608 	movx	a,@dptr
      0002EA FF               [12]  609 	mov	r7,a
      0002EB 8D 82            [24]  610 	mov	dpl,r5
      0002ED 8E 83            [24]  611 	mov	dph,r6
      0002EF 8F F0            [24]  612 	mov	b,r7
      0002F1 12r00r00         [24]  613 	lcall	__gptrget
      0002F4 FC               [12]  614 	mov	r4,a
      0002F5 33               [12]  615 	rlc	a
      0002F6 95 E0            [12]  616 	subb	a,acc
      0002F8 FB               [12]  617 	mov	r3,a
      0002F9 8C 82            [24]  618 	mov	dpl,r4
      0002FB 8B 83            [24]  619 	mov	dph,r3
      0002FD C0 07            [24]  620 	push	ar7
      0002FF C0 06            [24]  621 	push	ar6
      000301 C0 05            [24]  622 	push	ar5
      000303 12r00r00         [24]  623 	lcall	_toupper
      000306 AB 82            [24]  624 	mov	r3,dpl
      000308 AC 83            [24]  625 	mov	r4,dph
      00030A D0 05            [24]  626 	pop	ar5
      00030C D0 06            [24]  627 	pop	ar6
      00030E D0 07            [24]  628 	pop	ar7
      000310 BB 45 05         [24]  629 	cjne	r3,#0x45,00187$
      000313 BC 00 02         [24]  630 	cjne	r4,#0x00,00187$
      000316 80 03            [24]  631 	sjmp	00188$
      000318                        632 00187$:
      000318 02r03rDD         [24]  633 	ljmp	00120$
      00031B                        634 00188$:
                                    635 ;	_atof.c:74: s++;
      00031B 90r00r00         [24]  636 	mov	dptr,#_atof_s_1_36
      00031E 74 01            [12]  637 	mov	a,#0x01
      000320 2D               [12]  638 	add	a,r5
      000321 F0               [24]  639 	movx	@dptr,a
      000322 E4               [12]  640 	clr	a
      000323 3E               [12]  641 	addc	a,r6
      000324 A3               [24]  642 	inc	dptr
      000325 F0               [24]  643 	movx	@dptr,a
      000326 EF               [12]  644 	mov	a,r7
      000327 A3               [24]  645 	inc	dptr
      000328 F0               [24]  646 	movx	@dptr,a
                                    647 ;	_atof.c:75: iexp=(signed char)atoi(s);
      000329 90r00r00         [24]  648 	mov	dptr,#_atof_s_1_36
      00032C E0               [24]  649 	movx	a,@dptr
      00032D FD               [12]  650 	mov	r5,a
      00032E A3               [24]  651 	inc	dptr
      00032F E0               [24]  652 	movx	a,@dptr
      000330 FE               [12]  653 	mov	r6,a
      000331 A3               [24]  654 	inc	dptr
      000332 E0               [24]  655 	movx	a,@dptr
      000333 FF               [12]  656 	mov	r7,a
      000334 8D 82            [24]  657 	mov	dpl,r5
      000336 8E 83            [24]  658 	mov	dph,r6
      000338 8F F0            [24]  659 	mov	b,r7
      00033A 12r00r00         [24]  660 	lcall	_atoi
      00033D AE 82            [24]  661 	mov	r6,dpl
      00033F AF 83            [24]  662 	mov	r7,dph
      000341 90r00r0B         [24]  663 	mov	dptr,#_atof_iexp_1_37
      000344 EE               [12]  664 	mov	a,r6
      000345 F0               [24]  665 	movx	@dptr,a
                                    666 ;	_atof.c:77: while(iexp!=0)
      000346                        667 00116$:
      000346 90r00r0B         [24]  668 	mov	dptr,#_atof_iexp_1_37
      000349 E0               [24]  669 	movx	a,@dptr
      00034A FF               [12]  670 	mov	r7,a
      00034B 70 03            [24]  671 	jnz	00189$
      00034D 02r03rDD         [24]  672 	ljmp	00120$
      000350                        673 00189$:
                                    674 ;	_atof.c:79: if(iexp<0)
      000350 EF               [12]  675 	mov	a,r7
      000351 30 E7 44         [24]  676 	jnb	acc.7,00114$
                                    677 ;	_atof.c:81: value*=0.1;
      000354 C0 07            [24]  678 	push	ar7
      000356 90r00r03         [24]  679 	mov	dptr,#_atof_value_1_37
      000359 E0               [24]  680 	movx	a,@dptr
      00035A C0 E0            [24]  681 	push	acc
      00035C A3               [24]  682 	inc	dptr
      00035D E0               [24]  683 	movx	a,@dptr
      00035E C0 E0            [24]  684 	push	acc
      000360 A3               [24]  685 	inc	dptr
      000361 E0               [24]  686 	movx	a,@dptr
      000362 C0 E0            [24]  687 	push	acc
      000364 A3               [24]  688 	inc	dptr
      000365 E0               [24]  689 	movx	a,@dptr
      000366 C0 E0            [24]  690 	push	acc
      000368 90 CC CD         [24]  691 	mov	dptr,#0xCCCD
      00036B 75 F0 CC         [24]  692 	mov	b,#0xCC
      00036E 74 3D            [12]  693 	mov	a,#0x3D
      000370 12r00r00         [24]  694 	lcall	___fsmul
      000373 AB 82            [24]  695 	mov	r3,dpl
      000375 AC 83            [24]  696 	mov	r4,dph
      000377 AD F0            [24]  697 	mov	r5,b
      000379 FE               [12]  698 	mov	r6,a
      00037A E5 81            [12]  699 	mov	a,sp
      00037C 24 FC            [12]  700 	add	a,#0xfc
      00037E F5 81            [12]  701 	mov	sp,a
      000380 D0 07            [24]  702 	pop	ar7
      000382 90r00r03         [24]  703 	mov	dptr,#_atof_value_1_37
      000385 EB               [12]  704 	mov	a,r3
      000386 F0               [24]  705 	movx	@dptr,a
      000387 EC               [12]  706 	mov	a,r4
      000388 A3               [24]  707 	inc	dptr
      000389 F0               [24]  708 	movx	@dptr,a
      00038A ED               [12]  709 	mov	a,r5
      00038B A3               [24]  710 	inc	dptr
      00038C F0               [24]  711 	movx	@dptr,a
      00038D EE               [12]  712 	mov	a,r6
      00038E A3               [24]  713 	inc	dptr
      00038F F0               [24]  714 	movx	@dptr,a
                                    715 ;	_atof.c:82: iexp++;
      000390 90r00r0B         [24]  716 	mov	dptr,#_atof_iexp_1_37
      000393 EF               [12]  717 	mov	a,r7
      000394 04               [12]  718 	inc	a
      000395 F0               [24]  719 	movx	@dptr,a
      000396 80 AE            [24]  720 	sjmp	00116$
      000398                        721 00114$:
                                    722 ;	_atof.c:86: value*=10.0;
      000398 C0 07            [24]  723 	push	ar7
      00039A 90r00r03         [24]  724 	mov	dptr,#_atof_value_1_37
      00039D E0               [24]  725 	movx	a,@dptr
      00039E C0 E0            [24]  726 	push	acc
      0003A0 A3               [24]  727 	inc	dptr
      0003A1 E0               [24]  728 	movx	a,@dptr
      0003A2 C0 E0            [24]  729 	push	acc
      0003A4 A3               [24]  730 	inc	dptr
      0003A5 E0               [24]  731 	movx	a,@dptr
      0003A6 C0 E0            [24]  732 	push	acc
      0003A8 A3               [24]  733 	inc	dptr
      0003A9 E0               [24]  734 	movx	a,@dptr
      0003AA C0 E0            [24]  735 	push	acc
      0003AC 90 00 00         [24]  736 	mov	dptr,#0x0000
      0003AF 75 F0 20         [24]  737 	mov	b,#0x20
      0003B2 74 41            [12]  738 	mov	a,#0x41
      0003B4 12r00r00         [24]  739 	lcall	___fsmul
      0003B7 AB 82            [24]  740 	mov	r3,dpl
      0003B9 AC 83            [24]  741 	mov	r4,dph
      0003BB AD F0            [24]  742 	mov	r5,b
      0003BD FE               [12]  743 	mov	r6,a
      0003BE E5 81            [12]  744 	mov	a,sp
      0003C0 24 FC            [12]  745 	add	a,#0xfc
      0003C2 F5 81            [12]  746 	mov	sp,a
      0003C4 D0 07            [24]  747 	pop	ar7
      0003C6 90r00r03         [24]  748 	mov	dptr,#_atof_value_1_37
      0003C9 EB               [12]  749 	mov	a,r3
      0003CA F0               [24]  750 	movx	@dptr,a
      0003CB EC               [12]  751 	mov	a,r4
      0003CC A3               [24]  752 	inc	dptr
      0003CD F0               [24]  753 	movx	@dptr,a
      0003CE ED               [12]  754 	mov	a,r5
      0003CF A3               [24]  755 	inc	dptr
      0003D0 F0               [24]  756 	movx	@dptr,a
      0003D1 EE               [12]  757 	mov	a,r6
      0003D2 A3               [24]  758 	inc	dptr
      0003D3 F0               [24]  759 	movx	@dptr,a
                                    760 ;	_atof.c:87: iexp--;
      0003D4 EF               [12]  761 	mov	a,r7
      0003D5 14               [12]  762 	dec	a
      0003D6 90r00r0B         [24]  763 	mov	dptr,#_atof_iexp_1_37
      0003D9 F0               [24]  764 	movx	@dptr,a
      0003DA 02r03r46         [24]  765 	ljmp	00116$
      0003DD                        766 00120$:
                                    767 ;	_atof.c:93: if(sign) value*=-1.0;
      0003DD 30*00 1E         [24]  768 	jnb	_atof_sign_1_37,00122$
      0003E0 90r00r03         [24]  769 	mov	dptr,#_atof_value_1_37
      0003E3 E0               [24]  770 	movx	a,@dptr
      0003E4 FC               [12]  771 	mov	r4,a
      0003E5 A3               [24]  772 	inc	dptr
      0003E6 E0               [24]  773 	movx	a,@dptr
      0003E7 FD               [12]  774 	mov	r5,a
      0003E8 A3               [24]  775 	inc	dptr
      0003E9 E0               [24]  776 	movx	a,@dptr
      0003EA FE               [12]  777 	mov	r6,a
      0003EB A3               [24]  778 	inc	dptr
      0003EC E0               [24]  779 	movx	a,@dptr
      0003ED FF               [12]  780 	mov	r7,a
      0003EE 90r00r03         [24]  781 	mov	dptr,#_atof_value_1_37
      0003F1 EC               [12]  782 	mov	a,r4
      0003F2 F0               [24]  783 	movx	@dptr,a
      0003F3 ED               [12]  784 	mov	a,r5
      0003F4 A3               [24]  785 	inc	dptr
      0003F5 F0               [24]  786 	movx	@dptr,a
      0003F6 EE               [12]  787 	mov	a,r6
      0003F7 A3               [24]  788 	inc	dptr
      0003F8 F0               [24]  789 	movx	@dptr,a
      0003F9 EF               [12]  790 	mov	a,r7
      0003FA B2 E7            [12]  791 	cpl	acc.7
      0003FC A3               [24]  792 	inc	dptr
      0003FD F0               [24]  793 	movx	@dptr,a
      0003FE                        794 00122$:
                                    795 ;	_atof.c:94: return (value);
      0003FE 90r00r03         [24]  796 	mov	dptr,#_atof_value_1_37
      000401 E0               [24]  797 	movx	a,@dptr
      000402 FC               [12]  798 	mov	r4,a
      000403 A3               [24]  799 	inc	dptr
      000404 E0               [24]  800 	movx	a,@dptr
      000405 FD               [12]  801 	mov	r5,a
      000406 A3               [24]  802 	inc	dptr
      000407 E0               [24]  803 	movx	a,@dptr
      000408 FE               [12]  804 	mov	r6,a
      000409 A3               [24]  805 	inc	dptr
      00040A E0               [24]  806 	movx	a,@dptr
      00040B 8C 82            [24]  807 	mov	dpl,r4
      00040D 8D 83            [24]  808 	mov	dph,r5
      00040F 8E F0            [24]  809 	mov	b,r6
      000411 22               [24]  810 	ret
                                    811 	.area CSEG    (CODE)
                                    812 	.area CONST   (CODE)
                                    813 	.area XINIT   (CODE)
                                    814 	.area CABS    (ABS,CODE)
