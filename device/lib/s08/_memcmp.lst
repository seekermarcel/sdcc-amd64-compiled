                              1 ;--------------------------------------------------------
                              2 ; File Created by SDCC : free open source ANSI-C Compiler
                              3 ; Version 3.5.0 #9253 (Apr  4 2022) (Linux)
                              4 ; This file was generated Mon Apr  4 14:10:37 2022
                              5 ;--------------------------------------------------------
                              6 	.cs08
                              7 	.module _memcmp
                              8 	.optsdcc -ms08
                              9 	
                             10 	.area HOME    (CODE)
                             11 	.area GSINIT0 (CODE)
                             12 	.area GSINIT  (CODE)
                             13 	.area GSFINAL (CODE)
                             14 	.area CSEG    (CODE)
                             15 	.area XINIT   (CODE)
                             16 	.area CONST   (CODE)
                             17 	.area DSEG    (PAG)
                             18 	.area OSEG    (PAG, OVR)
                             19 	.area XSEG
                             20 	.area XISEG
                             21 ;--------------------------------------------------------
                             22 ; Public variables in this module
                             23 ;--------------------------------------------------------
                             24 	.globl _memcmp_PARM_3
                             25 	.globl _memcmp_PARM_2
                             26 	.globl _memcmp
                             27 ;--------------------------------------------------------
                             28 ; ram data
                             29 ;--------------------------------------------------------
                             30 	.area DSEG    (PAG)
                             31 ;--------------------------------------------------------
                             32 ; overlayable items in ram 
                             33 ;--------------------------------------------------------
                             34 	.area	OSEG    (PAG, OVR)
   0000                      35 _memcmp_sloc0_1_0:
   0000                      36 	.ds 2
   0002                      37 _memcmp_sloc1_1_0:
   0002                      38 	.ds 2
   0004                      39 _memcmp_sloc2_1_0:
   0004                      40 	.ds 2
   0006                      41 _memcmp_sloc3_1_0:
   0006                      42 	.ds 1
                             43 ;--------------------------------------------------------
                             44 ; absolute ram data
                             45 ;--------------------------------------------------------
                             46 	.area IABS    (ABS)
                             47 	.area IABS    (ABS)
                             48 ;--------------------------------------------------------
                             49 ; absolute external ram data
                             50 ;--------------------------------------------------------
                             51 	.area XABS    (ABS)
                             52 ;--------------------------------------------------------
                             53 ; external initialized ram data
                             54 ;--------------------------------------------------------
                             55 	.area XISEG
                             56 ;--------------------------------------------------------
                             57 ; extended address mode data
                             58 ;--------------------------------------------------------
                             59 	.area XSEG
   0000                      60 _memcmp_PARM_2:
   0000                      61 	.ds 2
   0002                      62 _memcmp_PARM_3:
   0002                      63 	.ds 2
   0004                      64 _memcmp_buf1_1_21:
   0004                      65 	.ds 2
                             66 ;--------------------------------------------------------
                             67 ; global & static initialisations
                             68 ;--------------------------------------------------------
                             69 	.area HOME    (CODE)
                             70 	.area GSINIT  (CODE)
                             71 	.area GSFINAL (CODE)
                             72 	.area GSINIT  (CODE)
                             73 ;--------------------------------------------------------
                             74 ; Home
                             75 ;--------------------------------------------------------
                             76 	.area HOME    (CODE)
                             77 	.area HOME    (CODE)
                             78 ;--------------------------------------------------------
                             79 ; code
                             80 ;--------------------------------------------------------
                             81 	.area CSEG    (CODE)
                             82 ;------------------------------------------------------------
                             83 ;Allocation info for local variables in function 'memcmp'
                             84 ;------------------------------------------------------------
                             85 ;buf2                      Allocated with name '_memcmp_PARM_2'
                             86 ;count                     Allocated with name '_memcmp_PARM_3'
                             87 ;buf1                      Allocated with name '_memcmp_buf1_1_21'
                             88 ;sloc0                     Allocated with name '_memcmp_sloc0_1_0'
                             89 ;sloc1                     Allocated with name '_memcmp_sloc1_1_0'
                             90 ;sloc2                     Allocated with name '_memcmp_sloc2_1_0'
                             91 ;sloc3                     Allocated with name '_memcmp_sloc3_1_0'
                             92 ;------------------------------------------------------------
                             93 ;../_memcmp.c:31: int memcmp (const void * buf1, const void * buf2, size_t count)
                             94 ;	-----------------------------------------
                             95 ;	 function memcmp
                             96 ;	-----------------------------------------
                             97 ;	Register assignment is optimal.
                             98 ;	Stack space usage: 0 bytes.
   0000                      99 _memcmp:
   0000 C7r00r05      [ 4]  100 	sta	(_memcmp_buf1_1_21 + 1)
   0003 CFr00r04      [ 4]  101 	stx	_memcmp_buf1_1_21
                            102 ;../_memcmp.c:33: if (!count)
   0006 C6r00r02      [ 4]  103 	lda	_memcmp_PARM_3
   0009 CAr00r03      [ 4]  104 	ora	(_memcmp_PARM_3 + 1)
   000C 26 03         [ 3]  105 	bne	00112$
                            106 ;../_memcmp.c:34: return(0);
   000E 4F            [ 1]  107 	clra
   000F 97            [ 1]  108 	tax
   0010 81            [ 6]  109 	rts
                            110 ;../_memcmp.c:36: while ( --count && *((char *)buf1) == *((char *)buf2) ) {
   0011                     111 00112$:
   0011 32r00r02      [ 5]  112 	ldhx	_memcmp_PARM_3
   0014 35*00         [ 4]  113 	sthx	*_memcmp_sloc0_1_0
   0016                     114 00104$:
   0016 55*00         [ 4]  115 	ldhx	*_memcmp_sloc0_1_0
   0018 AF FF         [ 2]  116 	aix	#-1
   001A 35*00         [ 4]  117 	sthx	*_memcmp_sloc0_1_0
   001C B6*01         [ 3]  118 	lda	*(_memcmp_sloc0_1_0 + 1)
   001E BA*00         [ 3]  119 	ora	*_memcmp_sloc0_1_0
   0020 27 30         [ 3]  120 	beq	00106$
   0022 32r00r04      [ 5]  121 	ldhx	_memcmp_buf1_1_21
   0025 35*02         [ 4]  122 	sthx	*_memcmp_sloc1_1_0
   0027 55*02         [ 4]  123 	ldhx	*_memcmp_sloc1_1_0
   0029 F6            [ 3]  124 	lda	,x
   002A 32r00r00      [ 5]  125 	ldhx	_memcmp_PARM_2
   002D 35*04         [ 4]  126 	sthx	*_memcmp_sloc2_1_0
   002F 55*04         [ 4]  127 	ldhx	*_memcmp_sloc2_1_0
   0031 FE            [ 3]  128 	ldx	,x
   0032 BF*06         [ 3]  129 	stx	*_memcmp_sloc3_1_0
   0034 B1*06         [ 3]  130 	cmp	*_memcmp_sloc3_1_0
   0036 26 1A         [ 3]  131 	bne	00106$
                            132 ;../_memcmp.c:37: buf1 = (char *)buf1 + 1;
   0038 55*02         [ 4]  133 	ldhx	*_memcmp_sloc1_1_0
   003A AF 01         [ 2]  134 	aix	#1
   003C CFr00r05      [ 4]  135 	stx	(_memcmp_buf1_1_21 + 1)
   003F 8B            [ 2]  136 	pshh
   0040 86            [ 3]  137 	pula
   0041 C7r00r04      [ 4]  138 	sta	_memcmp_buf1_1_21
                            139 ;../_memcmp.c:38: buf2 = (char *)buf2 + 1;
   0044 55*04         [ 4]  140 	ldhx	*_memcmp_sloc2_1_0
   0046 AF 01         [ 2]  141 	aix	#1
   0048 CFr00r01      [ 4]  142 	stx	(_memcmp_PARM_2 + 1)
   004B 8B            [ 2]  143 	pshh
   004C 86            [ 3]  144 	pula
   004D C7r00r00      [ 4]  145 	sta	_memcmp_PARM_2
   0050 20 C4         [ 3]  146 	bra	00104$
   0052                     147 00106$:
                            148 ;../_memcmp.c:41: return( *((unsigned char *)buf1) - *((unsigned char *)buf2) );
   0052 32r00r04      [ 5]  149 	ldhx	_memcmp_buf1_1_21
   0055 FE            [ 3]  150 	ldx	,x
   0056 BF*05         [ 3]  151 	stx	*(_memcmp_sloc2_1_0 + 1)
   0058 6E 00*04      [ 4]  152 	mov	#0x00,*_memcmp_sloc2_1_0
   005B 32r00r00      [ 5]  153 	ldhx	_memcmp_PARM_2
   005E FE            [ 3]  154 	ldx	,x
   005F BF*03         [ 3]  155 	stx	*(_memcmp_sloc1_1_0 + 1)
   0061 6E 00*02      [ 4]  156 	mov	#0x00,*_memcmp_sloc1_1_0
   0064 B6*05         [ 3]  157 	lda	*(_memcmp_sloc2_1_0 + 1)
   0066 B0*03         [ 3]  158 	sub	*(_memcmp_sloc1_1_0 + 1)
   0068 87            [ 2]  159 	psha
   0069 B6*04         [ 3]  160 	lda	*_memcmp_sloc2_1_0
   006B B2*02         [ 3]  161 	sbc	*_memcmp_sloc1_1_0
   006D 97            [ 1]  162 	tax
   006E 86            [ 3]  163 	pula
   006F 81            [ 6]  164 	rts
                            165 	.area CSEG    (CODE)
                            166 	.area CONST   (CODE)
                            167 	.area XINIT   (CODE)
                            168 	.area CABS    (ABS,CODE)
