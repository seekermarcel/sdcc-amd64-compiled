                              1 ;--------------------------------------------------------
                              2 ; File Created by SDCC : free open source ANSI-C Compiler
                              3 ; Version 3.5.0 #9253 (Apr  4 2022) (Linux)
                              4 ; This file was generated Mon Apr  4 14:15:44 2022
                              5 ;--------------------------------------------------------
                              6 	.hd64
                              7 	.module _strncat
                              8 	.optsdcc -mz180
                              9 	
                             10 ;--------------------------------------------------------
                             11 ; Public variables in this module
                             12 ;--------------------------------------------------------
                             13 	.globl _strncat
                             14 ;--------------------------------------------------------
                             15 ; special function registers
                             16 ;--------------------------------------------------------
                             17 ;--------------------------------------------------------
                             18 ; ram data
                             19 ;--------------------------------------------------------
                             20 	.area _DATA
                             21 ;--------------------------------------------------------
                             22 ; ram data
                             23 ;--------------------------------------------------------
                             24 	.area _INITIALIZED
                             25 ;--------------------------------------------------------
                             26 ; absolute external ram data
                             27 ;--------------------------------------------------------
                             28 	.area _DABS (ABS)
                             29 ;--------------------------------------------------------
                             30 ; global & static initialisations
                             31 ;--------------------------------------------------------
                             32 	.area _HOME
                             33 	.area _GSINIT
                             34 	.area _GSFINAL
                             35 	.area _GSINIT
                             36 ;--------------------------------------------------------
                             37 ; Home
                             38 ;--------------------------------------------------------
                             39 	.area _HOME
                             40 	.area _HOME
                             41 ;--------------------------------------------------------
                             42 ; code
                             43 ;--------------------------------------------------------
                             44 	.area _CODE
                             45 ;../_strncat.c:31: char * strncat ( char * front, const char * back, size_t count )
                             46 ;	---------------------------------
                             47 ; Function strncat
                             48 ; ---------------------------------
   0000                      49 _strncat::
   0000 DD E5         [14]   50 	push	ix
   0002 DD 21 00 00   [12]   51 	ld	ix,#0
   0006 DD 39         [10]   52 	add	ix,sp
   0008 3B            [ 4]   53 	dec	sp
   0009 3B            [ 4]   54 	dec	sp
   000A 3B            [ 4]   55 	dec	sp
   000B 3B            [ 4]   56 	dec	sp
   000C 3B            [ 4]   57 	dec	sp
                             58 ;../_strncat.c:33: char *start = front;
   000D DD 4E 04      [14]   59 	ld	c,4 (ix)
   0010 DD 46 05      [14]   60 	ld	b,5 (ix)
                             61 ;../_strncat.c:35: while (*front++);
   0013 69            [ 4]   62 	ld	l, c
   0014 60            [ 4]   63 	ld	h, b
   0015                      64 00101$:
   0015 7E            [ 6]   65 	ld	a,(hl)
   0016 23            [ 4]   66 	inc	hl
   0017 B7            [ 4]   67 	or	a, a
   0018 20 FB         [ 8]   68 	jr	NZ,00101$
                             69 ;../_strncat.c:37: front--;
   001A 7D            [ 4]   70 	ld	a,l
   001B C6 FF         [ 6]   71 	add	a,#0xFF
   001D DD 77 04      [15]   72 	ld	4 (ix),a
   0020 7C            [ 4]   73 	ld	a,h
   0021 CE FF         [ 6]   74 	adc	a,#0xFF
   0023 DD 77 05      [15]   75 	ld	5 (ix),a
                             76 ;../_strncat.c:39: while (count--)
   0026 DD 5E 06      [14]   77 	ld	e,6 (ix)
   0029 DD 56 07      [14]   78 	ld	d,7 (ix)
   002C DD 7E 04      [14]   79 	ld	a,4 (ix)
   002F DD 77 FD      [15]   80 	ld	-3 (ix),a
   0032 DD 7E 05      [14]   81 	ld	a,5 (ix)
   0035 DD 77 FE      [15]   82 	ld	-2 (ix),a
   0038 DD 7E 08      [14]   83 	ld	a,8 (ix)
   003B DD 77 FB      [15]   84 	ld	-5 (ix),a
   003E DD 7E 09      [14]   85 	ld	a,9 (ix)
   0041 DD 77 FC      [15]   86 	ld	-4 (ix),a
   0044                      87 00106$:
   0044 E1            [ 9]   88 	pop	hl
   0045 E5            [11]   89 	push	hl
   0046 DD 7E FB      [14]   90 	ld	a,-5 (ix)
   0049 C6 FF         [ 6]   91 	add	a,#0xFF
   004B DD 77 FB      [15]   92 	ld	-5 (ix),a
   004E DD 7E FC      [14]   93 	ld	a,-4 (ix)
   0051 CE FF         [ 6]   94 	adc	a,#0xFF
   0053 DD 77 FC      [15]   95 	ld	-4 (ix),a
   0056 7C            [ 4]   96 	ld	a,h
   0057 B5            [ 4]   97 	or	a,l
   0058 28 2D         [ 8]   98 	jr	Z,00108$
                             99 ;../_strncat.c:40: if (!(*front++ = *back++))
   005A 1A            [ 6]  100 	ld	a,(de)
   005B DD 77 FF      [15]  101 	ld	-1 (ix),a
   005E 13            [ 4]  102 	inc	de
   005F DD 6E FD      [14]  103 	ld	l,-3 (ix)
   0062 DD 66 FE      [14]  104 	ld	h,-2 (ix)
   0065 DD 7E FF      [14]  105 	ld	a,-1 (ix)
   0068 77            [ 7]  106 	ld	(hl),a
   0069 DD 34 FD      [18]  107 	inc	-3 (ix)
   006C 20 03         [ 8]  108 	jr	NZ,00132$
   006E DD 34 FE      [18]  109 	inc	-2 (ix)
   0071                     110 00132$:
   0071 DD 7E FD      [14]  111 	ld	a,-3 (ix)
   0074 DD 77 04      [15]  112 	ld	4 (ix),a
   0077 DD 7E FE      [14]  113 	ld	a,-2 (ix)
   007A DD 77 05      [15]  114 	ld	5 (ix),a
   007D DD 7E FF      [14]  115 	ld	a,-1 (ix)
   0080 B7            [ 4]  116 	or	a, a
   0081 20 C1         [ 8]  117 	jr	NZ,00106$
                            118 ;../_strncat.c:41: return(start);
   0083 69            [ 4]  119 	ld	l, c
   0084 60            [ 4]  120 	ld	h, b
   0085 18 0A         [ 8]  121 	jr	00109$
   0087                     122 00108$:
                            123 ;../_strncat.c:43: *front = '\0';
   0087 DD 6E 04      [14]  124 	ld	l,4 (ix)
   008A DD 66 05      [14]  125 	ld	h,5 (ix)
   008D 36 00         [ 9]  126 	ld	(hl),#0x00
                            127 ;../_strncat.c:44: return(start);
   008F 69            [ 4]  128 	ld	l, c
   0090 60            [ 4]  129 	ld	h, b
   0091                     130 00109$:
   0091 DD F9         [ 7]  131 	ld	sp, ix
   0093 DD E1         [12]  132 	pop	ix
   0095 C9            [ 9]  133 	ret
                            134 	.area _CODE
                            135 	.area _INITIALIZER
                            136 	.area _CABS (ABS)
