                              1 ;--------------------------------------------------------
                              2 ; File Created by SDCC : free open source ANSI-C Compiler
                              3 ; Version 3.5.0 #9253 (Apr  4 2022) (Linux)
                              4 ; This file was generated Mon Apr  4 14:10:33 2022
                              5 ;--------------------------------------------------------
                              6 	.module _strncpy
                              7 	.optsdcc -mhc08
                              8 	
                              9 	.area HOME    (CODE)
                             10 	.area GSINIT0 (CODE)
                             11 	.area GSINIT  (CODE)
                             12 	.area GSFINAL (CODE)
                             13 	.area CSEG    (CODE)
                             14 	.area XINIT   (CODE)
                             15 	.area CONST   (CODE)
                             16 	.area DSEG    (PAG)
                             17 	.area OSEG    (PAG, OVR)
                             18 	.area XSEG
                             19 	.area XISEG
                             20 ;--------------------------------------------------------
                             21 ; Public variables in this module
                             22 ;--------------------------------------------------------
                             23 	.globl _strncpy_PARM_3
                             24 	.globl _strncpy_PARM_2
                             25 	.globl _strncpy
                             26 ;--------------------------------------------------------
                             27 ; ram data
                             28 ;--------------------------------------------------------
                             29 	.area DSEG    (PAG)
                             30 ;--------------------------------------------------------
                             31 ; overlayable items in ram 
                             32 ;--------------------------------------------------------
                             33 	.area	OSEG    (PAG, OVR)
   0000                      34 _strncpy_sloc0_1_0:
   0000                      35 	.ds 2
   0002                      36 _strncpy_sloc1_1_0:
   0002                      37 	.ds 2
                             38 ;--------------------------------------------------------
                             39 ; absolute ram data
                             40 ;--------------------------------------------------------
                             41 	.area IABS    (ABS)
                             42 	.area IABS    (ABS)
                             43 ;--------------------------------------------------------
                             44 ; absolute external ram data
                             45 ;--------------------------------------------------------
                             46 	.area XABS    (ABS)
                             47 ;--------------------------------------------------------
                             48 ; external initialized ram data
                             49 ;--------------------------------------------------------
                             50 	.area XISEG
                             51 ;--------------------------------------------------------
                             52 ; extended address mode data
                             53 ;--------------------------------------------------------
                             54 	.area XSEG
   0000                      55 _strncpy_PARM_2:
   0000                      56 	.ds 2
   0002                      57 _strncpy_PARM_3:
   0002                      58 	.ds 2
   0004                      59 _strncpy_d1_1_22:
   0004                      60 	.ds 2
                             61 ;--------------------------------------------------------
                             62 ; global & static initialisations
                             63 ;--------------------------------------------------------
                             64 	.area HOME    (CODE)
                             65 	.area GSINIT  (CODE)
                             66 	.area GSFINAL (CODE)
                             67 	.area GSINIT  (CODE)
                             68 ;--------------------------------------------------------
                             69 ; Home
                             70 ;--------------------------------------------------------
                             71 	.area HOME    (CODE)
                             72 	.area HOME    (CODE)
                             73 ;--------------------------------------------------------
                             74 ; code
                             75 ;--------------------------------------------------------
                             76 	.area CSEG    (CODE)
                             77 ;------------------------------------------------------------
                             78 ;Allocation info for local variables in function 'strncpy'
                             79 ;------------------------------------------------------------
                             80 ;s                         Allocated with name '_strncpy_PARM_2'
                             81 ;n                         Allocated with name '_strncpy_PARM_3'
                             82 ;d                         Allocated to registers x h 
                             83 ;d1                        Allocated with name '_strncpy_d1_1_22'
                             84 ;sloc0                     Allocated with name '_strncpy_sloc0_1_0'
                             85 ;sloc1                     Allocated with name '_strncpy_sloc1_1_0'
                             86 ;------------------------------------------------------------
                             87 ;../_strncpy.c:33: char *strncpy ( char * d, const char * s, size_t n )
                             88 ;	-----------------------------------------
                             89 ;	 function strncpy
                             90 ;	-----------------------------------------
                             91 ;	Register assignment is optimal.
                             92 ;	Stack space usage: 0 bytes.
   0000                      93 _strncpy:
   0000 89            [ 2]   94 	pshx
   0001 97            [ 1]   95 	tax
   0002 8A            [ 2]   96 	pulh
                             97 ;../_strncpy.c:35: register char * d1 =  d;
   0003 8B            [ 2]   98 	pshh
   0004 86            [ 2]   99 	pula
   0005 C7r00r04      [ 4]  100 	sta	_strncpy_d1_1_22
   0008 CFr00r05      [ 4]  101 	stx	(_strncpy_d1_1_22 + 1)
                            102 ;../_strncpy.c:37: while ( n && *s )
   000B C6r00r02      [ 4]  103 	lda	_strncpy_PARM_3
   000E B7*00         [ 3]  104 	sta	*_strncpy_sloc0_1_0
   0010 C6r00r03      [ 4]  105 	lda	(_strncpy_PARM_3 + 1)
   0013 B7*01         [ 3]  106 	sta	*(_strncpy_sloc0_1_0 + 1)
   0015 C6r00r00      [ 4]  107 	lda	_strncpy_PARM_2
   0018 B7*02         [ 3]  108 	sta	*_strncpy_sloc1_1_0
   001A C6r00r01      [ 4]  109 	lda	(_strncpy_PARM_2 + 1)
   001D B7*03         [ 3]  110 	sta	*(_strncpy_sloc1_1_0 + 1)
   001F                     111 00102$:
   001F B6*01         [ 3]  112 	lda	*(_strncpy_sloc0_1_0 + 1)
   0021 BA*00         [ 3]  113 	ora	*_strncpy_sloc0_1_0
   0023 27 23         [ 3]  114 	beq	00114$
   0025 89            [ 2]  115 	pshx
   0026 8B            [ 2]  116 	pshh
   0027 55*02         [ 4]  117 	ldhx	*_strncpy_sloc1_1_0
   0029 F6            [ 2]  118 	lda	,x
   002A 8A            [ 2]  119 	pulh
   002B 88            [ 2]  120 	pulx
   002C 4D            [ 1]  121 	tsta
   002D 27 19         [ 3]  122 	beq	00114$
                            123 ;../_strncpy.c:39: n-- ;
   002F 89            [ 2]  124 	pshx
   0030 8B            [ 2]  125 	pshh
   0031 55*00         [ 4]  126 	ldhx	*_strncpy_sloc0_1_0
   0033 AF FF         [ 2]  127 	aix	#-1
   0035 35*00         [ 4]  128 	sthx	*_strncpy_sloc0_1_0
   0037 8A            [ 2]  129 	pulh
   0038 88            [ 2]  130 	pulx
                            131 ;../_strncpy.c:40: *d++ = *s++ ;
   0039 89            [ 2]  132 	pshx
   003A 8B            [ 2]  133 	pshh
   003B 55*02         [ 4]  134 	ldhx	*_strncpy_sloc1_1_0
   003D AF 01         [ 2]  135 	aix	#1
   003F 35*02         [ 4]  136 	sthx	*_strncpy_sloc1_1_0
   0041 8A            [ 2]  137 	pulh
   0042 88            [ 2]  138 	pulx
   0043 F7            [ 2]  139 	sta	,x
   0044 AF 01         [ 2]  140 	aix	#1
   0046 20 D7         [ 3]  141 	bra	00102$
                            142 ;../_strncpy.c:42: while ( n-- )
   0048                     143 00114$:
   0048 4E*00*02      [ 5]  144 	mov	*_strncpy_sloc0_1_0,*_strncpy_sloc1_1_0
   004B 4E*01*03      [ 5]  145 	mov	*(_strncpy_sloc0_1_0 + 1),*(_strncpy_sloc1_1_0 + 1)
   004E                     146 00105$:
   004E 4E*02*00      [ 5]  147 	mov	*_strncpy_sloc1_1_0,*_strncpy_sloc0_1_0
   0051 4E*03*01      [ 5]  148 	mov	*(_strncpy_sloc1_1_0 + 1),*(_strncpy_sloc0_1_0 + 1)
   0054 89            [ 2]  149 	pshx
   0055 8B            [ 2]  150 	pshh
   0056 55*02         [ 4]  151 	ldhx	*_strncpy_sloc1_1_0
   0058 AF FF         [ 2]  152 	aix	#-1
   005A 35*02         [ 4]  153 	sthx	*_strncpy_sloc1_1_0
   005C 8A            [ 2]  154 	pulh
   005D 88            [ 2]  155 	pulx
   005E B6*01         [ 3]  156 	lda	*(_strncpy_sloc0_1_0 + 1)
   0060 BA*00         [ 3]  157 	ora	*_strncpy_sloc0_1_0
   0062 27 06         [ 3]  158 	beq	00107$
                            159 ;../_strncpy.c:44: *d++ = '\0' ;
   0064 4F            [ 1]  160 	clra
   0065 F7            [ 2]  161 	sta	,x
   0066 AF 01         [ 2]  162 	aix	#1
   0068 20 E4         [ 3]  163 	bra	00105$
   006A                     164 00107$:
                            165 ;../_strncpy.c:46: return d1;
   006A CEr00r04      [ 4]  166 	ldx	_strncpy_d1_1_22
   006D C6r00r05      [ 4]  167 	lda	(_strncpy_d1_1_22 + 1)
   0070 81            [ 4]  168 	rts
                            169 	.area CSEG    (CODE)
                            170 	.area CONST   (CODE)
                            171 	.area XINIT   (CODE)
                            172 	.area CABS    (ABS,CODE)
