                              1 ;--------------------------------------------------------
                              2 ; File Created by SDCC : free open source ANSI-C Compiler
                              3 ; Version 3.5.0 #9253 (Apr  4 2022) (Linux)
                              4 ; This file was generated Mon Apr  4 14:15:27 2022
                              5 ;--------------------------------------------------------
                              6 	.module _strstr
                              7 	.optsdcc -mz80
                              8 	
                              9 ;--------------------------------------------------------
                             10 ; Public variables in this module
                             11 ;--------------------------------------------------------
                             12 	.globl _strstr
                             13 ;--------------------------------------------------------
                             14 ; special function registers
                             15 ;--------------------------------------------------------
                             16 ;--------------------------------------------------------
                             17 ; ram data
                             18 ;--------------------------------------------------------
                             19 	.area _DATA
                             20 ;--------------------------------------------------------
                             21 ; ram data
                             22 ;--------------------------------------------------------
                             23 	.area _INITIALIZED
                             24 ;--------------------------------------------------------
                             25 ; absolute external ram data
                             26 ;--------------------------------------------------------
                             27 	.area _DABS (ABS)
                             28 ;--------------------------------------------------------
                             29 ; global & static initialisations
                             30 ;--------------------------------------------------------
                             31 	.area _HOME
                             32 	.area _GSINIT
                             33 	.area _GSFINAL
                             34 	.area _GSINIT
                             35 ;--------------------------------------------------------
                             36 ; Home
                             37 ;--------------------------------------------------------
                             38 	.area _HOME
                             39 	.area _HOME
                             40 ;--------------------------------------------------------
                             41 ; code
                             42 ;--------------------------------------------------------
                             43 	.area _CODE
                             44 ;../_strstr.c:31: char * strstr ( const char * str1, const char * str2 )
                             45 ;	---------------------------------
                             46 ; Function strstr
                             47 ; ---------------------------------
   0000                      48 _strstr::
   0000 DD E5         [15]   49 	push	ix
   0002 DD 21 00 00   [14]   50 	ld	ix,#0
   0006 DD 39         [15]   51 	add	ix,sp
   0008 21 F6 FF      [10]   52 	ld	hl,#-10
   000B 39            [11]   53 	add	hl,sp
   000C F9            [ 6]   54 	ld	sp,hl
                             55 ;../_strstr.c:33: const char * cp = str1;
   000D DD 4E 04      [19]   56 	ld	c,4 (ix)
   0010 DD 46 05      [19]   57 	ld	b,5 (ix)
                             58 ;../_strstr.c:37: if ( !*str2 )
   0013 DD 5E 06      [19]   59 	ld	e,6 (ix)
   0016 DD 56 07      [19]   60 	ld	d,7 (ix)
   0019 1A            [ 7]   61 	ld	a,(de)
   001A B7            [ 4]   62 	or	a, a
   001B 20 05         [12]   63 	jr	NZ,00122$
                             64 ;../_strstr.c:38: return str1;
   001D 69            [ 4]   65 	ld	l, c
   001E 60            [ 4]   66 	ld	h, b
   001F C3rADr00      [10]   67 	jp	00113$
                             68 ;../_strstr.c:40: while (*cp)
   0022                      69 00122$:
   0022 33            [ 6]   70 	inc	sp
   0023 33            [ 6]   71 	inc	sp
   0024 C5            [11]   72 	push	bc
   0025                      73 00110$:
   0025 E1            [10]   74 	pop	hl
   0026 E5            [11]   75 	push	hl
   0027 7E            [ 7]   76 	ld	a,(hl)
   0028 B7            [ 4]   77 	or	a, a
   0029 CArAAr00      [10]   78 	jp	Z,00112$
                             79 ;../_strstr.c:43: s2 = str2;
   002C DD 73 F8      [19]   80 	ld	-8 (ix),e
   002F DD 72 F9      [19]   81 	ld	-7 (ix),d
                             82 ;../_strstr.c:45: while ( *s1 && *s2 && !(*s1-*s2) )
   0032 DD 7E F6      [19]   83 	ld	a,-10 (ix)
   0035 DD 77 FE      [19]   84 	ld	-2 (ix),a
   0038 DD 7E F7      [19]   85 	ld	a,-9 (ix)
   003B DD 77 FF      [19]   86 	ld	-1 (ix),a
   003E                      87 00105$:
   003E DD 6E FE      [19]   88 	ld	l,-2 (ix)
   0041 DD 66 FF      [19]   89 	ld	h,-1 (ix)
   0044 7E            [ 7]   90 	ld	a,(hl)
   0045 DD 77 FB      [19]   91 	ld	-5 (ix),a
   0048 DD 6E F8      [19]   92 	ld	l,-8 (ix)
   004B DD 66 F9      [19]   93 	ld	h,-7 (ix)
   004E 7E            [ 7]   94 	ld	a,(hl)
   004F DD 77 FA      [19]   95 	ld	-6 (ix),a
   0052 DD 7E FB      [19]   96 	ld	a,-5 (ix)
   0055 B7            [ 4]   97 	or	a, a
   0056 28 3B         [12]   98 	jr	Z,00107$
   0058 DD 7E FA      [19]   99 	ld	a,-6 (ix)
   005B B7            [ 4]  100 	or	a, a
   005C 28 35         [12]  101 	jr	Z,00107$
   005E DD 7E FB      [19]  102 	ld	a,-5 (ix)
   0061 DD 77 FC      [19]  103 	ld	-4 (ix),a
   0064 DD 7E FB      [19]  104 	ld	a,-5 (ix)
   0067 17            [ 4]  105 	rla
   0068 9F            [ 4]  106 	sbc	a, a
   0069 DD 77 FD      [19]  107 	ld	-3 (ix),a
   006C DD 66 FA      [19]  108 	ld	h,-6 (ix)
   006F DD 7E FA      [19]  109 	ld	a,-6 (ix)
   0072 17            [ 4]  110 	rla
   0073 9F            [ 4]  111 	sbc	a, a
   0074 6F            [ 4]  112 	ld	l,a
   0075 DD 7E FC      [19]  113 	ld	a,-4 (ix)
   0078 94            [ 4]  114 	sub	a, h
   0079 67            [ 4]  115 	ld	h,a
   007A DD 7E FD      [19]  116 	ld	a,-3 (ix)
   007D 9D            [ 4]  117 	sbc	a, l
   007E B4            [ 4]  118 	or	a,h
   007F 20 12         [12]  119 	jr	NZ,00107$
                            120 ;../_strstr.c:46: s1++, s2++;
   0081 DD 34 FE      [23]  121 	inc	-2 (ix)
   0084 20 03         [12]  122 	jr	NZ,00148$
   0086 DD 34 FF      [23]  123 	inc	-1 (ix)
   0089                     124 00148$:
   0089 DD 34 F8      [23]  125 	inc	-8 (ix)
   008C 20 B0         [12]  126 	jr	NZ,00105$
   008E DD 34 F9      [23]  127 	inc	-7 (ix)
   0091 18 AB         [12]  128 	jr	00105$
   0093                     129 00107$:
                            130 ;../_strstr.c:48: if (!*s2)
   0093 DD 7E FA      [19]  131 	ld	a,-6 (ix)
   0096 B7            [ 4]  132 	or	a, a
   0097 20 04         [12]  133 	jr	NZ,00109$
                            134 ;../_strstr.c:49: return( (char*)cp );
   0099 69            [ 4]  135 	ld	l, c
   009A 60            [ 4]  136 	ld	h, b
   009B 18 10         [12]  137 	jr	00113$
   009D                     138 00109$:
                            139 ;../_strstr.c:51: cp++;
   009D DD 34 F6      [23]  140 	inc	-10 (ix)
   00A0 20 03         [12]  141 	jr	NZ,00150$
   00A2 DD 34 F7      [23]  142 	inc	-9 (ix)
   00A5                     143 00150$:
   00A5 C1            [10]  144 	pop	bc
   00A6 C5            [11]  145 	push	bc
   00A7 C3r25r00      [10]  146 	jp	00110$
   00AA                     147 00112$:
                            148 ;../_strstr.c:54: return (NULL) ;
   00AA 21 00 00      [10]  149 	ld	hl,#0x0000
   00AD                     150 00113$:
   00AD DD F9         [10]  151 	ld	sp, ix
   00AF DD E1         [14]  152 	pop	ix
   00B1 C9            [10]  153 	ret
                            154 	.area _CODE
                            155 	.area _INITIALIZER
                            156 	.area _CABS (ABS)
