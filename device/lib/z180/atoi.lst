                              1 ;--------------------------------------------------------
                              2 ; File Created by SDCC : free open source ANSI-C Compiler
                              3 ; Version 3.5.0 #9253 (Apr  4 2022) (Linux)
                              4 ; This file was generated Mon Apr  4 14:15:43 2022
                              5 ;--------------------------------------------------------
                              6 	.hd64
                              7 	.module atoi
                              8 	.optsdcc -mz180
                              9 	
                             10 ;--------------------------------------------------------
                             11 ; Public variables in this module
                             12 ;--------------------------------------------------------
                             13 	.globl _atoi
                             14 ;--------------------------------------------------------
                             15 ; special function registers
                             16 ;--------------------------------------------------------
                             17 ;--------------------------------------------------------
                             18 ; ram data
                             19 ;--------------------------------------------------------
                             20 	.area _DATA
                             21 ;--------------------------------------------------------
                             22 ; ram data
                             23 ;--------------------------------------------------------
                             24 	.area _INITIALIZED
                             25 ;--------------------------------------------------------
                             26 ; absolute external ram data
                             27 ;--------------------------------------------------------
                             28 	.area _DABS (ABS)
                             29 ;--------------------------------------------------------
                             30 ; global & static initialisations
                             31 ;--------------------------------------------------------
                             32 	.area _HOME
                             33 	.area _GSINIT
                             34 	.area _GSFINAL
                             35 	.area _GSINIT
                             36 ;--------------------------------------------------------
                             37 ; Home
                             38 ;--------------------------------------------------------
                             39 	.area _HOME
                             40 	.area _HOME
                             41 ;--------------------------------------------------------
                             42 ; code
                             43 ;--------------------------------------------------------
                             44 	.area _CODE
                             45 ;../atoi.c:34: int atoi(const char *nptr)
                             46 ;	---------------------------------
                             47 ; Function atoi
                             48 ; ---------------------------------
   0000                      49 _atoi::
   0000 DD E5         [14]   50 	push	ix
   0002 DD 21 00 00   [12]   51 	ld	ix,#0
   0006 DD 39         [10]   52 	add	ix,sp
   0008 3B            [ 4]   53 	dec	sp
   0009 3B            [ 4]   54 	dec	sp
   000A 3B            [ 4]   55 	dec	sp
   000B 3B            [ 4]   56 	dec	sp
                             57 ;../atoi.c:36: int ret = 0;
   000C DD 36 FD 00   [15]   58 	ld	-3 (ix),#0x00
   0010 DD 36 FE 00   [15]   59 	ld	-2 (ix),#0x00
                             60 ;../atoi.c:39: while (isblank (*nptr))
   0014 DD 5E 04      [14]   61 	ld	e,4 (ix)
   0017 DD 56 05      [14]   62 	ld	d,5 (ix)
   001A                      63 00101$:
   001A 1A            [ 6]   64 	ld	a,(de)
   001B 67            [ 4]   65 	ld	h,a
   001C 6F            [ 4]   66 	ld	l,a
   001D 17            [ 3]   67 	rla
   001E 9F            [ 4]   68 	sbc	a, a
   001F 47            [ 4]   69 	ld	b,a
                             70 ;./../../include/ctype.h:53: return ((unsigned char)c == ' ' || (unsigned char)c == '\t');
   0020 7D            [ 4]   71 	ld	a,l
   0021 FE 20         [ 6]   72 	cp	a,#0x20
   0023 28 04         [ 8]   73 	jr	Z,00115$
   0025 D6 09         [ 6]   74 	sub	a, #0x09
   0027 20 03         [ 8]   75 	jr	NZ,00131$
   0029                      76 00115$:
                             77 ;../atoi.c:40: nptr++;
   0029 13            [ 4]   78 	inc	de
   002A 18 EE         [ 8]   79 	jr	00101$
   002C                      80 00131$:
   002C DD 73 04      [15]   81 	ld	4 (ix),e
   002F DD 72 05      [15]   82 	ld	5 (ix),d
                             83 ;../atoi.c:42: neg = (*nptr == '-');
   0032 7C            [ 4]   84 	ld	a,h
   0033 D6 2D         [ 6]   85 	sub	a, #0x2D
   0035 20 04         [ 8]   86 	jr	NZ,00157$
   0037 3E 01         [ 6]   87 	ld	a,#0x01
   0039 18 01         [ 8]   88 	jr	00158$
   003B                      89 00157$:
   003B AF            [ 4]   90 	xor	a,a
   003C                      91 00158$:
   003C DD 77 FC      [15]   92 	ld	-4 (ix),a
                             93 ;../atoi.c:44: if (*nptr == '-' || *nptr == '+')
   003F CB 47         [ 7]   94 	bit	0,a
   0041 20 05         [ 8]   95 	jr	NZ,00104$
   0043 7C            [ 4]   96 	ld	a,h
   0044 D6 2B         [ 6]   97 	sub	a, #0x2B
   0046 20 07         [ 8]   98 	jr	NZ,00129$
   0048                      99 00104$:
                            100 ;../atoi.c:45: nptr++;
   0048 13            [ 4]  101 	inc	de
   0049 DD 73 04      [15]  102 	ld	4 (ix),e
   004C DD 72 05      [15]  103 	ld	5 (ix),d
                            104 ;../atoi.c:47: while (isdigit (*nptr))
   004F                     105 00129$:
   004F DD 4E 04      [14]  106 	ld	c,4 (ix)
   0052 DD 46 05      [14]  107 	ld	b,5 (ix)
   0055                     108 00107$:
   0055 0A            [ 6]  109 	ld	a,(bc)
   0056 5F            [ 4]  110 	ld	e,a
   0057 17            [ 3]  111 	rla
   0058 9F            [ 4]  112 	sbc	a, a
   0059 57            [ 4]  113 	ld	d,a
   005A 6B            [ 4]  114 	ld	l, e
                            115 ;./../../include/ctype.h:62: return ((unsigned char)c >= '0' && (unsigned char)c <= '9');
   005B 7D            [ 4]  116 	ld	a,l
   005C D6 30         [ 6]  117 	sub	a, #0x30
   005E 38 25         [ 8]  118 	jr	C,00109$
   0060 3E 39         [ 6]  119 	ld	a,#0x39
   0062 95            [ 4]  120 	sub	a, l
   0063 38 20         [ 8]  121 	jr	C,00109$
                            122 ;../atoi.c:48: ret = ret * 10 + (*(nptr++) - '0');
   0065 D5            [11]  123 	push	de
   0066 DD 5E FD      [14]  124 	ld	e,-3 (ix)
   0069 DD 56 FE      [14]  125 	ld	d,-2 (ix)
   006C 6B            [ 4]  126 	ld	l, e
   006D 62            [ 4]  127 	ld	h, d
   006E 29            [ 7]  128 	add	hl, hl
   006F 29            [ 7]  129 	add	hl, hl
   0070 19            [ 7]  130 	add	hl, de
   0071 29            [ 7]  131 	add	hl, hl
   0072 D1            [ 9]  132 	pop	de
   0073 03            [ 4]  133 	inc	bc
   0074 7B            [ 4]  134 	ld	a,e
   0075 C6 D0         [ 6]  135 	add	a,#0xD0
   0077 5F            [ 4]  136 	ld	e,a
   0078 7A            [ 4]  137 	ld	a,d
   0079 CE FF         [ 6]  138 	adc	a,#0xFF
   007B 57            [ 4]  139 	ld	d,a
   007C 19            [ 7]  140 	add	hl,de
   007D DD 75 FD      [15]  141 	ld	-3 (ix),l
   0080 DD 74 FE      [15]  142 	ld	-2 (ix),h
   0083 18 D0         [ 8]  143 	jr	00107$
   0085                     144 00109$:
                            145 ;../atoi.c:50: return (neg ? -ret : ret); // Since -INT_MIN is INT_MIN in sdcc, the result value always turns out ok.
   0085 DD CB FC 46   [19]  146 	bit	0,-4 (ix)
   0089 28 0D         [ 8]  147 	jr	Z,00120$
   008B AF            [ 4]  148 	xor	a, a
   008C DD 96 FD      [14]  149 	sub	a, -3 (ix)
   008F 6F            [ 4]  150 	ld	l,a
   0090 3E 00         [ 6]  151 	ld	a, #0x00
   0092 DD 9E FE      [14]  152 	sbc	a, -2 (ix)
   0095 47            [ 4]  153 	ld	b,a
   0096 18 06         [ 8]  154 	jr	00121$
   0098                     155 00120$:
   0098 DD 6E FD      [14]  156 	ld	l,-3 (ix)
   009B DD 46 FE      [14]  157 	ld	b,-2 (ix)
   009E                     158 00121$:
   009E 60            [ 4]  159 	ld	h, b
   009F DD F9         [ 7]  160 	ld	sp, ix
   00A1 DD E1         [12]  161 	pop	ix
   00A3 C9            [ 9]  162 	ret
                            163 	.area _CODE
                            164 	.area _INITIALIZER
                            165 	.area _CABS (ABS)
