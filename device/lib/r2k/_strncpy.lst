                              1 ;--------------------------------------------------------
                              2 ; File Created by SDCC : free open source ANSI-C Compiler
                              3 ; Version 3.5.0 #9253 (Apr  4 2022) (Linux)
                              4 ; This file was generated Mon Apr  4 14:16:02 2022
                              5 ;--------------------------------------------------------
                              6 	.module _strncpy
                              7 	.optsdcc -mr2k
                              8 	
                              9 ;--------------------------------------------------------
                             10 ; Public variables in this module
                             11 ;--------------------------------------------------------
                             12 	.globl _strncpy
                             13 ;--------------------------------------------------------
                             14 ; special function registers
                             15 ;--------------------------------------------------------
                             16 ;--------------------------------------------------------
                             17 ; ram data
                             18 ;--------------------------------------------------------
                             19 	.area _DATA
                             20 ;--------------------------------------------------------
                             21 ; ram data
                             22 ;--------------------------------------------------------
                             23 	.area _INITIALIZED
                             24 ;--------------------------------------------------------
                             25 ; absolute external ram data
                             26 ;--------------------------------------------------------
                             27 	.area _DABS (ABS)
                             28 ;--------------------------------------------------------
                             29 ; global & static initialisations
                             30 ;--------------------------------------------------------
                             31 	.area _HOME
                             32 	.area _GSINIT
                             33 	.area _GSFINAL
                             34 	.area _GSINIT
                             35 ;--------------------------------------------------------
                             36 ; Home
                             37 ;--------------------------------------------------------
                             38 	.area _HOME
                             39 	.area _HOME
                             40 ;--------------------------------------------------------
                             41 ; code
                             42 ;--------------------------------------------------------
                             43 	.area _CODE
                             44 ;../_strncpy.c:33: char *strncpy ( char * d, const char * s, size_t n )
                             45 ;	---------------------------------
                             46 ; Function strncpy
                             47 ; ---------------------------------
   0000                      48 _strncpy::
   0000 DD E5                49 	push	ix
   0002 DD 21 00 00          50 	ld	ix,#0
   0006 DD 39                51 	add	ix,sp
   0008 27 FE                52 	add	sp, #-2
                             53 ;../_strncpy.c:35: register char * d1 =  d;
   000A DD 7E 04             54 	ld	a,4 (ix)
   000D DD 77 FE             55 	ld	-2 (ix),a
   0010 DD 7E 05             56 	ld	a,5 (ix)
   0013 DD 77 FF             57 	ld	-1 (ix),a
                             58 ;../_strncpy.c:37: while ( n && *s )
   0016 EB                   59 	ex	de, hl
   0017 C4 0A                60 	ld	hl, 10 (sp)
   0019 EB                   61 	ex	de, hl
   001A FD C4 08             62 	ld	iy, 8 (sp)
   001D C1                   63 	pop	bc
   001E C5                   64 	push	bc
   001F                      65 00102$:
   001F 7A                   66 	ld	a,d
   0020 B3                   67 	or	a,e
   0021 28 0F                68 	jr	Z,00114$
   0023 FD 66 00             69 	ld	h, 0 (iy)
   0026 7C                   70 	ld	a,h
   0027 B7                   71 	or	a, a
   0028 28 08                72 	jr	Z,00114$
                             73 ;../_strncpy.c:39: n-- ;
   002A 1B                   74 	dec	de
                             75 ;../_strncpy.c:40: *d++ = *s++ ;
   002B 7C                   76 	ld	a,h
   002C FD 23                77 	inc	iy
   002E 02                   78 	ld	(bc),a
   002F 03                   79 	inc	bc
   0030 18 ED                80 	jr	00102$
                             81 ;../_strncpy.c:42: while ( n-- )
   0032                      82 00114$:
   0032                      83 00105$:
   0032 63                   84 	ld	h,e
   0033 6A                   85 	ld	l,d
   0034 1B                   86 	dec	de
   0035 7D                   87 	ld	a,l
   0036 B4                   88 	or	a,h
   0037 28 05                89 	jr	Z,00107$
                             90 ;../_strncpy.c:44: *d++ = '\0' ;
   0039 AF                   91 	xor	a, a
   003A 02                   92 	ld	(bc),a
   003B 03                   93 	inc	bc
   003C 18 F4                94 	jr	00105$
   003E                      95 00107$:
                             96 ;../_strncpy.c:46: return d1;
   003E C4 00                97 	ld	hl, 0 (sp)
   0040 DD F9                98 	ld	sp, ix
   0042 DD E1                99 	pop	ix
   0044 C9                  100 	ret
                            101 	.area _CODE
                            102 	.area _INITIALIZER
                            103 	.area _CABS (ABS)
