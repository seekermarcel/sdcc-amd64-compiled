                                      1 ;--------------------------------------------------------
                                      2 ; File Created by SDCC : free open source ANSI-C Compiler
                                      3 ; Version 3.5.0 #9253 (Apr  4 2022) (Linux)
                                      4 ; This file was generated Mon Apr  4 14:10:27 2022
                                      5 ;--------------------------------------------------------
                                      6 	.module assert
                                      7 	.optsdcc -mds390 --model-flat24
                                      8 	
                                      9 ;--------------------------------------------------------
                                     10 ; CPU specific extensions
                                     11 ;--------------------------------------------------------
                                     12 	.DS80C390
                                     13 	.amode	2	; 24 bit flat addressing
                           000082    14 dpl	=	0x82
                           000083    15 dph	=	0x83
                           000084    16 dpl1	=	0x84
                           000085    17 dph1	=	0x85
                           000086    18 dps	=	0x86
                           000093    19 dpx	=	0x93
                           000095    20 dpx1	=	0x95
                           00009B    21 esp	=	0x9B
                           00009C    22 ap	=	0x9C
                           00009C    23 acc1	=	0x9C
                           0000D1    24 mcnt0	=	0xD1
                           0000D2    25 mcnt1	=	0xD2
                           0000D3    26 ma	=	0xD3
                           0000D4    27 mb	=	0xD4
                           0000D5    28 mc	=	0xD5
                           00009D    29 acon	=	0x9D
                           0000D1    30 F1	=	0xD1	; user flag
                                     31 ;--------------------------------------------------------
                                     32 ; Public variables in this module
                                     33 ;--------------------------------------------------------
                                     34 	.globl __assert
                                     35 	.globl _printf
                                     36 	.globl __assert_PARM_3
                                     37 	.globl __assert_PARM_2
                                     38 ;--------------------------------------------------------
                                     39 ; special function registers
                                     40 ;--------------------------------------------------------
                                     41 ;--------------------------------------------------------
                                     42 ; special function bits
                                     43 ;--------------------------------------------------------
                                     44 ;--------------------------------------------------------
                                     45 ; overlayable register banks
                                     46 ;--------------------------------------------------------
                                     47 	.area REG_BANK_0	(REL,OVR,DATA)
      000000                         48 	.ds 8
                                     49 ;--------------------------------------------------------
                                     50 ; internal ram data
                                     51 ;--------------------------------------------------------
                                     52 	.area DSEG    (DATA)
                                     53 ;--------------------------------------------------------
                                     54 ; overlayable items in internal ram 
                                     55 ;--------------------------------------------------------
                                     56 ;--------------------------------------------------------
                                     57 ; indirectly addressable internal ram data
                                     58 ;--------------------------------------------------------
                                     59 	.area ISEG    (DATA)
                                     60 ;--------------------------------------------------------
                                     61 ; absolute internal ram data
                                     62 ;--------------------------------------------------------
                                     63 	.area IABS    (ABS,DATA)
                                     64 	.area IABS    (ABS,DATA)
                                     65 ;--------------------------------------------------------
                                     66 ; bit data
                                     67 ;--------------------------------------------------------
                                     68 	.area BSEG    (BIT)
                                     69 ;--------------------------------------------------------
                                     70 ; paged external ram data
                                     71 ;--------------------------------------------------------
                                     72 	.area PSEG    (PAG,XDATA)
                                     73 ;--------------------------------------------------------
                                     74 ; external ram data
                                     75 ;--------------------------------------------------------
                                     76 	.area XSEG    (XDATA)
      000000                         77 __assert_PARM_2:
      000000                         78 	.ds 4
      000004                         79 __assert_PARM_3:
      000004                         80 	.ds 2
                                     81 ;--------------------------------------------------------
                                     82 ; absolute external ram data
                                     83 ;--------------------------------------------------------
                                     84 	.area XABS    (ABS,XDATA)
                                     85 ;--------------------------------------------------------
                                     86 ; external initialized ram data
                                     87 ;--------------------------------------------------------
                                     88 	.area XISEG   (XDATA)
                                     89 ;--------------------------------------------------------
                                     90 ; global & static initialisations
                                     91 ;--------------------------------------------------------
                                     92 	.area HOME    (CODE)
                                     93 	.area GSINIT  (CODE)
                                     94 	.area GSFINAL (CODE)
                                     95 	.area GSINIT  (CODE)
                                     96 ;--------------------------------------------------------
                                     97 ; Home
                                     98 ;--------------------------------------------------------
                                     99 	.area HOME    (CODE)
                                    100 	.area HOME    (CODE)
                                    101 ;--------------------------------------------------------
                                    102 ; code
                                    103 ;--------------------------------------------------------
                                    104 	.area CSEG    (CODE)
                                    105 ;------------------------------------------------------------
                                    106 ;Allocation info for local variables in function '_assert'
                                    107 ;------------------------------------------------------------
                                    108 ;filename                  Allocated with name '__assert_PARM_2'
                                    109 ;linenumber                Allocated with name '__assert_PARM_3'
                                    110 ;expr                      Allocated to registers r2 r3 r4 r5 
                                    111 ;------------------------------------------------------------
                                    112 ;	assert.c:32: void _assert(char *expr, const char *filename, unsigned int linenumber)
                                    113 ;	-----------------------------------------
                                    114 ;	 function _assert
                                    115 ;	-----------------------------------------
      000000                        116 __assert:
                           000002   117 	ar2 = 0x02
                           000003   118 	ar3 = 0x03
                           000004   119 	ar4 = 0x04
                           000005   120 	ar5 = 0x05
                           000006   121 	ar6 = 0x06
                           000007   122 	ar7 = 0x07
                           000000   123 	ar0 = 0x00
                           000001   124 	ar1 = 0x01
      000000 AA 82            [ 8]  125 	mov	r2,dpl
      000002 AB 83            [ 8]  126 	mov	r3,dph
      000004 AC 93            [ 8]  127 	mov	r4,dpx
      000006 AD F0            [ 8]  128 	mov	r5,b
                                    129 ;	assert.c:34: printf("Assert(%s) failed at line %u in file %s.\n",
      000008 90s00r00r00      [12]  130 	mov	dptr,#__assert_PARM_2
      00000C E0               [ 8]  131 	movx	a,@dptr
      00000D C0 E0            [ 8]  132 	push	acc
      00000F A3               [12]  133 	inc	dptr
      000010 E0               [ 8]  134 	movx	a,@dptr
      000011 C0 E0            [ 8]  135 	push	acc
      000013 A3               [12]  136 	inc	dptr
      000014 E0               [ 8]  137 	movx	a,@dptr
      000015 C0 E0            [ 8]  138 	push	acc
      000017 A3               [12]  139 	inc	dptr
      000018 E0               [ 8]  140 	movx	a,@dptr
      000019 C0 E0            [ 8]  141 	push	acc
      00001B 90s00r00r04      [12]  142 	mov	dptr,#__assert_PARM_3
      00001F E0               [ 8]  143 	movx	a,@dptr
      000020 C0 E0            [ 8]  144 	push	acc
      000022 A3               [12]  145 	inc	dptr
      000023 E0               [ 8]  146 	movx	a,@dptr
      000024 C0 E0            [ 8]  147 	push	acc
      000026 C0 02            [ 8]  148 	push	ar2
      000028 C0 03            [ 8]  149 	push	ar3
      00002A C0 04            [ 8]  150 	push	ar4
      00002C C0 05            [ 8]  151 	push	ar5
      00002E 74r00            [ 8]  152 	mov	a,#___str_0
      000030 C0 E0            [ 8]  153 	push	acc
      000032 74s00            [ 8]  154 	mov	a,#(___str_0 >> 8)
      000034 C0 E0            [ 8]  155 	push	acc
      000036 74s00            [ 8]  156 	mov	a,#(___str_0 >> 16)
      000038 C0 E0            [ 8]  157 	push	acc
      00003A 74 80            [ 8]  158 	mov	a,#0x80
      00003C C0 E0            [ 8]  159 	push	acc
      00003E 12s00r00r00      [16]  160 	lcall	_printf
      000042 C3               [ 4]  161 	clr	c
      000043 E5 81            [ 8]  162 	mov	a,sp
      000045 94 0E            [ 8]  163 	subb	a,#0x0E
      000047 F5 81            [ 8]  164 	mov	sp,a
      000049 E5 9B            [ 8]  165 	mov	a,esp
      00004B 54 03            [ 8]  166 	anl	a,#3
      00004D 94 00            [ 8]  167 	subb	a,#0x00
      00004F F5 9B            [ 8]  168 	mov	esp,a
                                    169 ;	assert.c:36: while(1);
      000051                        170 00102$:
      000051 80 FE            [12]  171 	sjmp 00102$
      000053                        172 00104$:
      000053 22               [16]  173 	ret
                                    174 	.area CSEG    (CODE)
                                    175 	.area CONST   (CODE)
      000000                        176 ___str_0:
      000000 41 73 73 65 72 74 28   177 	.ascii "Assert(%s) failed at line %u in file %s."
             25 73 29 20 66 61 69
             6C 65 64 20 61 74 20
             6C 69 6E 65 20 25 75
             20 69 6E 20 66 69 6C
             65 20 25 73 2E
      000028 0A                     178 	.db 0x0A
      000029 00                     179 	.db 0x00
                                    180 	.area XINIT   (CODE)
                                    181 	.area CABS    (ABS,CODE)
