                              1 ;--------------------------------------------------------
                              2 ; File Created by SDCC : free open source ANSI-C Compiler
                              3 ; Version 3.5.0 #9253 (Apr  4 2022) (Linux)
                              4 ; This file was generated Mon Apr  4 14:10:36 2022
                              5 ;--------------------------------------------------------
                              6 	.cs08
                              7 	.module _rlulonglong
                              8 	.optsdcc -ms08
                              9 	
                             10 	.area HOME    (CODE)
                             11 	.area GSINIT0 (CODE)
                             12 	.area GSINIT  (CODE)
                             13 	.area GSFINAL (CODE)
                             14 	.area CSEG    (CODE)
                             15 	.area XINIT   (CODE)
                             16 	.area CONST   (CODE)
                             17 	.area DSEG    (PAG)
                             18 	.area OSEG    (PAG, OVR)
                             19 	.area XSEG
                             20 	.area XISEG
                             21 ;--------------------------------------------------------
                             22 ; Public variables in this module
                             23 ;--------------------------------------------------------
                             24 	.globl __rlulonglong_PARM_2
                             25 	.globl __rlulonglong_PARM_1
                             26 	.globl __rlulonglong
                             27 ;--------------------------------------------------------
                             28 ; ram data
                             29 ;--------------------------------------------------------
                             30 	.area DSEG    (PAG)
                             31 ;--------------------------------------------------------
                             32 ; overlayable items in ram 
                             33 ;--------------------------------------------------------
                             34 	.area	OSEG    (PAG, OVR)
   0000                      35 __rlulonglong_sloc0_1_0:
   0000                      36 	.ds 1
   0001                      37 __rlulonglong_sloc1_1_0:
   0001                      38 	.ds 4
   0005                      39 __rlulonglong_sloc2_1_0:
   0005                      40 	.ds 4
                             41 ;--------------------------------------------------------
                             42 ; absolute ram data
                             43 ;--------------------------------------------------------
                             44 	.area IABS    (ABS)
                             45 	.area IABS    (ABS)
                             46 ;--------------------------------------------------------
                             47 ; absolute external ram data
                             48 ;--------------------------------------------------------
                             49 	.area XABS    (ABS)
                             50 ;--------------------------------------------------------
                             51 ; external initialized ram data
                             52 ;--------------------------------------------------------
                             53 	.area XISEG
                             54 ;--------------------------------------------------------
                             55 ; extended address mode data
                             56 ;--------------------------------------------------------
                             57 	.area XSEG
   0000                      58 __rlulonglong_PARM_1:
   0000                      59 	.ds 8
   0008                      60 __rlulonglong_PARM_2:
   0008                      61 	.ds 1
                             62 ;--------------------------------------------------------
                             63 ; global & static initialisations
                             64 ;--------------------------------------------------------
                             65 	.area HOME    (CODE)
                             66 	.area GSINIT  (CODE)
                             67 	.area GSFINAL (CODE)
                             68 	.area GSINIT  (CODE)
                             69 ;--------------------------------------------------------
                             70 ; Home
                             71 ;--------------------------------------------------------
                             72 	.area HOME    (CODE)
                             73 	.area HOME    (CODE)
                             74 ;--------------------------------------------------------
                             75 ; code
                             76 ;--------------------------------------------------------
                             77 	.area CSEG    (CODE)
                             78 ;------------------------------------------------------------
                             79 ;Allocation info for local variables in function '_rlulonglong'
                             80 ;------------------------------------------------------------
                             81 ;l                         Allocated with name '__rlulonglong_PARM_1'
                             82 ;s                         Allocated with name '__rlulonglong_PARM_2'
                             83 ;top                       Allocated to registers 
                             84 ;middle                    Allocated to registers 
                             85 ;bottom                    Allocated to registers 
                             86 ;b                         Allocated to registers 
                             87 ;sloc0                     Allocated with name '__rlulonglong_sloc0_1_0'
                             88 ;sloc1                     Allocated with name '__rlulonglong_sloc1_1_0'
                             89 ;sloc2                     Allocated with name '__rlulonglong_sloc2_1_0'
                             90 ;------------------------------------------------------------
                             91 ;../_rlulonglong.c:35: unsigned long long _rlulonglong(unsigned long long l, signed char s)
                             92 ;	-----------------------------------------
                             93 ;	 function _rlulonglong
                             94 ;	-----------------------------------------
                             95 ;	Register assignment is optimal.
                             96 ;	Stack space usage: 0 bytes.
   0000                      97 __rlulonglong:
                             98 ;../_rlulonglong.c:37: uint32_t *const top = (uint32_t *)((char *)(&l) + 4);
                             99 ;../_rlulonglong.c:38: uint16_t *const middle = (uint16_t *)((char *)(&l) + 2);
                            100 ;../_rlulonglong.c:39: uint32_t *const bottom = (uint32_t *)(&l);
                            101 ;../_rlulonglong.c:40: uint16_t *const b = (uint16_t *)(&l);
                            102 ;../_rlulonglong.c:50: (*top) <<= s;
   0000 C6r00r08      [ 4]  103 	lda	__rlulonglong_PARM_2
   0003 B7*00         [ 3]  104 	sta	*__rlulonglong_sloc0_1_0
   0005                     105 00103$:
                            106 ;../_rlulonglong.c:42: for(;s >= 16; s-= 16)
   0005 B6*00         [ 3]  107 	lda	*__rlulonglong_sloc0_1_0
   0007 A1 10         [ 2]  108 	cmp	#0x10
   0009 91 21         [ 3]  109 	blt	00101$
                            110 ;../_rlulonglong.c:44: b[3] = b[2];
   000B 32r00r04      [ 5]  111 	ldhx	(__rlulonglong_PARM_1 + 0x0004)
   000E 96r00r06      [ 5]  112 	sthx	(__rlulonglong_PARM_1 + 0x0006)
                            113 ;../_rlulonglong.c:45: b[2] = b[1];
   0011 32r00r02      [ 5]  114 	ldhx	(__rlulonglong_PARM_1 + 0x0002)
   0014 96r00r04      [ 5]  115 	sthx	(__rlulonglong_PARM_1 + 0x0004)
                            116 ;../_rlulonglong.c:46: b[1] = b[0];
   0017 32r00r00      [ 5]  117 	ldhx	__rlulonglong_PARM_1
   001A 96r00r02      [ 5]  118 	sthx	(__rlulonglong_PARM_1 + 0x0002)
                            119 ;../_rlulonglong.c:47: b[0] = 0;
   001D 4F            [ 1]  120 	clra
   001E C7r00r00      [ 4]  121 	sta	__rlulonglong_PARM_1
   0021 C7r00r01      [ 4]  122 	sta	(__rlulonglong_PARM_1 + 1)
                            123 ;../_rlulonglong.c:42: for(;s >= 16; s-= 16)
   0024 B6*00         [ 3]  124 	lda	*__rlulonglong_sloc0_1_0
   0026 A0 10         [ 2]  125 	sub	#0x10
   0028 B7*00         [ 3]  126 	sta	*__rlulonglong_sloc0_1_0
   002A 20 D9         [ 3]  127 	bra	00103$
   002C                     128 00101$:
                            129 ;../_rlulonglong.c:50: (*top) <<= s;
   002C C6r00r04      [ 4]  130 	lda	(__rlulonglong_PARM_1 + 0x0004)
   002F B7*01         [ 3]  131 	sta	*__rlulonglong_sloc1_1_0
   0031 C6r00r05      [ 4]  132 	lda	((__rlulonglong_PARM_1 + 0x0004) + 1)
   0034 B7*02         [ 3]  133 	sta	*(__rlulonglong_sloc1_1_0 + 1)
   0036 C6r00r06      [ 4]  134 	lda	((__rlulonglong_PARM_1 + 0x0004) + 2)
   0039 B7*03         [ 3]  135 	sta	*(__rlulonglong_sloc1_1_0 + 2)
   003B C6r00r07      [ 4]  136 	lda	((__rlulonglong_PARM_1 + 0x0004) + 3)
   003E B7*04         [ 3]  137 	sta	*(__rlulonglong_sloc1_1_0 + 3)
   0040 BE*00         [ 3]  138 	ldx	*__rlulonglong_sloc0_1_0
   0042 27 0A         [ 3]  139 	beq	00118$
   0044                     140 00117$:
   0044 38*04         [ 5]  141 	lsl	*(__rlulonglong_sloc1_1_0 + 3)
   0046 39*03         [ 5]  142 	rol	*(__rlulonglong_sloc1_1_0 + 2)
   0048 39*02         [ 5]  143 	rol	*(__rlulonglong_sloc1_1_0 + 1)
   004A 39*01         [ 5]  144 	rol	*__rlulonglong_sloc1_1_0
   004C 5B F6         [ 4]  145 	dbnzx	00117$
   004E                     146 00118$:
   004E B6*01         [ 3]  147 	lda	*__rlulonglong_sloc1_1_0
   0050 C7r00r04      [ 4]  148 	sta	(__rlulonglong_PARM_1 + 0x0004)
   0053 B6*02         [ 3]  149 	lda	*(__rlulonglong_sloc1_1_0 + 1)
   0055 C7r00r05      [ 4]  150 	sta	((__rlulonglong_PARM_1 + 0x0004) + 1)
   0058 B6*03         [ 3]  151 	lda	*(__rlulonglong_sloc1_1_0 + 2)
   005A C7r00r06      [ 4]  152 	sta	((__rlulonglong_PARM_1 + 0x0004) + 2)
   005D B6*04         [ 3]  153 	lda	*(__rlulonglong_sloc1_1_0 + 3)
   005F C7r00r07      [ 4]  154 	sta	((__rlulonglong_PARM_1 + 0x0004) + 3)
                            155 ;../_rlulonglong.c:51: (*top) |= (((uint32_t)((*middle) & 0xffffu) << s) >> 16);
   0062 32r00r02      [ 5]  156 	ldhx	(__rlulonglong_PARM_1 + 0x0002)
   0065 BF*08         [ 3]  157 	stx	*(__rlulonglong_sloc2_1_0 + 3)
   0067 8B            [ 2]  158 	pshh
   0068 86            [ 3]  159 	pula
   0069 B7*07         [ 3]  160 	sta	*(__rlulonglong_sloc2_1_0 + 2)
   006B 6E 00*06      [ 4]  161 	mov	#0x00,*(__rlulonglong_sloc2_1_0 + 1)
   006E 6E 00*05      [ 4]  162 	mov	#0x00,*__rlulonglong_sloc2_1_0
   0071 BE*00         [ 3]  163 	ldx	*__rlulonglong_sloc0_1_0
   0073 27 0A         [ 3]  164 	beq	00120$
   0075                     165 00119$:
   0075 38*08         [ 5]  166 	lsl	*(__rlulonglong_sloc2_1_0 + 3)
   0077 39*07         [ 5]  167 	rol	*(__rlulonglong_sloc2_1_0 + 2)
   0079 39*06         [ 5]  168 	rol	*(__rlulonglong_sloc2_1_0 + 1)
   007B 39*05         [ 5]  169 	rol	*__rlulonglong_sloc2_1_0
   007D 5B F6         [ 4]  170 	dbnzx	00119$
   007F                     171 00120$:
   007F B6*06         [ 3]  172 	lda	*(__rlulonglong_sloc2_1_0 + 1)
   0081 BE*05         [ 3]  173 	ldx	*__rlulonglong_sloc2_1_0
   0083 B7*08         [ 3]  174 	sta	*(__rlulonglong_sloc2_1_0 + 3)
   0085 BF*07         [ 3]  175 	stx	*(__rlulonglong_sloc2_1_0 + 2)
   0087 6E 00*06      [ 4]  176 	mov	#0x00,*(__rlulonglong_sloc2_1_0 + 1)
   008A 6E 00*05      [ 4]  177 	mov	#0x00,*__rlulonglong_sloc2_1_0
   008D B6*04         [ 3]  178 	lda	*(__rlulonglong_sloc1_1_0 + 3)
   008F BA*08         [ 3]  179 	ora	*(__rlulonglong_sloc2_1_0 + 3)
   0091 B7*08         [ 3]  180 	sta	*(__rlulonglong_sloc2_1_0 + 3)
   0093 B6*03         [ 3]  181 	lda	*(__rlulonglong_sloc1_1_0 + 2)
   0095 BA*07         [ 3]  182 	ora	*(__rlulonglong_sloc2_1_0 + 2)
   0097 B7*07         [ 3]  183 	sta	*(__rlulonglong_sloc2_1_0 + 2)
   0099 B6*02         [ 3]  184 	lda	*(__rlulonglong_sloc1_1_0 + 1)
   009B BA*06         [ 3]  185 	ora	*(__rlulonglong_sloc2_1_0 + 1)
   009D B7*06         [ 3]  186 	sta	*(__rlulonglong_sloc2_1_0 + 1)
   009F B6*01         [ 3]  187 	lda	*__rlulonglong_sloc1_1_0
   00A1 BA*05         [ 3]  188 	ora	*__rlulonglong_sloc2_1_0
   00A3 B7*05         [ 3]  189 	sta	*__rlulonglong_sloc2_1_0
   00A5 B6*05         [ 3]  190 	lda	*__rlulonglong_sloc2_1_0
   00A7 C7r00r04      [ 4]  191 	sta	(__rlulonglong_PARM_1 + 0x0004)
   00AA B6*06         [ 3]  192 	lda	*(__rlulonglong_sloc2_1_0 + 1)
   00AC C7r00r05      [ 4]  193 	sta	((__rlulonglong_PARM_1 + 0x0004) + 1)
   00AF B6*07         [ 3]  194 	lda	*(__rlulonglong_sloc2_1_0 + 2)
   00B1 C7r00r06      [ 4]  195 	sta	((__rlulonglong_PARM_1 + 0x0004) + 2)
   00B4 B6*08         [ 3]  196 	lda	*(__rlulonglong_sloc2_1_0 + 3)
   00B6 C7r00r07      [ 4]  197 	sta	((__rlulonglong_PARM_1 + 0x0004) + 3)
                            198 ;../_rlulonglong.c:52: (*bottom) <<= s;
   00B9 C6r00r00      [ 4]  199 	lda	__rlulonglong_PARM_1
   00BC B7*05         [ 3]  200 	sta	*__rlulonglong_sloc2_1_0
   00BE C6r00r01      [ 4]  201 	lda	(__rlulonglong_PARM_1 + 1)
   00C1 B7*06         [ 3]  202 	sta	*(__rlulonglong_sloc2_1_0 + 1)
   00C3 C6r00r02      [ 4]  203 	lda	(__rlulonglong_PARM_1 + 2)
   00C6 B7*07         [ 3]  204 	sta	*(__rlulonglong_sloc2_1_0 + 2)
   00C8 C6r00r03      [ 4]  205 	lda	(__rlulonglong_PARM_1 + 3)
   00CB B7*08         [ 3]  206 	sta	*(__rlulonglong_sloc2_1_0 + 3)
   00CD BE*00         [ 3]  207 	ldx	*__rlulonglong_sloc0_1_0
   00CF 27 0A         [ 3]  208 	beq	00122$
   00D1                     209 00121$:
   00D1 38*08         [ 5]  210 	lsl	*(__rlulonglong_sloc2_1_0 + 3)
   00D3 39*07         [ 5]  211 	rol	*(__rlulonglong_sloc2_1_0 + 2)
   00D5 39*06         [ 5]  212 	rol	*(__rlulonglong_sloc2_1_0 + 1)
   00D7 39*05         [ 5]  213 	rol	*__rlulonglong_sloc2_1_0
   00D9 5B F6         [ 4]  214 	dbnzx	00121$
   00DB                     215 00122$:
   00DB B6*05         [ 3]  216 	lda	*__rlulonglong_sloc2_1_0
   00DD C7r00r00      [ 4]  217 	sta	__rlulonglong_PARM_1
   00E0 B6*06         [ 3]  218 	lda	*(__rlulonglong_sloc2_1_0 + 1)
   00E2 C7r00r01      [ 4]  219 	sta	(__rlulonglong_PARM_1 + 1)
   00E5 B6*07         [ 3]  220 	lda	*(__rlulonglong_sloc2_1_0 + 2)
   00E7 C7r00r02      [ 4]  221 	sta	(__rlulonglong_PARM_1 + 2)
   00EA B6*08         [ 3]  222 	lda	*(__rlulonglong_sloc2_1_0 + 3)
   00EC C7r00r03      [ 4]  223 	sta	(__rlulonglong_PARM_1 + 3)
                            224 ;../_rlulonglong.c:54: return(l);
   00EF C6r00r00      [ 4]  225 	lda	__rlulonglong_PARM_1
   00F2 B7*00         [ 3]  226 	sta	*___SDCC_hc08_ret7
   00F4 C6r00r01      [ 4]  227 	lda	(__rlulonglong_PARM_1 + 1)
   00F7 B7*00         [ 3]  228 	sta	*___SDCC_hc08_ret6
   00F9 C6r00r02      [ 4]  229 	lda	(__rlulonglong_PARM_1 + 2)
   00FC B7*00         [ 3]  230 	sta	*___SDCC_hc08_ret5
   00FE C6r00r03      [ 4]  231 	lda	(__rlulonglong_PARM_1 + 3)
   0101 B7*00         [ 3]  232 	sta	*___SDCC_hc08_ret4
   0103 C6r00r04      [ 4]  233 	lda	(__rlulonglong_PARM_1 + 4)
   0106 B7*00         [ 3]  234 	sta	*___SDCC_hc08_ret3
   0108 C6r00r05      [ 4]  235 	lda	(__rlulonglong_PARM_1 + 5)
   010B B7*00         [ 3]  236 	sta	*___SDCC_hc08_ret2
   010D CEr00r06      [ 4]  237 	ldx	(__rlulonglong_PARM_1 + 6)
   0110 C6r00r07      [ 4]  238 	lda	(__rlulonglong_PARM_1 + 7)
   0113 81            [ 6]  239 	rts
                            240 	.area CSEG    (CODE)
                            241 	.area CONST   (CODE)
                            242 	.area XINIT   (CODE)
                            243 	.area CABS    (ABS,CODE)
