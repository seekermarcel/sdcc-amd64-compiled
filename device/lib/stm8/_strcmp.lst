                                      1 ;--------------------------------------------------------
                                      2 ; File Created by SDCC : free open source ANSI-C Compiler
                                      3 ; Version 3.5.0 #9253 (Apr  4 2022) (Linux)
                                      4 ; This file was generated Mon Apr  4 14:17:15 2022
                                      5 ;--------------------------------------------------------
                                      6 	.module _strcmp
                                      7 	.optsdcc -mstm8
                                      8 	
                                      9 ;--------------------------------------------------------
                                     10 ; Public variables in this module
                                     11 ;--------------------------------------------------------
                                     12 	.globl _strcmp
                                     13 ;--------------------------------------------------------
                                     14 ; ram data
                                     15 ;--------------------------------------------------------
                                     16 	.area DATA
                                     17 ;--------------------------------------------------------
                                     18 ; ram data
                                     19 ;--------------------------------------------------------
                                     20 	.area INITIALIZED
                                     21 ;--------------------------------------------------------
                                     22 ; absolute external ram data
                                     23 ;--------------------------------------------------------
                                     24 	.area DABS (ABS)
                                     25 ;--------------------------------------------------------
                                     26 ; global & static initialisations
                                     27 ;--------------------------------------------------------
                                     28 	.area HOME
                                     29 	.area GSINIT
                                     30 	.area GSFINAL
                                     31 	.area GSINIT
                                     32 ;--------------------------------------------------------
                                     33 ; Home
                                     34 ;--------------------------------------------------------
                                     35 	.area HOME
                                     36 	.area HOME
                                     37 ;--------------------------------------------------------
                                     38 ; code
                                     39 ;--------------------------------------------------------
                                     40 	.area CODE
                                     41 ;	../_strcmp.c: 34: int strcmp ( const char * asrc, const char * adst )
                                     42 ;	-----------------------------------------
                                     43 ;	 function strcmp
                                     44 ;	-----------------------------------------
      000000                         45 _strcmp:
      000000 52 0B            [ 2]   46 	sub	sp, #11
                                     47 ;	../_strcmp.c: 40: const char * src = asrc;
      000002 16 0E            [ 2]   48 	ldw	y, (0x0e, sp)
      000004 17 03            [ 2]   49 	ldw	(0x03, sp), y
                                     50 ;	../_strcmp.c: 41: const char * dst = adst;
      000006 16 10            [ 2]   51 	ldw	y, (0x10, sp)
      000008 17 01            [ 2]   52 	ldw	(0x01, sp), y
                                     53 ;	../_strcmp.c: 43: while( ! (*src - *dst) && *dst)
      00000A                         54 00102$:
      00000A 1E 03            [ 2]   55 	ldw	x, (0x03, sp)
      00000C F6               [ 1]   56 	ld	a, (x)
      00000D 97               [ 1]   57 	ld	xl, a
      00000E 49               [ 1]   58 	rlc	a
      00000F 4F               [ 1]   59 	clr	a
      000010 A2 00            [ 1]   60 	sbc	a, #0x00
      000012 95               [ 1]   61 	ld	xh, a
      000013 16 01            [ 2]   62 	ldw	y, (0x01, sp)
      000015 90 F6            [ 1]   63 	ld	a, (y)
      000017 6B 05            [ 1]   64 	ld	(0x05, sp), a
      000019 7B 05            [ 1]   65 	ld	a, (0x05, sp)
      00001B 6B 0B            [ 1]   66 	ld	(0x0b, sp), a
      00001D 7B 0B            [ 1]   67 	ld	a, (0x0b, sp)
      00001F 49               [ 1]   68 	rlc	a
      000020 4F               [ 1]   69 	clr	a
      000021 A2 00            [ 1]   70 	sbc	a, #0x00
      000023 6B 0A            [ 1]   71 	ld	(0x0a, sp), a
      000025 72 F0 0A         [ 2]   72 	subw	x, (0x0a, sp)
      000028 1F 08            [ 2]   73 	ldw	(0x08, sp), x
      00002A 1E 08            [ 2]   74 	ldw	x, (0x08, sp)
      00002C 26 14            [ 1]   75 	jrne	00104$
      00002E 0D 05            [ 1]   76 	tnz	(0x05, sp)
      000030 27 10            [ 1]   77 	jreq	00104$
                                     78 ;	../_strcmp.c: 44: ++src, ++dst;
      000032 1E 03            [ 2]   79 	ldw	x, (0x03, sp)
      000034 5C               [ 2]   80 	incw	x
      000035 1F 06            [ 2]   81 	ldw	(0x06, sp), x
      000037 16 06            [ 2]   82 	ldw	y, (0x06, sp)
      000039 17 03            [ 2]   83 	ldw	(0x03, sp), y
      00003B 1E 01            [ 2]   84 	ldw	x, (0x01, sp)
      00003D 5C               [ 2]   85 	incw	x
      00003E 1F 01            [ 2]   86 	ldw	(0x01, sp), x
      000040 20 C8            [ 2]   87 	jra	00102$
      000042                         88 00104$:
                                     89 ;	../_strcmp.c: 46: return *src - *dst;
      000042 1E 08            [ 2]   90 	ldw	x, (0x08, sp)
      000044 5B 0B            [ 2]   91 	addw	sp, #11
      000046 81               [ 4]   92 	ret
                                     93 	.area CODE
                                     94 	.area INITIALIZER
                                     95 	.area CABS (ABS)
