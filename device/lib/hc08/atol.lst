                              1 ;--------------------------------------------------------
                              2 ; File Created by SDCC : free open source ANSI-C Compiler
                              3 ; Version 3.5.0 #9253 (Apr  4 2022) (Linux)
                              4 ; This file was generated Mon Apr  4 14:10:32 2022
                              5 ;--------------------------------------------------------
                              6 	.module atol
                              7 	.optsdcc -mhc08
                              8 	
                              9 	.area HOME    (CODE)
                             10 	.area GSINIT0 (CODE)
                             11 	.area GSINIT  (CODE)
                             12 	.area GSFINAL (CODE)
                             13 	.area CSEG    (CODE)
                             14 	.area XINIT   (CODE)
                             15 	.area CONST   (CODE)
                             16 	.area DSEG    (PAG)
                             17 	.area OSEG    (PAG, OVR)
                             18 	.area XSEG
                             19 	.area XISEG
                             20 ;--------------------------------------------------------
                             21 ; Public variables in this module
                             22 ;--------------------------------------------------------
                             23 	.globl _atol
                             24 ;--------------------------------------------------------
                             25 ; ram data
                             26 ;--------------------------------------------------------
                             27 	.area DSEG    (PAG)
   0000                      28 _atol_sloc0_1_0:
   0000                      29 	.ds 1
   0001                      30 _atol_sloc1_1_0:
   0001                      31 	.ds 2
   0003                      32 _atol_sloc2_1_0:
   0003                      33 	.ds 4
   0007                      34 _atol_sloc3_1_0:
   0007                      35 	.ds 4
                             36 ;--------------------------------------------------------
                             37 ; overlayable items in ram 
                             38 ;--------------------------------------------------------
                             39 ;--------------------------------------------------------
                             40 ; absolute ram data
                             41 ;--------------------------------------------------------
                             42 	.area IABS    (ABS)
                             43 	.area IABS    (ABS)
                             44 ;--------------------------------------------------------
                             45 ; absolute external ram data
                             46 ;--------------------------------------------------------
                             47 	.area XABS    (ABS)
                             48 ;--------------------------------------------------------
                             49 ; external initialized ram data
                             50 ;--------------------------------------------------------
                             51 	.area XISEG
                             52 ;--------------------------------------------------------
                             53 ; extended address mode data
                             54 ;--------------------------------------------------------
                             55 	.area XSEG
   0000                      56 _atol_ret_1_37:
   0000                      57 	.ds 4
   0004                      58 _atol_neg_1_37:
   0004                      59 	.ds 1
   0005                      60 _atol___00020002_3_39:
   0005                      61 	.ds 2
   0007                      62 _atol___00020005_3_42:
   0007                      63 	.ds 2
                             64 ;--------------------------------------------------------
                             65 ; global & static initialisations
                             66 ;--------------------------------------------------------
                             67 	.area HOME    (CODE)
                             68 	.area GSINIT  (CODE)
                             69 	.area GSFINAL (CODE)
                             70 	.area GSINIT  (CODE)
                             71 ;--------------------------------------------------------
                             72 ; Home
                             73 ;--------------------------------------------------------
                             74 	.area HOME    (CODE)
                             75 	.area HOME    (CODE)
                             76 ;--------------------------------------------------------
                             77 ; code
                             78 ;--------------------------------------------------------
                             79 	.area CSEG    (CODE)
                             80 ;------------------------------------------------------------
                             81 ;Allocation info for local variables in function 'atol'
                             82 ;------------------------------------------------------------
                             83 ;sloc0                     Allocated with name '_atol_sloc0_1_0'
                             84 ;sloc1                     Allocated with name '_atol_sloc1_1_0'
                             85 ;sloc2                     Allocated with name '_atol_sloc2_1_0'
                             86 ;sloc3                     Allocated with name '_atol_sloc3_1_0'
                             87 ;nptr                      Allocated to registers x h 
                             88 ;__00010004                Allocated to registers 
                             89 ;__00010001                Allocated to registers 
                             90 ;ret                       Allocated with name '_atol_ret_1_37'
                             91 ;neg                       Allocated with name '_atol_neg_1_37'
                             92 ;__00020002                Allocated with name '_atol___00020002_3_39'
                             93 ;c                         Allocated to registers 
                             94 ;__00020005                Allocated with name '_atol___00020005_3_42'
                             95 ;c                         Allocated to registers 
                             96 ;------------------------------------------------------------
                             97 ;../atol.c:34: long int atol(const char *nptr)
                             98 ;	-----------------------------------------
                             99 ;	 function atol
                            100 ;	-----------------------------------------
                            101 ;	Register assignment might be sub-optimal.
                            102 ;	Stack space usage: 0 bytes.
   0000                     103 _atol:
   0000 89            [ 2]  104 	pshx
   0001 97            [ 1]  105 	tax
   0002 8A            [ 2]  106 	pulh
                            107 ;../atol.c:36: long int ret = 0;
   0003 4F            [ 1]  108 	clra
   0004 C7r00r00      [ 4]  109 	sta	_atol_ret_1_37
   0007 C7r00r01      [ 4]  110 	sta	(_atol_ret_1_37 + 1)
   000A C7r00r02      [ 4]  111 	sta	(_atol_ret_1_37 + 2)
   000D C7r00r03      [ 4]  112 	sta	(_atol_ret_1_37 + 3)
                            113 ;../atol.c:39: while (isblank (*nptr))
   0010                     114 00101$:
   0010 F6            [ 2]  115 	lda	,x
   0011 B7*00         [ 3]  116 	sta	*_atol_sloc0_1_0
   0013 B6*00         [ 3]  117 	lda	*_atol_sloc0_1_0
   0015 C7r00r06      [ 4]  118 	sta	(_atol___00020002_3_39 + 1)
   0018 49            [ 1]  119 	rola	
   0019 4F            [ 1]  120 	clra	
   001A A2 00         [ 2]  121 	sbc	#0x00
   001C C7r00r05      [ 4]  122 	sta	_atol___00020002_3_39
                            123 ;./../../include/ctype.h:53: return ((unsigned char)c == ' ' || (unsigned char)c == '\t');
   001F C6r00r06      [ 4]  124 	lda	(_atol___00020002_3_39 + 1)
   0022 41 20 04      [ 4]  125 	cbeqa	#0x20,00115$
   0025 A1 09         [ 2]  126 	cmp	#0x09
   0027 26 04         [ 3]  127 	bne	00131$
   0029                     128 00115$:
                            129 ;../atol.c:40: nptr++;
   0029 AF 01         [ 2]  130 	aix	#1
   002B 20 E3         [ 3]  131 	bra	00101$
   002D                     132 00131$:
                            133 ;../atol.c:42: neg = (*nptr == '-');
   002D B6*00         [ 3]  134 	lda	*_atol_sloc0_1_0
   002F 41 2D 03      [ 4]  135 	cbeqa	#0x2D,00157$
   0032 4F            [ 1]  136 	clra
   0033 20 02         [ 3]  137 	bra	00156$
   0035                     138 00157$:
   0035 A6 01         [ 2]  139 	lda	#0x01
   0037                     140 00156$:
   0037 C7r00r04      [ 4]  141 	sta	_atol_neg_1_37
                            142 ;../atol.c:44: if (*nptr == '-' || *nptr == '+')
   003A 4D            [ 1]  143 	tsta
   003B 26 06         [ 3]  144 	bne	00104$
   003D B6*00         [ 3]  145 	lda	*_atol_sloc0_1_0
   003F A1 2B         [ 2]  146 	cmp	#0x2B
   0041 26 02         [ 3]  147 	bne	00129$
   0043                     148 00104$:
                            149 ;../atol.c:45: nptr++;
   0043 AF 01         [ 2]  150 	aix	#1
                            151 ;../atol.c:47: while (isdigit (*nptr))
   0045                     152 00129$:
   0045                     153 00107$:
   0045 F6            [ 2]  154 	lda	,x
   0046 B7*02         [ 3]  155 	sta	*(_atol_sloc1_1_0 + 1)
   0048 49            [ 1]  156 	rola	
   0049 4F            [ 1]  157 	clra	
   004A A2 00         [ 2]  158 	sbc	#0x00
   004C B7*01         [ 3]  159 	sta	*_atol_sloc1_1_0
   004E B6*01         [ 3]  160 	lda	*_atol_sloc1_1_0
   0050 C7r00r07      [ 4]  161 	sta	_atol___00020005_3_42
   0053 B6*02         [ 3]  162 	lda	*(_atol_sloc1_1_0 + 1)
   0055 C7r00r08      [ 4]  163 	sta	(_atol___00020005_3_42 + 1)
                            164 ;./../../include/ctype.h:62: return ((unsigned char)c >= '0' && (unsigned char)c <= '9');
   0058 C6r00r08      [ 4]  165 	lda	(_atol___00020005_3_42 + 1)
   005B A1 30         [ 2]  166 	cmp	#0x30
   005D 25 76         [ 3]  167 	bcs	00109$
   005F A1 39         [ 2]  168 	cmp	#0x39
   0061 22 72         [ 3]  169 	bhi	00109$
                            170 ;../atol.c:48: ret = ret * 10 + (*(nptr++) - '0');
   0063 4F            [ 1]  171 	clra
   0064 C7r00r00      [ 4]  172 	sta	__mullong_PARM_1
   0067 C7r00r01      [ 4]  173 	sta	(__mullong_PARM_1 + 1)
   006A C7r00r02      [ 4]  174 	sta	(__mullong_PARM_1 + 2)
   006D A6 0A         [ 2]  175 	lda	#0x0A
   006F C7r00r03      [ 4]  176 	sta	(__mullong_PARM_1 + 3)
   0072 C6r00r00      [ 4]  177 	lda	_atol_ret_1_37
   0075 C7r00r00      [ 4]  178 	sta	__mullong_PARM_2
   0078 C6r00r01      [ 4]  179 	lda	(_atol_ret_1_37 + 1)
   007B C7r00r01      [ 4]  180 	sta	(__mullong_PARM_2 + 1)
   007E C6r00r02      [ 4]  181 	lda	(_atol_ret_1_37 + 2)
   0081 C7r00r02      [ 4]  182 	sta	(__mullong_PARM_2 + 2)
   0084 C6r00r03      [ 4]  183 	lda	(_atol_ret_1_37 + 3)
   0087 C7r00r03      [ 4]  184 	sta	(__mullong_PARM_2 + 3)
   008A 89            [ 2]  185 	pshx
   008B 8B            [ 2]  186 	pshh
   008C CDr00r00      [ 5]  187 	jsr	__mullong
   008F B7*06         [ 3]  188 	sta	*(_atol_sloc2_1_0 + 3)
   0091 BF*05         [ 3]  189 	stx	*(_atol_sloc2_1_0 + 2)
   0093 4E*00*04      [ 5]  190 	mov	*___SDCC_hc08_ret2,*(_atol_sloc2_1_0 + 1)
   0096 4E*00*03      [ 5]  191 	mov	*___SDCC_hc08_ret3,*_atol_sloc2_1_0
   0099 8A            [ 2]  192 	pulh
   009A 88            [ 2]  193 	pulx
   009B AF 01         [ 2]  194 	aix	#1
   009D 89            [ 2]  195 	pshx
   009E 8B            [ 2]  196 	pshh
   009F 55*01         [ 4]  197 	ldhx	*_atol_sloc1_1_0
   00A1 AF D0         [ 2]  198 	aix	#-48
   00A3 35*01         [ 4]  199 	sthx	*_atol_sloc1_1_0
   00A5 8A            [ 2]  200 	pulh
   00A6 88            [ 2]  201 	pulx
   00A7 4E*02*0A      [ 5]  202 	mov	*(_atol_sloc1_1_0 + 1),*(_atol_sloc3_1_0 + 3)
   00AA B6*01         [ 3]  203 	lda	*_atol_sloc1_1_0
   00AC B7*09         [ 3]  204 	sta	*(_atol_sloc3_1_0 + 2)
   00AE 49            [ 1]  205 	rola	
   00AF 4F            [ 1]  206 	clra	
   00B0 A2 00         [ 2]  207 	sbc	#0x00
   00B2 B7*08         [ 3]  208 	sta	*(_atol_sloc3_1_0 + 1)
   00B4 B7*07         [ 3]  209 	sta	*_atol_sloc3_1_0
   00B6 B6*06         [ 3]  210 	lda	*(_atol_sloc2_1_0 + 3)
   00B8 BB*0A         [ 3]  211 	add	*(_atol_sloc3_1_0 + 3)
   00BA C7r00r03      [ 4]  212 	sta	(_atol_ret_1_37 + 3)
   00BD B6*05         [ 3]  213 	lda	*(_atol_sloc2_1_0 + 2)
   00BF B9*09         [ 3]  214 	adc	*(_atol_sloc3_1_0 + 2)
   00C1 C7r00r02      [ 4]  215 	sta	(_atol_ret_1_37 + 2)
   00C4 B6*04         [ 3]  216 	lda	*(_atol_sloc2_1_0 + 1)
   00C6 B9*08         [ 3]  217 	adc	*(_atol_sloc3_1_0 + 1)
   00C8 C7r00r01      [ 4]  218 	sta	(_atol_ret_1_37 + 1)
   00CB B6*03         [ 3]  219 	lda	*_atol_sloc2_1_0
   00CD B9*07         [ 3]  220 	adc	*_atol_sloc3_1_0
   00CF C7r00r00      [ 4]  221 	sta	_atol_ret_1_37
   00D2 CCr00r45      [ 3]  222 	jmp	00107$
   00D5                     223 00109$:
                            224 ;../atol.c:50: return (neg ? -ret : ret); // Since -LONG_MIN is LONG_MIN in sdcc, the result value always turns out ok.
   00D5 C6r00r04      [ 4]  225 	lda	_atol_neg_1_37
   00D8 27 1A         [ 3]  226 	beq	00120$
   00DA 4F            [ 1]  227 	clra
   00DB C0r00r03      [ 4]  228 	sub	(_atol_ret_1_37 + 3)
   00DE B7*0A         [ 3]  229 	sta	*(_atol_sloc3_1_0 + 3)
   00E0 4F            [ 1]  230 	clra
   00E1 C2r00r02      [ 4]  231 	sbc	(_atol_ret_1_37 + 2)
   00E4 B7*09         [ 3]  232 	sta	*(_atol_sloc3_1_0 + 2)
   00E6 4F            [ 1]  233 	clra
   00E7 C2r00r01      [ 4]  234 	sbc	(_atol_ret_1_37 + 1)
   00EA B7*08         [ 3]  235 	sta	*(_atol_sloc3_1_0 + 1)
   00EC 4F            [ 1]  236 	clra
   00ED C2r00r00      [ 4]  237 	sbc	_atol_ret_1_37
   00F0 B7*07         [ 3]  238 	sta	*_atol_sloc3_1_0
   00F2 20 0B         [ 3]  239 	bra	00121$
   00F4                     240 00120$:
   00F4 45r00r00      [ 3]  241 	ldhx	#_atol_ret_1_37
   00F7 7E*07         [ 4]  242 	mov	,x+,*_atol_sloc3_1_0
   00F9 7E*08         [ 4]  243 	mov	,x+,*(_atol_sloc3_1_0 + 1)
   00FB 7E*09         [ 4]  244 	mov	,x+,*(_atol_sloc3_1_0 + 2)
   00FD 7E*0A         [ 4]  245 	mov	,x+,*(_atol_sloc3_1_0 + 3)
   00FF                     246 00121$:
   00FF 4E*07*00      [ 5]  247 	mov	*_atol_sloc3_1_0,*___SDCC_hc08_ret3
   0102 4E*08*00      [ 5]  248 	mov	*(_atol_sloc3_1_0 + 1),*___SDCC_hc08_ret2
   0105 BE*09         [ 3]  249 	ldx	*(_atol_sloc3_1_0 + 2)
   0107 B6*0A         [ 3]  250 	lda	*(_atol_sloc3_1_0 + 3)
   0109 81            [ 4]  251 	rts
                            252 	.area CSEG    (CODE)
                            253 	.area CONST   (CODE)
                            254 	.area XINIT   (CODE)
                            255 	.area CABS    (ABS,CODE)
