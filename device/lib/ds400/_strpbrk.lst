                                      1 ;--------------------------------------------------------
                                      2 ; File Created by SDCC : free open source ANSI-C Compiler
                                      3 ; Version 3.5.0 #9253 (Apr  4 2022) (Linux)
                                      4 ; This file was generated Mon Apr  4 14:10:30 2022
                                      5 ;--------------------------------------------------------
                                      6 	.module _strpbrk
                                      7 	.optsdcc -mds400 --model-flat24
                                      8 	
                                      9 ;--------------------------------------------------------
                                     10 ; CPU specific extensions
                                     11 ;--------------------------------------------------------
                                     12 	.DS80C390
                                     13 	.amode	2	; 24 bit flat addressing
                           000082    14 dpl	=	0x82
                           000083    15 dph	=	0x83
                           000084    16 dpl1	=	0x84
                           000085    17 dph1	=	0x85
                           000086    18 dps	=	0x86
                           000093    19 dpx	=	0x93
                           000095    20 dpx1	=	0x95
                           00009B    21 esp	=	0x9B
                           00009C    22 ap	=	0x9C
                           00009C    23 acc1	=	0x9C
                           0000D1    24 mcnt0	=	0xD1
                           0000D2    25 mcnt1	=	0xD2
                           0000D3    26 ma	=	0xD3
                           0000D4    27 mb	=	0xD4
                           0000D5    28 mc	=	0xD5
                           00009D    29 acon	=	0x9D
                           0000D1    30 F1	=	0xD1	; user flag
                                     31 ;--------------------------------------------------------
                                     32 ; Public variables in this module
                                     33 ;--------------------------------------------------------
                                     34 	.globl _strchr
                                     35 	.globl _strpbrk_PARM_2
                                     36 	.globl _strpbrk
                                     37 ;--------------------------------------------------------
                                     38 ; special function registers
                                     39 ;--------------------------------------------------------
                                     40 ;--------------------------------------------------------
                                     41 ; special function bits
                                     42 ;--------------------------------------------------------
                                     43 ;--------------------------------------------------------
                                     44 ; overlayable register banks
                                     45 ;--------------------------------------------------------
                                     46 	.area REG_BANK_0	(REL,OVR,DATA)
      000000                         47 	.ds 8
                                     48 	.area REG_BANK_3	(REL,OVR,DATA)
      000000                         49 	.ds 8
                                     50 ;--------------------------------------------------------
                                     51 ; internal ram data
                                     52 ;--------------------------------------------------------
                                     53 	.area DSEG    (DATA)
                                     54 ;--------------------------------------------------------
                                     55 ; overlayable items in internal ram 
                                     56 ;--------------------------------------------------------
                                     57 ;--------------------------------------------------------
                                     58 ; indirectly addressable internal ram data
                                     59 ;--------------------------------------------------------
                                     60 	.area ISEG    (DATA)
                                     61 ;--------------------------------------------------------
                                     62 ; absolute internal ram data
                                     63 ;--------------------------------------------------------
                                     64 	.area IABS    (ABS,DATA)
                                     65 	.area IABS    (ABS,DATA)
                                     66 ;--------------------------------------------------------
                                     67 ; bit data
                                     68 ;--------------------------------------------------------
                                     69 	.area BSEG    (BIT)
                                     70 ;--------------------------------------------------------
                                     71 ; paged external ram data
                                     72 ;--------------------------------------------------------
                                     73 	.area PSEG    (PAG,XDATA)
                                     74 ;--------------------------------------------------------
                                     75 ; external ram data
                                     76 ;--------------------------------------------------------
                                     77 	.area XSEG    (XDATA)
      000000                         78 _strpbrk_PARM_2:
      000000                         79 	.ds 4
      000004                         80 _strpbrk_string_1_21:
      000004                         81 	.ds 4
      000008                         82 _strpbrk_ret_1_22:
      000008                         83 	.ds 4
      00000C                         84 _strpbrk_p_2_23:
      00000C                         85 	.ds 4
                                     86 ;--------------------------------------------------------
                                     87 ; absolute external ram data
                                     88 ;--------------------------------------------------------
                                     89 	.area XABS    (ABS,XDATA)
                                     90 ;--------------------------------------------------------
                                     91 ; external initialized ram data
                                     92 ;--------------------------------------------------------
                                     93 	.area XISEG   (XDATA)
                                     94 ;--------------------------------------------------------
                                     95 ; global & static initialisations
                                     96 ;--------------------------------------------------------
                                     97 	.area HOME    (CODE)
                                     98 	.area GSINIT  (CODE)
                                     99 	.area GSFINAL (CODE)
                                    100 	.area GSINIT  (CODE)
                                    101 ;--------------------------------------------------------
                                    102 ; Home
                                    103 ;--------------------------------------------------------
                                    104 	.area HOME    (CODE)
                                    105 	.area HOME    (CODE)
                                    106 ;--------------------------------------------------------
                                    107 ; code
                                    108 ;--------------------------------------------------------
                                    109 	.area CSEG    (CODE)
                                    110 ;------------------------------------------------------------
                                    111 ;Allocation info for local variables in function 'strpbrk'
                                    112 ;------------------------------------------------------------
                                    113 ;ch                        Allocated to registers r7 
                                    114 ;control                   Allocated with name '_strpbrk_PARM_2'
                                    115 ;string                    Allocated with name '_strpbrk_string_1_21'
                                    116 ;ret                       Allocated with name '_strpbrk_ret_1_22'
                                    117 ;p                         Allocated with name '_strpbrk_p_2_23'
                                    118 ;------------------------------------------------------------
                                    119 ;	_strpbrk.c:31: char * strpbrk ( const char * string, const char * control )
                                    120 ;	-----------------------------------------
                                    121 ;	 function strpbrk
                                    122 ;	-----------------------------------------
      000000                        123 _strpbrk:
                           000002   124 	ar2 = 0x02
                           000003   125 	ar3 = 0x03
                           000004   126 	ar4 = 0x04
                           000005   127 	ar5 = 0x05
                           000006   128 	ar6 = 0x06
                           000007   129 	ar7 = 0x07
                           000000   130 	ar0 = 0x00
                           000001   131 	ar1 = 0x01
      000000 75 86 01         [12]  132 	mov     dps, #1
      000003 90s00r00r04      [12]  133 	mov     dptr, #_strpbrk_string_1_21
      000007 E5 82            [ 8]  134 	mov	a,dpl
      000009 F0               [ 8]  135 	movx	@dptr,a
      00000A A3               [12]  136 	inc	dptr
      00000B E5 83            [ 8]  137 	mov	a,dph
      00000D F0               [ 8]  138 	movx	@dptr,a
      00000E A3               [12]  139 	inc	dptr
      00000F E5 93            [ 8]  140 	mov	a,dpx
      000011 F0               [ 8]  141 	movx	@dptr,a
      000012 A3               [12]  142 	inc	dptr
      000013 E5 F0            [ 8]  143 	mov	a,b
      000015 F0               [ 8]  144 	movx	@dptr,a
      000016 75 86 00         [12]  145 	mov	dps,#0
                                    146 ;	_strpbrk.c:33: char *ret = NULL;
                                    147 ;	genAssign: resultIsFar = TRUE
      000019 90s00r00r08      [12]  148 	mov	dptr,#_strpbrk_ret_1_22
      00001D E4               [ 4]  149 	clr	a
      00001E F0               [ 8]  150 	movx	@dptr,a
      00001F A3               [12]  151 	inc	dptr
      000020 F0               [ 8]  152 	movx	@dptr,a
      000021 A3               [12]  153 	inc	dptr
      000022 F0               [ 8]  154 	movx	@dptr,a
      000023 A3               [12]  155 	inc	dptr
      000024 E4               [ 4]  156 	clr	a
      000025 F0               [ 8]  157 	movx	@dptr,a
                                    158 ;	_strpbrk.c:36: while (ch = *control) {
      000026 90s00r00r00      [12]  159 	mov	dptr,#_strpbrk_PARM_2
                                    160 ;	genAssign: resultIsFar = FALSE
      00002A E0               [ 8]  161 	movx	a,@dptr
      00002B FA               [ 4]  162 	mov	r2,a
      00002C A3               [12]  163 	inc	dptr
      00002D E0               [ 8]  164 	movx	a,@dptr
      00002E FB               [ 4]  165 	mov	r3,a
      00002F A3               [12]  166 	inc	dptr
      000030 E0               [ 8]  167 	movx	a,@dptr
      000031 FC               [ 4]  168 	mov	r4,a
      000032 A3               [12]  169 	inc	dptr
      000033 E0               [ 8]  170 	movx	a,@dptr
      000034 FD               [ 4]  171 	mov	r5,a
      000035                        172 00105$:
      000035 8A 82            [ 8]  173 	mov	dpl,r2
      000037 8B 83            [ 8]  174 	mov	dph,r3
      000039 8C 93            [ 8]  175 	mov	dpx,r4
      00003B 8D F0            [ 8]  176 	mov	b,r5
      00003D 12s00r00r00      [16]  177 	lcall	__gptrget
                                    178 ;	genAssign: resultIsFar = FALSE
      000041 FE               [ 4]  179 	mov  r6,a
      000042 8E 07            [ 8]  180 	mov  ar7,r6 
      000044 70 04            [12]  181 	jnz	00123$
      000046 02s00r01r30      [16]  182 	ljmp	00107$
      00004A                        183 00123$:
                                    184 ;	_strpbrk.c:37: char * p = strchr(string, ch);
      00004A 90s00r00r00      [12]  185 	mov	dptr,#_strchr_PARM_2
      00004E EF               [ 4]  186 	mov	a,r7
      00004F F0               [ 8]  187 	movx	@dptr,a
      000050 EF               [ 4]  188 	mov	a,r7
      000051 33               [ 4]  189 	rlc	a
      000052 95 E0            [ 8]  190 	subb	a,acc
      000054 A3               [12]  191 	inc	dptr
      000055 F0               [ 8]  192 	movx	@dptr,a
      000056 C0 02            [ 8]  193 	push	ar2
      000058 C0 03            [ 8]  194 	push	ar3
      00005A C0 04            [ 8]  195 	push	ar4
      00005C C0 05            [ 8]  196 	push	ar5
      00005E 05 86            [ 8]  197 	inc	dps
      000060 90s00r00r04      [12]  198 	mov	dptr,#_strpbrk_string_1_21
      000064 E0               [ 8]  199 	movx	a,@dptr
      000065 F5 82            [ 8]  200 	mov	dpl,a
      000067 A3               [12]  201 	inc	dptr
      000068 E0               [ 8]  202 	movx	a,@dptr
      000069 F5 83            [ 8]  203 	mov	dph,a
      00006B A3               [12]  204 	inc	dptr
      00006C E0               [ 8]  205 	movx	a,@dptr
      00006D F5 93            [ 8]  206 	mov	dpx,a
      00006F A3               [12]  207 	inc	dptr
      000070 E0               [ 8]  208 	movx	a,@dptr
      000071 F5 F0            [ 8]  209 	mov	b,a
      000073 75 86 00         [12]  210 	mov	dps,#0
      000076 12s00r00r00      [16]  211 	lcall	_strchr
      00007A AE 82            [ 8]  212 	mov	r6,dpl
      00007C AF 83            [ 8]  213 	mov	r7,dph
      00007E A8 93            [ 8]  214 	mov	r0,dpx
      000080 A9 F0            [ 8]  215 	mov	r1,b
      000082 D0 05            [ 8]  216 	pop	ar5
      000084 D0 04            [ 8]  217 	pop	ar4
      000086 D0 03            [ 8]  218 	pop	ar3
      000088 D0 02            [ 8]  219 	pop	ar2
                                    220 ;	genAssign: resultIsFar = TRUE
      00008A 90s00r00r0C      [12]  221 	mov	dptr,#_strpbrk_p_2_23
      00008E EE               [ 4]  222 	mov	a,r6
      00008F F0               [ 8]  223 	movx	@dptr,a
      000090 A3               [12]  224 	inc	dptr
      000091 EF               [ 4]  225 	mov	a,r7
      000092 F0               [ 8]  226 	movx	@dptr,a
      000093 A3               [12]  227 	inc	dptr
      000094 E8               [ 4]  228 	mov	a,r0
      000095 F0               [ 8]  229 	movx	@dptr,a
      000096 A3               [12]  230 	inc	dptr
      000097 E9               [ 4]  231 	mov	a,r1
      000098 F0               [ 8]  232 	movx	@dptr,a
                                    233 ;	_strpbrk.c:38: if (p != NULL && (ret == NULL || p < ret)) {
      000099 90s00r00r0C      [12]  234 	mov	dptr,#_strpbrk_p_2_23
      00009D E0               [ 8]  235 	movx	a,@dptr
      00009E F5 F0            [ 8]  236 	mov	b,a
      0000A0 A3               [12]  237 	inc	dptr
      0000A1 E0               [ 8]  238 	movx	a,@dptr
      0000A2 42 F0            [ 8]  239 	orl	b,a
      0000A4 A3               [12]  240 	inc	dptr
      0000A5 E0               [ 8]  241 	movx	a,@dptr
      0000A6 45 F0            [ 8]  242 	orl	a,b
      0000A8 60 79            [12]  243 	jz   00102$
      0000AA                        244 00124$:
      0000AA 90s00r00r08      [12]  245 	mov	dptr,#_strpbrk_ret_1_22
      0000AE E0               [ 8]  246 	movx	a,@dptr
      0000AF F5 F0            [ 8]  247 	mov	b,a
      0000B1 A3               [12]  248 	inc	dptr
      0000B2 E0               [ 8]  249 	movx	a,@dptr
      0000B3 42 F0            [ 8]  250 	orl	b,a
      0000B5 A3               [12]  251 	inc	dptr
      0000B6 E0               [ 8]  252 	movx	a,@dptr
      0000B7 45 F0            [ 8]  253 	orl	a,b
      0000B9 60 4C            [12]  254 	jz  00101$
      0000BB                        255 00125$:
      0000BB C0 02            [ 8]  256 	push	ar2
      0000BD C0 03            [ 8]  257 	push	ar3
      0000BF C0 04            [ 8]  258 	push	ar4
      0000C1 C0 05            [ 8]  259 	push	ar5
      0000C3 90s00r00r0C      [12]  260 	mov	dptr,#_strpbrk_p_2_23
                                    261 ;	genAssign: resultIsFar = FALSE
      0000C7 E0               [ 8]  262 	movx	a,@dptr
      0000C8 FA               [ 4]  263 	mov	r2,a
      0000C9 A3               [12]  264 	inc	dptr
      0000CA E0               [ 8]  265 	movx	a,@dptr
      0000CB FB               [ 4]  266 	mov	r3,a
      0000CC A3               [12]  267 	inc	dptr
      0000CD E0               [ 8]  268 	movx	a,@dptr
      0000CE FC               [ 4]  269 	mov	r4,a
      0000CF A3               [12]  270 	inc	dptr
      0000D0 E0               [ 8]  271 	movx	a,@dptr
      0000D1 FD               [ 4]  272 	mov	r5,a
      0000D2 90s00r00r08      [12]  273 	mov	dptr,#_strpbrk_ret_1_22
                                    274 ;	genAssign: resultIsFar = FALSE
      0000D6 E0               [ 8]  275 	movx	a,@dptr
      0000D7 FE               [ 4]  276 	mov	r6,a
      0000D8 A3               [12]  277 	inc	dptr
      0000D9 E0               [ 8]  278 	movx	a,@dptr
      0000DA FF               [ 4]  279 	mov	r7,a
      0000DB A3               [12]  280 	inc	dptr
      0000DC E0               [ 8]  281 	movx	a,@dptr
      0000DD F8               [ 4]  282 	mov	r0,a
      0000DE A3               [12]  283 	inc	dptr
      0000DF E0               [ 8]  284 	movx	a,@dptr
      0000E0 F9               [ 4]  285 	mov	r1,a
      0000E1 C0 02            [ 8]  286 	push	ar2
      0000E3 C0 03            [ 8]  287 	push	ar3
      0000E5 C0 04            [ 8]  288 	push	ar4
      0000E7 C0 05            [ 8]  289 	push	ar5
      0000E9 8E 82            [ 8]  290 	mov	dpl,r6
      0000EB 8F 83            [ 8]  291 	mov	dph,r7
      0000ED 88 93            [ 8]  292 	mov	dpx,r0
      0000EF 89 F0            [ 8]  293 	mov	b,r1
      0000F1 12s00r00r00      [16]  294 	lcall	___gptr_cmp
      0000F5 15 81            [ 8]  295 	dec	sp
      0000F7 15 81            [ 8]  296 	dec	sp
      0000F9 15 81            [ 8]  297 	dec	sp
      0000FB 15 81            [ 8]  298 	dec	sp
      0000FD D0 05            [ 8]  299 	pop	ar5
      0000FF D0 04            [ 8]  300 	pop	ar4
      000101 D0 03            [ 8]  301 	pop	ar3
      000103 D0 02            [ 8]  302 	pop	ar2
      000105 50 1C            [12]  303 	jnc  00102$
      000107                        304 00126$:
      000107                        305 00101$:
                                    306 ;	_strpbrk.c:39: ret = p;
      000107 90s00r00r0C      [12]  307 	mov	dptr,#_strpbrk_p_2_23
                                    308 ;	genAssign: resultIsFar = TRUE
      00010B 75 86 21         [12]  309 	mov	dps,#0x21
      00010E 90s00r00r08      [12]  310 	mov	dptr,#_strpbrk_ret_1_22
      000112 E0               [ 8]  311 	movx	a,@dptr
      000113 F0               [ 8]  312 	movx	@dptr,a
      000114 A3               [12]  313 	inc	dptr
      000115 A3               [12]  314 	inc	dptr
      000116 E0               [ 8]  315 	movx	a,@dptr
      000117 F0               [ 8]  316 	movx	@dptr,a
      000118 A3               [12]  317 	inc	dptr
      000119 A3               [12]  318 	inc	dptr
      00011A E0               [ 8]  319 	movx	a,@dptr
      00011B F0               [ 8]  320 	movx	@dptr,a
      00011C A3               [12]  321 	inc	dptr
      00011D A3               [12]  322 	inc	dptr
      00011E E0               [ 8]  323 	movx	a,@dptr
      00011F F0               [ 8]  324 	movx	@dptr,a
      000120 75 86 00         [12]  325 	mov	dps,#0
      000123                        326 00102$:
                                    327 ;	_strpbrk.c:41: control++;
      000123 0A               [ 4]  328 	inc	r2
      000124 BA 00 05         [16]  329 	cjne	r2,#0x00,00127$
      000127 0B               [ 4]  330 	inc	r3
      000128 BB 00 01         [16]  331 	cjne	r3,#0x00,00127$
      00012B 0C               [ 4]  332 	inc	r4
      00012C                        333 00127$:
      00012C 02s00r00r35      [16]  334 	ljmp	00105$
      000130                        335 00107$:
                                    336 ;	_strpbrk.c:44: return (ret);
      000130 75 86 01         [12]  337 	mov     dps, #1
      000133 90s00r00r08      [12]  338 	mov     dptr, #_strpbrk_ret_1_22
      000137 E0               [ 8]  339 	movx	a,@dptr
      000138 F5 82            [ 8]  340 	mov	dpl,a
      00013A A3               [12]  341 	inc	dptr
      00013B E0               [ 8]  342 	movx	a,@dptr
      00013C F5 83            [ 8]  343 	mov	dph,a
      00013E A3               [12]  344 	inc	dptr
      00013F E0               [ 8]  345 	movx	a,@dptr
      000140 F5 93            [ 8]  346 	mov	dpx,a
      000142 A3               [12]  347 	inc	dptr
      000143 E0               [ 8]  348 	movx	a,@dptr
      000144 F5 F0            [ 8]  349 	mov	b,a
      000146 75 86 00         [12]  350 	mov	dps,#0
      000149                        351 00108$:
      000149 22               [16]  352 	ret
                                    353 	.area CSEG    (CODE)
                                    354 	.area CONST   (CODE)
                                    355 	.area XINIT   (CODE)
                                    356 	.area CABS    (ABS,CODE)
