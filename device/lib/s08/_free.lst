                              1 ;--------------------------------------------------------
                              2 ; File Created by SDCC : free open source ANSI-C Compiler
                              3 ; Version 3.5.0 #9253 (Apr  4 2022) (Linux)
                              4 ; This file was generated Mon Apr  4 14:10:37 2022
                              5 ;--------------------------------------------------------
                              6 	.cs08
                              7 	.module _free
                              8 	.optsdcc -ms08
                              9 	
                             10 	.area HOME    (CODE)
                             11 	.area GSINIT0 (CODE)
                             12 	.area GSINIT  (CODE)
                             13 	.area GSFINAL (CODE)
                             14 	.area CSEG    (CODE)
                             15 	.area XINIT   (CODE)
                             16 	.area CONST   (CODE)
                             17 	.area DSEG    (PAG)
                             18 	.area OSEG    (PAG, OVR)
                             19 	.area XSEG
                             20 	.area XISEG
                             21 ;--------------------------------------------------------
                             22 ; Public variables in this module
                             23 ;--------------------------------------------------------
                             24 	.globl __sdcc_find_memheader
                             25 	.globl __sdcc_prev_memheader
                             26 	.globl _free
                             27 ;--------------------------------------------------------
                             28 ; ram data
                             29 ;--------------------------------------------------------
                             30 	.area DSEG    (PAG)
   0000                      31 _free_sloc0_1_0:
   0000                      32 	.ds 2
                             33 ;--------------------------------------------------------
                             34 ; overlayable items in ram 
                             35 ;--------------------------------------------------------
                             36 ;--------------------------------------------------------
                             37 ; absolute ram data
                             38 ;--------------------------------------------------------
                             39 	.area IABS    (ABS)
                             40 	.area IABS    (ABS)
                             41 ;--------------------------------------------------------
                             42 ; absolute external ram data
                             43 ;--------------------------------------------------------
                             44 	.area XABS    (ABS)
                             45 ;--------------------------------------------------------
                             46 ; external initialized ram data
                             47 ;--------------------------------------------------------
                             48 	.area XISEG
                             49 ;--------------------------------------------------------
                             50 ; extended address mode data
                             51 ;--------------------------------------------------------
                             52 	.area XSEG
   0000                      53 __sdcc_prev_memheader::
   0000                      54 	.ds 2
   0002                      55 __sdcc_find_memheader_pthis_1_6:
   0002                      56 	.ds 2
                             57 ;--------------------------------------------------------
                             58 ; global & static initialisations
                             59 ;--------------------------------------------------------
                             60 	.area HOME    (CODE)
                             61 	.area GSINIT  (CODE)
                             62 	.area GSFINAL (CODE)
                             63 	.area GSINIT  (CODE)
                             64 ;--------------------------------------------------------
                             65 ; Home
                             66 ;--------------------------------------------------------
                             67 	.area HOME    (CODE)
                             68 	.area HOME    (CODE)
                             69 ;--------------------------------------------------------
                             70 ; code
                             71 ;--------------------------------------------------------
                             72 	.area CSEG    (CODE)
                             73 ;------------------------------------------------------------
                             74 ;Allocation info for local variables in function '_sdcc_find_memheader'
                             75 ;------------------------------------------------------------
                             76 ;p                         Allocated to registers x h 
                             77 ;pthis                     Allocated with name '__sdcc_find_memheader_pthis_1_6'
                             78 ;cur_header                Allocated to registers x h 
                             79 ;------------------------------------------------------------
                             80 ;../_free.c:129: MEMHEADER __xdata * _sdcc_find_memheader(void __xdata * p)
                             81 ;	-----------------------------------------
                             82 ;	 function _sdcc_find_memheader
                             83 ;	-----------------------------------------
                             84 ;	Register assignment is optimal.
                             85 ;	Stack space usage: 0 bytes.
   0000                      86 __sdcc_find_memheader:
   0000 89            [ 2]   87 	pshx
   0001 97            [ 1]   88 	tax
   0002 8A            [ 3]   89 	pulh
                             90 ;../_free.c:134: if (!p)
   0003 65 00 00      [ 3]   91 	cphx	#0x00
   0006 26 03         [ 3]   92 	bne	00102$
                             93 ;../_free.c:135: return NULL;
   0008 4F            [ 1]   94 	clra
   0009 97            [ 1]   95 	tax
   000A 81            [ 6]   96 	rts
   000B                      97 00102$:
                             98 ;../_free.c:136: pthis = (MEMHEADER __xdata *) p;
                             99 ;../_free.c:137: pthis -= 1; //to start of header
   000B AF FC         [ 2]  100 	aix	#-4
   000D 96r00r02      [ 5]  101 	sthx	__sdcc_find_memheader_pthis_1_6
                            102 ;../_free.c:138: cur_header = _sdcc_first_memheader;
   0010 32r00r00      [ 5]  103 	ldhx	__sdcc_first_memheader
                            104 ;../_free.c:139: _sdcc_prev_memheader = NULL;
   0013 4F            [ 1]  105 	clra
   0014 C7r00r00      [ 4]  106 	sta	__sdcc_prev_memheader
   0017 C7r00r01      [ 4]  107 	sta	(__sdcc_prev_memheader + 1)
                            108 ;../_free.c:140: while (cur_header && pthis != cur_header)
   001A                     109 00104$:
   001A 65 00 00      [ 3]  110 	cphx	#0x00
   001D 27 13         [ 3]  111 	beq	00106$
   001F C3r00r03      [ 4]  112 	cpx	(__sdcc_find_memheader_pthis_1_6 + 1)
   0022 26 07         [ 3]  113 	bne	00127$
   0024 8B            [ 2]  114 	pshh
   0025 86            [ 3]  115 	pula
   0026 C1r00r02      [ 4]  116 	cmp	__sdcc_find_memheader_pthis_1_6
   0029 27 07         [ 3]  117 	beq	00106$
   002B                     118 00127$:
                            119 ;../_free.c:142: _sdcc_prev_memheader = cur_header;
   002B 96r00r00      [ 5]  120 	sthx	__sdcc_prev_memheader
                            121 ;../_free.c:143: cur_header = cur_header->next;
   002E 9E AE         [ 5]  122 	ldhx	,x
   0030 20 E8         [ 3]  123 	bra	00104$
   0032                     124 00106$:
                            125 ;../_free.c:145: return (cur_header);
   0032 89            [ 2]  126 	pshx
   0033 8B            [ 2]  127 	pshh
   0034 88            [ 3]  128 	pulx
   0035 86            [ 3]  129 	pula
   0036 81            [ 6]  130 	rts
                            131 ;------------------------------------------------------------
                            132 ;Allocation info for local variables in function 'free'
                            133 ;------------------------------------------------------------
                            134 ;sloc0                     Allocated with name '_free_sloc0_1_0'
                            135 ;p                         Allocated to registers a x 
                            136 ;pthis                     Allocated to registers x h 
                            137 ;------------------------------------------------------------
                            138 ;../_free.c:148: void free (void * p)
                            139 ;	-----------------------------------------
                            140 ;	 function free
                            141 ;	-----------------------------------------
                            142 ;	Register assignment is optimal.
                            143 ;	Stack space usage: 0 bytes.
   0037                     144 _free:
                            145 ;../_free.c:154: pthis = _sdcc_find_memheader(p);
   0037 CDr00r00      [ 6]  146 	jsr	__sdcc_find_memheader
   003A 87            [ 2]  147 	psha
   003B 89            [ 2]  148 	pshx
   003C 8A            [ 3]  149 	pulh
   003D 88            [ 3]  150 	pulx
                            151 ;../_free.c:155: if (pthis) //For allocated pointers only!
   003E 65 00 00      [ 3]  152 	cphx	#0x00
   0041 27 22         [ 3]  153 	beq	00106$
                            154 ;../_free.c:157: if (!_sdcc_prev_memheader)
   0043 C6r00r00      [ 4]  155 	lda	__sdcc_prev_memheader
   0046 CAr00r01      [ 4]  156 	ora	(__sdcc_prev_memheader + 1)
   0049 26 06         [ 3]  157 	bne	00102$
                            158 ;../_free.c:159: pthis->len = 0;
   004B 4F            [ 1]  159 	clra
   004C E7 02         [ 3]  160 	sta	2,x
   004E E7 03         [ 3]  161 	sta	3,x
   0050 81            [ 6]  162 	rts
   0051                     163 00102$:
                            164 ;../_free.c:163: _sdcc_prev_memheader->next = pthis->next;
   0051 C6r00r00      [ 4]  165 	lda	__sdcc_prev_memheader
   0054 B7*00         [ 3]  166 	sta	*_free_sloc0_1_0
   0056 C6r00r01      [ 4]  167 	lda	(__sdcc_prev_memheader + 1)
   0059 B7*01         [ 3]  168 	sta	*(_free_sloc0_1_0 + 1)
   005B 9E AE         [ 5]  169 	ldhx	,x
   005D 9F            [ 1]  170 	txa
   005E 8B            [ 2]  171 	pshh
   005F 55*00         [ 4]  172 	ldhx	*_free_sloc0_1_0
   0061 E7 01         [ 3]  173 	sta	1,x
   0063 86            [ 3]  174 	pula
   0064 F7            [ 2]  175 	sta	,x
   0065                     176 00106$:
   0065 81            [ 6]  177 	rts
                            178 	.area CSEG    (CODE)
                            179 	.area CONST   (CODE)
                            180 	.area XINIT   (CODE)
                            181 	.area CABS    (ABS,CODE)
