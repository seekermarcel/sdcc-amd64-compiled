                              1 ;--------------------------------------------------------
                              2 ; File Created by SDCC : free open source ANSI-C Compiler
                              3 ; Version 3.5.0 #9253 (Apr  4 2022) (Linux)
                              4 ; This file was generated Mon Apr  4 14:16:20 2022
                              5 ;--------------------------------------------------------
                              6 	.r3k
                              7 	.module _free
                              8 	.optsdcc -mr3ka
                              9 	
                             10 ;--------------------------------------------------------
                             11 ; Public variables in this module
                             12 ;--------------------------------------------------------
                             13 	.globl __sdcc_find_memheader
                             14 	.globl __sdcc_prev_memheader
                             15 	.globl _free
                             16 ;--------------------------------------------------------
                             17 ; special function registers
                             18 ;--------------------------------------------------------
                             19 ;--------------------------------------------------------
                             20 ; ram data
                             21 ;--------------------------------------------------------
                             22 	.area _DATA
   0000                      23 __sdcc_prev_memheader::
   0000                      24 	.ds 2
                             25 ;--------------------------------------------------------
                             26 ; ram data
                             27 ;--------------------------------------------------------
                             28 	.area _INITIALIZED
                             29 ;--------------------------------------------------------
                             30 ; absolute external ram data
                             31 ;--------------------------------------------------------
                             32 	.area _DABS (ABS)
                             33 ;--------------------------------------------------------
                             34 ; global & static initialisations
                             35 ;--------------------------------------------------------
                             36 	.area _HOME
                             37 	.area _GSINIT
                             38 	.area _GSFINAL
                             39 	.area _GSINIT
                             40 ;--------------------------------------------------------
                             41 ; Home
                             42 ;--------------------------------------------------------
                             43 	.area _HOME
                             44 	.area _HOME
                             45 ;--------------------------------------------------------
                             46 ; code
                             47 ;--------------------------------------------------------
                             48 	.area _CODE
                             49 ;../_free.c:62: _sdcc_find_memheader(void * p)
                             50 ;	---------------------------------
                             51 ; Function _sdcc_find_memheader
                             52 ; ---------------------------------
   0000                      53 __sdcc_find_memheader::
                             54 ;../_free.c:65: if (!p)
   0000 FD 21 02 00          55 	ld	iy,#2
   0004 FD 39                56 	add	iy,sp
   0006 FD 7E 01             57 	ld	a,1 (iy)
   0009 FD B6 00             58 	or	a,0 (iy)
   000C 20 04                59 	jr	NZ,00102$
                             60 ;../_free.c:66: return NULL;
   000E 21 00 00             61 	ld	hl,#0x0000
   0011 C9                   62 	ret
   0012                      63 00102$:
                             64 ;../_free.c:67: pthis = (MEMHEADER * )((char *)  p - HEADER_SIZE); //to start of header
   0012 EB                   65 	ex	de, hl
   0013 C4 02                66 	ld	hl, 2 (sp)
   0015 EB                   67 	ex	de, hl
   0016 7B                   68 	ld	a,e
   0017 C6 FA                69 	add	a,#0xFA
   0019 5F                   70 	ld	e,a
   001A 7A                   71 	ld	a,d
   001B CE FF                72 	adc	a,#0xFF
   001D 57                   73 	ld	d,a
                             74 ;../_free.c:68: _sdcc_prev_memheader = pthis->prev;
   001E 6B                   75 	ld	l, e
   001F 62                   76 	ld	h, d
   0020 23                   77 	inc	hl
   0021 23                   78 	inc	hl
   0022 7E                   79 	ld	a,(hl)
   0023 FD 21r00r00          80 	ld	iy,#__sdcc_prev_memheader
   0027 FD 77 00             81 	ld	0 (iy),a
   002A 23                   82 	inc	hl
   002B 7E                   83 	ld	a,(hl)
   002C 32r01r00             84 	ld	(#__sdcc_prev_memheader + 1),a
                             85 ;../_free.c:70: return (pthis);
   002F EB                   86 	ex	de,hl
   0030 C9                   87 	ret
                             88 ;../_free.c:74: free (void *p)
                             89 ;	---------------------------------
                             90 ; Function free
                             91 ; ---------------------------------
   0031                      92 _free::
   0031 DD E5                93 	push	ix
   0033 DD 21 00 00          94 	ld	ix,#0
   0037 DD 39                95 	add	ix,sp
   0039 27 FE                96 	add	sp, #-2
                             97 ;../_free.c:78: if ( p ) //For allocated pointers only!
   003B DD 7E 05             98 	ld	a,5 (ix)
   003E DD B6 04             99 	or	a,4 (ix)
   0041 28 3E               100 	jr	Z,00108$
                            101 ;../_free.c:95: }
   0043 ED 5E               102 	ipset3
                            103 ;../_free.c:81: pthis = (MEMHEADER * )((char *)  p - HEADER_SIZE); //to start of header
   0045 C4 06               104 	ld	hl, 6 (sp)
   0047 01 FA FF            105 	ld	bc, #0xFFFA
   004A 09                  106 	add	hl,bc
                            107 ;../_free.c:82: if ( pthis->prev ) // For the regular header
   004B 4D                  108 	ld	c,l
   004C 44                  109 	ld	b,h
   004D DD E4 02            110 	ld	hl, 2 (hl)
   0050 7C                  111 	ld	a,h
   0051 B5                  112 	or	a,l
   0052 28 22               113 	jr	Z,00104$
                            114 ;../_free.c:84: prev_header = pthis->prev;
   0054 D4 00               115 	ld	0 (sp), hl
                            116 ;../_free.c:85: prev_header->next = pthis->next;
   0056 69                  117 	ld	l, c
   0057 60                  118 	ld	h, b
   0058 56                  119 	ld	d,(hl)
   0059 23                  120 	inc	hl
   005A 5E                  121 	ld	e,(hl)
   005B C4 00               122 	ld	hl, 0 (sp)
   005D 72                  123 	ld	(hl),d
   005E 23                  124 	inc	hl
   005F 73                  125 	ld	(hl),e
                            126 ;../_free.c:86: if (pthis->next)
   0060 69                  127 	ld	l, c
   0061 60                  128 	ld	h, b
   0062 DD E4 00            129 	ld	hl, 0 (hl)
   0065 7C                  130 	ld	a,h
   0066 B5                  131 	or	a,l
   0067 28 16               132 	jr	Z,00105$
                            133 ;../_free.c:88: pthis->next->prev = prev_header;
   0069 23                  134 	inc	hl
   006A 23                  135 	inc	hl
   006B DD 7E FE            136 	ld	a,-2 (ix)
   006E 77                  137 	ld	(hl),a
   006F 23                  138 	inc	hl
   0070 DD 7E FF            139 	ld	a,-1 (ix)
   0073 77                  140 	ld	(hl),a
   0074 18 09               141 	jr	00105$
   0076                     142 00104$:
                            143 ;../_free.c:93: pthis->len = 0; //For the first header
   0076 21 04 00            144 	ld	hl,#0x0004
   0079 09                  145 	add	hl,bc
   007A 36 00               146 	ld	(hl),#0x00
   007C 23                  147 	inc	hl
   007D 36 00               148 	ld	(hl),#0x00
   007F                     149 00105$:
   007F ED 5D               150 	ipres
   0081                     151 00108$:
   0081 DD F9               152 	ld	sp, ix
   0083 DD E1               153 	pop	ix
   0085 C9                  154 	ret
                            155 	.area _CODE
                            156 	.area _INITIALIZER
                            157 	.area _CABS (ABS)
