                              1 ;--------------------------------------------------------
                              2 ; File Created by SDCC : free open source ANSI-C Compiler
                              3 ; Version 3.5.0 #9253 (Apr  4 2022) (Linux)
                              4 ; This file was generated Mon Apr  4 14:15:20 2022
                              5 ;--------------------------------------------------------
                              6 	.module _fslt
                              7 	.optsdcc -mz80
                              8 	
                              9 ;--------------------------------------------------------
                             10 ; Public variables in this module
                             11 ;--------------------------------------------------------
                             12 	.globl ___fslt
                             13 ;--------------------------------------------------------
                             14 ; special function registers
                             15 ;--------------------------------------------------------
                             16 ;--------------------------------------------------------
                             17 ; ram data
                             18 ;--------------------------------------------------------
                             19 	.area _DATA
                             20 ;--------------------------------------------------------
                             21 ; ram data
                             22 ;--------------------------------------------------------
                             23 	.area _INITIALIZED
                             24 ;--------------------------------------------------------
                             25 ; absolute external ram data
                             26 ;--------------------------------------------------------
                             27 	.area _DABS (ABS)
                             28 ;--------------------------------------------------------
                             29 ; global & static initialisations
                             30 ;--------------------------------------------------------
                             31 	.area _HOME
                             32 	.area _GSINIT
                             33 	.area _GSFINAL
                             34 	.area _GSINIT
                             35 ;--------------------------------------------------------
                             36 ; Home
                             37 ;--------------------------------------------------------
                             38 	.area _HOME
                             39 ;../_fslt.c:108: char __fslt (float a1, float a2)
                             40 ;	---------------------------------
                             41 ; Function __fslt
                             42 ; ---------------------------------
   0000                      43 ___fslt::
   0000 DD E5         [15]   44 	push	ix
   0002 DD 21 00 00   [14]   45 	ld	ix,#0
   0006 DD 39         [15]   46 	add	ix,sp
   0008 21 F4 FF      [10]   47 	ld	hl,#-12
   000B 39            [11]   48 	add	hl,sp
   000C F9            [ 6]   49 	ld	sp,hl
                             50 ;../_fslt.c:112: fl1.f = a1;
   000D 21 04 00      [10]   51 	ld	hl,#0x0004
   0010 39            [11]   52 	add	hl,sp
   0011 EB            [ 4]   53 	ex	de,hl
   0012 21 10 00      [10]   54 	ld	hl, #0x0010
   0015 39            [11]   55 	add	hl, sp
   0016 01 04 00      [10]   56 	ld	bc, #0x0004
   0019 ED B0         [21]   57 	ldir
                             58 ;../_fslt.c:113: fl2.f = a2;
   001B 21 00 00      [10]   59 	ld	hl,#0x0000
   001E 39            [11]   60 	add	hl,sp
   001F EB            [ 4]   61 	ex	de,hl
   0020 21 14 00      [10]   62 	ld	hl, #0x0014
   0023 39            [11]   63 	add	hl, sp
   0024 01 04 00      [10]   64 	ld	bc, #0x0004
   0027 ED B0         [21]   65 	ldir
                             66 ;../_fslt.c:115: if (((fl1.l | fl2.l) & 0x7FFFFFFF) == 0)
   0029 21 04 00      [10]   67 	ld	hl,#0x0004
   002C 39            [11]   68 	add	hl,sp
   002D EB            [ 4]   69 	ex	de,hl
   002E 21 08 00      [10]   70 	ld	hl, #0x0008
   0031 39            [11]   71 	add	hl, sp
   0032 EB            [ 4]   72 	ex	de, hl
   0033 01 04 00      [10]   73 	ld	bc, #0x0004
   0036 ED B0         [21]   74 	ldir
   0038 21 00 00      [10]   75 	ld	hl,#0x0000
   003B 39            [11]   76 	add	hl,sp
   003C 5E            [ 7]   77 	ld	e,(hl)
   003D 23            [ 6]   78 	inc	hl
   003E 56            [ 7]   79 	ld	d,(hl)
   003F 23            [ 6]   80 	inc	hl
   0040 4E            [ 7]   81 	ld	c,(hl)
   0041 23            [ 6]   82 	inc	hl
   0042 46            [ 7]   83 	ld	b,(hl)
   0043 DD 7E FC      [19]   84 	ld	a,-4 (ix)
   0046 B3            [ 4]   85 	or	a, e
   0047 5F            [ 4]   86 	ld	e,a
   0048 DD 7E FD      [19]   87 	ld	a,-3 (ix)
   004B B2            [ 4]   88 	or	a, d
   004C 57            [ 4]   89 	ld	d,a
   004D DD 7E FE      [19]   90 	ld	a,-2 (ix)
   0050 B1            [ 4]   91 	or	a, c
   0051 6F            [ 4]   92 	ld	l,a
   0052 DD 7E FF      [19]   93 	ld	a,-1 (ix)
   0055 B0            [ 4]   94 	or	a, b
   0056 67            [ 4]   95 	ld	h,a
   0057 7B            [ 4]   96 	ld	a,e
   0058 B7            [ 4]   97 	or	a,a
   0059 20 0D         [12]   98 	jr	NZ,00102$
   005B B2            [ 4]   99 	or	a,d
   005C 20 0A         [12]  100 	jr	NZ,00102$
   005E BF            [ 4]  101 	cp	a, a
   005F ED 6A         [15]  102 	adc	hl, hl
   0061 20 05         [12]  103 	jr	NZ,00102$
                            104 ;../_fslt.c:116: return (0);
   0063 2E 00         [ 7]  105 	ld	l,#0x00
   0065 C3rF8r00      [10]  106 	jp	00110$
   0068                     107 00102$:
                            108 ;../_fslt.c:118: if (fl1.l<0 && fl2.l<0) {
   0068 21 04 00      [10]  109 	ld	hl,#0x0004
   006B 39            [11]  110 	add	hl,sp
   006C 56            [ 7]  111 	ld	d,(hl)
   006D 23            [ 6]  112 	inc	hl
   006E 5E            [ 7]  113 	ld	e,(hl)
   006F 23            [ 6]  114 	inc	hl
   0070 4E            [ 7]  115 	ld	c,(hl)
   0071 23            [ 6]  116 	inc	hl
   0072 66            [ 7]  117 	ld	h,(hl)
   0073 CB 7C         [ 8]  118 	bit	7, h
   0075 28 49         [12]  119 	jr	Z,00106$
   0077 21 00 00      [10]  120 	ld	hl,#0x0000
   007A 39            [11]  121 	add	hl,sp
   007B 56            [ 7]  122 	ld	d,(hl)
   007C 23            [ 6]  123 	inc	hl
   007D 5E            [ 7]  124 	ld	e,(hl)
   007E 23            [ 6]  125 	inc	hl
   007F 4E            [ 7]  126 	ld	c,(hl)
   0080 23            [ 6]  127 	inc	hl
   0081 66            [ 7]  128 	ld	h,(hl)
   0082 CB 7C         [ 8]  129 	bit	7, h
   0084 28 3A         [12]  130 	jr	Z,00106$
                            131 ;../_fslt.c:119: if (fl2.l < fl1.l)
   0086 21 00 00      [10]  132 	ld	hl,#0x0000
   0089 39            [11]  133 	add	hl,sp
   008A EB            [ 4]  134 	ex	de,hl
   008B 21 08 00      [10]  135 	ld	hl, #0x0008
   008E 39            [11]  136 	add	hl, sp
   008F EB            [ 4]  137 	ex	de, hl
   0090 01 04 00      [10]  138 	ld	bc, #0x0004
   0093 ED B0         [21]  139 	ldir
   0095 21 04 00      [10]  140 	ld	hl,#0x0004
   0098 39            [11]  141 	add	hl,sp
   0099 56            [ 7]  142 	ld	d,(hl)
   009A 23            [ 6]  143 	inc	hl
   009B 5E            [ 7]  144 	ld	e,(hl)
   009C 23            [ 6]  145 	inc	hl
   009D 4E            [ 7]  146 	ld	c,(hl)
   009E 23            [ 6]  147 	inc	hl
   009F 66            [ 7]  148 	ld	h,(hl)
   00A0 DD 7E FC      [19]  149 	ld	a,-4 (ix)
   00A3 92            [ 4]  150 	sub	a, d
   00A4 DD 7E FD      [19]  151 	ld	a,-3 (ix)
   00A7 9B            [ 4]  152 	sbc	a, e
   00A8 DD 7E FE      [19]  153 	ld	a,-2 (ix)
   00AB 99            [ 4]  154 	sbc	a, c
   00AC DD 7E FF      [19]  155 	ld	a,-1 (ix)
   00AF 9C            [ 4]  156 	sbc	a, h
   00B0 E2rB5r00      [10]  157 	jp	PO, 00134$
   00B3 EE 80         [ 7]  158 	xor	a, #0x80
   00B5                     159 00134$:
   00B5 F2rBCr00      [10]  160 	jp	P,00104$
                            161 ;../_fslt.c:120: return (1);
   00B8 2E 01         [ 7]  162 	ld	l,#0x01
   00BA 18 3C         [12]  163 	jr	00110$
   00BC                     164 00104$:
                            165 ;../_fslt.c:121: return (0);
   00BC 2E 00         [ 7]  166 	ld	l,#0x00
   00BE 18 38         [12]  167 	jr	00110$
   00C0                     168 00106$:
                            169 ;../_fslt.c:124: if (fl1.l < fl2.l)
   00C0 21 04 00      [10]  170 	ld	hl,#0x0004
   00C3 39            [11]  171 	add	hl,sp
   00C4 EB            [ 4]  172 	ex	de,hl
   00C5 21 08 00      [10]  173 	ld	hl, #0x0008
   00C8 39            [11]  174 	add	hl, sp
   00C9 EB            [ 4]  175 	ex	de, hl
   00CA 01 04 00      [10]  176 	ld	bc, #0x0004
   00CD ED B0         [21]  177 	ldir
   00CF 21 00 00      [10]  178 	ld	hl,#0x0000
   00D2 39            [11]  179 	add	hl,sp
   00D3 56            [ 7]  180 	ld	d,(hl)
   00D4 23            [ 6]  181 	inc	hl
   00D5 5E            [ 7]  182 	ld	e,(hl)
   00D6 23            [ 6]  183 	inc	hl
   00D7 4E            [ 7]  184 	ld	c,(hl)
   00D8 23            [ 6]  185 	inc	hl
   00D9 66            [ 7]  186 	ld	h,(hl)
   00DA DD 7E FC      [19]  187 	ld	a,-4 (ix)
   00DD 92            [ 4]  188 	sub	a, d
   00DE DD 7E FD      [19]  189 	ld	a,-3 (ix)
   00E1 9B            [ 4]  190 	sbc	a, e
   00E2 DD 7E FE      [19]  191 	ld	a,-2 (ix)
   00E5 99            [ 4]  192 	sbc	a, c
   00E6 DD 7E FF      [19]  193 	ld	a,-1 (ix)
   00E9 9C            [ 4]  194 	sbc	a, h
   00EA E2rEFr00      [10]  195 	jp	PO, 00135$
   00ED EE 80         [ 7]  196 	xor	a, #0x80
   00EF                     197 00135$:
   00EF F2rF6r00      [10]  198 	jp	P,00109$
                            199 ;../_fslt.c:125: return (1);
   00F2 2E 01         [ 7]  200 	ld	l,#0x01
   00F4 18 02         [12]  201 	jr	00110$
   00F6                     202 00109$:
                            203 ;../_fslt.c:126: return (0);
   00F6 2E 00         [ 7]  204 	ld	l,#0x00
   00F8                     205 00110$:
   00F8 DD F9         [10]  206 	ld	sp, ix
   00FA DD E1         [14]  207 	pop	ix
   00FC C9            [10]  208 	ret
                            209 	.area _HOME
                            210 ;--------------------------------------------------------
                            211 ; code
                            212 ;--------------------------------------------------------
                            213 	.area _CODE
                            214 	.area _CODE
                            215 	.area _INITIALIZER
                            216 	.area _CABS (ABS)
