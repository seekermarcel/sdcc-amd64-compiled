                              1 ;--------------------------------------------------------
                              2 ; File Created by SDCC : free open source ANSI-C Compiler
                              3 ; Version 3.5.0 #9253 (Apr  4 2022) (Linux)
                              4 ; This file was generated Mon Apr  4 14:10:36 2022
                              5 ;--------------------------------------------------------
                              6 	.cs08
                              7 	.module floorf
                              8 	.optsdcc -ms08
                              9 	
                             10 	.area HOME    (CODE)
                             11 	.area GSINIT0 (CODE)
                             12 	.area GSINIT  (CODE)
                             13 	.area GSFINAL (CODE)
                             14 	.area CSEG    (CODE)
                             15 	.area XINIT   (CODE)
                             16 	.area CONST   (CODE)
                             17 	.area DSEG    (PAG)
                             18 	.area OSEG    (PAG, OVR)
                             19 	.area XSEG
                             20 	.area XISEG
                             21 ;--------------------------------------------------------
                             22 ; Public variables in this module
                             23 ;--------------------------------------------------------
                             24 	.globl _floorf
                             25 ;--------------------------------------------------------
                             26 ; ram data
                             27 ;--------------------------------------------------------
                             28 	.area DSEG    (PAG)
                             29 ;--------------------------------------------------------
                             30 ; overlayable items in ram 
                             31 ;--------------------------------------------------------
                             32 ;--------------------------------------------------------
                             33 ; absolute ram data
                             34 ;--------------------------------------------------------
                             35 	.area IABS    (ABS)
                             36 	.area IABS    (ABS)
                             37 ;--------------------------------------------------------
                             38 ; absolute external ram data
                             39 ;--------------------------------------------------------
                             40 	.area XABS    (ABS)
                             41 ;--------------------------------------------------------
                             42 ; external initialized ram data
                             43 ;--------------------------------------------------------
                             44 	.area XISEG
                             45 ;--------------------------------------------------------
                             46 ; extended address mode data
                             47 ;--------------------------------------------------------
                             48 	.area XSEG
                             49 ;--------------------------------------------------------
                             50 ; global & static initialisations
                             51 ;--------------------------------------------------------
                             52 	.area HOME    (CODE)
                             53 	.area GSINIT  (CODE)
                             54 	.area GSFINAL (CODE)
                             55 	.area GSINIT  (CODE)
                             56 ;--------------------------------------------------------
                             57 ; Home
                             58 ;--------------------------------------------------------
                             59 	.area HOME    (CODE)
                             60 	.area HOME    (CODE)
                             61 ;--------------------------------------------------------
                             62 ; code
                             63 ;--------------------------------------------------------
                             64 	.area CSEG    (CODE)
                             65 ;------------------------------------------------------------
                             66 ;Allocation info for local variables in function 'floorf'
                             67 ;------------------------------------------------------------
                             68 ;x                         Allocated to stack - sp -10
                             69 ;r                         Allocated to stack - sp -16
                             70 ;sloc0                     Allocated to stack - sp -16
                             71 ;sloc1                     Allocated to stack - sp -24
                             72 ;sloc2                     Allocated to stack - sp -20
                             73 ;------------------------------------------------------------
                             74 ;../floorf.c:33: float floorf (float x) _FLOAT_FUNC_REENTRANT
                             75 ;	-----------------------------------------
                             76 ;	 function floorf
                             77 ;	-----------------------------------------
                             78 ;	Register assignment might be sub-optimal.
                             79 ;	Stack space usage: 12 bytes.
   0000                      80 _floorf:
   0000 A7 F4         [ 2]   81 	ais	#-12
                             82 ;../floorf.c:36: r=x;
   0002 95            [ 2]   83 	tsx
   0003 E6 0E         [ 3]   84 	lda	14,x
   0005 C7r00r00      [ 4]   85 	sta	___fs2slong_PARM_1
   0008 E6 0F         [ 3]   86 	lda	15,x
   000A C7r00r01      [ 4]   87 	sta	(___fs2slong_PARM_1 + 1)
   000D E6 10         [ 3]   88 	lda	16,x
   000F C7r00r02      [ 4]   89 	sta	(___fs2slong_PARM_1 + 2)
   0012 E6 11         [ 3]   90 	lda	17,x
   0014 C7r00r03      [ 4]   91 	sta	(___fs2slong_PARM_1 + 3)
   0017 CDr00r00      [ 6]   92 	jsr	___fs2slong
   001A 9E E7 0C      [ 4]   93 	sta	12,s
   001D 9E EF 0B      [ 4]   94 	stx	11,s
   0020 B6*00         [ 3]   95 	lda	*___SDCC_hc08_ret2
   0022 9E E7 0A      [ 4]   96 	sta	10,s
   0025 B6*00         [ 3]   97 	lda	*___SDCC_hc08_ret3
   0027 9E E7 09      [ 4]   98 	sta	9,s
                             99 ;../floorf.c:38: return (r+((r>x)?-1:0));
   002A 95            [ 2]  100 	tsx
   002B E6 08         [ 3]  101 	lda	8,x
   002D C7r00r00      [ 4]  102 	sta	___slong2fs_PARM_1
   0030 E6 09         [ 3]  103 	lda	9,x
   0032 C7r00r01      [ 4]  104 	sta	(___slong2fs_PARM_1 + 1)
   0035 E6 0A         [ 3]  105 	lda	10,x
   0037 C7r00r02      [ 4]  106 	sta	(___slong2fs_PARM_1 + 2)
   003A E6 0B         [ 3]  107 	lda	11,x
   003C C7r00r03      [ 4]  108 	sta	(___slong2fs_PARM_1 + 3)
   003F CDr00r00      [ 6]  109 	jsr	___slong2fs
   0042 9E E7 04      [ 4]  110 	sta	4,s
   0045 9E EF 03      [ 4]  111 	stx	3,s
   0048 B6*00         [ 3]  112 	lda	*___SDCC_hc08_ret2
   004A 9E E7 02      [ 4]  113 	sta	2,s
   004D B6*00         [ 3]  114 	lda	*___SDCC_hc08_ret3
   004F 9E E7 01      [ 4]  115 	sta	1,s
                            116 ;../floorf.c:37: if (r<=0)
   0052 95            [ 2]  117 	tsx
   0053 4F            [ 1]  118 	clra
   0054 E0 0B         [ 3]  119 	sub	11,x
   0056 4F            [ 1]  120 	clra
   0057 E2 0A         [ 3]  121 	sbc	10,x
   0059 4F            [ 1]  122 	clra
   005A E2 09         [ 3]  123 	sbc	9,x
   005C 4F            [ 1]  124 	clra
   005D E2 08         [ 3]  125 	sbc	8,x
   005F 90 03         [ 3]  126 	bge	00116$
   0061 CCr00rE8      [ 4]  127 	jmp	00102$
   0064                     128 00116$:
                            129 ;../floorf.c:38: return (r+((r>x)?-1:0));
   0064 F6            [ 3]  130 	lda	,x
   0065 C7r00r00      [ 4]  131 	sta	___fsgt_PARM_1
   0068 E6 01         [ 3]  132 	lda	1,x
   006A C7r00r01      [ 4]  133 	sta	(___fsgt_PARM_1 + 1)
   006D E6 02         [ 3]  134 	lda	2,x
   006F C7r00r02      [ 4]  135 	sta	(___fsgt_PARM_1 + 2)
   0072 E6 03         [ 3]  136 	lda	3,x
   0074 C7r00r03      [ 4]  137 	sta	(___fsgt_PARM_1 + 3)
   0077 E6 0E         [ 3]  138 	lda	14,x
   0079 C7r00r00      [ 4]  139 	sta	___fsgt_PARM_2
   007C E6 0F         [ 3]  140 	lda	15,x
   007E C7r00r01      [ 4]  141 	sta	(___fsgt_PARM_2 + 1)
   0081 E6 10         [ 3]  142 	lda	16,x
   0083 C7r00r02      [ 4]  143 	sta	(___fsgt_PARM_2 + 2)
   0086 E6 11         [ 3]  144 	lda	17,x
   0088 C7r00r03      [ 4]  145 	sta	(___fsgt_PARM_2 + 3)
   008B CDr00r00      [ 6]  146 	jsr	___fsgt
   008E 4D            [ 1]  147 	tsta
   008F 27 04         [ 3]  148 	beq	00106$
   0091 A6 FF         [ 2]  149 	lda	#0xFF
   0093 20 01         [ 3]  150 	bra	00107$
   0095                     151 00106$:
   0095 4F            [ 1]  152 	clra
   0096                     153 00107$:
   0096 95            [ 2]  154 	tsx
   0097 E7 07         [ 3]  155 	sta	7,x
   0099 49            [ 1]  156 	rola	
   009A 4F            [ 1]  157 	clra	
   009B A2 00         [ 2]  158 	sbc	#0x00
   009D E7 06         [ 3]  159 	sta	6,x
   009F E7 05         [ 3]  160 	sta	5,x
   00A1 E7 04         [ 3]  161 	sta	4,x
   00A3 45r00r00      [ 3]  162 	ldhx	#___slong2fs_PARM_1
   00A6 9E E6 0C      [ 4]  163 	lda	12,s
   00A9 9E EB 08      [ 4]  164 	add	8,s
   00AC E7 03         [ 3]  165 	sta	3,x
   00AE 9E E6 0B      [ 4]  166 	lda	11,s
   00B1 9E E9 07      [ 4]  167 	adc	7,s
   00B4 E7 02         [ 3]  168 	sta	2,x
   00B6 9E E6 0A      [ 4]  169 	lda	10,s
   00B9 9E E9 06      [ 4]  170 	adc	6,s
   00BC E7 01         [ 3]  171 	sta	1,x
   00BE 9E E6 09      [ 4]  172 	lda	9,s
   00C1 9E E9 05      [ 4]  173 	adc	5,s
   00C4 F7            [ 2]  174 	sta	,x
   00C5 CDr00r00      [ 6]  175 	jsr	___slong2fs
   00C8 9E E7 08      [ 4]  176 	sta	8,s
   00CB 9E EF 07      [ 4]  177 	stx	7,s
   00CE B6*00         [ 3]  178 	lda	*___SDCC_hc08_ret2
   00D0 9E E7 06      [ 4]  179 	sta	6,s
   00D3 B6*00         [ 3]  180 	lda	*___SDCC_hc08_ret3
   00D5 9E E7 05      [ 4]  181 	sta	5,s
   00D8 95            [ 2]  182 	tsx
   00D9 E6 04         [ 3]  183 	lda	4,x
   00DB B7*00         [ 3]  184 	sta	*___SDCC_hc08_ret3
   00DD E6 05         [ 3]  185 	lda	5,x
   00DF B7*00         [ 3]  186 	sta	*___SDCC_hc08_ret2
   00E1 EE 06         [ 3]  187 	ldx	6,x
   00E3 9E E6 08      [ 4]  188 	lda	8,s
   00E6 20 0D         [ 3]  189 	bra	00104$
   00E8                     190 00102$:
                            191 ;../floorf.c:40: return r;
   00E8 95            [ 2]  192 	tsx
   00E9 F6            [ 3]  193 	lda	,x
   00EA B7*00         [ 3]  194 	sta	*___SDCC_hc08_ret3
   00EC E6 01         [ 3]  195 	lda	1,x
   00EE B7*00         [ 3]  196 	sta	*___SDCC_hc08_ret2
   00F0 EE 02         [ 3]  197 	ldx	2,x
   00F2 9E E6 04      [ 4]  198 	lda	4,s
   00F5                     199 00104$:
   00F5 A7 0C         [ 2]  200 	ais	#12
   00F7 81            [ 6]  201 	rts
                            202 	.area CSEG    (CODE)
                            203 	.area CONST   (CODE)
                            204 	.area XINIT   (CODE)
                            205 	.area CABS    (ABS,CODE)
