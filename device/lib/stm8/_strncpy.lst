                                      1 ;--------------------------------------------------------
                                      2 ; File Created by SDCC : free open source ANSI-C Compiler
                                      3 ; Version 3.5.0 #9253 (Apr  4 2022) (Linux)
                                      4 ; This file was generated Mon Apr  4 14:17:16 2022
                                      5 ;--------------------------------------------------------
                                      6 	.module _strncpy
                                      7 	.optsdcc -mstm8
                                      8 	
                                      9 ;--------------------------------------------------------
                                     10 ; Public variables in this module
                                     11 ;--------------------------------------------------------
                                     12 	.globl _strncpy
                                     13 ;--------------------------------------------------------
                                     14 ; ram data
                                     15 ;--------------------------------------------------------
                                     16 	.area DATA
                                     17 ;--------------------------------------------------------
                                     18 ; ram data
                                     19 ;--------------------------------------------------------
                                     20 	.area INITIALIZED
                                     21 ;--------------------------------------------------------
                                     22 ; absolute external ram data
                                     23 ;--------------------------------------------------------
                                     24 	.area DABS (ABS)
                                     25 ;--------------------------------------------------------
                                     26 ; global & static initialisations
                                     27 ;--------------------------------------------------------
                                     28 	.area HOME
                                     29 	.area GSINIT
                                     30 	.area GSFINAL
                                     31 	.area GSINIT
                                     32 ;--------------------------------------------------------
                                     33 ; Home
                                     34 ;--------------------------------------------------------
                                     35 	.area HOME
                                     36 	.area HOME
                                     37 ;--------------------------------------------------------
                                     38 ; code
                                     39 ;--------------------------------------------------------
                                     40 	.area CODE
                                     41 ;	../_strncpy.c: 33: char *strncpy ( char * d, const char * s, size_t n )
                                     42 ;	-----------------------------------------
                                     43 ;	 function strncpy
                                     44 ;	-----------------------------------------
      000000                         45 _strncpy:
      000000 52 0A            [ 2]   46 	sub	sp, #10
                                     47 ;	../_strncpy.c: 35: register char * d1 =  d;
      000002 16 0D            [ 2]   48 	ldw	y, (0x0d, sp)
      000004 17 01            [ 2]   49 	ldw	(0x01, sp), y
                                     50 ;	../_strncpy.c: 37: while ( n && *s )
      000006 16 11            [ 2]   51 	ldw	y, (0x11, sp)
      000008 17 09            [ 2]   52 	ldw	(0x09, sp), y
      00000A 16 0F            [ 2]   53 	ldw	y, (0x0f, sp)
      00000C 17 07            [ 2]   54 	ldw	(0x07, sp), y
      00000E 1E 01            [ 2]   55 	ldw	x, (0x01, sp)
      000010                         56 00102$:
      000010 16 09            [ 2]   57 	ldw	y, (0x09, sp)
      000012 27 17            [ 1]   58 	jreq	00114$
      000014 16 07            [ 2]   59 	ldw	y, (0x07, sp)
      000016 90 F6            [ 1]   60 	ld	a, (y)
      000018 4D               [ 1]   61 	tnz	a
      000019 27 10            [ 1]   62 	jreq	00114$
                                     63 ;	../_strncpy.c: 39: n-- ;
      00001B 16 09            [ 2]   64 	ldw	y, (0x09, sp)
      00001D 90 5A            [ 2]   65 	decw	y
      00001F 17 09            [ 2]   66 	ldw	(0x09, sp), y
                                     67 ;	../_strncpy.c: 40: *d++ = *s++ ;
      000021 16 07            [ 2]   68 	ldw	y, (0x07, sp)
      000023 90 5C            [ 2]   69 	incw	y
      000025 17 07            [ 2]   70 	ldw	(0x07, sp), y
      000027 F7               [ 1]   71 	ld	(x), a
      000028 5C               [ 2]   72 	incw	x
      000029 20 E5            [ 2]   73 	jra	00102$
                                     74 ;	../_strncpy.c: 42: while ( n-- )
      00002B                         75 00114$:
      00002B 16 09            [ 2]   76 	ldw	y, (0x09, sp)
      00002D 17 05            [ 2]   77 	ldw	(0x05, sp), y
      00002F                         78 00105$:
      00002F 16 05            [ 2]   79 	ldw	y, (0x05, sp)
      000031 17 03            [ 2]   80 	ldw	(0x03, sp), y
      000033 16 05            [ 2]   81 	ldw	y, (0x05, sp)
      000035 90 5A            [ 2]   82 	decw	y
      000037 17 05            [ 2]   83 	ldw	(0x05, sp), y
      000039 16 03            [ 2]   84 	ldw	y, (0x03, sp)
      00003B 27 04            [ 1]   85 	jreq	00107$
                                     86 ;	../_strncpy.c: 44: *d++ = '\0' ;
      00003D 7F               [ 1]   87 	clr	(x)
      00003E 5C               [ 2]   88 	incw	x
      00003F 20 EE            [ 2]   89 	jra	00105$
      000041                         90 00107$:
                                     91 ;	../_strncpy.c: 46: return d1;
      000041 1E 01            [ 2]   92 	ldw	x, (0x01, sp)
      000043 5B 0A            [ 2]   93 	addw	sp, #10
      000045 81               [ 4]   94 	ret
                                     95 	.area CODE
                                     96 	.area INITIALIZER
                                     97 	.area CABS (ABS)
