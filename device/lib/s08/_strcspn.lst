                              1 ;--------------------------------------------------------
                              2 ; File Created by SDCC : free open source ANSI-C Compiler
                              3 ; Version 3.5.0 #9253 (Apr  4 2022) (Linux)
                              4 ; This file was generated Mon Apr  4 14:10:37 2022
                              5 ;--------------------------------------------------------
                              6 	.cs08
                              7 	.module _strcspn
                              8 	.optsdcc -ms08
                              9 	
                             10 	.area HOME    (CODE)
                             11 	.area GSINIT0 (CODE)
                             12 	.area GSINIT  (CODE)
                             13 	.area GSFINAL (CODE)
                             14 	.area CSEG    (CODE)
                             15 	.area XINIT   (CODE)
                             16 	.area CONST   (CODE)
                             17 	.area DSEG    (PAG)
                             18 	.area OSEG    (PAG, OVR)
                             19 	.area XSEG
                             20 	.area XISEG
                             21 ;--------------------------------------------------------
                             22 ; Public variables in this module
                             23 ;--------------------------------------------------------
                             24 	.globl _strchr
                             25 	.globl _strcspn_PARM_2
                             26 	.globl _strcspn
                             27 ;--------------------------------------------------------
                             28 ; ram data
                             29 ;--------------------------------------------------------
                             30 	.area DSEG    (PAG)
   0000                      31 _strcspn_count_1_22:
   0000                      32 	.ds 2
   0002                      33 _strcspn_sloc0_1_0:
   0002                      34 	.ds 2
                             35 ;--------------------------------------------------------
                             36 ; overlayable items in ram 
                             37 ;--------------------------------------------------------
                             38 ;--------------------------------------------------------
                             39 ; absolute ram data
                             40 ;--------------------------------------------------------
                             41 	.area IABS    (ABS)
                             42 	.area IABS    (ABS)
                             43 ;--------------------------------------------------------
                             44 ; absolute external ram data
                             45 ;--------------------------------------------------------
                             46 	.area XABS    (ABS)
                             47 ;--------------------------------------------------------
                             48 ; external initialized ram data
                             49 ;--------------------------------------------------------
                             50 	.area XISEG
                             51 ;--------------------------------------------------------
                             52 ; extended address mode data
                             53 ;--------------------------------------------------------
                             54 	.area XSEG
   0000                      55 _strcspn_PARM_2:
   0000                      56 	.ds 2
                             57 ;--------------------------------------------------------
                             58 ; global & static initialisations
                             59 ;--------------------------------------------------------
                             60 	.area HOME    (CODE)
                             61 	.area GSINIT  (CODE)
                             62 	.area GSFINAL (CODE)
                             63 	.area GSINIT  (CODE)
                             64 ;--------------------------------------------------------
                             65 ; Home
                             66 ;--------------------------------------------------------
                             67 	.area HOME    (CODE)
                             68 	.area HOME    (CODE)
                             69 ;--------------------------------------------------------
                             70 ; code
                             71 ;--------------------------------------------------------
                             72 	.area CSEG    (CODE)
                             73 ;------------------------------------------------------------
                             74 ;Allocation info for local variables in function 'strcspn'
                             75 ;------------------------------------------------------------
                             76 ;count                     Allocated with name '_strcspn_count_1_22'
                             77 ;ch                        Allocated to registers a 
                             78 ;sloc0                     Allocated with name '_strcspn_sloc0_1_0'
                             79 ;control                   Allocated with name '_strcspn_PARM_2'
                             80 ;string                    Allocated to registers 
                             81 ;------------------------------------------------------------
                             82 ;../_strcspn.c:31: size_t strcspn ( const char * string, const char * control )
                             83 ;	-----------------------------------------
                             84 ;	 function strcspn
                             85 ;	-----------------------------------------
                             86 ;	Register assignment is optimal.
                             87 ;	Stack space usage: 0 bytes.
   0000                      88 _strcspn:
   0000 B7*03         [ 3]   89 	sta	*(_strcspn_sloc0_1_0 + 1)
   0002 BF*02         [ 3]   90 	stx	*_strcspn_sloc0_1_0
                             91 ;../_strcspn.c:36: while (ch = *string) {
   0004 8C            [ 1]   92 	clrh
   0005 5F            [ 1]   93 	clrx
   0006 35*00         [ 4]   94 	sthx	*_strcspn_count_1_22
   0008                      95 00104$:
   0008 55*02         [ 4]   96 	ldhx	*_strcspn_sloc0_1_0
   000A FE            [ 3]   97 	ldx	,x
   000B 9F            [ 1]   98 	txa
   000C 5D            [ 1]   99 	tstx
   000D 27 27         [ 3]  100 	beq	00106$
                            101 ;../_strcspn.c:37: if (strchr(control,ch))
   000F C7r00r01      [ 4]  102 	sta	(_strchr_PARM_2 + 1)
   0012 49            [ 1]  103 	rola	
   0013 4F            [ 1]  104 	clra	
   0014 A2 00         [ 2]  105 	sbc	#0x00
   0016 C7r00r00      [ 4]  106 	sta	_strchr_PARM_2
   0019 C6r00r01      [ 4]  107 	lda	(_strcspn_PARM_2 + 1)
   001C CEr00r00      [ 4]  108 	ldx	_strcspn_PARM_2
   001F CDr00r00      [ 6]  109 	jsr	_strchr
   0022 4D            [ 1]  110 	tsta
   0023 26 01         [ 3]  111 	bne	00123$
   0025 5D            [ 1]  112 	tstx
   0026                     113 00123$:
   0026 26 0E         [ 3]  114 	bne	00106$
                            115 ;../_strcspn.c:40: count++;
   0028 55*00         [ 4]  116 	ldhx	*_strcspn_count_1_22
   002A AF 01         [ 2]  117 	aix	#1
   002C 35*00         [ 4]  118 	sthx	*_strcspn_count_1_22
                            119 ;../_strcspn.c:41: string++;
   002E 55*02         [ 4]  120 	ldhx	*_strcspn_sloc0_1_0
   0030 AF 01         [ 2]  121 	aix	#1
   0032 35*02         [ 4]  122 	sthx	*_strcspn_sloc0_1_0
   0034 20 D2         [ 3]  123 	bra	00104$
   0036                     124 00106$:
                            125 ;../_strcspn.c:44: return count;
   0036 BE*00         [ 3]  126 	ldx	*_strcspn_count_1_22
   0038 B6*01         [ 3]  127 	lda	*(_strcspn_count_1_22 + 1)
   003A 81            [ 6]  128 	rts
                            129 	.area CSEG    (CODE)
                            130 	.area CONST   (CODE)
                            131 	.area XINIT   (CODE)
                            132 	.area CABS    (ABS,CODE)
