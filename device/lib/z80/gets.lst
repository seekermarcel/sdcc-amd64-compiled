                              1 ;--------------------------------------------------------
                              2 ; File Created by SDCC : free open source ANSI-C Compiler
                              3 ; Version 3.5.0 #9253 (Apr  4 2022) (Linux)
                              4 ; This file was generated Mon Apr  4 14:15:32 2022
                              5 ;--------------------------------------------------------
                              6 	.module gets
                              7 	.optsdcc -mz80
                              8 	
                              9 ;--------------------------------------------------------
                             10 ; Public variables in this module
                             11 ;--------------------------------------------------------
                             12 	.globl _putchar
                             13 	.globl _getchar
                             14 	.globl _gets
                             15 ;--------------------------------------------------------
                             16 ; special function registers
                             17 ;--------------------------------------------------------
                             18 ;--------------------------------------------------------
                             19 ; ram data
                             20 ;--------------------------------------------------------
                             21 	.area _DATA
                             22 ;--------------------------------------------------------
                             23 ; ram data
                             24 ;--------------------------------------------------------
                             25 	.area _INITIALIZED
                             26 ;--------------------------------------------------------
                             27 ; absolute external ram data
                             28 ;--------------------------------------------------------
                             29 	.area _DABS (ABS)
                             30 ;--------------------------------------------------------
                             31 ; global & static initialisations
                             32 ;--------------------------------------------------------
                             33 	.area _HOME
                             34 	.area _GSINIT
                             35 	.area _GSFINAL
                             36 	.area _GSINIT
                             37 ;--------------------------------------------------------
                             38 ; Home
                             39 ;--------------------------------------------------------
                             40 	.area _HOME
                             41 	.area _HOME
                             42 ;--------------------------------------------------------
                             43 ; code
                             44 ;--------------------------------------------------------
                             45 	.area _CODE
                             46 ;../gets.c:32: gets (char *s)
                             47 ;	---------------------------------
                             48 ; Function gets
                             49 ; ---------------------------------
   0000                      50 _gets::
   0000 3B            [ 6]   51 	dec	sp
                             52 ;../gets.c:35: unsigned int count = 0;
   0001 11 00 00      [10]   53 	ld	de,#0x0000
                             54 ;../gets.c:37: while (1)
   0004                      55 00109$:
                             56 ;../gets.c:39: c = getchar ();
   0004 D5            [11]   57 	push	de
   0005 CDr00r00      [17]   58 	call	_getchar
   0008 D1            [10]   59 	pop	de
   0009 FD 21 00 00   [14]   60 	ld	iy,#0
   000D FD 39         [15]   61 	add	iy,sp
   000F FD 75 00      [19]   62 	ld	0 (iy),l
                             63 ;../gets.c:40: switch(c)
   0012 FD 7E 00      [19]   64 	ld	a,0 (iy)
   0015 D6 08         [ 7]   65 	sub	a, #0x08
   0017 28 1D         [12]   66 	jr	Z,00101$
                             67 ;../gets.c:57: *s = 0;
   0019 21 03 00      [10]   68 	ld	hl, #3
   001C 39            [11]   69 	add	hl, sp
   001D 46            [ 7]   70 	ld	b, (hl)
   001E 23            [ 6]   71 	inc	hl
   001F 4E            [ 7]   72 	ld	c, (hl)
                             73 ;../gets.c:40: switch(c)
   0020 FD 21 00 00   [14]   74 	ld	iy,#0
   0024 FD 39         [15]   75 	add	iy,sp
   0026 FD 7E 00      [19]   76 	ld	a,0 (iy)
   0029 D6 0A         [ 7]   77 	sub	a, #0x0A
   002B 28 3D         [12]   78 	jr	Z,00105$
   002D FD 7E 00      [19]   79 	ld	a,0 (iy)
   0030 D6 0D         [ 7]   80 	sub	a, #0x0D
   0032 28 36         [12]   81 	jr	Z,00105$
   0034 18 4E         [12]   82 	jr	00106$
                             83 ;../gets.c:42: case '\b': /* backspace */
   0036                      84 00101$:
                             85 ;../gets.c:43: if (count)
   0036 7A            [ 4]   86 	ld	a,d
   0037 B3            [ 4]   87 	or	a,e
   0038 28 CA         [12]   88 	jr	Z,00109$
                             89 ;../gets.c:45: putchar ('\b');
   003A D5            [11]   90 	push	de
   003B 3E 08         [ 7]   91 	ld	a,#0x08
   003D F5            [11]   92 	push	af
   003E 33            [ 6]   93 	inc	sp
   003F CDr00r00      [17]   94 	call	_putchar
   0042 33            [ 6]   95 	inc	sp
   0043 3E 20         [ 7]   96 	ld	a,#0x20
   0045 F5            [11]   97 	push	af
   0046 33            [ 6]   98 	inc	sp
   0047 CDr00r00      [17]   99 	call	_putchar
   004A 33            [ 6]  100 	inc	sp
   004B 3E 08         [ 7]  101 	ld	a,#0x08
   004D F5            [11]  102 	push	af
   004E 33            [ 6]  103 	inc	sp
   004F CDr00r00      [17]  104 	call	_putchar
   0052 33            [ 6]  105 	inc	sp
   0053 D1            [10]  106 	pop	de
                            107 ;../gets.c:48: --s;
   0054 FD 21 03 00   [14]  108 	ld	iy,#3
   0058 FD 39         [15]  109 	add	iy,sp
   005A FD 6E 00      [19]  110 	ld	l,0 (iy)
   005D FD 66 01      [19]  111 	ld	h,1 (iy)
   0060 2B            [ 6]  112 	dec	hl
   0061 FD 75 00      [19]  113 	ld	0 (iy),l
   0064 FD 74 01      [19]  114 	ld	1 (iy),h
                            115 ;../gets.c:49: --count;
   0067 1B            [ 6]  116 	dec	de
                            117 ;../gets.c:51: break;
   0068 18 9A         [12]  118 	jr	00109$
                            119 ;../gets.c:54: case '\r': /* CR or LF */
   006A                     120 00105$:
                            121 ;../gets.c:55: putchar ('\r');
   006A C5            [11]  122 	push	bc
   006B 3E 0D         [ 7]  123 	ld	a,#0x0D
   006D F5            [11]  124 	push	af
   006E 33            [ 6]  125 	inc	sp
   006F CDr00r00      [17]  126 	call	_putchar
   0072 33            [ 6]  127 	inc	sp
   0073 3E 0A         [ 7]  128 	ld	a,#0x0A
   0075 F5            [11]  129 	push	af
   0076 33            [ 6]  130 	inc	sp
   0077 CDr00r00      [17]  131 	call	_putchar
   007A 33            [ 6]  132 	inc	sp
   007B C1            [10]  133 	pop	bc
                            134 ;../gets.c:57: *s = 0;
   007C 68            [ 4]  135 	ld	l, b
   007D 61            [ 4]  136 	ld	h, c
   007E 36 00         [10]  137 	ld	(hl),#0x00
                            138 ;../gets.c:58: return s;
   0080 68            [ 4]  139 	ld	l, b
   0081 61            [ 4]  140 	ld	h, c
   0082 18 28         [12]  141 	jr	00111$
                            142 ;../gets.c:60: default:
   0084                     143 00106$:
                            144 ;../gets.c:61: *s++ = c;
   0084 68            [ 4]  145 	ld	l, b
   0085 61            [ 4]  146 	ld	h, c
   0086 FD 21 00 00   [14]  147 	ld	iy,#0
   008A FD 39         [15]  148 	add	iy,sp
   008C FD 7E 00      [19]  149 	ld	a,0 (iy)
   008F 77            [ 7]  150 	ld	(hl),a
   0090 78            [ 4]  151 	ld	a,b
   0091 21 03 00      [10]  152 	ld	hl,#3
   0094 39            [11]  153 	add	hl,sp
   0095 C6 01         [ 7]  154 	add	a, #0x01
   0097 77            [ 7]  155 	ld	(hl),a
   0098 79            [ 4]  156 	ld	a,c
   0099 CE 00         [ 7]  157 	adc	a, #0x00
   009B 23            [ 6]  158 	inc	hl
   009C 77            [ 7]  159 	ld	(hl),a
                            160 ;../gets.c:62: ++count;
   009D 13            [ 6]  161 	inc	de
                            162 ;../gets.c:63: putchar (c);
   009E D5            [11]  163 	push	de
   009F FD 7E 00      [19]  164 	ld	a,0 (iy)
   00A2 F5            [11]  165 	push	af
   00A3 33            [ 6]  166 	inc	sp
   00A4 CDr00r00      [17]  167 	call	_putchar
   00A7 33            [ 6]  168 	inc	sp
   00A8 D1            [10]  169 	pop	de
                            170 ;../gets.c:65: }
   00A9 C3r04r00      [10]  171 	jp	00109$
   00AC                     172 00111$:
   00AC 33            [ 6]  173 	inc	sp
   00AD C9            [10]  174 	ret
                            175 	.area _CODE
                            176 	.area _INITIALIZER
                            177 	.area _CABS (ABS)
