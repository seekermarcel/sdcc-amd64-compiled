                              1 ;--------------------------------------------------------
                              2 ; File Created by SDCC : free open source ANSI-C Compiler
                              3 ; Version 3.5.0 #9253 (Apr  4 2022) (Linux)
                              4 ; This file was generated Mon Apr  4 14:16:19 2022
                              5 ;--------------------------------------------------------
                              6 	.r3k
                              7 	.module _strncpy
                              8 	.optsdcc -mr3ka
                              9 	
                             10 ;--------------------------------------------------------
                             11 ; Public variables in this module
                             12 ;--------------------------------------------------------
                             13 	.globl _strncpy
                             14 ;--------------------------------------------------------
                             15 ; special function registers
                             16 ;--------------------------------------------------------
                             17 ;--------------------------------------------------------
                             18 ; ram data
                             19 ;--------------------------------------------------------
                             20 	.area _DATA
                             21 ;--------------------------------------------------------
                             22 ; ram data
                             23 ;--------------------------------------------------------
                             24 	.area _INITIALIZED
                             25 ;--------------------------------------------------------
                             26 ; absolute external ram data
                             27 ;--------------------------------------------------------
                             28 	.area _DABS (ABS)
                             29 ;--------------------------------------------------------
                             30 ; global & static initialisations
                             31 ;--------------------------------------------------------
                             32 	.area _HOME
                             33 	.area _GSINIT
                             34 	.area _GSFINAL
                             35 	.area _GSINIT
                             36 ;--------------------------------------------------------
                             37 ; Home
                             38 ;--------------------------------------------------------
                             39 	.area _HOME
                             40 	.area _HOME
                             41 ;--------------------------------------------------------
                             42 ; code
                             43 ;--------------------------------------------------------
                             44 	.area _CODE
                             45 ;../_strncpy.c:33: char *strncpy ( char * d, const char * s, size_t n )
                             46 ;	---------------------------------
                             47 ; Function strncpy
                             48 ; ---------------------------------
   0000                      49 _strncpy::
   0000 DD E5                50 	push	ix
   0002 DD 21 00 00          51 	ld	ix,#0
   0006 DD 39                52 	add	ix,sp
   0008 27 FE                53 	add	sp, #-2
                             54 ;../_strncpy.c:35: register char * d1 =  d;
   000A DD 7E 04             55 	ld	a,4 (ix)
   000D DD 77 FE             56 	ld	-2 (ix),a
   0010 DD 7E 05             57 	ld	a,5 (ix)
   0013 DD 77 FF             58 	ld	-1 (ix),a
                             59 ;../_strncpy.c:37: while ( n && *s )
   0016 EB                   60 	ex	de, hl
   0017 C4 0A                61 	ld	hl, 10 (sp)
   0019 EB                   62 	ex	de, hl
   001A FD C4 08             63 	ld	iy, 8 (sp)
   001D C1                   64 	pop	bc
   001E C5                   65 	push	bc
   001F                      66 00102$:
   001F 7A                   67 	ld	a,d
   0020 B3                   68 	or	a,e
   0021 28 0F                69 	jr	Z,00114$
   0023 FD 66 00             70 	ld	h, 0 (iy)
   0026 7C                   71 	ld	a,h
   0027 B7                   72 	or	a, a
   0028 28 08                73 	jr	Z,00114$
                             74 ;../_strncpy.c:39: n-- ;
   002A 1B                   75 	dec	de
                             76 ;../_strncpy.c:40: *d++ = *s++ ;
   002B 7C                   77 	ld	a,h
   002C FD 23                78 	inc	iy
   002E 02                   79 	ld	(bc),a
   002F 03                   80 	inc	bc
   0030 18 ED                81 	jr	00102$
                             82 ;../_strncpy.c:42: while ( n-- )
   0032                      83 00114$:
   0032                      84 00105$:
   0032 63                   85 	ld	h,e
   0033 6A                   86 	ld	l,d
   0034 1B                   87 	dec	de
   0035 7D                   88 	ld	a,l
   0036 B4                   89 	or	a,h
   0037 28 05                90 	jr	Z,00107$
                             91 ;../_strncpy.c:44: *d++ = '\0' ;
   0039 AF                   92 	xor	a, a
   003A 02                   93 	ld	(bc),a
   003B 03                   94 	inc	bc
   003C 18 F4                95 	jr	00105$
   003E                      96 00107$:
                             97 ;../_strncpy.c:46: return d1;
   003E C4 00                98 	ld	hl, 0 (sp)
   0040 DD F9                99 	ld	sp, ix
   0042 DD E1               100 	pop	ix
   0044 C9                  101 	ret
                            102 	.area _CODE
                            103 	.area _INITIALIZER
                            104 	.area _CABS (ABS)
