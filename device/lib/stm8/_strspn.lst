                                      1 ;--------------------------------------------------------
                                      2 ; File Created by SDCC : free open source ANSI-C Compiler
                                      3 ; Version 3.5.0 #9253 (Apr  4 2022) (Linux)
                                      4 ; This file was generated Mon Apr  4 14:17:16 2022
                                      5 ;--------------------------------------------------------
                                      6 	.module _strspn
                                      7 	.optsdcc -mstm8
                                      8 	
                                      9 ;--------------------------------------------------------
                                     10 ; Public variables in this module
                                     11 ;--------------------------------------------------------
                                     12 	.globl _strchr
                                     13 	.globl _strspn
                                     14 ;--------------------------------------------------------
                                     15 ; ram data
                                     16 ;--------------------------------------------------------
                                     17 	.area DATA
                                     18 ;--------------------------------------------------------
                                     19 ; ram data
                                     20 ;--------------------------------------------------------
                                     21 	.area INITIALIZED
                                     22 ;--------------------------------------------------------
                                     23 ; absolute external ram data
                                     24 ;--------------------------------------------------------
                                     25 	.area DABS (ABS)
                                     26 ;--------------------------------------------------------
                                     27 ; global & static initialisations
                                     28 ;--------------------------------------------------------
                                     29 	.area HOME
                                     30 	.area GSINIT
                                     31 	.area GSFINAL
                                     32 	.area GSINIT
                                     33 ;--------------------------------------------------------
                                     34 ; Home
                                     35 ;--------------------------------------------------------
                                     36 	.area HOME
                                     37 	.area HOME
                                     38 ;--------------------------------------------------------
                                     39 ; code
                                     40 ;--------------------------------------------------------
                                     41 	.area CODE
                                     42 ;	../_strspn.c: 31: size_t strspn ( const char * string, const char * control )
                                     43 ;	-----------------------------------------
                                     44 ;	 function strspn
                                     45 ;	-----------------------------------------
      000000                         46 _strspn:
      000000 52 04            [ 2]   47 	sub	sp, #4
                                     48 ;	../_strspn.c: 36: while (ch = *string) {
      000002 5F               [ 1]   49 	clrw	x
      000003 1F 01            [ 2]   50 	ldw	(0x01, sp), x
      000005 16 07            [ 2]   51 	ldw	y, (0x07, sp)
      000007 17 03            [ 2]   52 	ldw	(0x03, sp), y
      000009                         53 00104$:
      000009 1E 03            [ 2]   54 	ldw	x, (0x03, sp)
      00000B F6               [ 1]   55 	ld	a, (x)
      00000C 97               [ 1]   56 	ld	xl, a
      00000D 4D               [ 1]   57 	tnz	a
      00000E 27 1E            [ 1]   58 	jreq	00106$
                                     59 ;	../_strspn.c: 37: if ( strchr(control,ch) )
      000010 9F               [ 1]   60 	ld	a, xl
      000011 49               [ 1]   61 	rlc	a
      000012 4F               [ 1]   62 	clr	a
      000013 A2 00            [ 1]   63 	sbc	a, #0x00
      000015 95               [ 1]   64 	ld	xh, a
      000016 89               [ 2]   65 	pushw	x
      000017 1E 0B            [ 2]   66 	ldw	x, (0x0b, sp)
      000019 89               [ 2]   67 	pushw	x
      00001A CDr00r00         [ 4]   68 	call	_strchr
      00001D 5B 04            [ 2]   69 	addw	sp, #4
      00001F 5D               [ 2]   70 	tnzw	x
      000020 27 0C            [ 1]   71 	jreq	00106$
                                     72 ;	../_strspn.c: 38: count++ ;
      000022 1E 01            [ 2]   73 	ldw	x, (0x01, sp)
      000024 5C               [ 2]   74 	incw	x
      000025 1F 01            [ 2]   75 	ldw	(0x01, sp), x
                                     76 ;	../_strspn.c: 41: string++ ;
      000027 1E 03            [ 2]   77 	ldw	x, (0x03, sp)
      000029 5C               [ 2]   78 	incw	x
      00002A 1F 03            [ 2]   79 	ldw	(0x03, sp), x
      00002C 20 DB            [ 2]   80 	jra	00104$
      00002E                         81 00106$:
                                     82 ;	../_strspn.c: 44: return count ;
      00002E 1E 01            [ 2]   83 	ldw	x, (0x01, sp)
      000030 5B 04            [ 2]   84 	addw	sp, #4
      000032 81               [ 4]   85 	ret
                                     86 	.area CODE
                                     87 	.area INITIALIZER
                                     88 	.area CABS (ABS)
