                              1 ;--------------------------------------------------------
                              2 ; File Created by SDCC : free open source ANSI-C Compiler
                              3 ; Version 3.5.0 #9253 (Apr  4 2022) (Linux)
                              4 ; This file was generated Mon Apr  4 14:15:45 2022
                              5 ;--------------------------------------------------------
                              6 	.hd64
                              7 	.module _memcmp
                              8 	.optsdcc -mz180
                              9 	
                             10 ;--------------------------------------------------------
                             11 ; Public variables in this module
                             12 ;--------------------------------------------------------
                             13 	.globl _memcmp
                             14 ;--------------------------------------------------------
                             15 ; special function registers
                             16 ;--------------------------------------------------------
                             17 ;--------------------------------------------------------
                             18 ; ram data
                             19 ;--------------------------------------------------------
                             20 	.area _DATA
                             21 ;--------------------------------------------------------
                             22 ; ram data
                             23 ;--------------------------------------------------------
                             24 	.area _INITIALIZED
                             25 ;--------------------------------------------------------
                             26 ; absolute external ram data
                             27 ;--------------------------------------------------------
                             28 	.area _DABS (ABS)
                             29 ;--------------------------------------------------------
                             30 ; global & static initialisations
                             31 ;--------------------------------------------------------
                             32 	.area _HOME
                             33 	.area _GSINIT
                             34 	.area _GSFINAL
                             35 	.area _GSINIT
                             36 ;--------------------------------------------------------
                             37 ; Home
                             38 ;--------------------------------------------------------
                             39 	.area _HOME
                             40 	.area _HOME
                             41 ;--------------------------------------------------------
                             42 ; code
                             43 ;--------------------------------------------------------
                             44 	.area _CODE
                             45 ;../_memcmp.c:31: int memcmp (const void * buf1, const void * buf2, size_t count)
                             46 ;	---------------------------------
                             47 ; Function memcmp
                             48 ; ---------------------------------
   0000                      49 _memcmp::
   0000 DD E5         [14]   50 	push	ix
   0002 DD 21 00 00   [12]   51 	ld	ix,#0
   0006 DD 39         [10]   52 	add	ix,sp
   0008 3B            [ 4]   53 	dec	sp
   0009 3B            [ 4]   54 	dec	sp
                             55 ;../_memcmp.c:33: if (!count)
   000A DD 7E 09      [14]   56 	ld	a,9 (ix)
   000D DD B6 08      [14]   57 	or	a,8 (ix)
   0010 20 05         [ 8]   58 	jr	NZ,00112$
                             59 ;../_memcmp.c:34: return(0);
   0012 21 00 00      [ 9]   60 	ld	hl,#0x0000
   0015 18 5D         [ 8]   61 	jr	00107$
                             62 ;../_memcmp.c:36: while ( --count && *((char *)buf1) == *((char *)buf2) ) {
   0017                      63 00112$:
   0017 DD 5E 08      [14]   64 	ld	e,8 (ix)
   001A DD 56 09      [14]   65 	ld	d,9 (ix)
   001D                      66 00104$:
   001D 1B            [ 4]   67 	dec	de
   001E 7A            [ 4]   68 	ld	a,d
   001F B3            [ 4]   69 	or	a,e
   0020 28 3A         [ 8]   70 	jr	Z,00106$
   0022 DD 4E 04      [14]   71 	ld	c,4 (ix)
   0025 DD 46 05      [14]   72 	ld	b,5 (ix)
   0028 C5            [11]   73 	push	bc
   0029 FD E1         [12]   74 	pop	iy
   002B FD 7E 00      [14]   75 	ld	a, 0 (iy)
   002E DD 77 FE      [15]   76 	ld	-2 (ix),a
   0031 DD 4E 06      [14]   77 	ld	c,6 (ix)
   0034 DD 46 07      [14]   78 	ld	b,7 (ix)
   0037 0A            [ 6]   79 	ld	a,(bc)
   0038 DD 77 FF      [15]   80 	ld	-1 (ix),a
   003B DD 7E FE      [14]   81 	ld	a,-2 (ix)
   003E DD 96 FF      [14]   82 	sub	a, -1 (ix)
   0041 20 19         [ 8]   83 	jr	NZ,00106$
                             84 ;../_memcmp.c:37: buf1 = (char *)buf1 + 1;
   0043 FD 23         [ 7]   85 	inc	iy
   0045 FD E5         [14]   86 	push	iy
   0047 F1            [ 9]   87 	pop	af
   0048 DD 77 05      [15]   88 	ld	5 (ix),a
   004B FD E5         [14]   89 	push	iy
   004D 3B            [ 4]   90 	dec	sp
   004E F1            [ 9]   91 	pop	af
   004F 33            [ 4]   92 	inc	sp
   0050 DD 77 04      [15]   93 	ld	4 (ix),a
                             94 ;../_memcmp.c:38: buf2 = (char *)buf2 + 1;
   0053 03            [ 4]   95 	inc	bc
   0054 DD 71 06      [15]   96 	ld	6 (ix),c
   0057 DD 70 07      [15]   97 	ld	7 (ix),b
   005A 18 C1         [ 8]   98 	jr	00104$
   005C                      99 00106$:
                            100 ;../_memcmp.c:41: return( *((unsigned char *)buf1) - *((unsigned char *)buf2) );
   005C DD 6E 04      [14]  101 	ld	l,4 (ix)
   005F DD 66 05      [14]  102 	ld	h,5 (ix)
   0062 5E            [ 6]  103 	ld	e,(hl)
   0063 16 00         [ 6]  104 	ld	d,#0x00
   0065 DD 6E 06      [14]  105 	ld	l,6 (ix)
   0068 DD 66 07      [14]  106 	ld	h,7 (ix)
   006B 6E            [ 6]  107 	ld	l,(hl)
   006C 26 00         [ 6]  108 	ld	h,#0x00
   006E 7B            [ 4]  109 	ld	a,e
   006F 95            [ 4]  110 	sub	a, l
   0070 6F            [ 4]  111 	ld	l,a
   0071 7A            [ 4]  112 	ld	a,d
   0072 9C            [ 4]  113 	sbc	a, h
   0073 67            [ 4]  114 	ld	h,a
   0074                     115 00107$:
   0074 DD F9         [ 7]  116 	ld	sp, ix
   0076 DD E1         [12]  117 	pop	ix
   0078 C9            [ 9]  118 	ret
                            119 	.area _CODE
                            120 	.area _INITIALIZER
                            121 	.area _CABS (ABS)
