                                      1 ;--------------------------------------------------------
                                      2 ; File Created by SDCC : free open source ANSI-C Compiler
                                      3 ; Version 3.5.0 #9253 (Apr  4 2022) (Linux)
                                      4 ; This file was generated Mon Apr  4 14:17:17 2022
                                      5 ;--------------------------------------------------------
                                      6 	.module _memcpy
                                      7 	.optsdcc -mstm8
                                      8 	
                                      9 ;--------------------------------------------------------
                                     10 ; Public variables in this module
                                     11 ;--------------------------------------------------------
                                     12 	.globl _memcpy
                                     13 ;--------------------------------------------------------
                                     14 ; ram data
                                     15 ;--------------------------------------------------------
                                     16 	.area DATA
                                     17 ;--------------------------------------------------------
                                     18 ; ram data
                                     19 ;--------------------------------------------------------
                                     20 	.area INITIALIZED
                                     21 ;--------------------------------------------------------
                                     22 ; absolute external ram data
                                     23 ;--------------------------------------------------------
                                     24 	.area DABS (ABS)
                                     25 ;--------------------------------------------------------
                                     26 ; global & static initialisations
                                     27 ;--------------------------------------------------------
                                     28 	.area HOME
                                     29 	.area GSINIT
                                     30 	.area GSFINAL
                                     31 	.area GSINIT
                                     32 ;--------------------------------------------------------
                                     33 ; Home
                                     34 ;--------------------------------------------------------
                                     35 	.area HOME
                                     36 	.area HOME
                                     37 ;--------------------------------------------------------
                                     38 ; code
                                     39 ;--------------------------------------------------------
                                     40 	.area CODE
                                     41 ;	../_memcpy.c: 36: void * memcpy (void * dst, const void * src, size_t acount)
                                     42 ;	-----------------------------------------
                                     43 ;	 function memcpy
                                     44 ;	-----------------------------------------
      000000                         45 _memcpy:
      000000 52 08            [ 2]   46 	sub	sp, #8
                                     47 ;	../_memcpy.c: 38: void * ret = dst;
      000002 16 0B            [ 2]   48 	ldw	y, (0x0b, sp)
      000004 17 01            [ 2]   49 	ldw	(0x01, sp), y
                                     50 ;	../_memcpy.c: 39: char * d = dst;
      000006 16 0B            [ 2]   51 	ldw	y, (0x0b, sp)
                                     52 ;	../_memcpy.c: 40: const char * s = src;
      000008 1E 0D            [ 2]   53 	ldw	x, (0x0d, sp)
                                     54 ;	../_memcpy.c: 45: while (acount--) {
      00000A 1F 03            [ 2]   55 	ldw	(0x03, sp), x
      00000C 17 07            [ 2]   56 	ldw	(0x07, sp), y
      00000E 16 0F            [ 2]   57 	ldw	y, (0x0f, sp)
      000010                         58 00101$:
      000010 17 05            [ 2]   59 	ldw	(0x05, sp), y
      000012 90 5A            [ 2]   60 	decw	y
      000014 1E 05            [ 2]   61 	ldw	x, (0x05, sp)
      000016 27 12            [ 1]   62 	jreq	00103$
                                     63 ;	../_memcpy.c: 46: *d++ = *s++;
      000018 1E 03            [ 2]   64 	ldw	x, (0x03, sp)
      00001A F6               [ 1]   65 	ld	a, (x)
      00001B 1E 03            [ 2]   66 	ldw	x, (0x03, sp)
      00001D 5C               [ 2]   67 	incw	x
      00001E 1F 03            [ 2]   68 	ldw	(0x03, sp), x
      000020 1E 07            [ 2]   69 	ldw	x, (0x07, sp)
      000022 F7               [ 1]   70 	ld	(x), a
      000023 1E 07            [ 2]   71 	ldw	x, (0x07, sp)
      000025 5C               [ 2]   72 	incw	x
      000026 1F 07            [ 2]   73 	ldw	(0x07, sp), x
      000028 20 E6            [ 2]   74 	jra	00101$
      00002A                         75 00103$:
                                     76 ;	../_memcpy.c: 49: return(ret);
      00002A 1E 01            [ 2]   77 	ldw	x, (0x01, sp)
      00002C 5B 08            [ 2]   78 	addw	sp, #8
      00002E 81               [ 4]   79 	ret
                                     80 	.area CODE
                                     81 	.area INITIALIZER
                                     82 	.area CABS (ABS)
