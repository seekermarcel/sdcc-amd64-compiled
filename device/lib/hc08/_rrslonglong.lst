                              1 ;--------------------------------------------------------
                              2 ; File Created by SDCC : free open source ANSI-C Compiler
                              3 ; Version 3.5.0 #9253 (Apr  4 2022) (Linux)
                              4 ; This file was generated Mon Apr  4 14:10:32 2022
                              5 ;--------------------------------------------------------
                              6 	.module _rrslonglong
                              7 	.optsdcc -mhc08
                              8 	
                              9 	.area HOME    (CODE)
                             10 	.area GSINIT0 (CODE)
                             11 	.area GSINIT  (CODE)
                             12 	.area GSFINAL (CODE)
                             13 	.area CSEG    (CODE)
                             14 	.area XINIT   (CODE)
                             15 	.area CONST   (CODE)
                             16 	.area DSEG    (PAG)
                             17 	.area OSEG    (PAG, OVR)
                             18 	.area XSEG
                             19 	.area XISEG
                             20 ;--------------------------------------------------------
                             21 ; Public variables in this module
                             22 ;--------------------------------------------------------
                             23 	.globl __rrslonglong_PARM_2
                             24 	.globl __rrslonglong_PARM_1
                             25 	.globl __rrslonglong
                             26 ;--------------------------------------------------------
                             27 ; ram data
                             28 ;--------------------------------------------------------
                             29 	.area DSEG    (PAG)
                             30 ;--------------------------------------------------------
                             31 ; overlayable items in ram 
                             32 ;--------------------------------------------------------
                             33 	.area	OSEG    (PAG, OVR)
   0000                      34 __rrslonglong_sloc0_1_0:
   0000                      35 	.ds 4
   0004                      36 __rrslonglong_sloc1_1_0:
   0004                      37 	.ds 2
   0006                      38 __rrslonglong_sloc2_1_0:
   0006                      39 	.ds 4
                             40 ;--------------------------------------------------------
                             41 ; absolute ram data
                             42 ;--------------------------------------------------------
                             43 	.area IABS    (ABS)
                             44 	.area IABS    (ABS)
                             45 ;--------------------------------------------------------
                             46 ; absolute external ram data
                             47 ;--------------------------------------------------------
                             48 	.area XABS    (ABS)
                             49 ;--------------------------------------------------------
                             50 ; external initialized ram data
                             51 ;--------------------------------------------------------
                             52 	.area XISEG
                             53 ;--------------------------------------------------------
                             54 ; extended address mode data
                             55 ;--------------------------------------------------------
                             56 	.area XSEG
   0000                      57 __rrslonglong_PARM_1:
   0000                      58 	.ds 8
   0008                      59 __rrslonglong_PARM_2:
   0008                      60 	.ds 1
                             61 ;--------------------------------------------------------
                             62 ; global & static initialisations
                             63 ;--------------------------------------------------------
                             64 	.area HOME    (CODE)
                             65 	.area GSINIT  (CODE)
                             66 	.area GSFINAL (CODE)
                             67 	.area GSINIT  (CODE)
                             68 ;--------------------------------------------------------
                             69 ; Home
                             70 ;--------------------------------------------------------
                             71 	.area HOME    (CODE)
                             72 	.area HOME    (CODE)
                             73 ;--------------------------------------------------------
                             74 ; code
                             75 ;--------------------------------------------------------
                             76 	.area CSEG    (CODE)
                             77 ;------------------------------------------------------------
                             78 ;Allocation info for local variables in function '_rrslonglong'
                             79 ;------------------------------------------------------------
                             80 ;l                         Allocated with name '__rrslonglong_PARM_1'
                             81 ;s                         Allocated with name '__rrslonglong_PARM_2'
                             82 ;top                       Allocated to registers 
                             83 ;middle                    Allocated to registers 
                             84 ;bottom                    Allocated to registers 
                             85 ;b                         Allocated to registers 
                             86 ;sloc0                     Allocated with name '__rrslonglong_sloc0_1_0'
                             87 ;sloc1                     Allocated with name '__rrslonglong_sloc1_1_0'
                             88 ;sloc2                     Allocated with name '__rrslonglong_sloc2_1_0'
                             89 ;------------------------------------------------------------
                             90 ;../_rrslonglong.c:35: long long _rrslonglong(long long l, signed char s)
                             91 ;	-----------------------------------------
                             92 ;	 function _rrslonglong
                             93 ;	-----------------------------------------
                             94 ;	Register assignment is optimal.
                             95 ;	Stack space usage: 0 bytes.
   0000                      96 __rrslonglong:
                             97 ;../_rrslonglong.c:37: int32_t *top = (uint32_t *)((char *)(&l) + 4);
                             98 ;../_rrslonglong.c:38: uint16_t *middle = (uint16_t *)((char *)(&l) + 3);
                             99 ;../_rrslonglong.c:39: uint32_t *bottom = (uint32_t *)(&l);
                            100 ;../_rrslonglong.c:40: uint16_t *b = (uint16_t *)(&l);
                            101 ;../_rrslonglong.c:50: (*bottom) >>= s;
   0000 C6r00r08      [ 4]  102 	lda	__rrslonglong_PARM_2
   0003 87            [ 2]  103 	psha
   0004 8A            [ 2]  104 	pulh
   0005                     105 00103$:
                            106 ;../_rrslonglong.c:42: for(;s >= 16; s-= 16)
   0005 8B            [ 2]  107 	pshh
   0006 86            [ 2]  108 	pula
   0007 A1 10         [ 2]  109 	cmp	#0x10
   0009 91 42         [ 3]  110 	blt	00101$
                            111 ;../_rrslonglong.c:44: b[0] = b[1];
   000B C6r00r02      [ 4]  112 	lda	(__rrslonglong_PARM_1 + 0x0002)
   000E CEr00r03      [ 4]  113 	ldx	((__rrslonglong_PARM_1 + 0x0002) + 1)
   0011 C7r00r00      [ 4]  114 	sta	__rrslonglong_PARM_1
   0014 CFr00r01      [ 4]  115 	stx	(__rrslonglong_PARM_1 + 1)
                            116 ;../_rrslonglong.c:45: b[1] = b[2];
   0017 C6r00r04      [ 4]  117 	lda	(__rrslonglong_PARM_1 + 0x0004)
   001A CEr00r05      [ 4]  118 	ldx	((__rrslonglong_PARM_1 + 0x0004) + 1)
   001D C7r00r02      [ 4]  119 	sta	(__rrslonglong_PARM_1 + 0x0002)
   0020 CFr00r03      [ 4]  120 	stx	((__rrslonglong_PARM_1 + 0x0002) + 1)
                            121 ;../_rrslonglong.c:46: b[2] = b[3];
   0023 C6r00r06      [ 4]  122 	lda	(__rrslonglong_PARM_1 + 0x0006)
   0026 CEr00r07      [ 4]  123 	ldx	((__rrslonglong_PARM_1 + 0x0006) + 1)
   0029 C7r00r04      [ 4]  124 	sta	(__rrslonglong_PARM_1 + 0x0004)
   002C CFr00r05      [ 4]  125 	stx	((__rrslonglong_PARM_1 + 0x0004) + 1)
                            126 ;../_rrslonglong.c:47: b[3] = (b[3] & 0x8000) ? 0xffff : 0x000000;
   002F C6r00r06      [ 4]  127 	lda	(__rrslonglong_PARM_1 + 0x0006)
   0032 CEr00r07      [ 4]  128 	ldx	((__rrslonglong_PARM_1 + 0x0006) + 1)
   0035 4D            [ 1]  129 	tsta
   0036 2A 05         [ 3]  130 	bpl     00107$
   0038 A6 FF         [ 2]  131 	lda	#0xFF
   003A 97            [ 1]  132 	tax
   003B 20 02         [ 3]  133 	bra	00108$
   003D                     134 00107$:
   003D 4F            [ 1]  135 	clra
   003E 97            [ 1]  136 	tax
   003F                     137 00108$:
   003F C7r00r06      [ 4]  138 	sta	(__rrslonglong_PARM_1 + 0x0006)
   0042 CFr00r07      [ 4]  139 	stx	((__rrslonglong_PARM_1 + 0x0006) + 1)
                            140 ;../_rrslonglong.c:42: for(;s >= 16; s-= 16)
   0045 8B            [ 2]  141 	pshh
   0046 86            [ 2]  142 	pula
   0047 A0 10         [ 2]  143 	sub	#0x10
   0049 87            [ 2]  144 	psha
   004A 8A            [ 2]  145 	pulh
   004B 20 B8         [ 3]  146 	bra	00103$
   004D                     147 00101$:
                            148 ;../_rrslonglong.c:50: (*bottom) >>= s;
   004D C6r00r00      [ 4]  149 	lda	__rrslonglong_PARM_1
   0050 B7*00         [ 3]  150 	sta	*__rrslonglong_sloc0_1_0
   0052 C6r00r01      [ 4]  151 	lda	(__rrslonglong_PARM_1 + 1)
   0055 B7*01         [ 3]  152 	sta	*(__rrslonglong_sloc0_1_0 + 1)
   0057 C6r00r02      [ 4]  153 	lda	(__rrslonglong_PARM_1 + 2)
   005A B7*02         [ 3]  154 	sta	*(__rrslonglong_sloc0_1_0 + 2)
   005C C6r00r03      [ 4]  155 	lda	(__rrslonglong_PARM_1 + 3)
   005F B7*03         [ 3]  156 	sta	*(__rrslonglong_sloc0_1_0 + 3)
   0061 8B            [ 2]  157 	pshh
   0062 88            [ 2]  158 	pulx
   0063 5D            [ 1]  159 	tstx
   0064 27 0A         [ 3]  160 	beq	00125$
   0066                     161 00124$:
   0066 34*00         [ 4]  162 	lsr	*__rrslonglong_sloc0_1_0
   0068 36*01         [ 4]  163 	ror	*(__rrslonglong_sloc0_1_0 + 1)
   006A 36*02         [ 4]  164 	ror	*(__rrslonglong_sloc0_1_0 + 2)
   006C 36*03         [ 4]  165 	ror	*(__rrslonglong_sloc0_1_0 + 3)
   006E 5B F6         [ 3]  166 	dbnzx	00124$
   0070                     167 00125$:
   0070 B6*00         [ 3]  168 	lda	*__rrslonglong_sloc0_1_0
   0072 C7r00r00      [ 4]  169 	sta	__rrslonglong_PARM_1
   0075 B6*01         [ 3]  170 	lda	*(__rrslonglong_sloc0_1_0 + 1)
   0077 C7r00r01      [ 4]  171 	sta	(__rrslonglong_PARM_1 + 1)
   007A B6*02         [ 3]  172 	lda	*(__rrslonglong_sloc0_1_0 + 2)
   007C C7r00r02      [ 4]  173 	sta	(__rrslonglong_PARM_1 + 2)
   007F B6*03         [ 3]  174 	lda	*(__rrslonglong_sloc0_1_0 + 3)
   0081 C7r00r03      [ 4]  175 	sta	(__rrslonglong_PARM_1 + 3)
                            176 ;../_rrslonglong.c:51: (*bottom) |= ((uint32_t)((*middle) >> s) << 16);
   0084 CEr00r03      [ 4]  177 	ldx	(__rrslonglong_PARM_1 + 0x0003)
   0087 C6r00r04      [ 4]  178 	lda	((__rrslonglong_PARM_1 + 0x0003) + 1)
   008A B7*05         [ 3]  179 	sta	*(__rrslonglong_sloc1_1_0 + 1)
   008C BF*04         [ 3]  180 	stx	*__rrslonglong_sloc1_1_0
   008E 8B            [ 2]  181 	pshh
   008F 88            [ 2]  182 	pulx
   0090 5D            [ 1]  183 	tstx
   0091 27 06         [ 3]  184 	beq	00127$
   0093                     185 00126$:
   0093 34*04         [ 4]  186 	lsr	*__rrslonglong_sloc1_1_0
   0095 36*05         [ 4]  187 	ror	*(__rrslonglong_sloc1_1_0 + 1)
   0097 5B FA         [ 3]  188 	dbnzx	00126$
   0099                     189 00127$:
   0099 4E*05*09      [ 5]  190 	mov	*(__rrslonglong_sloc1_1_0 + 1),*(__rrslonglong_sloc2_1_0 + 3)
   009C 4E*04*08      [ 5]  191 	mov	*__rrslonglong_sloc1_1_0,*(__rrslonglong_sloc2_1_0 + 2)
   009F 6E 00*07      [ 4]  192 	mov	#0x00,*(__rrslonglong_sloc2_1_0 + 1)
   00A2 6E 00*06      [ 4]  193 	mov	#0x00,*__rrslonglong_sloc2_1_0
   00A5 4E*08*06      [ 5]  194 	mov	*(__rrslonglong_sloc2_1_0 + 2),*__rrslonglong_sloc2_1_0
   00A8 4E*09*07      [ 5]  195 	mov	*(__rrslonglong_sloc2_1_0 + 3),*(__rrslonglong_sloc2_1_0 + 1)
   00AB 6E 00*09      [ 4]  196 	mov	#0x00,*(__rrslonglong_sloc2_1_0 + 3)
   00AE 6E 00*08      [ 4]  197 	mov	#0x00,*(__rrslonglong_sloc2_1_0 + 2)
   00B1 B6*03         [ 3]  198 	lda	*(__rrslonglong_sloc0_1_0 + 3)
   00B3 BA*09         [ 3]  199 	ora	*(__rrslonglong_sloc2_1_0 + 3)
   00B5 B7*09         [ 3]  200 	sta	*(__rrslonglong_sloc2_1_0 + 3)
   00B7 B6*02         [ 3]  201 	lda	*(__rrslonglong_sloc0_1_0 + 2)
   00B9 BA*08         [ 3]  202 	ora	*(__rrslonglong_sloc2_1_0 + 2)
   00BB B7*08         [ 3]  203 	sta	*(__rrslonglong_sloc2_1_0 + 2)
   00BD B6*01         [ 3]  204 	lda	*(__rrslonglong_sloc0_1_0 + 1)
   00BF BA*07         [ 3]  205 	ora	*(__rrslonglong_sloc2_1_0 + 1)
   00C1 B7*07         [ 3]  206 	sta	*(__rrslonglong_sloc2_1_0 + 1)
   00C3 B6*00         [ 3]  207 	lda	*__rrslonglong_sloc0_1_0
   00C5 BA*06         [ 3]  208 	ora	*__rrslonglong_sloc2_1_0
   00C7 B7*06         [ 3]  209 	sta	*__rrslonglong_sloc2_1_0
   00C9 B6*06         [ 3]  210 	lda	*__rrslonglong_sloc2_1_0
   00CB C7r00r00      [ 4]  211 	sta	__rrslonglong_PARM_1
   00CE B6*07         [ 3]  212 	lda	*(__rrslonglong_sloc2_1_0 + 1)
   00D0 C7r00r01      [ 4]  213 	sta	(__rrslonglong_PARM_1 + 1)
   00D3 B6*08         [ 3]  214 	lda	*(__rrslonglong_sloc2_1_0 + 2)
   00D5 C7r00r02      [ 4]  215 	sta	(__rrslonglong_PARM_1 + 2)
   00D8 B6*09         [ 3]  216 	lda	*(__rrslonglong_sloc2_1_0 + 3)
   00DA C7r00r03      [ 4]  217 	sta	(__rrslonglong_PARM_1 + 3)
                            218 ;../_rrslonglong.c:52: (*top) |= (((*middle) & 0xffff0000) >> s);
   00DD C6r00r04      [ 4]  219 	lda	(__rrslonglong_PARM_1 + 0x0004)
   00E0 B7*06         [ 3]  220 	sta	*__rrslonglong_sloc2_1_0
   00E2 C6r00r05      [ 4]  221 	lda	((__rrslonglong_PARM_1 + 0x0004) + 1)
   00E5 B7*07         [ 3]  222 	sta	*(__rrslonglong_sloc2_1_0 + 1)
   00E7 C6r00r06      [ 4]  223 	lda	((__rrslonglong_PARM_1 + 0x0004) + 2)
   00EA B7*08         [ 3]  224 	sta	*(__rrslonglong_sloc2_1_0 + 2)
   00EC C6r00r07      [ 4]  225 	lda	((__rrslonglong_PARM_1 + 0x0004) + 3)
   00EF B7*09         [ 3]  226 	sta	*(__rrslonglong_sloc2_1_0 + 3)
   00F1 CEr00r03      [ 4]  227 	ldx	(__rrslonglong_PARM_1 + 0x0003)
   00F4 C6r00r04      [ 4]  228 	lda	((__rrslonglong_PARM_1 + 0x0003) + 1)
   00F7 B7*03         [ 3]  229 	sta	*(__rrslonglong_sloc0_1_0 + 3)
   00F9 BF*02         [ 3]  230 	stx	*(__rrslonglong_sloc0_1_0 + 2)
   00FB 6E 00*01      [ 4]  231 	mov	#0x00,*(__rrslonglong_sloc0_1_0 + 1)
   00FE 6E 00*00      [ 4]  232 	mov	#0x00,*__rrslonglong_sloc0_1_0
   0101 6E 00*03      [ 4]  233 	mov	#0x00,*(__rrslonglong_sloc0_1_0 + 3)
   0104 6E 00*02      [ 4]  234 	mov	#0x00,*(__rrslonglong_sloc0_1_0 + 2)
   0107 8B            [ 2]  235 	pshh
   0108 88            [ 2]  236 	pulx
   0109 5D            [ 1]  237 	tstx
   010A 27 0A         [ 3]  238 	beq	00129$
   010C                     239 00128$:
   010C 34*00         [ 4]  240 	lsr	*__rrslonglong_sloc0_1_0
   010E 36*01         [ 4]  241 	ror	*(__rrslonglong_sloc0_1_0 + 1)
   0110 36*02         [ 4]  242 	ror	*(__rrslonglong_sloc0_1_0 + 2)
   0112 36*03         [ 4]  243 	ror	*(__rrslonglong_sloc0_1_0 + 3)
   0114 5B F6         [ 3]  244 	dbnzx	00128$
   0116                     245 00129$:
   0116 B6*09         [ 3]  246 	lda	*(__rrslonglong_sloc2_1_0 + 3)
   0118 BA*03         [ 3]  247 	ora	*(__rrslonglong_sloc0_1_0 + 3)
   011A B7*09         [ 3]  248 	sta	*(__rrslonglong_sloc2_1_0 + 3)
   011C B6*08         [ 3]  249 	lda	*(__rrslonglong_sloc2_1_0 + 2)
   011E BA*02         [ 3]  250 	ora	*(__rrslonglong_sloc0_1_0 + 2)
   0120 B7*08         [ 3]  251 	sta	*(__rrslonglong_sloc2_1_0 + 2)
   0122 B6*07         [ 3]  252 	lda	*(__rrslonglong_sloc2_1_0 + 1)
   0124 BA*01         [ 3]  253 	ora	*(__rrslonglong_sloc0_1_0 + 1)
   0126 B7*07         [ 3]  254 	sta	*(__rrslonglong_sloc2_1_0 + 1)
   0128 B6*06         [ 3]  255 	lda	*__rrslonglong_sloc2_1_0
   012A BA*00         [ 3]  256 	ora	*__rrslonglong_sloc0_1_0
   012C B7*06         [ 3]  257 	sta	*__rrslonglong_sloc2_1_0
   012E B6*06         [ 3]  258 	lda	*__rrslonglong_sloc2_1_0
   0130 C7r00r04      [ 4]  259 	sta	(__rrslonglong_PARM_1 + 0x0004)
   0133 B6*07         [ 3]  260 	lda	*(__rrslonglong_sloc2_1_0 + 1)
   0135 C7r00r05      [ 4]  261 	sta	((__rrslonglong_PARM_1 + 0x0004) + 1)
   0138 B6*08         [ 3]  262 	lda	*(__rrslonglong_sloc2_1_0 + 2)
   013A C7r00r06      [ 4]  263 	sta	((__rrslonglong_PARM_1 + 0x0004) + 2)
   013D B6*09         [ 3]  264 	lda	*(__rrslonglong_sloc2_1_0 + 3)
   013F C7r00r07      [ 4]  265 	sta	((__rrslonglong_PARM_1 + 0x0004) + 3)
                            266 ;../_rrslonglong.c:54: return(l);
   0142 C6r00r00      [ 4]  267 	lda	__rrslonglong_PARM_1
   0145 B7*00         [ 3]  268 	sta	*___SDCC_hc08_ret7
   0147 C6r00r01      [ 4]  269 	lda	(__rrslonglong_PARM_1 + 1)
   014A B7*00         [ 3]  270 	sta	*___SDCC_hc08_ret6
   014C C6r00r02      [ 4]  271 	lda	(__rrslonglong_PARM_1 + 2)
   014F B7*00         [ 3]  272 	sta	*___SDCC_hc08_ret5
   0151 C6r00r03      [ 4]  273 	lda	(__rrslonglong_PARM_1 + 3)
   0154 B7*00         [ 3]  274 	sta	*___SDCC_hc08_ret4
   0156 C6r00r04      [ 4]  275 	lda	(__rrslonglong_PARM_1 + 4)
   0159 B7*00         [ 3]  276 	sta	*___SDCC_hc08_ret3
   015B C6r00r05      [ 4]  277 	lda	(__rrslonglong_PARM_1 + 5)
   015E B7*00         [ 3]  278 	sta	*___SDCC_hc08_ret2
   0160 CEr00r06      [ 4]  279 	ldx	(__rrslonglong_PARM_1 + 6)
   0163 C6r00r07      [ 4]  280 	lda	(__rrslonglong_PARM_1 + 7)
   0166 81            [ 4]  281 	rts
                            282 	.area CSEG    (CODE)
                            283 	.area CONST   (CODE)
                            284 	.area XINIT   (CODE)
                            285 	.area CABS    (ABS,CODE)
