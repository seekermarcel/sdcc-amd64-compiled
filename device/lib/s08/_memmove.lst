                              1 ;--------------------------------------------------------
                              2 ; File Created by SDCC : free open source ANSI-C Compiler
                              3 ; Version 3.5.0 #9253 (Apr  4 2022) (Linux)
                              4 ; This file was generated Mon Apr  4 14:10:39 2022
                              5 ;--------------------------------------------------------
                              6 	.cs08
                              7 	.module _memmove
                              8 	.optsdcc -ms08
                              9 	
                             10 	.area HOME    (CODE)
                             11 	.area GSINIT0 (CODE)
                             12 	.area GSINIT  (CODE)
                             13 	.area GSFINAL (CODE)
                             14 	.area CSEG    (CODE)
                             15 	.area XINIT   (CODE)
                             16 	.area CONST   (CODE)
                             17 	.area DSEG    (PAG)
                             18 	.area OSEG    (PAG, OVR)
                             19 	.area XSEG
                             20 	.area XISEG
                             21 ;--------------------------------------------------------
                             22 ; Public variables in this module
                             23 ;--------------------------------------------------------
                             24 	.globl _memmove_PARM_3
                             25 	.globl _memmove_PARM_2
                             26 	.globl _memmove
                             27 ;--------------------------------------------------------
                             28 ; ram data
                             29 ;--------------------------------------------------------
                             30 	.area DSEG    (PAG)
                             31 ;--------------------------------------------------------
                             32 ; overlayable items in ram 
                             33 ;--------------------------------------------------------
                             34 	.area	OSEG    (PAG, OVR)
   0000                      35 _memmove_sloc0_1_0:
   0000                      36 	.ds 2
   0002                      37 _memmove_sloc1_1_0:
   0002                      38 	.ds 2
   0004                      39 _memmove_sloc2_1_0:
   0004                      40 	.ds 2
   0006                      41 _memmove_sloc3_1_0:
   0006                      42 	.ds 2
   0008                      43 _memmove_sloc4_1_0:
   0008                      44 	.ds 2
   000A                      45 _memmove_sloc5_1_0:
   000A                      46 	.ds 2
                             47 ;--------------------------------------------------------
                             48 ; absolute ram data
                             49 ;--------------------------------------------------------
                             50 	.area IABS    (ABS)
                             51 	.area IABS    (ABS)
                             52 ;--------------------------------------------------------
                             53 ; absolute external ram data
                             54 ;--------------------------------------------------------
                             55 	.area XABS    (ABS)
                             56 ;--------------------------------------------------------
                             57 ; external initialized ram data
                             58 ;--------------------------------------------------------
                             59 	.area XISEG
                             60 ;--------------------------------------------------------
                             61 ; extended address mode data
                             62 ;--------------------------------------------------------
                             63 	.area XSEG
   0000                      64 _memmove_PARM_2:
   0000                      65 	.ds 2
   0002                      66 _memmove_PARM_3:
   0002                      67 	.ds 2
   0004                      68 _memmove_ret_1_22:
   0004                      69 	.ds 2
                             70 ;--------------------------------------------------------
                             71 ; global & static initialisations
                             72 ;--------------------------------------------------------
                             73 	.area HOME    (CODE)
                             74 	.area GSINIT  (CODE)
                             75 	.area GSFINAL (CODE)
                             76 	.area GSINIT  (CODE)
                             77 ;--------------------------------------------------------
                             78 ; Home
                             79 ;--------------------------------------------------------
                             80 	.area HOME    (CODE)
                             81 	.area HOME    (CODE)
                             82 ;--------------------------------------------------------
                             83 ; code
                             84 ;--------------------------------------------------------
                             85 	.area CSEG    (CODE)
                             86 ;------------------------------------------------------------
                             87 ;Allocation info for local variables in function 'memmove'
                             88 ;------------------------------------------------------------
                             89 ;src                       Allocated with name '_memmove_PARM_2'
                             90 ;acount                    Allocated with name '_memmove_PARM_3'
                             91 ;dst                       Allocated to registers a x 
                             92 ;ret                       Allocated with name '_memmove_ret_1_22'
                             93 ;d                         Allocated to registers 
                             94 ;s                         Allocated to registers 
                             95 ;sloc0                     Allocated with name '_memmove_sloc0_1_0'
                             96 ;sloc1                     Allocated with name '_memmove_sloc1_1_0'
                             97 ;sloc2                     Allocated with name '_memmove_sloc2_1_0'
                             98 ;sloc3                     Allocated with name '_memmove_sloc3_1_0'
                             99 ;sloc4                     Allocated with name '_memmove_sloc4_1_0'
                            100 ;sloc5                     Allocated with name '_memmove_sloc5_1_0'
                            101 ;------------------------------------------------------------
                            102 ;../_memmove.c:40: void * memmove (void * dst, const void * src, size_t acount)
                            103 ;	-----------------------------------------
                            104 ;	 function memmove
                            105 ;	-----------------------------------------
                            106 ;	Register assignment might be sub-optimal.
                            107 ;	Stack space usage: 0 bytes.
   0000                     108 _memmove:
                            109 ;../_memmove.c:42: void * ret = dst;
   0000 CFr00r04      [ 4]  110 	stx	_memmove_ret_1_22
   0003 C7r00r05      [ 4]  111 	sta	(_memmove_ret_1_22 + 1)
                            112 ;../_memmove.c:46: if ((uintptr_t)src < (uintptr_t)dst) {
   0006 87            [ 2]  113 	psha
   0007 C6r00r01      [ 4]  114 	lda	(_memmove_PARM_2 + 1)
   000A B7*01         [ 3]  115 	sta	*(_memmove_sloc0_1_0 + 1)
   000C C6r00r00      [ 4]  116 	lda	_memmove_PARM_2
   000F B7*00         [ 3]  117 	sta	*_memmove_sloc0_1_0
   0011 86            [ 3]  118 	pula
   0012 B7*03         [ 3]  119 	sta	*(_memmove_sloc1_1_0 + 1)
   0014 BF*02         [ 3]  120 	stx	*_memmove_sloc1_1_0
                            121 ;../_memmove.c:50: d = ((char *)dst)+acount-1;
   0016 B7*05         [ 3]  122 	sta	*(_memmove_sloc2_1_0 + 1)
   0018 BF*04         [ 3]  123 	stx	*_memmove_sloc2_1_0
                            124 ;../_memmove.c:51: s = ((char *)src)+acount-1;
   001A 32r00r00      [ 5]  125 	ldhx	_memmove_PARM_2
   001D 35*06         [ 4]  126 	sthx	*_memmove_sloc3_1_0
                            127 ;../_memmove.c:52: while (acount--) {
   001F 32r00r02      [ 5]  128 	ldhx	_memmove_PARM_3
   0022 35*08         [ 4]  129 	sthx	*_memmove_sloc4_1_0
                            130 ;../_memmove.c:46: if ((uintptr_t)src < (uintptr_t)dst) {
   0024 55*00         [ 4]  131 	ldhx	*_memmove_sloc0_1_0
   0026 75*02         [ 5]  132 	cphx	*_memmove_sloc1_1_0
   0028 24 4D         [ 3]  133 	bcc	00108$
                            134 ;../_memmove.c:50: d = ((char *)dst)+acount-1;
   002A B6*05         [ 3]  135 	lda	*(_memmove_sloc2_1_0 + 1)
   002C CBr00r03      [ 4]  136 	add	(_memmove_PARM_3 + 1)
   002F 97            [ 1]  137 	tax
   0030 B6*04         [ 3]  138 	lda	*_memmove_sloc2_1_0
   0032 C9r00r02      [ 4]  139 	adc	_memmove_PARM_3
   0035 87            [ 2]  140 	psha
   0036 8A            [ 3]  141 	pulh
   0037 AF FF         [ 2]  142 	aix	#-1
   0039 35*02         [ 4]  143 	sthx	*_memmove_sloc1_1_0
                            144 ;../_memmove.c:51: s = ((char *)src)+acount-1;
   003B B6*07         [ 3]  145 	lda	*(_memmove_sloc3_1_0 + 1)
   003D CBr00r03      [ 4]  146 	add	(_memmove_PARM_3 + 1)
   0040 97            [ 1]  147 	tax
   0041 B6*06         [ 3]  148 	lda	*_memmove_sloc3_1_0
   0043 C9r00r02      [ 4]  149 	adc	_memmove_PARM_3
   0046 87            [ 2]  150 	psha
   0047 8A            [ 3]  151 	pulh
   0048 AF FF         [ 2]  152 	aix	#-1
   004A 35*00         [ 4]  153 	sthx	*_memmove_sloc0_1_0
                            154 ;../_memmove.c:52: while (acount--) {
   004C 4E*08*0A      [ 6]  155 	mov	*_memmove_sloc4_1_0,*_memmove_sloc5_1_0
   004F 4E*09*0B      [ 6]  156 	mov	*(_memmove_sloc4_1_0 + 1),*(_memmove_sloc5_1_0 + 1)
   0052                     157 00101$:
   0052 55*0A         [ 4]  158 	ldhx	*_memmove_sloc5_1_0
   0054 89            [ 2]  159 	pshx
   0055 8B            [ 2]  160 	pshh
   0056 55*0A         [ 4]  161 	ldhx	*_memmove_sloc5_1_0
   0058 AF FF         [ 2]  162 	aix	#-1
   005A 35*0A         [ 4]  163 	sthx	*_memmove_sloc5_1_0
   005C 8A            [ 3]  164 	pulh
   005D 88            [ 3]  165 	pulx
   005E 65 00 00      [ 3]  166 	cphx	#0x00
   0061 27 42         [ 3]  167 	beq	00109$
                            168 ;../_memmove.c:53: *d-- = *s--;
   0063 55*00         [ 4]  169 	ldhx	*_memmove_sloc0_1_0
   0065 F6            [ 3]  170 	lda	,x
   0066 55*00         [ 4]  171 	ldhx	*_memmove_sloc0_1_0
   0068 AF FF         [ 2]  172 	aix	#-1
   006A 35*00         [ 4]  173 	sthx	*_memmove_sloc0_1_0
   006C 55*02         [ 4]  174 	ldhx	*_memmove_sloc1_1_0
   006E F7            [ 2]  175 	sta	,x
   006F 55*02         [ 4]  176 	ldhx	*_memmove_sloc1_1_0
   0071 AF FF         [ 2]  177 	aix	#-1
   0073 35*02         [ 4]  178 	sthx	*_memmove_sloc1_1_0
   0075 20 DB         [ 3]  179 	bra	00101$
   0077                     180 00108$:
                            181 ;../_memmove.c:60: d = dst;
   0077 55*04         [ 4]  182 	ldhx	*_memmove_sloc2_1_0
                            183 ;../_memmove.c:61: s = src;
   0079 4E*06*0A      [ 6]  184 	mov	*_memmove_sloc3_1_0,*_memmove_sloc5_1_0
   007C 4E*07*0B      [ 6]  185 	mov	*(_memmove_sloc3_1_0 + 1),*(_memmove_sloc5_1_0 + 1)
                            186 ;../_memmove.c:62: while (acount--) {
   007F                     187 00104$:
   007F 4E*08*06      [ 6]  188 	mov	*_memmove_sloc4_1_0,*_memmove_sloc3_1_0
   0082 4E*09*07      [ 6]  189 	mov	*(_memmove_sloc4_1_0 + 1),*(_memmove_sloc3_1_0 + 1)
   0085 89            [ 2]  190 	pshx
   0086 8B            [ 2]  191 	pshh
   0087 55*08         [ 4]  192 	ldhx	*_memmove_sloc4_1_0
   0089 AF FF         [ 2]  193 	aix	#-1
   008B 35*08         [ 4]  194 	sthx	*_memmove_sloc4_1_0
   008D 8A            [ 3]  195 	pulh
   008E 88            [ 3]  196 	pulx
   008F B6*07         [ 3]  197 	lda	*(_memmove_sloc3_1_0 + 1)
   0091 BA*06         [ 3]  198 	ora	*_memmove_sloc3_1_0
   0093 27 10         [ 3]  199 	beq	00109$
                            200 ;../_memmove.c:63: *d++ = *s++;
   0095 89            [ 2]  201 	pshx
   0096 8B            [ 2]  202 	pshh
   0097 55*0A         [ 4]  203 	ldhx	*_memmove_sloc5_1_0
   0099 F6            [ 3]  204 	lda	,x
   009A AF 01         [ 2]  205 	aix	#1
   009C 35*0A         [ 4]  206 	sthx	*_memmove_sloc5_1_0
   009E 8A            [ 3]  207 	pulh
   009F 88            [ 3]  208 	pulx
   00A0 F7            [ 2]  209 	sta	,x
   00A1 AF 01         [ 2]  210 	aix	#1
   00A3 20 DA         [ 3]  211 	bra	00104$
   00A5                     212 00109$:
                            213 ;../_memmove.c:67: return(ret);
   00A5 CEr00r04      [ 4]  214 	ldx	_memmove_ret_1_22
   00A8 C6r00r05      [ 4]  215 	lda	(_memmove_ret_1_22 + 1)
   00AB 81            [ 6]  216 	rts
                            217 	.area CSEG    (CODE)
                            218 	.area CONST   (CODE)
                            219 	.area XINIT   (CODE)
                            220 	.area CABS    (ABS,CODE)
