                              1 ;--------------------------------------------------------
                              2 ; File Created by SDCC : free open source ANSI-C Compiler
                              3 ; Version 3.5.0 #9253 (Apr  4 2022) (Linux)
                              4 ; This file was generated Mon Apr  4 14:15:58 2022
                              5 ;--------------------------------------------------------
                              6 	.module acosf
                              7 	.optsdcc -mr2k
                              8 	
                              9 ;--------------------------------------------------------
                             10 ; Public variables in this module
                             11 ;--------------------------------------------------------
                             12 	.globl _asincosf
                             13 	.globl _acosf
                             14 ;--------------------------------------------------------
                             15 ; special function registers
                             16 ;--------------------------------------------------------
                             17 ;--------------------------------------------------------
                             18 ; ram data
                             19 ;--------------------------------------------------------
                             20 	.area _DATA
                             21 ;--------------------------------------------------------
                             22 ; ram data
                             23 ;--------------------------------------------------------
                             24 	.area _INITIALIZED
                             25 ;--------------------------------------------------------
                             26 ; absolute external ram data
                             27 ;--------------------------------------------------------
                             28 	.area _DABS (ABS)
                             29 ;--------------------------------------------------------
                             30 ; global & static initialisations
                             31 ;--------------------------------------------------------
                             32 	.area _HOME
                             33 	.area _GSINIT
                             34 	.area _GSFINAL
                             35 	.area _GSINIT
                             36 ;--------------------------------------------------------
                             37 ; Home
                             38 ;--------------------------------------------------------
                             39 	.area _HOME
                             40 	.area _HOME
                             41 ;--------------------------------------------------------
                             42 ; code
                             43 ;--------------------------------------------------------
                             44 	.area _CODE
                             45 ;../acosf.c:36: float acosf(float x) _FLOAT_FUNC_REENTRANT
                             46 ;	---------------------------------
                             47 ; Function acosf
                             48 ; ---------------------------------
   0000                      49 _acosf::
                             50 ;../acosf.c:38: if (x == 1.0) return 0.0;
   0000 21 80 3F             51 	ld	hl,#0x3F80
   0003 E5                   52 	push	hl
   0004 21 00 00             53 	ld	hl,#0x0000
   0007 E5                   54 	push	hl
   0008 C4 08                55 	ld	hl, 8 (sp)
   000A E5                   56 	push	hl
   000B C4 08                57 	ld	hl, 8 (sp)
   000D E5                   58 	push	hl
   000E CDr00r00             59 	call	___fseq
   0011 27 08                60 	add	sp, #8
   0013 7D                   61 	ld	a,l
   0014 B7                   62 	or	a, a
   0015 28 06                63 	jr	Z,00108$
   0017 21 00 00             64 	ld	hl,#0x0000
   001A 5D                   65 	ld	e,l
   001B 54                   66 	ld	d,h
   001C C9                   67 	ret
   001D                      68 00108$:
                             69 ;../acosf.c:39: else if (x ==-1.0) return PI;
   001D 21 80 BF             70 	ld	hl,#0xBF80
   0020 E5                   71 	push	hl
   0021 21 00 00             72 	ld	hl,#0x0000
   0024 E5                   73 	push	hl
   0025 C4 08                74 	ld	hl, 8 (sp)
   0027 E5                   75 	push	hl
   0028 C4 08                76 	ld	hl, 8 (sp)
   002A E5                   77 	push	hl
   002B CDr00r00             78 	call	___fseq
   002E 27 08                79 	add	sp, #8
   0030 7D                   80 	ld	a,l
   0031 B7                   81 	or	a, a
   0032 28 07                82 	jr	Z,00105$
   0034 21 DB 0F             83 	ld	hl,#0x0FDB
   0037 11 49 40             84 	ld	de,#0x4049
   003A C9                   85 	ret
   003B                      86 00105$:
                             87 ;../acosf.c:40: else if (x == 0.0) return HALF_PI;
   003B FD 21 02 00          88 	ld	iy,#2
   003F FD 39                89 	add	iy,sp
   0041 FD 7E 03             90 	ld	a,3 (iy)
   0044 CB BF                91 	res	7, a
   0046 FD B6 02             92 	or	a, 2 (iy)
   0049 FD B6 01             93 	or	a, 1 (iy)
   004C FD B6 00             94 	or	a,0 (iy)
   004F 20 07                95 	jr	NZ,00102$
   0051 21 DB 0F             96 	ld	hl,#0x0FDB
   0054 11 C9 3F             97 	ld	de,#0x3FC9
   0057 C9                   98 	ret
   0058                      99 00102$:
                            100 ;../acosf.c:41: else               return asincosf(x, true);
   0058 3E 01               101 	ld	a,#0x01
   005A F5                  102 	push	af
   005B 33                  103 	inc	sp
   005C C4 05               104 	ld	hl, 5 (sp)
   005E E5                  105 	push	hl
   005F C4 05               106 	ld	hl, 5 (sp)
   0061 E5                  107 	push	hl
   0062 CDr00r00            108 	call	_asincosf
   0065 27 05               109 	add	sp, #5
   0067 C9                  110 	ret
                            111 	.area _CODE
                            112 	.area _INITIALIZER
                            113 	.area _CABS (ABS)
