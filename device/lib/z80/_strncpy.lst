                              1 ;--------------------------------------------------------
                              2 ; File Created by SDCC : free open source ANSI-C Compiler
                              3 ; Version 3.5.0 #9253 (Apr  4 2022) (Linux)
                              4 ; This file was generated Mon Apr  4 14:15:27 2022
                              5 ;--------------------------------------------------------
                              6 	.module _strncpy
                              7 	.optsdcc -mz80
                              8 	
                              9 ;--------------------------------------------------------
                             10 ; Public variables in this module
                             11 ;--------------------------------------------------------
                             12 	.globl _strncpy
                             13 ;--------------------------------------------------------
                             14 ; special function registers
                             15 ;--------------------------------------------------------
                             16 ;--------------------------------------------------------
                             17 ; ram data
                             18 ;--------------------------------------------------------
                             19 	.area _DATA
                             20 ;--------------------------------------------------------
                             21 ; ram data
                             22 ;--------------------------------------------------------
                             23 	.area _INITIALIZED
                             24 ;--------------------------------------------------------
                             25 ; absolute external ram data
                             26 ;--------------------------------------------------------
                             27 	.area _DABS (ABS)
                             28 ;--------------------------------------------------------
                             29 ; global & static initialisations
                             30 ;--------------------------------------------------------
                             31 	.area _HOME
                             32 	.area _GSINIT
                             33 	.area _GSFINAL
                             34 	.area _GSINIT
                             35 ;--------------------------------------------------------
                             36 ; Home
                             37 ;--------------------------------------------------------
                             38 	.area _HOME
                             39 	.area _HOME
                             40 ;--------------------------------------------------------
                             41 ; code
                             42 ;--------------------------------------------------------
                             43 	.area _CODE
                             44 ;../_strncpy.c:33: char *strncpy ( char * d, const char * s, size_t n )
                             45 ;	---------------------------------
                             46 ; Function strncpy
                             47 ; ---------------------------------
   0000                      48 _strncpy::
   0000 DD E5         [15]   49 	push	ix
   0002 DD 21 00 00   [14]   50 	ld	ix,#0
   0006 DD 39         [15]   51 	add	ix,sp
   0008 F5            [11]   52 	push	af
                             53 ;../_strncpy.c:35: register char * d1 =  d;
   0009 DD 7E 04      [19]   54 	ld	a,4 (ix)
   000C DD 77 FE      [19]   55 	ld	-2 (ix),a
   000F DD 7E 05      [19]   56 	ld	a,5 (ix)
   0012 DD 77 FF      [19]   57 	ld	-1 (ix),a
                             58 ;../_strncpy.c:37: while ( n && *s )
   0015 DD 5E 08      [19]   59 	ld	e,8 (ix)
   0018 DD 56 09      [19]   60 	ld	d,9 (ix)
   001B DD 4E 06      [19]   61 	ld	c,6 (ix)
   001E DD 46 07      [19]   62 	ld	b,7 (ix)
   0021 C5            [11]   63 	push	bc
   0022 FD E1         [14]   64 	pop	iy
   0024 C1            [10]   65 	pop	bc
   0025 C5            [11]   66 	push	bc
   0026                      67 00102$:
   0026 7A            [ 4]   68 	ld	a,d
   0027 B3            [ 4]   69 	or	a,e
   0028 28 0F         [12]   70 	jr	Z,00114$
   002A FD 66 00      [19]   71 	ld	h, 0 (iy)
   002D 7C            [ 4]   72 	ld	a,h
   002E B7            [ 4]   73 	or	a, a
   002F 28 08         [12]   74 	jr	Z,00114$
                             75 ;../_strncpy.c:39: n-- ;
   0031 1B            [ 6]   76 	dec	de
                             77 ;../_strncpy.c:40: *d++ = *s++ ;
   0032 7C            [ 4]   78 	ld	a,h
   0033 FD 23         [10]   79 	inc	iy
   0035 02            [ 7]   80 	ld	(bc),a
   0036 03            [ 6]   81 	inc	bc
   0037 18 ED         [12]   82 	jr	00102$
                             83 ;../_strncpy.c:42: while ( n-- )
   0039                      84 00114$:
   0039                      85 00105$:
   0039 63            [ 4]   86 	ld	h,e
   003A 6A            [ 4]   87 	ld	l,d
   003B 1B            [ 6]   88 	dec	de
   003C 7D            [ 4]   89 	ld	a,l
   003D B4            [ 4]   90 	or	a,h
   003E 28 05         [12]   91 	jr	Z,00107$
                             92 ;../_strncpy.c:44: *d++ = '\0' ;
   0040 AF            [ 4]   93 	xor	a, a
   0041 02            [ 7]   94 	ld	(bc),a
   0042 03            [ 6]   95 	inc	bc
   0043 18 F4         [12]   96 	jr	00105$
   0045                      97 00107$:
                             98 ;../_strncpy.c:46: return d1;
   0045 E1            [10]   99 	pop	hl
   0046 E5            [11]  100 	push	hl
   0047 DD F9         [10]  101 	ld	sp, ix
   0049 DD E1         [14]  102 	pop	ix
   004B C9            [10]  103 	ret
                            104 	.area _CODE
                            105 	.area _INITIALIZER
                            106 	.area _CABS (ABS)
