                              1 ;--------------------------------------------------------
                              2 ; File Created by SDCC : free open source ANSI-C Compiler
                              3 ; Version 3.5.0 #9253 (Apr  4 2022) (Linux)
                              4 ; This file was generated Mon Apr  4 14:15:33 2022
                              5 ;--------------------------------------------------------
                              6 	.module time
                              7 	.optsdcc -mz80
                              8 	
                              9 ;--------------------------------------------------------
                             10 ; Public variables in this module
                             11 ;--------------------------------------------------------
                             12 	.globl _RtcRead
                             13 	.globl _sprintf
                             14 	.globl ___day
                             15 	.globl ___month
                             16 	.globl _time
                             17 	.globl _asctime
                             18 	.globl _ctime
                             19 	.globl _localtime
                             20 	.globl _gmtime
                             21 	.globl _mktime
                             22 ;--------------------------------------------------------
                             23 ; special function registers
                             24 ;--------------------------------------------------------
                             25 ;--------------------------------------------------------
                             26 ; ram data
                             27 ;--------------------------------------------------------
                             28 	.area _DATA
   0000                      29 _ascTimeBuffer:
   0000                      30 	.ds 32
   0020                      31 _lastTime:
   0020                      32 	.ds 12
                             33 ;--------------------------------------------------------
                             34 ; ram data
                             35 ;--------------------------------------------------------
                             36 	.area _INITIALIZED
   0000                      37 _monthDays:
   0000                      38 	.ds 12
   000C                      39 ___month::
   000C                      40 	.ds 24
   0024                      41 ___day::
   0024                      42 	.ds 14
                             43 ;--------------------------------------------------------
                             44 ; absolute external ram data
                             45 ;--------------------------------------------------------
                             46 	.area _DABS (ABS)
                             47 ;--------------------------------------------------------
                             48 ; global & static initialisations
                             49 ;--------------------------------------------------------
                             50 	.area _HOME
                             51 	.area _GSINIT
                             52 	.area _GSFINAL
                             53 	.area _GSINIT
                             54 ;--------------------------------------------------------
                             55 ; Home
                             56 ;--------------------------------------------------------
                             57 	.area _HOME
                             58 	.area _HOME
                             59 ;--------------------------------------------------------
                             60 ; code
                             61 ;--------------------------------------------------------
                             62 	.area _CODE
                             63 ;../time.c:42: unsigned char RtcRead(struct tm *timeptr) {
                             64 ;	---------------------------------
                             65 ; Function RtcRead
                             66 ; ---------------------------------
   0000                      67 _RtcRead::
                             68 ;../time.c:45: return 0;
   0000 2E 00         [ 7]   69 	ld	l,#0x00
   0002 C9            [10]   70 	ret
                             71 ;../time.c:50: time_t time(time_t *timeptr) {
                             72 ;	---------------------------------
                             73 ; Function time
                             74 ; ---------------------------------
   0003                      75 _time::
   0003 DD E5         [15]   76 	push	ix
   0005 DD 21 00 00   [14]   77 	ld	ix,#0
   0009 DD 39         [15]   78 	add	ix,sp
   000B 21 F4 FF      [10]   79 	ld	hl,#-12
   000E 39            [11]   80 	add	hl,sp
   000F F9            [ 6]   81 	ld	sp,hl
                             82 ;../time.c:52: time_t t=(time_t) -1;
   0010 01 FF FF      [10]   83 	ld	bc,#0xFFFF
   0013 11 FF FF      [10]   84 	ld	de,#0xFFFF
                             85 ;../time.c:54: if (RtcRead(&now)) {
   0016 21 00 00      [10]   86 	ld	hl,#0x0000
   0019 39            [11]   87 	add	hl,sp
   001A E5            [11]   88 	push	hl
   001B FD E1         [14]   89 	pop	iy
   001D E5            [11]   90 	push	hl
   001E C5            [11]   91 	push	bc
   001F D5            [11]   92 	push	de
   0020 FD E5         [15]   93 	push	iy
   0022 CDr00r00      [17]   94 	call	_RtcRead
   0025 F1            [10]   95 	pop	af
   0026 7D            [ 4]   96 	ld	a,l
   0027 D1            [10]   97 	pop	de
   0028 C1            [10]   98 	pop	bc
   0029 E1            [10]   99 	pop	hl
   002A B7            [ 4]  100 	or	a, a
   002B 28 07         [12]  101 	jr	Z,00102$
                            102 ;../time.c:55: t=mktime(&now);
   002D E5            [11]  103 	push	hl
   002E CDr45r04      [17]  104 	call	_mktime
   0031 F1            [10]  105 	pop	af
   0032 4D            [ 4]  106 	ld	c,l
   0033 44            [ 4]  107 	ld	b,h
   0034                     108 00102$:
                            109 ;../time.c:57: if (timeptr) {
   0034 DD 7E 05      [19]  110 	ld	a,5 (ix)
   0037 DD B6 04      [19]  111 	or	a,4 (ix)
   003A 28 0D         [12]  112 	jr	Z,00104$
                            113 ;../time.c:58: *timeptr=t;
   003C DD 6E 04      [19]  114 	ld	l,4 (ix)
   003F DD 66 05      [19]  115 	ld	h,5 (ix)
   0042 71            [ 7]  116 	ld	(hl),c
   0043 23            [ 6]  117 	inc	hl
   0044 70            [ 7]  118 	ld	(hl),b
   0045 23            [ 6]  119 	inc	hl
   0046 73            [ 7]  120 	ld	(hl),e
   0047 23            [ 6]  121 	inc	hl
   0048 72            [ 7]  122 	ld	(hl),d
   0049                     123 00104$:
                            124 ;../time.c:60: return t;
   0049 69            [ 4]  125 	ld	l,c
   004A 60            [ 4]  126 	ld	h,b
   004B DD F9         [10]  127 	ld	sp, ix
   004D DD E1         [14]  128 	pop	ix
   004F C9            [10]  129 	ret
                            130 ;../time.c:73: static void CheckTime(struct tm *timeptr) {
                            131 ;	---------------------------------
                            132 ; Function CheckTime
                            133 ; ---------------------------------
   0050                     134 _CheckTime:
                            135 ;../time.c:84: if (timeptr->tm_sec>59) timeptr->tm_sec=59;
   0050 C1            [10]  136 	pop	bc
   0051 D1            [10]  137 	pop	de
   0052 D5            [11]  138 	push	de
   0053 C5            [11]  139 	push	bc
   0054 1A            [ 7]  140 	ld	a,(de)
   0055 67            [ 4]  141 	ld	h,a
   0056 3E 3B         [ 7]  142 	ld	a,#0x3B
   0058 BC            [ 4]  143 	cp	a,h
   0059 30 01         [12]  144 	jr	NC,00102$
   005B 12            [ 7]  145 	ld	(de),a
   005C                     146 00102$:
                            147 ;../time.c:85: if (timeptr->tm_min>59) timeptr->tm_min=59;
   005C 6B            [ 4]  148 	ld	l, e
   005D 62            [ 4]  149 	ld	h, d
   005E 23            [ 6]  150 	inc	hl
   005F 46            [ 7]  151 	ld	b,(hl)
   0060 3E 3B         [ 7]  152 	ld	a,#0x3B
   0062 90            [ 4]  153 	sub	a, b
   0063 30 02         [12]  154 	jr	NC,00104$
   0065 36 3B         [10]  155 	ld	(hl),#0x3B
   0067                     156 00104$:
                            157 ;../time.c:86: if (timeptr->tm_hour>23) timeptr->tm_hour=23;
   0067 6B            [ 4]  158 	ld	l, e
   0068 62            [ 4]  159 	ld	h, d
   0069 23            [ 6]  160 	inc	hl
   006A 23            [ 6]  161 	inc	hl
   006B 46            [ 7]  162 	ld	b,(hl)
   006C 3E 17         [ 7]  163 	ld	a,#0x17
   006E 90            [ 4]  164 	sub	a, b
   006F 30 02         [12]  165 	jr	NC,00106$
   0071 36 17         [10]  166 	ld	(hl),#0x17
   0073                     167 00106$:
                            168 ;../time.c:87: if (timeptr->tm_wday>6) timeptr->tm_wday=6;
   0073 21 07 00      [10]  169 	ld	hl,#0x0007
   0076 19            [11]  170 	add	hl,de
   0077 46            [ 7]  171 	ld	b,(hl)
   0078 3E 06         [ 7]  172 	ld	a,#0x06
   007A 90            [ 4]  173 	sub	a, b
   007B 30 02         [12]  174 	jr	NC,00108$
   007D 36 06         [10]  175 	ld	(hl),#0x06
   007F                     176 00108$:
                            177 ;../time.c:88: if (timeptr->tm_mday<1) timeptr->tm_mday=1;
   007F 6B            [ 4]  178 	ld	l, e
   0080 62            [ 4]  179 	ld	h, d
   0081 23            [ 6]  180 	inc	hl
   0082 23            [ 6]  181 	inc	hl
   0083 23            [ 6]  182 	inc	hl
   0084 46            [ 7]  183 	ld	b,(hl)
   0085 78            [ 4]  184 	ld	a,b
   0086 D6 01         [ 7]  185 	sub	a, #0x01
   0088 30 04         [12]  186 	jr	NC,00112$
   008A 36 01         [10]  187 	ld	(hl),#0x01
   008C 18 07         [12]  188 	jr	00113$
   008E                     189 00112$:
                            190 ;../time.c:89: else if (timeptr->tm_mday>31) timeptr->tm_mday=31;
   008E 3E 1F         [ 7]  191 	ld	a,#0x1F
   0090 90            [ 4]  192 	sub	a, b
   0091 30 02         [12]  193 	jr	NC,00113$
   0093 36 1F         [10]  194 	ld	(hl),#0x1F
   0095                     195 00113$:
                            196 ;../time.c:90: if (timeptr->tm_mon>11) timeptr->tm_mon=11;
   0095 21 04 00      [10]  197 	ld	hl,#0x0004
   0098 19            [11]  198 	add	hl,de
   0099 46            [ 7]  199 	ld	b,(hl)
   009A 3E 0B         [ 7]  200 	ld	a,#0x0B
   009C 90            [ 4]  201 	sub	a, b
   009D 30 02         [12]  202 	jr	NC,00115$
   009F 36 0B         [10]  203 	ld	(hl),#0x0B
   00A1                     204 00115$:
                            205 ;../time.c:91: if (timeptr->tm_year<0) timeptr->tm_year=0;
   00A1 21 05 00      [10]  206 	ld	hl,#0x0005
   00A4 19            [11]  207 	add	hl,de
   00A5 E5            [11]  208 	push	hl
   00A6 56            [ 7]  209 	ld	d,(hl)
   00A7 23            [ 6]  210 	inc	hl
   00A8 5E            [ 7]  211 	ld	e,(hl)
   00A9 E1            [10]  212 	pop	hl
   00AA CB 7B         [ 8]  213 	bit	7, e
   00AC C8            [11]  214 	ret	Z
   00AD AF            [ 4]  215 	xor	a, a
   00AE 77            [ 7]  216 	ld	(hl), a
   00AF 23            [ 6]  217 	inc	hl
   00B0 77            [ 7]  218 	ld	(hl), a
   00B1 C9            [10]  219 	ret
                            220 ;../time.c:95: char *asctime(struct tm *timeptr) {
                            221 ;	---------------------------------
                            222 ; Function asctime
                            223 ; ---------------------------------
   00B2                     224 _asctime::
   00B2 DD E5         [15]  225 	push	ix
   00B4 DD 21 00 00   [14]  226 	ld	ix,#0
   00B8 DD 39         [15]  227 	add	ix,sp
   00BA 21 F6 FF      [10]  228 	ld	hl,#-10
   00BD 39            [11]  229 	add	hl,sp
   00BE F9            [ 6]  230 	ld	sp,hl
                            231 ;../time.c:96: CheckTime(timeptr);
   00BF DD 6E 04      [19]  232 	ld	l,4 (ix)
   00C2 DD 66 05      [19]  233 	ld	h,5 (ix)
   00C5 E5            [11]  234 	push	hl
   00C6 CDr50r00      [17]  235 	call	_CheckTime
   00C9 F1            [10]  236 	pop	af
                            237 ;../time.c:100: timeptr->tm_year+1900);
   00CA DD 5E 04      [19]  238 	ld	e,4 (ix)
   00CD DD 56 05      [19]  239 	ld	d,5 (ix)
   00D0 D5            [11]  240 	push	de
   00D1 FD E1         [14]  241 	pop	iy
   00D3 FD 4E 05      [19]  242 	ld	c,5 (iy)
   00D6 FD 46 06      [19]  243 	ld	b,6 (iy)
   00D9 21 6C 07      [10]  244 	ld	hl,#0x076C
   00DC 09            [11]  245 	add	hl,bc
   00DD DD 75 F8      [19]  246 	ld	-8 (ix),l
   00E0 DD 74 F9      [19]  247 	ld	-7 (ix),h
                            248 ;../time.c:99: timeptr->tm_hour, timeptr->tm_min, timeptr->tm_sec, 
   00E3 1A            [ 7]  249 	ld	a,(de)
   00E4 DD 77 FE      [19]  250 	ld	-2 (ix),a
   00E7 DD 36 FF 00   [19]  251 	ld	-1 (ix),#0x00
   00EB 6B            [ 4]  252 	ld	l, e
   00EC 62            [ 4]  253 	ld	h, d
   00ED 23            [ 6]  254 	inc	hl
   00EE 7E            [ 7]  255 	ld	a,(hl)
   00EF DD 77 FC      [19]  256 	ld	-4 (ix),a
   00F2 DD 36 FD 00   [19]  257 	ld	-3 (ix),#0x00
   00F6 6B            [ 4]  258 	ld	l, e
   00F7 62            [ 4]  259 	ld	h, d
   00F8 23            [ 6]  260 	inc	hl
   00F9 23            [ 6]  261 	inc	hl
   00FA 7E            [ 7]  262 	ld	a,(hl)
   00FB DD 77 FA      [19]  263 	ld	-6 (ix),a
   00FE DD 36 FB 00   [19]  264 	ld	-5 (ix),#0x00
                            265 ;../time.c:98: __day[timeptr->tm_wday], __month[timeptr->tm_mon], timeptr->tm_mday,
   0102 6B            [ 4]  266 	ld	l, e
   0103 62            [ 4]  267 	ld	h, d
   0104 23            [ 6]  268 	inc	hl
   0105 23            [ 6]  269 	inc	hl
   0106 23            [ 6]  270 	inc	hl
   0107 7E            [ 7]  271 	ld	a,(hl)
   0108 DD 77 F6      [19]  272 	ld	-10 (ix),a
   010B DD 36 F7 00   [19]  273 	ld	-9 (ix),#0x00
   010F 6B            [ 4]  274 	ld	l, e
   0110 62            [ 4]  275 	ld	h, d
   0111 01 04 00      [10]  276 	ld	bc, #0x0004
   0114 09            [11]  277 	add	hl, bc
   0115 6E            [ 7]  278 	ld	l,(hl)
   0116 26 00         [ 7]  279 	ld	h,#0x00
   0118 29            [11]  280 	add	hl, hl
   0119 01r0Cr00      [10]  281 	ld	bc,#___month
   011C 09            [11]  282 	add	hl,bc
   011D 4E            [ 7]  283 	ld	c,(hl)
   011E 23            [ 6]  284 	inc	hl
   011F 46            [ 7]  285 	ld	b,(hl)
   0120 EB            [ 4]  286 	ex	de,hl
   0121 11 07 00      [10]  287 	ld	de, #0x0007
   0124 19            [11]  288 	add	hl, de
   0125 6E            [ 7]  289 	ld	l,(hl)
   0126 26 00         [ 7]  290 	ld	h,#0x00
   0128 29            [11]  291 	add	hl, hl
   0129 11r24r00      [10]  292 	ld	de,#___day
   012C 19            [11]  293 	add	hl,de
   012D 5E            [ 7]  294 	ld	e,(hl)
   012E 23            [ 6]  295 	inc	hl
   012F 56            [ 7]  296 	ld	d,(hl)
                            297 ;../time.c:97: sprintf (ascTimeBuffer, "%s %s %2d %02d:%02d:%02d %04d\n",
   0130 DD 6E F8      [19]  298 	ld	l,-8 (ix)
   0133 DD 66 F9      [19]  299 	ld	h,-7 (ix)
   0136 E5            [11]  300 	push	hl
   0137 DD 6E FE      [19]  301 	ld	l,-2 (ix)
   013A DD 66 FF      [19]  302 	ld	h,-1 (ix)
   013D E5            [11]  303 	push	hl
   013E DD 6E FC      [19]  304 	ld	l,-4 (ix)
   0141 DD 66 FD      [19]  305 	ld	h,-3 (ix)
   0144 E5            [11]  306 	push	hl
   0145 DD 6E FA      [19]  307 	ld	l,-6 (ix)
   0148 DD 66 FB      [19]  308 	ld	h,-5 (ix)
   014B E5            [11]  309 	push	hl
   014C DD 6E F6      [19]  310 	ld	l,-10 (ix)
   014F DD 66 F7      [19]  311 	ld	h,-9 (ix)
   0152 E5            [11]  312 	push	hl
   0153 C5            [11]  313 	push	bc
   0154 D5            [11]  314 	push	de
   0155 21r6Dr01      [10]  315 	ld	hl,#___str_0
   0158 E5            [11]  316 	push	hl
   0159 21r00r00      [10]  317 	ld	hl,#_ascTimeBuffer
   015C E5            [11]  318 	push	hl
   015D CDr00r00      [17]  319 	call	_sprintf
   0160 21 12 00      [10]  320 	ld	hl,#18
   0163 39            [11]  321 	add	hl,sp
   0164 F9            [ 6]  322 	ld	sp,hl
                            323 ;../time.c:101: return ascTimeBuffer;
   0165 21r00r00      [10]  324 	ld	hl,#_ascTimeBuffer
   0168 DD F9         [10]  325 	ld	sp, ix
   016A DD E1         [14]  326 	pop	ix
   016C C9            [10]  327 	ret
   016D                     328 ___str_0:
   016D 25 73 20 25 73 20   329 	.ascii "%s %s %2d %02d:%02d:%02d %04d"
        25 32 64 20 25 30
        32 64 3A 25 30 32
        64 3A 25 30 32 64
        20 25 30 34 64
   018A 0A                  330 	.db 0x0A
   018B 00                  331 	.db 0x00
                            332 ;../time.c:104: char *ctime(time_t *timep) {
                            333 ;	---------------------------------
                            334 ; Function ctime
                            335 ; ---------------------------------
   018C                     336 _ctime::
                            337 ;../time.c:105: return asctime(localtime(timep));
   018C C1            [10]  338 	pop	bc
   018D E1            [10]  339 	pop	hl
   018E E5            [11]  340 	push	hl
   018F C5            [11]  341 	push	bc
   0190 E5            [11]  342 	push	hl
   0191 CDr9Ar01      [17]  343 	call	_localtime
   0194 E3            [19]  344 	ex	(sp),hl
   0195 CDrB2r00      [17]  345 	call	_asctime
   0198 F1            [10]  346 	pop	af
   0199 C9            [10]  347 	ret
                            348 ;../time.c:121: struct tm *localtime(time_t *timep) {
                            349 ;	---------------------------------
                            350 ; Function localtime
                            351 ; ---------------------------------
   019A                     352 _localtime::
                            353 ;../time.c:122: return gmtime(timep);
   019A C1            [10]  354 	pop	bc
   019B E1            [10]  355 	pop	hl
   019C E5            [11]  356 	push	hl
   019D C5            [11]  357 	push	bc
   019E E5            [11]  358 	push	hl
   019F CDrA4r01      [17]  359 	call	_gmtime
   01A2 F1            [10]  360 	pop	af
   01A3 C9            [10]  361 	ret
                            362 ;../time.c:125: struct tm *gmtime(time_t *timep) {
                            363 ;	---------------------------------
                            364 ; Function gmtime
                            365 ; ---------------------------------
   01A4                     366 _gmtime::
   01A4 DD E5         [15]  367 	push	ix
   01A6 DD 21 00 00   [14]  368 	ld	ix,#0
   01AA DD 39         [15]  369 	add	ix,sp
   01AC 21 EF FF      [10]  370 	ld	hl,#-17
   01AF 39            [11]  371 	add	hl,sp
   01B0 F9            [ 6]  372 	ld	sp,hl
                            373 ;../time.c:126: unsigned long epoch=*timep;
   01B1 DD 6E 04      [19]  374 	ld	l,4 (ix)
   01B4 DD 66 05      [19]  375 	ld	h,5 (ix)
   01B7 5E            [ 7]  376 	ld	e,(hl)
   01B8 23            [ 6]  377 	inc	hl
   01B9 56            [ 7]  378 	ld	d,(hl)
   01BA 23            [ 6]  379 	inc	hl
   01BB 4E            [ 7]  380 	ld	c,(hl)
   01BC 23            [ 6]  381 	inc	hl
   01BD 46            [ 7]  382 	ld	b,(hl)
                            383 ;../time.c:131: lastTime.tm_sec=epoch%60;
   01BE C5            [11]  384 	push	bc
   01BF D5            [11]  385 	push	de
   01C0 21 00 00      [10]  386 	ld	hl,#0x0000
   01C3 E5            [11]  387 	push	hl
   01C4 21 3C 00      [10]  388 	ld	hl,#0x003C
   01C7 E5            [11]  389 	push	hl
   01C8 C5            [11]  390 	push	bc
   01C9 D5            [11]  391 	push	de
   01CA CDr00r00      [17]  392 	call	__modulong
   01CD F1            [10]  393 	pop	af
   01CE F1            [10]  394 	pop	af
   01CF F1            [10]  395 	pop	af
   01D0 F1            [10]  396 	pop	af
   01D1 DD 72 F5      [19]  397 	ld	-11 (ix),d
   01D4 DD 73 F4      [19]  398 	ld	-12 (ix),e
   01D7 DD 74 F3      [19]  399 	ld	-13 (ix),h
   01DA DD 75 F2      [19]  400 	ld	-14 (ix),l
   01DD D1            [10]  401 	pop	de
   01DE C1            [10]  402 	pop	bc
   01DF DD 7E F2      [19]  403 	ld	a,-14 (ix)
   01E2 32r20r00      [13]  404 	ld	(#_lastTime),a
                            405 ;../time.c:132: epoch/=60; // now it is minutes
   01E5 21 00 00      [10]  406 	ld	hl,#0x0000
   01E8 E5            [11]  407 	push	hl
   01E9 21 3C 00      [10]  408 	ld	hl,#0x003C
   01EC E5            [11]  409 	push	hl
   01ED C5            [11]  410 	push	bc
   01EE D5            [11]  411 	push	de
   01EF CDr00r00      [17]  412 	call	__divulong
   01F2 F1            [10]  413 	pop	af
   01F3 F1            [10]  414 	pop	af
   01F4 F1            [10]  415 	pop	af
   01F5 F1            [10]  416 	pop	af
   01F6 4D            [ 4]  417 	ld	c,l
   01F7 44            [ 4]  418 	ld	b,h
                            419 ;../time.c:133: lastTime.tm_min=epoch%60;
   01F8 C5            [11]  420 	push	bc
   01F9 D5            [11]  421 	push	de
   01FA 21 00 00      [10]  422 	ld	hl,#0x0000
   01FD E5            [11]  423 	push	hl
   01FE 21 3C 00      [10]  424 	ld	hl,#0x003C
   0201 E5            [11]  425 	push	hl
   0202 D5            [11]  426 	push	de
   0203 C5            [11]  427 	push	bc
   0204 CDr00r00      [17]  428 	call	__modulong
   0207 F1            [10]  429 	pop	af
   0208 F1            [10]  430 	pop	af
   0209 F1            [10]  431 	pop	af
   020A F1            [10]  432 	pop	af
   020B DD 72 F5      [19]  433 	ld	-11 (ix),d
   020E DD 73 F4      [19]  434 	ld	-12 (ix),e
   0211 DD 74 F3      [19]  435 	ld	-13 (ix),h
   0214 DD 75 F2      [19]  436 	ld	-14 (ix),l
   0217 D1            [10]  437 	pop	de
   0218 C1            [10]  438 	pop	bc
   0219 DD 7E F2      [19]  439 	ld	a,-14 (ix)
   021C 32r21r00      [13]  440 	ld	(#(_lastTime + 0x0001)),a
                            441 ;../time.c:134: epoch/=60; // now it is hours
   021F 21 00 00      [10]  442 	ld	hl,#0x0000
   0222 E5            [11]  443 	push	hl
   0223 21 3C 00      [10]  444 	ld	hl,#0x003C
   0226 E5            [11]  445 	push	hl
   0227 D5            [11]  446 	push	de
   0228 C5            [11]  447 	push	bc
   0229 CDr00r00      [17]  448 	call	__divulong
   022C F1            [10]  449 	pop	af
   022D F1            [10]  450 	pop	af
   022E F1            [10]  451 	pop	af
   022F F1            [10]  452 	pop	af
   0230 4D            [ 4]  453 	ld	c,l
   0231 44            [ 4]  454 	ld	b,h
                            455 ;../time.c:135: lastTime.tm_hour=epoch%24;
   0232 C5            [11]  456 	push	bc
   0233 D5            [11]  457 	push	de
   0234 21 00 00      [10]  458 	ld	hl,#0x0000
   0237 E5            [11]  459 	push	hl
   0238 21 18 00      [10]  460 	ld	hl,#0x0018
   023B E5            [11]  461 	push	hl
   023C D5            [11]  462 	push	de
   023D C5            [11]  463 	push	bc
   023E CDr00r00      [17]  464 	call	__modulong
   0241 F1            [10]  465 	pop	af
   0242 F1            [10]  466 	pop	af
   0243 F1            [10]  467 	pop	af
   0244 F1            [10]  468 	pop	af
   0245 DD 72 F5      [19]  469 	ld	-11 (ix),d
   0248 DD 73 F4      [19]  470 	ld	-12 (ix),e
   024B DD 74 F3      [19]  471 	ld	-13 (ix),h
   024E DD 75 F2      [19]  472 	ld	-14 (ix),l
   0251 D1            [10]  473 	pop	de
   0252 C1            [10]  474 	pop	bc
   0253 DD 7E F2      [19]  475 	ld	a,-14 (ix)
   0256 32r22r00      [13]  476 	ld	(#(_lastTime + 0x0002)),a
                            477 ;../time.c:136: epoch/=24; // now it is days
   0259 21 00 00      [10]  478 	ld	hl,#0x0000
   025C E5            [11]  479 	push	hl
   025D 21 18 00      [10]  480 	ld	hl,#0x0018
   0260 E5            [11]  481 	push	hl
   0261 D5            [11]  482 	push	de
   0262 C5            [11]  483 	push	bc
   0263 CDr00r00      [17]  484 	call	__divulong
   0266 F1            [10]  485 	pop	af
   0267 F1            [10]  486 	pop	af
   0268 F1            [10]  487 	pop	af
   0269 F1            [10]  488 	pop	af
   026A DD 75 F2      [19]  489 	ld	-14 (ix),l
   026D DD 74 F3      [19]  490 	ld	-13 (ix),h
   0270 DD 73 F4      [19]  491 	ld	-12 (ix),e
   0273 DD 72 F5      [19]  492 	ld	-11 (ix),d
                            493 ;../time.c:137: lastTime.tm_wday=(epoch+4)%7;
   0276 DD 7E F2      [19]  494 	ld	a,-14 (ix)
   0279 C6 04         [ 7]  495 	add	a, #0x04
   027B 5F            [ 4]  496 	ld	e,a
   027C DD 7E F3      [19]  497 	ld	a,-13 (ix)
   027F CE 00         [ 7]  498 	adc	a, #0x00
   0281 57            [ 4]  499 	ld	d,a
   0282 DD 7E F4      [19]  500 	ld	a,-12 (ix)
   0285 CE 00         [ 7]  501 	adc	a, #0x00
   0287 4F            [ 4]  502 	ld	c,a
   0288 DD 7E F5      [19]  503 	ld	a,-11 (ix)
   028B CE 00         [ 7]  504 	adc	a, #0x00
   028D 47            [ 4]  505 	ld	b,a
   028E 21 00 00      [10]  506 	ld	hl,#0x0000
   0291 E5            [11]  507 	push	hl
   0292 21 07 00      [10]  508 	ld	hl,#0x0007
   0295 E5            [11]  509 	push	hl
   0296 C5            [11]  510 	push	bc
   0297 D5            [11]  511 	push	de
   0298 CDr00r00      [17]  512 	call	__modulong
   029B F1            [10]  513 	pop	af
   029C F1            [10]  514 	pop	af
   029D F1            [10]  515 	pop	af
   029E F1            [10]  516 	pop	af
   029F 7D            [ 4]  517 	ld	a,l
   02A0 32r27r00      [13]  518 	ld	(#(_lastTime + 0x0007)),a
                            519 ;../time.c:140: days=0;
   02A3 01 00 00      [10]  520 	ld	bc,#0x0000
   02A6 11 00 00      [10]  521 	ld	de,#0x0000
                            522 ;../time.c:141: while((days += (LEAP_YEAR(year) ? 366 : 365)) <= epoch) {
   02A9 DD 36 F0 B2   [19]  523 	ld	-16 (ix),#0xB2
   02AD DD 36 F1 07   [19]  524 	ld	-15 (ix),#0x07
   02B1                     525 00101$:
   02B1 DD 7E F0      [19]  526 	ld	a,-16 (ix)
   02B4 E6 03         [ 7]  527 	and	a, #0x03
   02B6 DD 77 F6      [19]  528 	ld	-10 (ix),a
   02B9 DD 36 F7 00   [19]  529 	ld	-9 (ix), #0x00
   02BD 3E 00         [ 7]  530 	ld	a, #0x00
   02BF DD B6 F6      [19]  531 	or	a,-10 (ix)
   02C2 20 05         [12]  532 	jr	NZ,00118$
   02C4 21 6E 01      [10]  533 	ld	hl,#0x016E
   02C7 18 03         [12]  534 	jr	00119$
   02C9                     535 00118$:
   02C9 21 6D 01      [10]  536 	ld	hl,#0x016D
   02CC                     537 00119$:
   02CC DD 75 FC      [19]  538 	ld	-4 (ix),l
   02CF DD 74 FD      [19]  539 	ld	-3 (ix),h
   02D2 7C            [ 4]  540 	ld	a,h
   02D3 17            [ 4]  541 	rla
   02D4 9F            [ 4]  542 	sbc	a, a
   02D5 DD 77 FE      [19]  543 	ld	-2 (ix),a
   02D8 DD 77 FF      [19]  544 	ld	-1 (ix),a
   02DB 79            [ 4]  545 	ld	a,c
   02DC DD 86 FC      [19]  546 	add	a, -4 (ix)
   02DF DD 77 FC      [19]  547 	ld	-4 (ix),a
   02E2 78            [ 4]  548 	ld	a,b
   02E3 DD 8E FD      [19]  549 	adc	a, -3 (ix)
   02E6 DD 77 FD      [19]  550 	ld	-3 (ix),a
   02E9 7B            [ 4]  551 	ld	a,e
   02EA DD 8E FE      [19]  552 	adc	a, -2 (ix)
   02ED DD 77 FE      [19]  553 	ld	-2 (ix),a
   02F0 7A            [ 4]  554 	ld	a,d
   02F1 DD 8E FF      [19]  555 	adc	a, -1 (ix)
   02F4 DD 77 FF      [19]  556 	ld	-1 (ix),a
   02F7 DD 4E FC      [19]  557 	ld	c,-4 (ix)
   02FA DD 46 FD      [19]  558 	ld	b,-3 (ix)
   02FD DD 5E FE      [19]  559 	ld	e,-2 (ix)
   0300 DD 56 FF      [19]  560 	ld	d,-1 (ix)
   0303 DD 7E F2      [19]  561 	ld	a,-14 (ix)
   0306 DD 96 FC      [19]  562 	sub	a, -4 (ix)
   0309 DD 7E F3      [19]  563 	ld	a,-13 (ix)
   030C DD 9E FD      [19]  564 	sbc	a, -3 (ix)
   030F DD 7E F4      [19]  565 	ld	a,-12 (ix)
   0312 DD 9E FE      [19]  566 	sbc	a, -2 (ix)
   0315 DD 7E F5      [19]  567 	ld	a,-11 (ix)
   0318 DD 9E FF      [19]  568 	sbc	a, -1 (ix)
   031B 38 0A         [12]  569 	jr	C,00103$
                            570 ;../time.c:142: year++;
   031D DD 34 F0      [23]  571 	inc	-16 (ix)
   0320 20 8F         [12]  572 	jr	NZ,00101$
   0322 DD 34 F1      [23]  573 	inc	-15 (ix)
   0325 18 8A         [12]  574 	jr	00101$
   0327                     575 00103$:
                            576 ;../time.c:144: lastTime.tm_year=year-1900;
   0327 FD 21r25r00   [14]  577 	ld	iy,#_lastTime + 5
   032B DD 7E F0      [19]  578 	ld	a,-16 (ix)
   032E C6 94         [ 7]  579 	add	a,#0x94
   0330 67            [ 4]  580 	ld	h,a
   0331 DD 7E F1      [19]  581 	ld	a,-15 (ix)
   0334 CE F8         [ 7]  582 	adc	a,#0xF8
   0336 FD 74 00      [19]  583 	ld	0 (iy), h
   0339 FD 77 01      [19]  584 	ld	1 (iy), a
                            585 ;../time.c:146: days -= LEAP_YEAR(year) ? 366 : 365;
   033C DD 7E F6      [19]  586 	ld	a,-10 (ix)
   033F DD 77 FC      [19]  587 	ld	-4 (ix),a
   0342 DD 7E F7      [19]  588 	ld	a,-9 (ix)
   0345 DD 77 FD      [19]  589 	ld	-3 (ix),a
   0348 DD 7E F7      [19]  590 	ld	a,-9 (ix)
   034B DD B6 F6      [19]  591 	or	a,-10 (ix)
   034E 20 05         [12]  592 	jr	NZ,00120$
   0350 21 6E 01      [10]  593 	ld	hl,#0x016E
   0353 18 03         [12]  594 	jr	00121$
   0355                     595 00120$:
   0355 21 6D 01      [10]  596 	ld	hl,#0x016D
   0358                     597 00121$:
   0358 DD 75 F8      [19]  598 	ld	-8 (ix),l
   035B DD 74 F9      [19]  599 	ld	-7 (ix),h
   035E 7C            [ 4]  600 	ld	a,h
   035F 17            [ 4]  601 	rla
   0360 9F            [ 4]  602 	sbc	a, a
   0361 DD 77 FA      [19]  603 	ld	-6 (ix),a
   0364 DD 77 FB      [19]  604 	ld	-5 (ix),a
   0367 79            [ 4]  605 	ld	a,c
   0368 DD 96 F8      [19]  606 	sub	a, -8 (ix)
   036B 6F            [ 4]  607 	ld	l,a
   036C 78            [ 4]  608 	ld	a,b
   036D DD 9E F9      [19]  609 	sbc	a, -7 (ix)
   0370 67            [ 4]  610 	ld	h,a
   0371 7B            [ 4]  611 	ld	a,e
   0372 DD 9E FA      [19]  612 	sbc	a, -6 (ix)
   0375 5F            [ 4]  613 	ld	e,a
   0376 7A            [ 4]  614 	ld	a,d
   0377 DD 9E FB      [19]  615 	sbc	a, -5 (ix)
   037A 57            [ 4]  616 	ld	d,a
                            617 ;../time.c:147: epoch -= days; // now it is days in this year, starting at 0
   037B DD 7E F2      [19]  618 	ld	a,-14 (ix)
   037E 95            [ 4]  619 	sub	a, l
   037F DD 77 F8      [19]  620 	ld	-8 (ix),a
   0382 DD 7E F3      [19]  621 	ld	a,-13 (ix)
   0385 9C            [ 4]  622 	sbc	a, h
   0386 DD 77 F9      [19]  623 	ld	-7 (ix),a
   0389 DD 7E F4      [19]  624 	ld	a,-12 (ix)
   038C 9B            [ 4]  625 	sbc	a, e
   038D DD 77 FA      [19]  626 	ld	-6 (ix),a
   0390 DD 7E F5      [19]  627 	ld	a,-11 (ix)
   0393 9A            [ 4]  628 	sbc	a, d
   0394 DD 77 FB      [19]  629 	ld	-5 (ix),a
                            630 ;../time.c:148: lastTime.tm_yday=epoch;
   0397 DD 5E F8      [19]  631 	ld	e,-8 (ix)
   039A DD 56 F9      [19]  632 	ld	d,-7 (ix)
   039D ED 53r28r00   [20]  633 	ld	((_lastTime + 0x0008)), de
                            634 ;../time.c:153: for (month=0; month<12; month++) {
   03A1 DD 36 EF 00   [19]  635 	ld	-17 (ix),#0x00
   03A5                     636 00114$:
                            637 ;../time.c:154: if (month==1) { // februari
   03A5 DD 7E EF      [19]  638 	ld	a,-17 (ix)
   03A8 3D            [ 4]  639 	dec	a
   03A9 20 10         [12]  640 	jr	NZ,00108$
                            641 ;../time.c:155: if (LEAP_YEAR(year)) {
   03AB DD 7E FD      [19]  642 	ld	a,-3 (ix)
   03AE DD B6 FC      [19]  643 	or	a,-4 (ix)
   03B1 20 04         [12]  644 	jr	NZ,00105$
                            645 ;../time.c:156: monthLength=29;
   03B3 0E 1D         [ 7]  646 	ld	c,#0x1D
   03B5 18 1A         [12]  647 	jr	00109$
   03B7                     648 00105$:
                            649 ;../time.c:158: monthLength=28;
   03B7 0E 1C         [ 7]  650 	ld	c,#0x1C
   03B9 18 16         [12]  651 	jr	00109$
   03BB                     652 00108$:
                            653 ;../time.c:161: monthLength = monthDays[month];
   03BB 3Er00         [ 7]  654 	ld	a,#<(_monthDays)
   03BD DD 86 EF      [19]  655 	add	a, -17 (ix)
   03C0 DD 77 F6      [19]  656 	ld	-10 (ix),a
   03C3 3Es00         [ 7]  657 	ld	a,#>(_monthDays)
   03C5 CE 00         [ 7]  658 	adc	a, #0x00
   03C7 DD 77 F7      [19]  659 	ld	-9 (ix),a
   03CA DD 6E F6      [19]  660 	ld	l,-10 (ix)
   03CD DD 66 F7      [19]  661 	ld	h,-9 (ix)
   03D0 4E            [ 7]  662 	ld	c,(hl)
   03D1                     663 00109$:
                            664 ;../time.c:164: if (epoch>=monthLength) {
   03D1 DD 71 F2      [19]  665 	ld	-14 (ix),c
   03D4 DD 36 F3 00   [19]  666 	ld	-13 (ix),#0x00
   03D8 DD 36 F4 00   [19]  667 	ld	-12 (ix),#0x00
   03DC DD 36 F5 00   [19]  668 	ld	-11 (ix),#0x00
   03E0 DD 7E F8      [19]  669 	ld	a,-8 (ix)
   03E3 DD 96 F2      [19]  670 	sub	a, -14 (ix)
   03E6 DD 7E F9      [19]  671 	ld	a,-7 (ix)
   03E9 DD 9E F3      [19]  672 	sbc	a, -13 (ix)
   03EC DD 7E FA      [19]  673 	ld	a,-6 (ix)
   03EF DD 9E F4      [19]  674 	sbc	a, -12 (ix)
   03F2 DD 7E FB      [19]  675 	ld	a,-5 (ix)
   03F5 DD 9E F5      [19]  676 	sbc	a, -11 (ix)
   03F8 38 2F         [12]  677 	jr	C,00113$
                            678 ;../time.c:165: epoch-=monthLength;
   03FA DD 7E F8      [19]  679 	ld	a,-8 (ix)
   03FD DD 96 F2      [19]  680 	sub	a, -14 (ix)
   0400 DD 77 F8      [19]  681 	ld	-8 (ix),a
   0403 DD 7E F9      [19]  682 	ld	a,-7 (ix)
   0406 DD 9E F3      [19]  683 	sbc	a, -13 (ix)
   0409 DD 77 F9      [19]  684 	ld	-7 (ix),a
   040C DD 7E FA      [19]  685 	ld	a,-6 (ix)
   040F DD 9E F4      [19]  686 	sbc	a, -12 (ix)
   0412 DD 77 FA      [19]  687 	ld	-6 (ix),a
   0415 DD 7E FB      [19]  688 	ld	a,-5 (ix)
   0418 DD 9E F5      [19]  689 	sbc	a, -11 (ix)
   041B DD 77 FB      [19]  690 	ld	-5 (ix),a
                            691 ;../time.c:153: for (month=0; month<12; month++) {
   041E DD 34 EF      [23]  692 	inc	-17 (ix)
   0421 DD 7E EF      [19]  693 	ld	a,-17 (ix)
   0424 D6 0C         [ 7]  694 	sub	a, #0x0C
   0426 DArA5r03      [10]  695 	jp	C,00114$
   0429                     696 00113$:
                            697 ;../time.c:170: lastTime.tm_mon=month;
   0429 21r24r00      [10]  698 	ld	hl,#_lastTime + 4
   042C DD 7E EF      [19]  699 	ld	a,-17 (ix)
   042F 77            [ 7]  700 	ld	(hl),a
                            701 ;../time.c:171: lastTime.tm_mday=epoch+1;
   0430 21r23r00      [10]  702 	ld	hl,#_lastTime + 3
   0433 DD 7E F8      [19]  703 	ld	a,-8 (ix)
   0436 3C            [ 4]  704 	inc	a
   0437 77            [ 7]  705 	ld	(hl),a
                            706 ;../time.c:173: lastTime.tm_isdst=0;
   0438 21r2Ar00      [10]  707 	ld	hl,#_lastTime + 10
   043B 36 00         [10]  708 	ld	(hl),#0x00
                            709 ;../time.c:175: return &lastTime;
   043D 21r20r00      [10]  710 	ld	hl,#_lastTime
   0440 DD F9         [10]  711 	ld	sp, ix
   0442 DD E1         [14]  712 	pop	ix
   0444 C9            [10]  713 	ret
                            714 ;../time.c:179: time_t mktime(struct tm *timeptr) {
                            715 ;	---------------------------------
                            716 ; Function mktime
                            717 ; ---------------------------------
   0445                     718 _mktime::
   0445 DD E5         [15]  719 	push	ix
   0447 DD 21 00 00   [14]  720 	ld	ix,#0
   044B DD 39         [15]  721 	add	ix,sp
   044D 21 F2 FF      [10]  722 	ld	hl,#-14
   0450 39            [11]  723 	add	hl,sp
   0451 F9            [ 6]  724 	ld	sp,hl
                            725 ;../time.c:180: int year=timeptr->tm_year+1900, month=timeptr->tm_mon, i;
   0452 DD 7E 04      [19]  726 	ld	a,4 (ix)
   0455 DD 77 FC      [19]  727 	ld	-4 (ix),a
   0458 DD 7E 05      [19]  728 	ld	a,5 (ix)
   045B DD 77 FD      [19]  729 	ld	-3 (ix),a
   045E DD 6E FC      [19]  730 	ld	l,-4 (ix)
   0461 DD 66 FD      [19]  731 	ld	h,-3 (ix)
   0464 11 05 00      [10]  732 	ld	de, #0x0005
   0467 19            [11]  733 	add	hl, de
   0468 5E            [ 7]  734 	ld	e,(hl)
   0469 23            [ 6]  735 	inc	hl
   046A 56            [ 7]  736 	ld	d,(hl)
   046B 21 6C 07      [10]  737 	ld	hl,#0x076C
   046E 19            [11]  738 	add	hl,de
   046F E3            [19]  739 	ex	(sp), hl
   0470 DD 6E FC      [19]  740 	ld	l,-4 (ix)
   0473 DD 66 FD      [19]  741 	ld	h,-3 (ix)
   0476 11 04 00      [10]  742 	ld	de, #0x0004
   0479 19            [11]  743 	add	hl, de
   047A 7E            [ 7]  744 	ld	a,(hl)
   047B DD 77 F6      [19]  745 	ld	-10 (ix),a
   047E DD 36 F7 00   [19]  746 	ld	-9 (ix),#0x00
                            747 ;../time.c:183: CheckTime(timeptr);
   0482 DD 6E FC      [19]  748 	ld	l,-4 (ix)
   0485 DD 66 FD      [19]  749 	ld	h,-3 (ix)
   0488 E5            [11]  750 	push	hl
   0489 CDr50r00      [17]  751 	call	_CheckTime
   048C F1            [10]  752 	pop	af
                            753 ;../time.c:186: seconds= (year-1970)*(60*60*24L*365);
   048D DD 7E F2      [19]  754 	ld	a,-14 (ix)
   0490 C6 4E         [ 7]  755 	add	a,#0x4E
   0492 5F            [ 4]  756 	ld	e,a
   0493 DD 7E F3      [19]  757 	ld	a,-13 (ix)
   0496 CE F8         [ 7]  758 	adc	a,#0xF8
   0498 57            [ 4]  759 	ld	d,a
   0499 17            [ 4]  760 	rla
   049A 9F            [ 4]  761 	sbc	a, a
   049B 6F            [ 4]  762 	ld	l,a
   049C 67            [ 4]  763 	ld	h,a
   049D E5            [11]  764 	push	hl
   049E D5            [11]  765 	push	de
   049F 21 E1 01      [10]  766 	ld	hl,#0x01E1
   04A2 E5            [11]  767 	push	hl
   04A3 21 80 33      [10]  768 	ld	hl,#0x3380
   04A6 E5            [11]  769 	push	hl
   04A7 CDr00r00      [17]  770 	call	__mullong
   04AA F1            [10]  771 	pop	af
   04AB F1            [10]  772 	pop	af
   04AC F1            [10]  773 	pop	af
   04AD F1            [10]  774 	pop	af
   04AE DD 75 F8      [19]  775 	ld	-8 (ix),l
   04B1 DD 74 F9      [19]  776 	ld	-7 (ix),h
   04B4 DD 73 FA      [19]  777 	ld	-6 (ix),e
   04B7 DD 72 FB      [19]  778 	ld	-5 (ix),d
                            779 ;../time.c:189: for (i=1970; i<year; i++) {
   04BA DD 36 F4 B2   [19]  780 	ld	-12 (ix),#0xB2
   04BE DD 36 F5 07   [19]  781 	ld	-11 (ix),#0x07
   04C2                     782 00110$:
   04C2 DD 7E F4      [19]  783 	ld	a,-12 (ix)
   04C5 DD 96 F2      [19]  784 	sub	a, -14 (ix)
   04C8 DD 7E F5      [19]  785 	ld	a,-11 (ix)
   04CB DD 9E F3      [19]  786 	sbc	a, -13 (ix)
   04CE E2rD3r04      [10]  787 	jp	PO, 00147$
   04D1 EE 80         [ 7]  788 	xor	a, #0x80
   04D3                     789 00147$:
   04D3 F2r14r05      [10]  790 	jp	P,00124$
                            791 ;../time.c:190: if (LEAP_YEAR(i)) {
   04D6 21 04 00      [10]  792 	ld	hl,#0x0004
   04D9 E5            [11]  793 	push	hl
   04DA DD 6E F4      [19]  794 	ld	l,-12 (ix)
   04DD DD 66 F5      [19]  795 	ld	h,-11 (ix)
   04E0 E5            [11]  796 	push	hl
   04E1 CDr00r00      [17]  797 	call	__modsint
   04E4 F1            [10]  798 	pop	af
   04E5 F1            [10]  799 	pop	af
   04E6 7C            [ 4]  800 	ld	a,h
   04E7 B5            [ 4]  801 	or	a,l
   04E8 20 20         [12]  802 	jr	NZ,00111$
                            803 ;../time.c:191: seconds+= 60*60*24L;
   04EA DD 7E F8      [19]  804 	ld	a,-8 (ix)
   04ED C6 80         [ 7]  805 	add	a, #0x80
   04EF DD 77 F8      [19]  806 	ld	-8 (ix),a
   04F2 DD 7E F9      [19]  807 	ld	a,-7 (ix)
   04F5 CE 51         [ 7]  808 	adc	a, #0x51
   04F7 DD 77 F9      [19]  809 	ld	-7 (ix),a
   04FA DD 7E FA      [19]  810 	ld	a,-6 (ix)
   04FD CE 01         [ 7]  811 	adc	a, #0x01
   04FF DD 77 FA      [19]  812 	ld	-6 (ix),a
   0502 DD 7E FB      [19]  813 	ld	a,-5 (ix)
   0505 CE 00         [ 7]  814 	adc	a, #0x00
   0507 DD 77 FB      [19]  815 	ld	-5 (ix),a
   050A                     816 00111$:
                            817 ;../time.c:189: for (i=1970; i<year; i++) {
   050A DD 34 F4      [23]  818 	inc	-12 (ix)
   050D 20 B3         [12]  819 	jr	NZ,00110$
   050F DD 34 F5      [23]  820 	inc	-11 (ix)
   0512 18 AE         [12]  821 	jr	00110$
   0514                     822 00124$:
                            823 ;../time.c:196: for (i=0; i<month; i++) {
   0514 21 04 00      [10]  824 	ld	hl,#0x0004
   0517 4D            [ 4]  825 	ld	c, l
   0518 44            [ 4]  826 	ld	b, h
   0519 E1            [10]  827 	pop	hl
   051A E5            [11]  828 	push	hl
   051B C5            [11]  829 	push	bc
   051C E5            [11]  830 	push	hl
   051D CDr00r00      [17]  831 	call	__modsint
   0520 F1            [10]  832 	pop	af
   0521 F1            [10]  833 	pop	af
   0522 DD 74 FF      [19]  834 	ld	-1 (ix),h
   0525 DD 75 FE      [19]  835 	ld	-2 (ix),l
   0528 11 00 00      [10]  836 	ld	de,#0x0000
   052B                     837 00113$:
   052B 7B            [ 4]  838 	ld	a,e
   052C DD 96 F6      [19]  839 	sub	a, -10 (ix)
   052F 7A            [ 4]  840 	ld	a,d
   0530 DD 9E F7      [19]  841 	sbc	a, -9 (ix)
   0533 E2r38r05      [10]  842 	jp	PO, 00149$
   0536 EE 80         [ 7]  843 	xor	a, #0x80
   0538                     844 00149$:
   0538 F2rADr05      [10]  845 	jp	P,00108$
                            846 ;../time.c:197: if (i==1 && LEAP_YEAR(year)) { 
   053B 7B            [ 4]  847 	ld	a,e
   053C 3D            [ 4]  848 	dec	a
   053D 20 2E         [12]  849 	jr	NZ,00105$
   053F 7A            [ 4]  850 	ld	a,d
   0540 B7            [ 4]  851 	or	a, a
   0541 20 2A         [12]  852 	jr	NZ,00105$
   0543 DD 7E FF      [19]  853 	ld	a,-1 (ix)
   0546 DD B6 FE      [19]  854 	or	a,-2 (ix)
   0549 20 22         [12]  855 	jr	NZ,00105$
                            856 ;../time.c:198: seconds+= 60*60*24L*29;
   054B DD 7E F8      [19]  857 	ld	a,-8 (ix)
   054E C6 80         [ 7]  858 	add	a, #0x80
   0550 DD 77 F8      [19]  859 	ld	-8 (ix),a
   0553 DD 7E F9      [19]  860 	ld	a,-7 (ix)
   0556 CE 3B         [ 7]  861 	adc	a, #0x3B
   0558 DD 77 F9      [19]  862 	ld	-7 (ix),a
   055B DD 7E FA      [19]  863 	ld	a,-6 (ix)
   055E CE 26         [ 7]  864 	adc	a, #0x26
   0560 DD 77 FA      [19]  865 	ld	-6 (ix),a
   0563 DD 7E FB      [19]  866 	ld	a,-5 (ix)
   0566 CE 00         [ 7]  867 	adc	a, #0x00
   0568 DD 77 FB      [19]  868 	ld	-5 (ix),a
   056B 18 3C         [12]  869 	jr	00114$
   056D                     870 00105$:
                            871 ;../time.c:200: seconds+= 60*60*24L*monthDays[i];
   056D 21r00r00      [10]  872 	ld	hl,#_monthDays
   0570 19            [11]  873 	add	hl,de
   0571 7E            [ 7]  874 	ld	a,(hl)
   0572 4F            [ 4]  875 	ld	c,a
   0573 17            [ 4]  876 	rla
   0574 9F            [ 4]  877 	sbc	a, a
   0575 47            [ 4]  878 	ld	b,a
   0576 6F            [ 4]  879 	ld	l,a
   0577 67            [ 4]  880 	ld	h,a
   0578 D5            [11]  881 	push	de
   0579 E5            [11]  882 	push	hl
   057A C5            [11]  883 	push	bc
   057B 21 01 00      [10]  884 	ld	hl,#0x0001
   057E E5            [11]  885 	push	hl
   057F 21 80 51      [10]  886 	ld	hl,#0x5180
   0582 E5            [11]  887 	push	hl
   0583 CDr00r00      [17]  888 	call	__mullong
   0586 F1            [10]  889 	pop	af
   0587 F1            [10]  890 	pop	af
   0588 F1            [10]  891 	pop	af
   0589 F1            [10]  892 	pop	af
   058A 43            [ 4]  893 	ld	b,e
   058B 4A            [ 4]  894 	ld	c,d
   058C D1            [10]  895 	pop	de
   058D DD 7E F8      [19]  896 	ld	a,-8 (ix)
   0590 85            [ 4]  897 	add	a, l
   0591 DD 77 F8      [19]  898 	ld	-8 (ix),a
   0594 DD 7E F9      [19]  899 	ld	a,-7 (ix)
   0597 8C            [ 4]  900 	adc	a, h
   0598 DD 77 F9      [19]  901 	ld	-7 (ix),a
   059B DD 7E FA      [19]  902 	ld	a,-6 (ix)
   059E 88            [ 4]  903 	adc	a, b
   059F DD 77 FA      [19]  904 	ld	-6 (ix),a
   05A2 DD 7E FB      [19]  905 	ld	a,-5 (ix)
   05A5 89            [ 4]  906 	adc	a, c
   05A6 DD 77 FB      [19]  907 	ld	-5 (ix),a
   05A9                     908 00114$:
                            909 ;../time.c:196: for (i=0; i<month; i++) {
   05A9 13            [ 6]  910 	inc	de
   05AA C3r2Br05      [10]  911 	jp	00113$
   05AD                     912 00108$:
                            913 ;../time.c:204: seconds+= (timeptr->tm_mday-1)*60*60*24L;
   05AD DD 6E FC      [19]  914 	ld	l,-4 (ix)
   05B0 DD 66 FD      [19]  915 	ld	h,-3 (ix)
   05B3 23            [ 6]  916 	inc	hl
   05B4 23            [ 6]  917 	inc	hl
   05B5 23            [ 6]  918 	inc	hl
   05B6 5E            [ 7]  919 	ld	e,(hl)
   05B7 16 00         [ 7]  920 	ld	d,#0x00
   05B9 1B            [ 6]  921 	dec	de
   05BA 7A            [ 4]  922 	ld	a,d
   05BB 17            [ 4]  923 	rla
   05BC 9F            [ 4]  924 	sbc	a, a
   05BD 6F            [ 4]  925 	ld	l,a
   05BE 67            [ 4]  926 	ld	h,a
   05BF E5            [11]  927 	push	hl
   05C0 D5            [11]  928 	push	de
   05C1 21 01 00      [10]  929 	ld	hl,#0x0001
   05C4 E5            [11]  930 	push	hl
   05C5 21 80 51      [10]  931 	ld	hl,#0x5180
   05C8 E5            [11]  932 	push	hl
   05C9 CDr00r00      [17]  933 	call	__mullong
   05CC F1            [10]  934 	pop	af
   05CD F1            [10]  935 	pop	af
   05CE F1            [10]  936 	pop	af
   05CF F1            [10]  937 	pop	af
   05D0 DD 7E F8      [19]  938 	ld	a,-8 (ix)
   05D3 85            [ 4]  939 	add	a, l
   05D4 DD 77 F8      [19]  940 	ld	-8 (ix),a
   05D7 DD 7E F9      [19]  941 	ld	a,-7 (ix)
   05DA 8C            [ 4]  942 	adc	a, h
   05DB DD 77 F9      [19]  943 	ld	-7 (ix),a
   05DE DD 7E FA      [19]  944 	ld	a,-6 (ix)
   05E1 8B            [ 4]  945 	adc	a, e
   05E2 DD 77 FA      [19]  946 	ld	-6 (ix),a
   05E5 DD 7E FB      [19]  947 	ld	a,-5 (ix)
   05E8 8A            [ 4]  948 	adc	a, d
   05E9 DD 77 FB      [19]  949 	ld	-5 (ix),a
                            950 ;../time.c:205: seconds+= timeptr->tm_hour*60*60L;
   05EC DD 6E FC      [19]  951 	ld	l,-4 (ix)
   05EF DD 66 FD      [19]  952 	ld	h,-3 (ix)
   05F2 23            [ 6]  953 	inc	hl
   05F3 23            [ 6]  954 	inc	hl
   05F4 5E            [ 7]  955 	ld	e,(hl)
   05F5 16 00         [ 7]  956 	ld	d,#0x00
   05F7 21 00 00      [10]  957 	ld	hl,#0x0000
   05FA E5            [11]  958 	push	hl
   05FB D5            [11]  959 	push	de
   05FC 21 00 00      [10]  960 	ld	hl,#0x0000
   05FF E5            [11]  961 	push	hl
   0600 21 10 0E      [10]  962 	ld	hl,#0x0E10
   0603 E5            [11]  963 	push	hl
   0604 CDr00r00      [17]  964 	call	__mullong
   0607 F1            [10]  965 	pop	af
   0608 F1            [10]  966 	pop	af
   0609 F1            [10]  967 	pop	af
   060A F1            [10]  968 	pop	af
   060B DD 7E F8      [19]  969 	ld	a,-8 (ix)
   060E 85            [ 4]  970 	add	a, l
   060F DD 77 F8      [19]  971 	ld	-8 (ix),a
   0612 DD 7E F9      [19]  972 	ld	a,-7 (ix)
   0615 8C            [ 4]  973 	adc	a, h
   0616 DD 77 F9      [19]  974 	ld	-7 (ix),a
   0619 DD 7E FA      [19]  975 	ld	a,-6 (ix)
   061C 8B            [ 4]  976 	adc	a, e
   061D DD 77 FA      [19]  977 	ld	-6 (ix),a
   0620 DD 7E FB      [19]  978 	ld	a,-5 (ix)
   0623 8A            [ 4]  979 	adc	a, d
   0624 DD 77 FB      [19]  980 	ld	-5 (ix),a
                            981 ;../time.c:206: seconds+= timeptr->tm_min*60;
   0627 DD 6E FC      [19]  982 	ld	l,-4 (ix)
   062A DD 66 FD      [19]  983 	ld	h,-3 (ix)
   062D 23            [ 6]  984 	inc	hl
   062E 4E            [ 7]  985 	ld	c, (hl)
   062F 06 00         [ 7]  986 	ld	b,#0x00
   0631 69            [ 4]  987 	ld	l, c
   0632 60            [ 4]  988 	ld	h, b
   0633 29            [11]  989 	add	hl, hl
   0634 09            [11]  990 	add	hl, bc
   0635 29            [11]  991 	add	hl, hl
   0636 09            [11]  992 	add	hl, bc
   0637 29            [11]  993 	add	hl, hl
   0638 09            [11]  994 	add	hl, bc
   0639 29            [11]  995 	add	hl, hl
   063A 29            [11]  996 	add	hl, hl
   063B 7C            [ 4]  997 	ld	a,h
   063C 17            [ 4]  998 	rla
   063D 9F            [ 4]  999 	sbc	a, a
   063E 5F            [ 4] 1000 	ld	e,a
   063F 57            [ 4] 1001 	ld	d,a
   0640 DD 7E F8      [19] 1002 	ld	a,-8 (ix)
   0643 85            [ 4] 1003 	add	a, l
   0644 4F            [ 4] 1004 	ld	c,a
   0645 DD 7E F9      [19] 1005 	ld	a,-7 (ix)
   0648 8C            [ 4] 1006 	adc	a, h
   0649 47            [ 4] 1007 	ld	b,a
   064A DD 7E FA      [19] 1008 	ld	a,-6 (ix)
   064D 8B            [ 4] 1009 	adc	a, e
   064E 5F            [ 4] 1010 	ld	e,a
   064F DD 7E FB      [19] 1011 	ld	a,-5 (ix)
   0652 8A            [ 4] 1012 	adc	a, d
   0653 57            [ 4] 1013 	ld	d,a
                           1014 ;../time.c:207: seconds+= timeptr->tm_sec;
   0654 DD 6E FC      [19] 1015 	ld	l,-4 (ix)
   0657 DD 66 FD      [19] 1016 	ld	h,-3 (ix)
   065A 6E            [ 7] 1017 	ld	l,(hl)
   065B 26 00         [ 7] 1018 	ld	h,#0x00
   065D DD 75 F8      [19] 1019 	ld	-8 (ix),l
   0660 DD 74 F9      [19] 1020 	ld	-7 (ix),h
   0663 7C            [ 4] 1021 	ld	a,h
   0664 17            [ 4] 1022 	rla
   0665 9F            [ 4] 1023 	sbc	a, a
   0666 DD 77 FA      [19] 1024 	ld	-6 (ix),a
   0669 DD 77 FB      [19] 1025 	ld	-5 (ix),a
   066C 79            [ 4] 1026 	ld	a,c
   066D DD 86 F8      [19] 1027 	add	a, -8 (ix)
   0670 6F            [ 4] 1028 	ld	l,a
   0671 78            [ 4] 1029 	ld	a,b
   0672 DD 8E F9      [19] 1030 	adc	a, -7 (ix)
   0675 67            [ 4] 1031 	ld	h,a
   0676 7B            [ 4] 1032 	ld	a,e
   0677 DD 8E FA      [19] 1033 	adc	a, -6 (ix)
   067A 5F            [ 4] 1034 	ld	e,a
   067B 7A            [ 4] 1035 	ld	a,d
   067C DD 8E FB      [19] 1036 	adc	a, -5 (ix)
   067F 57            [ 4] 1037 	ld	d,a
                           1038 ;../time.c:208: return seconds;
   0680 DD F9         [10] 1039 	ld	sp, ix
   0682 DD E1         [14] 1040 	pop	ix
   0684 C9            [10] 1041 	ret
                           1042 	.area _CODE
   0685                    1043 ___str_1:
   0685 4A 61 6E           1044 	.ascii "Jan"
   0688 00                 1045 	.db 0x00
   0689                    1046 ___str_2:
   0689 46 65 62           1047 	.ascii "Feb"
   068C 00                 1048 	.db 0x00
   068D                    1049 ___str_3:
   068D 4D 61 72           1050 	.ascii "Mar"
   0690 00                 1051 	.db 0x00
   0691                    1052 ___str_4:
   0691 41 70 72           1053 	.ascii "Apr"
   0694 00                 1054 	.db 0x00
   0695                    1055 ___str_5:
   0695 4D 61 79           1056 	.ascii "May"
   0698 00                 1057 	.db 0x00
   0699                    1058 ___str_6:
   0699 4A 75 6E           1059 	.ascii "Jun"
   069C 00                 1060 	.db 0x00
   069D                    1061 ___str_7:
   069D 4A 75 6C           1062 	.ascii "Jul"
   06A0 00                 1063 	.db 0x00
   06A1                    1064 ___str_8:
   06A1 41 75 67           1065 	.ascii "Aug"
   06A4 00                 1066 	.db 0x00
   06A5                    1067 ___str_9:
   06A5 53 65 70           1068 	.ascii "Sep"
   06A8 00                 1069 	.db 0x00
   06A9                    1070 ___str_10:
   06A9 4F 63 74           1071 	.ascii "Oct"
   06AC 00                 1072 	.db 0x00
   06AD                    1073 ___str_11:
   06AD 4E 6F 76           1074 	.ascii "Nov"
   06B0 00                 1075 	.db 0x00
   06B1                    1076 ___str_12:
   06B1 44 65 63           1077 	.ascii "Dec"
   06B4 00                 1078 	.db 0x00
   06B5                    1079 ___str_13:
   06B5 53 75 6E           1080 	.ascii "Sun"
   06B8 00                 1081 	.db 0x00
   06B9                    1082 ___str_14:
   06B9 4D 6F 6E           1083 	.ascii "Mon"
   06BC 00                 1084 	.db 0x00
   06BD                    1085 ___str_15:
   06BD 54 75 65           1086 	.ascii "Tue"
   06C0 00                 1087 	.db 0x00
   06C1                    1088 ___str_16:
   06C1 57 65 64           1089 	.ascii "Wed"
   06C4 00                 1090 	.db 0x00
   06C5                    1091 ___str_17:
   06C5 54 68 75           1092 	.ascii "Thu"
   06C8 00                 1093 	.db 0x00
   06C9                    1094 ___str_18:
   06C9 46 72 69           1095 	.ascii "Fri"
   06CC 00                 1096 	.db 0x00
   06CD                    1097 ___str_19:
   06CD 53 61 74           1098 	.ascii "Sat"
   06D0 00                 1099 	.db 0x00
                           1100 	.area _INITIALIZER
   0000                    1101 __xinit__monthDays:
   0000 1F                 1102 	.db #0x1F	;  31
   0001 1C                 1103 	.db #0x1C	;  28
   0002 1F                 1104 	.db #0x1F	;  31
   0003 1E                 1105 	.db #0x1E	;  30
   0004 1F                 1106 	.db #0x1F	;  31
   0005 1E                 1107 	.db #0x1E	;  30
   0006 1F                 1108 	.db #0x1F	;  31
   0007 1F                 1109 	.db #0x1F	;  31
   0008 1E                 1110 	.db #0x1E	;  30
   0009 1F                 1111 	.db #0x1F	;  31
   000A 1E                 1112 	.db #0x1E	;  30
   000B 1F                 1113 	.db #0x1F	;  31
   000C                    1114 __xinit____month:
   000Cr85r06              1115 	.dw ___str_1
   000Er89r06              1116 	.dw ___str_2
   0010r8Dr06              1117 	.dw ___str_3
   0012r91r06              1118 	.dw ___str_4
   0014r95r06              1119 	.dw ___str_5
   0016r99r06              1120 	.dw ___str_6
   0018r9Dr06              1121 	.dw ___str_7
   001ArA1r06              1122 	.dw ___str_8
   001CrA5r06              1123 	.dw ___str_9
   001ErA9r06              1124 	.dw ___str_10
   0020rADr06              1125 	.dw ___str_11
   0022rB1r06              1126 	.dw ___str_12
   0024                    1127 __xinit____day:
   0024rB5r06              1128 	.dw ___str_13
   0026rB9r06              1129 	.dw ___str_14
   0028rBDr06              1130 	.dw ___str_15
   002ArC1r06              1131 	.dw ___str_16
   002CrC5r06              1132 	.dw ___str_17
   002ErC9r06              1133 	.dw ___str_18
   0030rCDr06              1134 	.dw ___str_19
                           1135 	.area _CABS (ABS)
