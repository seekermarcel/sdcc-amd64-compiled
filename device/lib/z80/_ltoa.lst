                              1 ;--------------------------------------------------------
                              2 ; File Created by SDCC : free open source ANSI-C Compiler
                              3 ; Version 3.5.0 #9253 (Apr  4 2022) (Linux)
                              4 ; This file was generated Mon Apr  4 14:15:33 2022
                              5 ;--------------------------------------------------------
                              6 	.module _ltoa
                              7 	.optsdcc -mz80
                              8 	
                              9 ;--------------------------------------------------------
                             10 ; Public variables in this module
                             11 ;--------------------------------------------------------
                             12 	.globl __ltoa
                             13 	.globl __ultoa
                             14 ;--------------------------------------------------------
                             15 ; special function registers
                             16 ;--------------------------------------------------------
                             17 ;--------------------------------------------------------
                             18 ; ram data
                             19 ;--------------------------------------------------------
                             20 	.area _DATA
                             21 ;--------------------------------------------------------
                             22 ; ram data
                             23 ;--------------------------------------------------------
                             24 	.area _INITIALIZED
                             25 ;--------------------------------------------------------
                             26 ; absolute external ram data
                             27 ;--------------------------------------------------------
                             28 	.area _DABS (ABS)
                             29 ;--------------------------------------------------------
                             30 ; global & static initialisations
                             31 ;--------------------------------------------------------
                             32 	.area _HOME
                             33 	.area _GSINIT
                             34 	.area _GSFINAL
                             35 	.area _GSINIT
                             36 ;--------------------------------------------------------
                             37 ; Home
                             38 ;--------------------------------------------------------
                             39 	.area _HOME
                             40 	.area _HOME
                             41 ;--------------------------------------------------------
                             42 ; code
                             43 ;--------------------------------------------------------
                             44 	.area _CODE
                             45 ;../_ltoa.c:56: void _ultoa(unsigned long value, char* string, unsigned char radix)
                             46 ;	---------------------------------
                             47 ; Function _ultoa
                             48 ; ---------------------------------
   0000                      49 __ultoa::
   0000 DD E5         [15]   50 	push	ix
   0002 DD 21 00 00   [14]   51 	ld	ix,#0
   0006 DD 39         [15]   52 	add	ix,sp
   0008 21 DB FF      [10]   53 	ld	hl,#-37
   000B 39            [11]   54 	add	hl,sp
   000C F9            [ 6]   55 	ld	sp,hl
                             56 ;../_ltoa.c:61: do {
   000D 21 01 00      [10]   57 	ld	hl,#0x0001
   0010 39            [11]   58 	add	hl,sp
   0011 4D            [ 4]   59 	ld	c,l
   0012 44            [ 4]   60 	ld	b,h
   0013 DD 36 DB 20   [19]   61 	ld	-37 (ix),#0x20
   0017                      62 00103$:
                             63 ;../_ltoa.c:62: unsigned char c = '0' + (value % radix);
   0017 DD 7E 0A      [19]   64 	ld	a,10 (ix)
   001A DD 77 FC      [19]   65 	ld	-4 (ix),a
   001D DD 36 FD 00   [19]   66 	ld	-3 (ix),#0x00
   0021 DD 36 FE 00   [19]   67 	ld	-2 (ix),#0x00
   0025 DD 36 FF 00   [19]   68 	ld	-1 (ix),#0x00
   0029 C5            [11]   69 	push	bc
   002A DD 6E FE      [19]   70 	ld	l,-2 (ix)
   002D DD 66 FF      [19]   71 	ld	h,-1 (ix)
   0030 E5            [11]   72 	push	hl
   0031 DD 6E FC      [19]   73 	ld	l,-4 (ix)
   0034 DD 66 FD      [19]   74 	ld	h,-3 (ix)
   0037 E5            [11]   75 	push	hl
   0038 DD 6E 06      [19]   76 	ld	l,6 (ix)
   003B DD 66 07      [19]   77 	ld	h,7 (ix)
   003E E5            [11]   78 	push	hl
   003F DD 6E 04      [19]   79 	ld	l,4 (ix)
   0042 DD 66 05      [19]   80 	ld	h,5 (ix)
   0045 E5            [11]   81 	push	hl
   0046 CDr00r00      [17]   82 	call	__modulong
   0049 F1            [10]   83 	pop	af
   004A F1            [10]   84 	pop	af
   004B F1            [10]   85 	pop	af
   004C F1            [10]   86 	pop	af
   004D C1            [10]   87 	pop	bc
   004E 7D            [ 4]   88 	ld	a,l
   004F C6 30         [ 7]   89 	add	a, #0x30
   0051 57            [ 4]   90 	ld	d,a
                             91 ;../_ltoa.c:63: if (c > (unsigned char)'9')
   0052 3E 39         [ 7]   92 	ld	a,#0x39
   0054 92            [ 4]   93 	sub	a, d
   0055 30 04         [12]   94 	jr	NC,00102$
                             95 ;../_ltoa.c:64: c += 'A' - '9' - 1;
   0057 7A            [ 4]   96 	ld	a,d
   0058 C6 07         [ 7]   97 	add	a, #0x07
   005A 57            [ 4]   98 	ld	d,a
   005B                      99 00102$:
                            100 ;../_ltoa.c:65: buffer[--index] = c;
   005B DD 35 DB      [23]  101 	dec	-37 (ix)
   005E DD 6E DB      [19]  102 	ld	l,-37 (ix)
   0061 26 00         [ 7]  103 	ld	h,#0x00
   0063 09            [11]  104 	add	hl,bc
   0064 72            [ 7]  105 	ld	(hl),d
                            106 ;../_ltoa.c:66: value /= radix;
   0065 C5            [11]  107 	push	bc
   0066 DD 6E FE      [19]  108 	ld	l,-2 (ix)
   0069 DD 66 FF      [19]  109 	ld	h,-1 (ix)
   006C E5            [11]  110 	push	hl
   006D DD 6E FC      [19]  111 	ld	l,-4 (ix)
   0070 DD 66 FD      [19]  112 	ld	h,-3 (ix)
   0073 E5            [11]  113 	push	hl
   0074 DD 6E 06      [19]  114 	ld	l,6 (ix)
   0077 DD 66 07      [19]  115 	ld	h,7 (ix)
   007A E5            [11]  116 	push	hl
   007B DD 6E 04      [19]  117 	ld	l,4 (ix)
   007E DD 66 05      [19]  118 	ld	h,5 (ix)
   0081 E5            [11]  119 	push	hl
   0082 CDr00r00      [17]  120 	call	__divulong
   0085 F1            [10]  121 	pop	af
   0086 F1            [10]  122 	pop	af
   0087 F1            [10]  123 	pop	af
   0088 F1            [10]  124 	pop	af
   0089 C1            [10]  125 	pop	bc
   008A DD 75 04      [19]  126 	ld	4 (ix),l
   008D DD 74 05      [19]  127 	ld	5 (ix),h
   0090 DD 73 06      [19]  128 	ld	6 (ix),e
                            129 ;../_ltoa.c:67: } while (value);
   0093 DD 72 07      [19]  130 	ld	7 (ix), d
   0096 7A            [ 4]  131 	ld	a, d
   0097 DD B6 06      [19]  132 	or	a, 6 (ix)
   009A DD B6 05      [19]  133 	or	a, 5 (ix)
   009D DD B6 04      [19]  134 	or	a,4 (ix)
   00A0 C2r17r00      [10]  135 	jp	NZ,00103$
                            136 ;../_ltoa.c:69: do {
   00A3 DD 5E 08      [19]  137 	ld	e,8 (ix)
   00A6 DD 56 09      [19]  138 	ld	d,9 (ix)
   00A9 D5            [11]  139 	push	de
   00AA FD E1         [14]  140 	pop	iy
   00AC DD 56 DB      [19]  141 	ld	d,-37 (ix)
   00AF                     142 00106$:
                            143 ;../_ltoa.c:70: *string++ = buffer[index];
   00AF 6A            [ 4]  144 	ld	l,d
   00B0 26 00         [ 7]  145 	ld	h,#0x00
   00B2 09            [11]  146 	add	hl,bc
   00B3 7E            [ 7]  147 	ld	a,(hl)
   00B4 FD 77 00      [19]  148 	ld	0 (iy), a
   00B7 FD 23         [10]  149 	inc	iy
                            150 ;../_ltoa.c:71: } while ( ++index != NUMBER_OF_DIGITS );
   00B9 14            [ 4]  151 	inc	d
   00BA 7A            [ 4]  152 	ld	a,d
   00BB D6 20         [ 7]  153 	sub	a, #0x20
   00BD 20 F0         [12]  154 	jr	NZ,00106$
                            155 ;../_ltoa.c:73: *string = 0;  /* string terminator */
   00BF FD 36 00 00   [19]  156 	ld	0 (iy), #0x00
   00C3 DD F9         [10]  157 	ld	sp, ix
   00C5 DD E1         [14]  158 	pop	ix
   00C7 C9            [10]  159 	ret
                            160 ;../_ltoa.c:76: void _ltoa(long value, char* string, unsigned char radix)
                            161 ;	---------------------------------
                            162 ; Function _ltoa
                            163 ; ---------------------------------
   00C8                     164 __ltoa::
   00C8 DD E5         [15]  165 	push	ix
   00CA DD 21 00 00   [14]  166 	ld	ix,#0
   00CE DD 39         [15]  167 	add	ix,sp
                            168 ;../_ltoa.c:78: if (value < 0 && radix == 10) {
   00D0 DD CB 07 7E   [20]  169 	bit	7, 7 (ix)
   00D4 28 35         [12]  170 	jr	Z,00102$
   00D6 DD 7E 0A      [19]  171 	ld	a,10 (ix)
   00D9 D6 0A         [ 7]  172 	sub	a, #0x0A
   00DB 20 2E         [12]  173 	jr	NZ,00102$
                            174 ;../_ltoa.c:79: *string++ = '-';
   00DD DD 6E 08      [19]  175 	ld	l,8 (ix)
   00E0 DD 66 09      [19]  176 	ld	h,9 (ix)
   00E3 36 2D         [10]  177 	ld	(hl),#0x2D
   00E5 23            [ 6]  178 	inc	hl
   00E6 DD 75 08      [19]  179 	ld	8 (ix),l
   00E9 DD 74 09      [19]  180 	ld	9 (ix),h
                            181 ;../_ltoa.c:80: value = -value;
   00EC AF            [ 4]  182 	xor	a, a
   00ED DD 96 04      [19]  183 	sub	a, 4 (ix)
   00F0 DD 77 04      [19]  184 	ld	4 (ix),a
   00F3 3E 00         [ 7]  185 	ld	a, #0x00
   00F5 DD 9E 05      [19]  186 	sbc	a, 5 (ix)
   00F8 DD 77 05      [19]  187 	ld	5 (ix),a
   00FB 3E 00         [ 7]  188 	ld	a, #0x00
   00FD DD 9E 06      [19]  189 	sbc	a, 6 (ix)
   0100 DD 77 06      [19]  190 	ld	6 (ix),a
   0103 3E 00         [ 7]  191 	ld	a, #0x00
   0105 DD 9E 07      [19]  192 	sbc	a, 7 (ix)
   0108 DD 77 07      [19]  193 	ld	7 (ix),a
   010B                     194 00102$:
                            195 ;../_ltoa.c:82: _ultoa(value, string, radix);
   010B DD 7E 0A      [19]  196 	ld	a,10 (ix)
   010E F5            [11]  197 	push	af
   010F 33            [ 6]  198 	inc	sp
   0110 DD 6E 08      [19]  199 	ld	l,8 (ix)
   0113 DD 66 09      [19]  200 	ld	h,9 (ix)
   0116 E5            [11]  201 	push	hl
   0117 DD 6E 06      [19]  202 	ld	l,6 (ix)
   011A DD 66 07      [19]  203 	ld	h,7 (ix)
   011D E5            [11]  204 	push	hl
   011E DD 6E 04      [19]  205 	ld	l,4 (ix)
   0121 DD 66 05      [19]  206 	ld	h,5 (ix)
   0124 E5            [11]  207 	push	hl
   0125 CDr00r00      [17]  208 	call	__ultoa
   0128 21 07 00      [10]  209 	ld	hl,#7
   012B 39            [11]  210 	add	hl,sp
   012C F9            [ 6]  211 	ld	sp,hl
   012D DD E1         [14]  212 	pop	ix
   012F C9            [10]  213 	ret
                            214 	.area _CODE
                            215 	.area _INITIALIZER
                            216 	.area _CABS (ABS)
