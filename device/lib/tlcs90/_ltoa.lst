                              1 ;--------------------------------------------------------
                              2 ; File Created by SDCC : free open source ANSI-C Compiler
                              3 ; Version 3.5.0 #9253 (Apr  4 2022) (Linux)
                              4 ; This file was generated Mon Apr  4 14:16:42 2022
                              5 ;--------------------------------------------------------
                              6 	.module _ltoa
                              7 	.optsdcc -mtlcs90
                              8 	
                              9 ;--------------------------------------------------------
                             10 ; Public variables in this module
                             11 ;--------------------------------------------------------
                             12 	.globl __ltoa
                             13 	.globl __ultoa
                             14 ;--------------------------------------------------------
                             15 ; ram data
                             16 ;--------------------------------------------------------
                             17 	.area _DATA
                             18 ;--------------------------------------------------------
                             19 ; ram data
                             20 ;--------------------------------------------------------
                             21 	.area _INITIALIZED
                             22 ;--------------------------------------------------------
                             23 ; absolute external ram data
                             24 ;--------------------------------------------------------
                             25 	.area _DABS (ABS)
                             26 ;--------------------------------------------------------
                             27 ; global & static initialisations
                             28 ;--------------------------------------------------------
                             29 	.area _HOME
                             30 	.area _GSINIT
                             31 	.area _GSFINAL
                             32 	.area _GSINIT
                             33 ;--------------------------------------------------------
                             34 ; Home
                             35 ;--------------------------------------------------------
                             36 	.area _HOME
                             37 	.area _HOME
                             38 ;--------------------------------------------------------
                             39 ; code
                             40 ;--------------------------------------------------------
                             41 	.area _CODE
                             42 ;../_ltoa.c:56: void _ultoa(unsigned long value, char* string, unsigned char radix)
                             43 ;	---------------------------------
                             44 ; Function _ultoa
                             45 ; ---------------------------------
   0000                      46 __ultoa::
   0000 54            [ 4]   47 	push	ix
   0001 3C 00 00      [ 4]   48 	ld	ix,#0
   0004 FE 14         [ 7]   49 	add	ix,sp
   0006 16 DA FF      [ 7]   50 	add	sp, #-38
                             51 ;../_ltoa.c:61: do {
   0009 3A 00 00      [13]   52 	ld	hl,#0x0000
   000C FE 70         [ 7]   53 	add	hl,sp
   000E F6 20 42      [ 7]   54 	ld	32 (sp), hl
   0011 31 20         [10]   55 	ld	c,#0x20
   0013                      56 00103$:
                             57 ;../_ltoa.c:62: unsigned char c = '0' + (value % radix);
   0013 F0 0A 2E      [11]   58 	ld	a,10 (ix)
   0016 F4 FC 26      [17]   59 	ld	-4 (ix),a
   0019 F4 FD 37 00   [17]   60 	ld	-3 (ix),#0x00
   001D F4 FE 37 00   [17]   61 	ld	-2 (ix),#0x00
   0021 F4 FF 37 00   [17]   62 	ld	-1 (ix),#0x00
   0025 50            [ 4]   63 	push	bc
   0026 F2 26 4A      [10]   64 	ld	hl, 38 (sp)
   0029 52            [ 4]   65 	push	hl
   002A F2 26 4A      [10]   66 	ld	hl, 38 (sp)
   002D 52            [ 4]   67 	push	hl
   002E F2 32 4A      [10]   68 	ld	hl, 50 (sp)
   0031 52            [ 4]   69 	push	hl
   0032 F2 32 4A      [10]   70 	ld	hl, 50 (sp)
   0035 52            [ 4]   71 	push	hl
   0036 1Cr00r00      [ 4]   72 	call	__modulong
   0039 16 08 00      [ 7]   73 	add	sp, #8
   003C 58            [ 4]   74 	pop	bc
   003D 25            [ 4]   75 	ld	a,l
   003E 68 30         [ 4]   76 	add	a, #0x30
   0040 2A            [16]   77 	ld	d,a
                             78 ;../_ltoa.c:63: if (c > (unsigned char)'9')
   0041 36 39         [10]   79 	ld	a,#0x39
   0043 FA 62         [10]   80 	sub	a, d
   0045 CF 04         [11]   81 	jr	NC,00102$
                             82 ;../_ltoa.c:64: c += 'A' - '9' - 1;
   0047 22            [16]   83 	ld	a,d
   0048 68 07         [ 4]   84 	add	a, #0x07
   004A 2A            [16]   85 	ld	d,a
   004B                      86 00102$:
                             87 ;../_ltoa.c:65: buffer[--index] = c;
   004B 89            [ 4]   88 	dec	c
   004C F2 20 4A      [10]   89 	ld	hl, 32 (sp)
   004F 30 00         [12]   90 	ld	b,#0x00
   0051 F8 70         [11]   91 	add	hl, bc
   0053 EA 22         [10]   92 	ld	(hl),d
                             93 ;../_ltoa.c:66: value /= radix;
   0055 50            [ 4]   94 	push	bc
   0056 F2 26 4A      [10]   95 	ld	hl, 38 (sp)
   0059 52            [ 4]   96 	push	hl
   005A F2 26 4A      [10]   97 	ld	hl, 38 (sp)
   005D 52            [ 4]   98 	push	hl
   005E F2 32 4A      [10]   99 	ld	hl, 50 (sp)
   0061 52            [ 4]  100 	push	hl
   0062 F2 32 4A      [10]  101 	ld	hl, 50 (sp)
   0065 52            [ 4]  102 	push	hl
   0066 1Cr00r00      [ 4]  103 	call	__divulong
   0069 16 08 00      [ 7]  104 	add	sp, #8
   006C 58            [ 4]  105 	pop	bc
   006D F4 04 25      [17]  106 	ld	4 (ix),l
   0070 F4 05 24      [17]  107 	ld	5 (ix),h
   0073 F4 06 23      [17]  108 	ld	6 (ix),e
                            109 ;../_ltoa.c:67: } while (value);
   0076 F4 07 22      [17]  110 	ld	7 (ix), d
   0079 22            [16]  111 	ld	a, d
   007A F0 06 66      [11]  112 	or	a, 6 (ix)
   007D F0 05 66      [11]  113 	or	a, 5 (ix)
   0080 F0 04 66      [11]  114 	or	a,4 (ix)
   0083 EBr13r00 CE   [ 4]  115 	jp	NZ,00103$
                            116 ;../_ltoa.c:69: do {
   0087 08            [ 4]  117 	ex	de, hl
   0088 F2 2E 4A      [10]  118 	ld	hl, 46 (sp)
   008B 08            [ 4]  119 	ex	de, hl
   008C                     120 00106$:
                            121 ;../_ltoa.c:70: *string++ = buffer[index];
   008C F2 20 4A      [10]  122 	ld	hl, 32 (sp)
   008F 30 00         [12]  123 	ld	b,#0x00
   0091 F8 70         [11]  124 	add	hl, bc
   0093 E2 2E         [10]  125 	ld	a,(hl)
   0095 E9 26         [ 4]  126 	ld	(de),a
   0097 91            [ 4]  127 	inc	de
                            128 ;../_ltoa.c:71: } while ( ++index != NUMBER_OF_DIGITS );
   0098 81            [ 4]  129 	inc	c
   0099 21            [10]  130 	ld	a,c
   009A 6A 20         [ 4]  131 	sub	a, #0x20
   009C CE EE         [ 7]  132 	jr	NZ,00106$
                            133 ;../_ltoa.c:73: *string = 0;  /* string terminator */
   009E FE 65         [ 7]  134 	xor	a, a
   00A0 E9 26         [ 4]  135 	ld	(de),a
   00A2 FC 3E         [17]  136 	ld	sp, ix
   00A4 5C            [ 4]  137 	pop	ix
   00A5 1E            [ 7]  138 	ret
                            139 ;../_ltoa.c:76: void _ltoa(long value, char* string, unsigned char radix)
                            140 ;	---------------------------------
                            141 ; Function _ltoa
                            142 ; ---------------------------------
   00A6                     143 __ltoa::
   00A6 54            [ 4]  144 	push	ix
   00A7 3C 00 00      [ 4]  145 	ld	ix,#0
   00AA FE 14         [ 7]  146 	add	ix,sp
                            147 ;../_ltoa.c:78: if (value < 0 && radix == 10) {
   00AC F0 07 AF      [11]  148 	bit	7, 7 (ix)
   00AF C6 31         [ 7]  149 	jr	Z,00102$
   00B1 F0 0A 2E      [11]  150 	ld	a,10 (ix)
   00B4 6A 0A         [ 4]  151 	sub	a, #0x0A
   00B6 CE 2A         [ 7]  152 	jr	NZ,00102$
                            153 ;../_ltoa.c:79: *string++ = '-';
   00B8 F2 08 4A      [10]  154 	ld	hl, 8 (sp)
   00BB EA 37 2D      [10]  155 	ld	(hl),#0x2D
   00BE 92            [ 4]  156 	inc	hl
   00BF F6 08 42      [ 7]  157 	ld	8 (sp), hl
                            158 ;../_ltoa.c:80: value = -value;
   00C2 FE 65         [ 7]  159 	xor	a, a
   00C4 F0 04 62      [11]  160 	sub	a, 4 (ix)
   00C7 F4 04 26      [17]  161 	ld	4 (ix),a
   00CA 36 00         [10]  162 	ld	a, #0x00
   00CC F0 05 63      [11]  163 	sbc	a, 5 (ix)
   00CF F4 05 26      [17]  164 	ld	5 (ix),a
   00D2 36 00         [10]  165 	ld	a, #0x00
   00D4 F0 06 63      [11]  166 	sbc	a, 6 (ix)
   00D7 F4 06 26      [17]  167 	ld	6 (ix),a
   00DA 36 00         [10]  168 	ld	a, #0x00
   00DC F0 07 63      [11]  169 	sbc	a, 7 (ix)
   00DF F4 07 26      [17]  170 	ld	7 (ix),a
   00E2                     171 00102$:
                            172 ;../_ltoa.c:82: _ultoa(value, string, radix);
   00E2 F0 0A 2E      [11]  173 	ld	a,10 (ix)
   00E5 56            [ 7]  174 	push	af
   00E6 96            [ 7]  175 	inc	sp
   00E7 F2 09 4A      [10]  176 	ld	hl, 9 (sp)
   00EA 52            [ 4]  177 	push	hl
   00EB F2 09 4A      [10]  178 	ld	hl, 9 (sp)
   00EE 52            [ 4]  179 	push	hl
   00EF F2 09 4A      [10]  180 	ld	hl, 9 (sp)
   00F2 52            [ 4]  181 	push	hl
   00F3 1Cr00r00      [ 4]  182 	call	__ultoa
   00F6 16 07 00      [ 7]  183 	add	sp, #7
   00F9 5C            [ 4]  184 	pop	ix
   00FA 1E            [ 7]  185 	ret
                            186 	.area _CODE
                            187 	.area _INITIALIZER
                            188 	.area _CABS (ABS)
