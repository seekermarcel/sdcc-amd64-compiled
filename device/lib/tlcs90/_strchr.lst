                              1 ;--------------------------------------------------------
                              2 ; File Created by SDCC : free open source ANSI-C Compiler
                              3 ; Version 3.5.0 #9253 (Apr  4 2022) (Linux)
                              4 ; This file was generated Mon Apr  4 14:16:35 2022
                              5 ;--------------------------------------------------------
                              6 	.module _strchr
                              7 	.optsdcc -mtlcs90
                              8 	
                              9 ;--------------------------------------------------------
                             10 ; Public variables in this module
                             11 ;--------------------------------------------------------
                             12 	.globl _strchr
                             13 ;--------------------------------------------------------
                             14 ; ram data
                             15 ;--------------------------------------------------------
                             16 	.area _DATA
                             17 ;--------------------------------------------------------
                             18 ; ram data
                             19 ;--------------------------------------------------------
                             20 	.area _INITIALIZED
                             21 ;--------------------------------------------------------
                             22 ; absolute external ram data
                             23 ;--------------------------------------------------------
                             24 	.area _DABS (ABS)
                             25 ;--------------------------------------------------------
                             26 ; global & static initialisations
                             27 ;--------------------------------------------------------
                             28 	.area _HOME
                             29 	.area _GSINIT
                             30 	.area _GSFINAL
                             31 	.area _GSINIT
                             32 ;--------------------------------------------------------
                             33 ; Home
                             34 ;--------------------------------------------------------
                             35 	.area _HOME
                             36 	.area _HOME
                             37 ;--------------------------------------------------------
                             38 ; code
                             39 ;--------------------------------------------------------
                             40 	.area _CODE
                             41 ;../_strchr.c:36: char * strchr ( const char * string, int ch )
                             42 ;	---------------------------------
                             43 ; Function strchr
                             44 ; ---------------------------------
   0000                      45 _strchr::
   0000 54            [ 4]   46 	push	ix
   0001 3C 00 00      [ 4]   47 	ld	ix,#0
   0004 FE 14         [ 7]   48 	add	ix,sp
   0006 9E            [ 7]   49 	dec	sp
                             50 ;../_strchr.c:39: while (*string && *string != ch)
   0007 F0 04 29      [11]   51 	ld	c,4 (ix)
   000A F0 05 28      [11]   52 	ld	b,5 (ix)
   000D                      53 00102$:
   000D E0 2E         [11]   54 	ld	a,(bc)
   000F F4 FF 26      [17]   55 	ld	-1 (ix), a
   0012 2A            [16]   56 	ld	d, a
   0013 F0 FF 2E      [11]   57 	ld	a,-1 (ix)
   0016 A2            [ 4]   58 	rla
   0017 FE 63         [ 7]   59 	sbc	a, a
   0019 2B            [ 6]   60 	ld	e,a
   001A F0 06 2E      [11]   61 	ld	a,6 (ix)
   001D FA 62         [10]   62 	sub	a, d
   001F CE 0B         [ 7]   63 	jr	NZ,00126$
   0021 F0 07 2E      [11]   64 	ld	a,7 (ix)
   0024 FB 62         [ 4]   65 	sub	a, e
   0026 CE 04         [ 7]   66 	jr	NZ,00126$
   0028 36 01         [10]   67 	ld	a,#0x01
   002A C8 02         [11]   68 	jr	00127$
   002C                      69 00126$:
   002C FE 65         [ 7]   70 	xor	a,a
   002E                      71 00127$:
   002E 2A            [16]   72 	ld	d,a
   002F F0 FF 2E      [11]   73 	ld	a,-1 (ix)
   0032 FE 66         [ 7]   74 	or	a, a
   0034 C6 09         [ 7]   75 	jr	Z,00104$
   0036 22            [16]   76 	ld	a,d
   0037 FE 66         [ 7]   77 	or	a, a
   0039 CE 04         [ 7]   78 	jr	NZ,00104$
                             79 ;../_strchr.c:40: string++;
   003B 90            [ 4]   80 	inc	bc
   003C 1Ar0Dr00      [ 7]   81 	jp	00102$
   003F                      82 00104$:
                             83 ;../_strchr.c:42: if (*string == ch)
   003F 22            [16]   84 	ld	a,d
   0040 FE 66         [ 7]   85 	or	a, a
   0042 C6 06         [ 7]   86 	jr	Z,00106$
                             87 ;../_strchr.c:43: return(string);
   0044 F9 35         [ 6]   88 	ld	l, c
   0046 F8 34         [11]   89 	ld	h, b
   0048 C8 03         [11]   90 	jr	00107$
   004A                      91 00106$:
                             92 ;../_strchr.c:44: return ( NULL );
   004A 3A 00 00      [13]   93 	ld	hl,#0x0000
   004D                      94 00107$:
   004D 96            [ 7]   95 	inc	sp
   004E 5C            [ 4]   96 	pop	ix
   004F 1E            [ 7]   97 	ret
                             98 	.area _CODE
                             99 	.area _INITIALIZER
                            100 	.area _CABS (ABS)
