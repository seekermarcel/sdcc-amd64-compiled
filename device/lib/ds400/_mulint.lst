                                      1 ;--------------------------------------------------------
                                      2 ; File Created by SDCC : free open source ANSI-C Compiler
                                      3 ; Version 3.5.0 #9253 (Apr  4 2022) (Linux)
                                      4 ; This file was generated Mon Apr  4 14:10:29 2022
                                      5 ;--------------------------------------------------------
                                      6 	.module _mulint
                                      7 	.optsdcc -mds400 --model-flat24
                                      8 	
                                      9 ;--------------------------------------------------------
                                     10 ; CPU specific extensions
                                     11 ;--------------------------------------------------------
                                     12 	.DS80C390
                                     13 	.amode	2	; 24 bit flat addressing
                           000082    14 dpl	=	0x82
                           000083    15 dph	=	0x83
                           000084    16 dpl1	=	0x84
                           000085    17 dph1	=	0x85
                           000086    18 dps	=	0x86
                           000093    19 dpx	=	0x93
                           000095    20 dpx1	=	0x95
                           00009B    21 esp	=	0x9B
                           00009C    22 ap	=	0x9C
                           00009C    23 acc1	=	0x9C
                           0000D1    24 mcnt0	=	0xD1
                           0000D2    25 mcnt1	=	0xD2
                           0000D3    26 ma	=	0xD3
                           0000D4    27 mb	=	0xD4
                           0000D5    28 mc	=	0xD5
                           00009D    29 acon	=	0x9D
                           0000D1    30 F1	=	0xD1	; user flag
                                     31 ;--------------------------------------------------------
                                     32 ; Public variables in this module
                                     33 ;--------------------------------------------------------
                                     34 	.globl __mulint_PARM_2
                                     35 	.globl __mulint
                                     36 ;--------------------------------------------------------
                                     37 ; special function registers
                                     38 ;--------------------------------------------------------
                                     39 ;--------------------------------------------------------
                                     40 ; special function bits
                                     41 ;--------------------------------------------------------
                                     42 ;--------------------------------------------------------
                                     43 ; overlayable register banks
                                     44 ;--------------------------------------------------------
                                     45 	.area REG_BANK_0	(REL,OVR,DATA)
      000000                         46 	.ds 8
                                     47 	.area REG_BANK_3	(REL,OVR,DATA)
      000000                         48 	.ds 8
                                     49 ;--------------------------------------------------------
                                     50 ; internal ram data
                                     51 ;--------------------------------------------------------
                                     52 	.area DSEG    (DATA)
                                     53 ;--------------------------------------------------------
                                     54 ; overlayable items in internal ram 
                                     55 ;--------------------------------------------------------
                                     56 ;--------------------------------------------------------
                                     57 ; indirectly addressable internal ram data
                                     58 ;--------------------------------------------------------
                                     59 	.area ISEG    (DATA)
                                     60 ;--------------------------------------------------------
                                     61 ; absolute internal ram data
                                     62 ;--------------------------------------------------------
                                     63 	.area IABS    (ABS,DATA)
                                     64 	.area IABS    (ABS,DATA)
                                     65 ;--------------------------------------------------------
                                     66 ; bit data
                                     67 ;--------------------------------------------------------
                                     68 	.area BSEG    (BIT)
                                     69 ;--------------------------------------------------------
                                     70 ; paged external ram data
                                     71 ;--------------------------------------------------------
                                     72 	.area PSEG    (PAG,XDATA)
                                     73 ;--------------------------------------------------------
                                     74 ; external ram data
                                     75 ;--------------------------------------------------------
                                     76 	.area XSEG    (XDATA)
      000000                         77 __mulint_PARM_2:
      000000                         78 	.ds 2
      000002                         79 __mulint_a_1_1:
      000002                         80 	.ds 2
      000004                         81 __mulint_x_1_2:
      000004                         82 	.ds 4
      000008                         83 __mulint_t_1_2:
      000008                         84 	.ds 2
                                     85 ;--------------------------------------------------------
                                     86 ; absolute external ram data
                                     87 ;--------------------------------------------------------
                                     88 	.area XABS    (ABS,XDATA)
                                     89 ;--------------------------------------------------------
                                     90 ; external initialized ram data
                                     91 ;--------------------------------------------------------
                                     92 	.area XISEG   (XDATA)
                                     93 ;--------------------------------------------------------
                                     94 ; global & static initialisations
                                     95 ;--------------------------------------------------------
                                     96 	.area HOME    (CODE)
                                     97 	.area GSINIT  (CODE)
                                     98 	.area GSFINAL (CODE)
                                     99 	.area GSINIT  (CODE)
                                    100 ;--------------------------------------------------------
                                    101 ; Home
                                    102 ;--------------------------------------------------------
                                    103 	.area HOME    (CODE)
                                    104 	.area HOME    (CODE)
                                    105 ;--------------------------------------------------------
                                    106 ; code
                                    107 ;--------------------------------------------------------
                                    108 	.area CSEG    (CODE)
                                    109 ;------------------------------------------------------------
                                    110 ;Allocation info for local variables in function '_mulint'
                                    111 ;------------------------------------------------------------
                                    112 ;b                         Allocated with name '__mulint_PARM_2'
                                    113 ;a                         Allocated with name '__mulint_a_1_1'
                                    114 ;x                         Allocated with name '__mulint_x_1_2'
                                    115 ;y                         Allocated to registers r4 r5 r2 r3 
                                    116 ;t                         Allocated with name '__mulint_t_1_2'
                                    117 ;------------------------------------------------------------
                                    118 ;	_mulint.c:226: _mulint (int a, int b)
                                    119 ;	-----------------------------------------
                                    120 ;	 function _mulint
                                    121 ;	-----------------------------------------
      000000                        122 __mulint:
                           000002   123 	ar2 = 0x02
                           000003   124 	ar3 = 0x03
                           000004   125 	ar4 = 0x04
                           000005   126 	ar5 = 0x05
                           000006   127 	ar6 = 0x06
                           000007   128 	ar7 = 0x07
                           000000   129 	ar0 = 0x00
                           000001   130 	ar1 = 0x01
      000000 75 86 01         [12]  131 	mov     dps, #1
      000003 90s00r00r02      [12]  132 	mov     dptr, #__mulint_a_1_1
      000007 E5 82            [ 8]  133 	mov	a,dpl
      000009 F0               [ 8]  134 	movx	@dptr,a
      00000A A3               [12]  135 	inc	dptr
      00000B E5 83            [ 8]  136 	mov	a,dph
      00000D F0               [ 8]  137 	movx	@dptr,a
      00000E 75 86 00         [12]  138 	mov	dps,#0
                                    139 ;	_mulint.c:238: x = (union uu *)&a;
      000011 90s00r00r04      [12]  140 	mov	dptr,#__mulint_x_1_2
      000015 74r02            [ 8]  141 	mov	a,#__mulint_a_1_1
      000017 F0               [ 8]  142 	movx	@dptr,a
      000018 A3               [12]  143 	inc	dptr
      000019 74s00            [ 8]  144 	mov	a,#(__mulint_a_1_1 >> 8)
      00001B F0               [ 8]  145 	movx	@dptr,a
      00001C A3               [12]  146 	inc	dptr
      00001D 74s00            [ 8]  147 	mov	a,#(__mulint_a_1_1 >> 16)
      00001F F0               [ 8]  148 	movx	@dptr,a
      000020 A3               [12]  149 	inc	dptr
      000021 E4               [ 4]  150 	clr	a
      000022 F0               [ 8]  151 	movx	@dptr,a
                                    152 ;	_mulint.c:239: y = (union uu *)&b;
      000023 7Cr00            [ 8]  153 	mov	r4,#__mulint_PARM_2
      000025 7Ds00            [ 8]  154 	mov	r5,#(__mulint_PARM_2 >> 8)
      000027 7As00            [ 8]  155 	mov	r2,#(__mulint_PARM_2 >> 16)
      000029 7B 00            [ 8]  156 	mov	r3,#0x00
                                    157 ;	_mulint.c:243: t.t = (unsigned char)a * (unsigned char)b;
      00002B 90s00r00r02      [12]  158 	mov	dptr,#__mulint_a_1_1
      00002F E0               [ 8]  159 	movx	a,@dptr
      000030 FE               [ 4]  160 	mov	r6,a
      000031 90s00r00r00      [12]  161 	mov	dptr,#__mulint_PARM_2
      000035 E0               [ 8]  162 	movx	a,@dptr
      000036 FF               [ 4]  163 	mov	r7,a
      000037 8E F0            [ 8]  164 	mov	b,r6
      000039 EF               [ 4]  165 	mov	a,r7
      00003A A4               [20]  166 	mul	ab
      00003B FF               [ 4]  167 	mov	r7,a
      00003C AE F0            [ 8]  168 	mov	r6,b
      00003E 90s00r00r08      [12]  169 	mov	dptr,#__mulint_t_1_2
      000042 EF               [ 4]  170 	mov	a,r7
      000043 F0               [ 8]  171 	movx	@dptr,a
      000044 A3               [12]  172 	inc	dptr
      000045 EE               [ 4]  173 	mov	a,r6
      000046 F0               [ 8]  174 	movx	@dptr,a
                                    175 ;	_mulint.c:244: t.s.hi += ((unsigned char)a * y->s.hi) + (x->s.hi * (unsigned char)b);
      000047 90s00r00r09      [12]  176 	mov	dptr,#(__mulint_t_1_2 + 0x000001)
      00004B E0               [ 8]  177 	movx	a,@dptr
      00004C FE               [ 4]  178 	mov	r6,a
      00004D 90s00r00r02      [12]  179 	mov	dptr,#__mulint_a_1_1
      000051 E0               [ 8]  180 	movx	a,@dptr
      000052 FF               [ 4]  181 	mov	r7,a
      000053 74 01            [ 8]  182 	mov	a,#0x01
      000055 2C               [ 4]  183 	add	a,r4
      000056 F8               [ 4]  184 	mov	r0,a
      000057 E4               [ 4]  185 	clr	a
      000058 3D               [ 4]  186 	addc	a,r5
      000059 F9               [ 4]  187 	mov	r1,a
      00005A E4               [ 4]  188 	clr	a
      00005B 3A               [ 4]  189 	addc	a,r2
      00005C FA               [ 4]  190 	mov	r2,a
      00005D 88 82            [ 8]  191 	mov	dpl,r0
      00005F 89 83            [ 8]  192 	mov	dph,r1
      000061 8A 93            [ 8]  193 	mov	dpx,r2
      000063 8B F0            [ 8]  194 	mov	b,r3
      000065 12s00r00r00      [16]  195 	lcall	__gptrget
      000069 F8               [ 4]  196 	mov	r0,a
      00006A 8F F0            [ 8]  197 	mov	b,r7
      00006C E8               [ 4]  198 	mov	a,r0
      00006D A4               [20]  199 	mul	ab
      00006E FF               [ 4]  200 	mov	r7,a
      00006F 90s00r00r04      [12]  201 	mov	dptr,#__mulint_x_1_2
      000073 E0               [ 8]  202 	movx	a,@dptr
      000074 24 01            [ 8]  203 	add	a,#0x01
      000076 FA               [ 4]  204 	mov	r2,a
      000077 A3               [12]  205 	inc	dptr
      000078 E0               [ 8]  206 	movx	a,@dptr
      000079 34 00            [ 8]  207 	addc	a,#0x00
      00007B FB               [ 4]  208 	mov	r3,a
      00007C A3               [12]  209 	inc	dptr
      00007D E0               [ 8]  210 	movx	a,@dptr
      00007E 34 00            [ 8]  211 	addc	a,#0x00
      000080 FC               [ 4]  212 	mov	r4,a
      000081 A3               [12]  213 	inc	dptr
      000082 E0               [ 8]  214 	movx	a,@dptr
      000083 FD               [ 4]  215 	mov	r5,a
      000084 8A 82            [ 8]  216 	mov	dpl,r2
      000086 8B 83            [ 8]  217 	mov	dph,r3
      000088 8C 93            [ 8]  218 	mov	dpx,r4
      00008A 8D F0            [ 8]  219 	mov	b,r5
      00008C 12s00r00r00      [16]  220 	lcall	__gptrget
      000090 FA               [ 4]  221 	mov	r2,a
      000091 90s00r00r00      [12]  222 	mov	dptr,#__mulint_PARM_2
      000095 E0               [ 8]  223 	movx	a,@dptr
      000096 FB               [ 4]  224 	mov	r3,a
      000097 8A F0            [ 8]  225 	mov	b,r2
      000099 EB               [ 4]  226 	mov	a,r3
      00009A A4               [20]  227 	mul	ab
      00009B FA               [ 4]  228 	mov  r2,a
      00009C 2F               [ 4]  229 	add	a,r7
      00009D 2E               [ 4]  230 	add	a,r6
      00009E FE               [ 4]  231 	mov  r6,a
      00009F 90s00r00r09      [12]  232 	mov  dptr,#(__mulint_t_1_2 + 0x000001)
      0000A3 F0               [ 8]  233 	movx @dptr,a
                                    234 ;	_mulint.c:246: return t.t;
      0000A4 90s00r00r08      [12]  235 	mov	dptr,#__mulint_t_1_2
      0000A8 E0               [ 8]  236 	movx	a,@dptr
      0000A9 A3               [12]  237 	inc	dptr
      0000AA F5 84            [ 8]  238 	mov	dpl1,a
      0000AC E0               [ 8]  239 	movx	a,@dptr
      0000AD F5 85            [ 8]  240 	mov	dph1,a
      0000AF 85 84 82         [12]  241 	mov	dpl,dpl1
      0000B2 85 85 83         [12]  242 	mov	dph,dph1
      0000B5                        243 00101$:
      0000B5 22               [16]  244 	ret
                                    245 	.area CSEG    (CODE)
                                    246 	.area CONST   (CODE)
                                    247 	.area XINIT   (CODE)
                                    248 	.area CABS    (ABS,CODE)
