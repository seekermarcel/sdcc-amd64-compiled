                              1 ;--------------------------------------------------------
                              2 ; File Created by SDCC : free open source ANSI-C Compiler
                              3 ; Version 3.5.0 #9253 (Apr  4 2022) (Linux)
                              4 ; This file was generated Mon Apr  4 14:10:36 2022
                              5 ;--------------------------------------------------------
                              6 	.cs08
                              7 	.module modff
                              8 	.optsdcc -ms08
                              9 	
                             10 	.area HOME    (CODE)
                             11 	.area GSINIT0 (CODE)
                             12 	.area GSINIT  (CODE)
                             13 	.area GSFINAL (CODE)
                             14 	.area CSEG    (CODE)
                             15 	.area XINIT   (CODE)
                             16 	.area CONST   (CODE)
                             17 	.area DSEG    (PAG)
                             18 	.area OSEG    (PAG, OVR)
                             19 	.area XSEG
                             20 	.area XISEG
                             21 ;--------------------------------------------------------
                             22 ; Public variables in this module
                             23 ;--------------------------------------------------------
                             24 	.globl _modff_PARM_2
                             25 	.globl _modff_PARM_1
                             26 	.globl _modff
                             27 ;--------------------------------------------------------
                             28 ; ram data
                             29 ;--------------------------------------------------------
                             30 	.area DSEG    (PAG)
   0000                      31 _modff_sloc0_1_0:
   0000                      32 	.ds 2
   0002                      33 _modff_sloc1_1_0:
   0002                      34 	.ds 4
                             35 ;--------------------------------------------------------
                             36 ; overlayable items in ram 
                             37 ;--------------------------------------------------------
                             38 ;--------------------------------------------------------
                             39 ; absolute ram data
                             40 ;--------------------------------------------------------
                             41 	.area IABS    (ABS)
                             42 	.area IABS    (ABS)
                             43 ;--------------------------------------------------------
                             44 ; absolute external ram data
                             45 ;--------------------------------------------------------
                             46 	.area XABS    (ABS)
                             47 ;--------------------------------------------------------
                             48 ; external initialized ram data
                             49 ;--------------------------------------------------------
                             50 	.area XISEG
                             51 ;--------------------------------------------------------
                             52 ; extended address mode data
                             53 ;--------------------------------------------------------
                             54 	.area XSEG
   0000                      55 _modff_PARM_1:
   0000                      56 	.ds 4
   0004                      57 _modff_PARM_2:
   0004                      58 	.ds 2
                             59 ;--------------------------------------------------------
                             60 ; global & static initialisations
                             61 ;--------------------------------------------------------
                             62 	.area HOME    (CODE)
                             63 	.area GSINIT  (CODE)
                             64 	.area GSFINAL (CODE)
                             65 	.area GSINIT  (CODE)
                             66 ;--------------------------------------------------------
                             67 ; Home
                             68 ;--------------------------------------------------------
                             69 	.area HOME    (CODE)
                             70 	.area HOME    (CODE)
                             71 ;--------------------------------------------------------
                             72 ; code
                             73 ;--------------------------------------------------------
                             74 	.area CSEG    (CODE)
                             75 ;------------------------------------------------------------
                             76 ;Allocation info for local variables in function 'modff'
                             77 ;------------------------------------------------------------
                             78 ;sloc0                     Allocated with name '_modff_sloc0_1_0'
                             79 ;sloc1                     Allocated with name '_modff_sloc1_1_0'
                             80 ;x                         Allocated with name '_modff_PARM_1'
                             81 ;y                         Allocated with name '_modff_PARM_2'
                             82 ;------------------------------------------------------------
                             83 ;../modff.c:33: float modff(float x, float * y)
                             84 ;	-----------------------------------------
                             85 ;	 function modff
                             86 ;	-----------------------------------------
                             87 ;	Register assignment is optimal.
                             88 ;	Stack space usage: 0 bytes.
   0000                      89 _modff:
                             90 ;../modff.c:35: *y=(long)x;
   0000 32r00r04      [ 5]   91 	ldhx	_modff_PARM_2
   0003 35*00         [ 4]   92 	sthx	*_modff_sloc0_1_0
   0005 32r00r00      [ 5]   93 	ldhx	_modff_PARM_1
   0008 96r00r00      [ 5]   94 	sthx	___fs2slong_PARM_1
   000B 32r00r02      [ 5]   95 	ldhx	(_modff_PARM_1 + 2)
   000E 96r00r02      [ 5]   96 	sthx	(___fs2slong_PARM_1 + 2)
   0011 CDr00r00      [ 6]   97 	jsr	___fs2slong
   0014 C7r00r03      [ 4]   98 	sta	(___slong2fs_PARM_1 + 3)
   0017 CFr00r02      [ 4]   99 	stx	(___slong2fs_PARM_1 + 2)
   001A B6*00         [ 3]  100 	lda	*___SDCC_hc08_ret2
   001C C7r00r01      [ 4]  101 	sta	(___slong2fs_PARM_1 + 1)
   001F B6*00         [ 3]  102 	lda	*___SDCC_hc08_ret3
   0021 C7r00r00      [ 4]  103 	sta	___slong2fs_PARM_1
   0024 CDr00r00      [ 6]  104 	jsr	___slong2fs
   0027 B7*05         [ 3]  105 	sta	*(_modff_sloc1_1_0 + 3)
   0029 BF*04         [ 3]  106 	stx	*(_modff_sloc1_1_0 + 2)
   002B 4E*00*03      [ 6]  107 	mov	*___SDCC_hc08_ret2,*(_modff_sloc1_1_0 + 1)
   002E 4E*00*02      [ 6]  108 	mov	*___SDCC_hc08_ret3,*_modff_sloc1_1_0
   0031 55*00         [ 4]  109 	ldhx	*_modff_sloc0_1_0
   0033 B6*02         [ 3]  110 	lda	*_modff_sloc1_1_0
   0035 F7            [ 2]  111 	sta	,x
   0036 B6*03         [ 3]  112 	lda	*(_modff_sloc1_1_0 + 1)
   0038 E7 01         [ 3]  113 	sta	1,x
   003A B6*04         [ 3]  114 	lda	*(_modff_sloc1_1_0 + 2)
   003C E7 02         [ 3]  115 	sta	2,x
   003E B6*05         [ 3]  116 	lda	*(_modff_sloc1_1_0 + 3)
   0040 E7 03         [ 3]  117 	sta	3,x
                            118 ;../modff.c:36: return (x-*y);
   0042 32r00r00      [ 5]  119 	ldhx	_modff_PARM_1
   0045 96r00r00      [ 5]  120 	sthx	___fssub_PARM_1
   0048 32r00r02      [ 5]  121 	ldhx	(_modff_PARM_1 + 2)
   004B 96r00r02      [ 5]  122 	sthx	(___fssub_PARM_1 + 2)
   004E B6*02         [ 3]  123 	lda	*_modff_sloc1_1_0
   0050 C7r00r00      [ 4]  124 	sta	___fssub_PARM_2
   0053 B6*03         [ 3]  125 	lda	*(_modff_sloc1_1_0 + 1)
   0055 C7r00r01      [ 4]  126 	sta	(___fssub_PARM_2 + 1)
   0058 B6*04         [ 3]  127 	lda	*(_modff_sloc1_1_0 + 2)
   005A C7r00r02      [ 4]  128 	sta	(___fssub_PARM_2 + 2)
   005D B6*05         [ 3]  129 	lda	*(_modff_sloc1_1_0 + 3)
   005F C7r00r03      [ 4]  130 	sta	(___fssub_PARM_2 + 3)
   0062 CDr00r00      [ 6]  131 	jsr	___fssub
   0065 B7*05         [ 3]  132 	sta	*(_modff_sloc1_1_0 + 3)
   0067 BF*04         [ 3]  133 	stx	*(_modff_sloc1_1_0 + 2)
   0069 4E*00*03      [ 6]  134 	mov	*___SDCC_hc08_ret2,*(_modff_sloc1_1_0 + 1)
   006C 4E*00*02      [ 6]  135 	mov	*___SDCC_hc08_ret3,*_modff_sloc1_1_0
   006F 4E*02*00      [ 6]  136 	mov	*_modff_sloc1_1_0,*___SDCC_hc08_ret3
   0072 4E*03*00      [ 6]  137 	mov	*(_modff_sloc1_1_0 + 1),*___SDCC_hc08_ret2
   0075 BE*04         [ 3]  138 	ldx	*(_modff_sloc1_1_0 + 2)
   0077 B6*05         [ 3]  139 	lda	*(_modff_sloc1_1_0 + 3)
   0079 81            [ 6]  140 	rts
                            141 	.area CSEG    (CODE)
                            142 	.area CONST   (CODE)
                            143 	.area XINIT   (CODE)
                            144 	.area CABS    (ABS,CODE)
