                              1 ;--------------------------------------------------------
                              2 ; File Created by SDCC : free open source ANSI-C Compiler
                              3 ; Version 3.5.0 #9253 (Apr  4 2022) (Linux)
                              4 ; This file was generated Mon Apr  4 14:15:24 2022
                              5 ;--------------------------------------------------------
                              6 	.module floorf
                              7 	.optsdcc -mz80
                              8 	
                              9 ;--------------------------------------------------------
                             10 ; Public variables in this module
                             11 ;--------------------------------------------------------
                             12 	.globl _floorf
                             13 ;--------------------------------------------------------
                             14 ; special function registers
                             15 ;--------------------------------------------------------
                             16 ;--------------------------------------------------------
                             17 ; ram data
                             18 ;--------------------------------------------------------
                             19 	.area _DATA
                             20 ;--------------------------------------------------------
                             21 ; ram data
                             22 ;--------------------------------------------------------
                             23 	.area _INITIALIZED
                             24 ;--------------------------------------------------------
                             25 ; absolute external ram data
                             26 ;--------------------------------------------------------
                             27 	.area _DABS (ABS)
                             28 ;--------------------------------------------------------
                             29 ; global & static initialisations
                             30 ;--------------------------------------------------------
                             31 	.area _HOME
                             32 	.area _GSINIT
                             33 	.area _GSFINAL
                             34 	.area _GSINIT
                             35 ;--------------------------------------------------------
                             36 ; Home
                             37 ;--------------------------------------------------------
                             38 	.area _HOME
                             39 	.area _HOME
                             40 ;--------------------------------------------------------
                             41 ; code
                             42 ;--------------------------------------------------------
                             43 	.area _CODE
                             44 ;../floorf.c:33: float floorf (float x) _FLOAT_FUNC_REENTRANT
                             45 ;	---------------------------------
                             46 ; Function floorf
                             47 ; ---------------------------------
   0000                      48 _floorf::
   0000 DD E5         [15]   49 	push	ix
   0002 DD 21 00 00   [14]   50 	ld	ix,#0
   0006 DD 39         [15]   51 	add	ix,sp
   0008 21 F7 FF      [10]   52 	ld	hl,#-9
   000B 39            [11]   53 	add	hl,sp
   000C F9            [ 6]   54 	ld	sp,hl
                             55 ;../floorf.c:36: r=x;
   000D DD 6E 06      [19]   56 	ld	l,6 (ix)
   0010 DD 66 07      [19]   57 	ld	h,7 (ix)
   0013 E5            [11]   58 	push	hl
   0014 DD 6E 04      [19]   59 	ld	l,4 (ix)
   0017 DD 66 05      [19]   60 	ld	h,5 (ix)
   001A E5            [11]   61 	push	hl
   001B CDr00r00      [17]   62 	call	___fs2slong
   001E F1            [10]   63 	pop	af
   001F F1            [10]   64 	pop	af
   0020 DD 75 F7      [19]   65 	ld	-9 (ix),l
   0023 DD 74 F8      [19]   66 	ld	-8 (ix),h
   0026 DD 73 F9      [19]   67 	ld	-7 (ix),e
   0029 DD 72 FA      [19]   68 	ld	-6 (ix),d
                             69 ;../floorf.c:38: return (r+((r>x)?-1:0));
   002C DD 6E F9      [19]   70 	ld	l,-7 (ix)
   002F DD 66 FA      [19]   71 	ld	h,-6 (ix)
   0032 E5            [11]   72 	push	hl
   0033 DD 6E F7      [19]   73 	ld	l,-9 (ix)
   0036 DD 66 F8      [19]   74 	ld	h,-8 (ix)
   0039 E5            [11]   75 	push	hl
   003A CDr00r00      [17]   76 	call	___slong2fs
   003D F1            [10]   77 	pop	af
   003E F1            [10]   78 	pop	af
   003F DD 72 FE      [19]   79 	ld	-2 (ix),d
   0042 DD 73 FD      [19]   80 	ld	-3 (ix),e
   0045 DD 74 FC      [19]   81 	ld	-4 (ix),h
   0048 DD 75 FB      [19]   82 	ld	-5 (ix),l
                             83 ;../floorf.c:37: if (r<=0)
   004B AF            [ 4]   84 	xor	a, a
   004C DD BE F7      [19]   85 	cp	a, -9 (ix)
   004F DD 9E F8      [19]   86 	sbc	a, -8 (ix)
   0052 3E 00         [ 7]   87 	ld	a,#0x00
   0054 DD 9E F9      [19]   88 	sbc	a, -7 (ix)
   0057 3E 00         [ 7]   89 	ld	a,#0x00
   0059 DD 9E FA      [19]   90 	sbc	a, -6 (ix)
   005C E2r61r00      [10]   91 	jp	PO, 00116$
   005F EE 80         [ 7]   92 	xor	a, #0x80
   0061                      93 00116$:
   0061 FArC0r00      [10]   94 	jp	M,00102$
                             95 ;../floorf.c:38: return (r+((r>x)?-1:0));
   0064 DD 6E 06      [19]   96 	ld	l,6 (ix)
   0067 DD 66 07      [19]   97 	ld	h,7 (ix)
   006A E5            [11]   98 	push	hl
   006B DD 6E 04      [19]   99 	ld	l,4 (ix)
   006E DD 66 05      [19]  100 	ld	h,5 (ix)
   0071 E5            [11]  101 	push	hl
   0072 DD 6E FD      [19]  102 	ld	l,-3 (ix)
   0075 DD 66 FE      [19]  103 	ld	h,-2 (ix)
   0078 E5            [11]  104 	push	hl
   0079 DD 6E FB      [19]  105 	ld	l,-5 (ix)
   007C DD 66 FC      [19]  106 	ld	h,-4 (ix)
   007F E5            [11]  107 	push	hl
   0080 CDr00r00      [17]  108 	call	___fsgt
   0083 F1            [10]  109 	pop	af
   0084 F1            [10]  110 	pop	af
   0085 F1            [10]  111 	pop	af
   0086 F1            [10]  112 	pop	af
   0087 DD 75 FF      [19]  113 	ld	-1 (ix), l
   008A 7D            [ 4]  114 	ld	a, l
   008B B7            [ 4]  115 	or	a, a
   008C 28 06         [12]  116 	jr	Z,00106$
   008E DD 36 FF FF   [19]  117 	ld	-1 (ix),#0xFF
   0092 18 04         [12]  118 	jr	00107$
   0094                     119 00106$:
   0094 DD 36 FF 00   [19]  120 	ld	-1 (ix),#0x00
   0098                     121 00107$:
   0098 DD 6E FF      [19]  122 	ld	l,-1 (ix)
   009B DD 7E FF      [19]  123 	ld	a,-1 (ix)
   009E 17            [ 4]  124 	rla
   009F 9F            [ 4]  125 	sbc	a, a
   00A0 67            [ 4]  126 	ld	h,a
   00A1 5F            [ 4]  127 	ld	e,a
   00A2 57            [ 4]  128 	ld	d,a
   00A3 DD 7E F7      [19]  129 	ld	a,-9 (ix)
   00A6 85            [ 4]  130 	add	a, l
   00A7 6F            [ 4]  131 	ld	l,a
   00A8 DD 7E F8      [19]  132 	ld	a,-8 (ix)
   00AB 8C            [ 4]  133 	adc	a, h
   00AC 67            [ 4]  134 	ld	h,a
   00AD DD 7E F9      [19]  135 	ld	a,-7 (ix)
   00B0 8B            [ 4]  136 	adc	a, e
   00B1 5F            [ 4]  137 	ld	e,a
   00B2 DD 7E FA      [19]  138 	ld	a,-6 (ix)
   00B5 8A            [ 4]  139 	adc	a, d
   00B6 57            [ 4]  140 	ld	d,a
   00B7 D5            [11]  141 	push	de
   00B8 E5            [11]  142 	push	hl
   00B9 CDr00r00      [17]  143 	call	___slong2fs
   00BC F1            [10]  144 	pop	af
   00BD F1            [10]  145 	pop	af
   00BE 18 0C         [12]  146 	jr	00104$
   00C0                     147 00102$:
                            148 ;../floorf.c:40: return r;
   00C0 DD 6E FB      [19]  149 	ld	l,-5 (ix)
   00C3 DD 66 FC      [19]  150 	ld	h,-4 (ix)
   00C6 DD 5E FD      [19]  151 	ld	e,-3 (ix)
   00C9 DD 56 FE      [19]  152 	ld	d,-2 (ix)
   00CC                     153 00104$:
   00CC DD F9         [10]  154 	ld	sp, ix
   00CE DD E1         [14]  155 	pop	ix
   00D0 C9            [10]  156 	ret
                            157 	.area _CODE
                            158 	.area _INITIALIZER
                            159 	.area _CABS (ABS)
