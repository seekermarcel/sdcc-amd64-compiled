                              1 ;--------------------------------------------------------
                              2 ; File Created by SDCC : free open source ANSI-C Compiler
                              3 ; Version 3.5.0 #9253 (Apr  4 2022) (Linux)
                              4 ; This file was generated Mon Apr  4 14:16:18 2022
                              5 ;--------------------------------------------------------
                              6 	.r3k
                              7 	.module rand
                              8 	.optsdcc -mr3ka
                              9 	
                             10 ;--------------------------------------------------------
                             11 ; Public variables in this module
                             12 ;--------------------------------------------------------
                             13 	.globl _rand
                             14 	.globl _srand
                             15 ;--------------------------------------------------------
                             16 ; special function registers
                             17 ;--------------------------------------------------------
                             18 ;--------------------------------------------------------
                             19 ; ram data
                             20 ;--------------------------------------------------------
                             21 	.area _DATA
                             22 ;--------------------------------------------------------
                             23 ; ram data
                             24 ;--------------------------------------------------------
                             25 	.area _INITIALIZED
   0000                      26 _next:
   0000                      27 	.ds 4
                             28 ;--------------------------------------------------------
                             29 ; absolute external ram data
                             30 ;--------------------------------------------------------
                             31 	.area _DABS (ABS)
                             32 ;--------------------------------------------------------
                             33 ; global & static initialisations
                             34 ;--------------------------------------------------------
                             35 	.area _HOME
                             36 	.area _GSINIT
                             37 	.area _GSFINAL
                             38 	.area _GSINIT
                             39 ;--------------------------------------------------------
                             40 ; Home
                             41 ;--------------------------------------------------------
                             42 	.area _HOME
                             43 	.area _HOME
                             44 ;--------------------------------------------------------
                             45 ; code
                             46 ;--------------------------------------------------------
                             47 	.area _CODE
                             48 ;../rand.c:33: int rand(void)
                             49 ;	---------------------------------
                             50 ; Function rand
                             51 ; ---------------------------------
   0000                      52 _rand::
                             53 ;../rand.c:35: next = next * 1103515245UL + 12345;
   0000 2Ar02r00             54 	ld	hl,(_next + 2)
   0003 E5                   55 	push	hl
   0004 2Ar00r00             56 	ld	hl,(_next)
   0007 E5                   57 	push	hl
   0008 21 C6 41             58 	ld	hl,#0x41C6
   000B E5                   59 	push	hl
   000C 21 6D 4E             60 	ld	hl,#0x4E6D
   000F E5                   61 	push	hl
   0010 CDr00r00             62 	call	__mullong
   0013 27 08                63 	add	sp, #8
   0015 4D                   64 	ld	c,l
   0016 44                   65 	ld	b,h
   0017 79                   66 	ld	a,c
   0018 21r00r00             67 	ld	hl,#_next
   001B C6 39                68 	add	a, #0x39
   001D 77                   69 	ld	(hl),a
   001E 78                   70 	ld	a,b
   001F CE 30                71 	adc	a, #0x30
   0021 23                   72 	inc	hl
   0022 77                   73 	ld	(hl),a
   0023 7B                   74 	ld	a,e
   0024 CE 00                75 	adc	a, #0x00
   0026 23                   76 	inc	hl
   0027 77                   77 	ld	(hl),a
   0028 7A                   78 	ld	a,d
   0029 CE 00                79 	adc	a, #0x00
   002B 23                   80 	inc	hl
   002C 77                   81 	ld	(hl),a
                             82 ;../rand.c:36: return (unsigned int)(next/65536) % (RAND_MAX + 1U);
   002D F5                   83 	push	af
   002E FD 21r00r00          84 	ld	iy,#_next
   0032 FD 6E 00             85 	ld	l,0 (iy)
   0035 FD 21r00r00          86 	ld	iy,#_next
   0039 FD 66 01             87 	ld	h,1 (iy)
   003C FD 21r00r00          88 	ld	iy,#_next
   0040 FD 5E 02             89 	ld	e,2 (iy)
   0043 FD 21r00r00          90 	ld	iy,#_next
   0047 FD 56 03             91 	ld	d,3 (iy)
   004A F1                   92 	pop	af
   004B 06 10                93 	ld	b,#0x10
   004D                      94 00103$:
   004D BF                   95 	cp	a, a
   004E FB                   96 	rr	de
   004F FC                   97 	rr	hl
   0050 10 FB                98 	djnz	00103$
   0052 CB BC                99 	res	7, h
   0054 C9                  100 	ret
                            101 ;../rand.c:39: void srand(unsigned int seed)
                            102 ;	---------------------------------
                            103 ; Function srand
                            104 ; ---------------------------------
   0055                     105 _srand::
                            106 ;../rand.c:41: next = seed;
   0055 21 02 00            107 	ld	hl, #2+0
   0058 39                  108 	add	hl, sp
   0059 7E                  109 	ld	a, (hl)
   005A 32r00r00            110 	ld	(#_next + 0),a
   005D 21 03 00            111 	ld	hl, #2+1
   0060 39                  112 	add	hl, sp
   0061 7E                  113 	ld	a, (hl)
   0062 32r01r00            114 	ld	(#_next + 1),a
   0065 21r02r00            115 	ld	hl,#_next + 2
   0068 36 00               116 	ld	(hl), #0x00
   006A 21r03r00            117 	ld	hl,#_next + 3
   006D 36 00               118 	ld	(hl), #0x00
   006F C9                  119 	ret
                            120 	.area _CODE
                            121 	.area _INITIALIZER
   0000                     122 __xinit__next:
   0000 01 00 00 00         123 	.byte #0x01,#0x00,#0x00,#0x00	; 1
                            124 	.area _CABS (ABS)
