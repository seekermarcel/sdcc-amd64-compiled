                              1 ;--------------------------------------------------------
                              2 ; File Created by SDCC : free open source ANSI-C Compiler
                              3 ; Version 3.5.0 #9253 (Apr  4 2022) (Linux)
                              4 ; This file was generated Mon Apr  4 14:10:39 2022
                              5 ;--------------------------------------------------------
                              6 	.cs08
                              7 	.module assert
                              8 	.optsdcc -ms08
                              9 	
                             10 	.area HOME    (CODE)
                             11 	.area GSINIT0 (CODE)
                             12 	.area GSINIT  (CODE)
                             13 	.area GSFINAL (CODE)
                             14 	.area CSEG    (CODE)
                             15 	.area XINIT   (CODE)
                             16 	.area CONST   (CODE)
                             17 	.area DSEG    (PAG)
                             18 	.area OSEG    (PAG, OVR)
                             19 	.area XSEG
                             20 	.area XISEG
                             21 ;--------------------------------------------------------
                             22 ; Public variables in this module
                             23 ;--------------------------------------------------------
                             24 	.globl __assert
                             25 	.globl _printf
                             26 	.globl __assert_PARM_3
                             27 	.globl __assert_PARM_2
                             28 ;--------------------------------------------------------
                             29 ; ram data
                             30 ;--------------------------------------------------------
                             31 	.area DSEG    (PAG)
                             32 ;--------------------------------------------------------
                             33 ; overlayable items in ram 
                             34 ;--------------------------------------------------------
                             35 ;--------------------------------------------------------
                             36 ; absolute ram data
                             37 ;--------------------------------------------------------
                             38 	.area IABS    (ABS)
                             39 	.area IABS    (ABS)
                             40 ;--------------------------------------------------------
                             41 ; absolute external ram data
                             42 ;--------------------------------------------------------
                             43 	.area XABS    (ABS)
                             44 ;--------------------------------------------------------
                             45 ; external initialized ram data
                             46 ;--------------------------------------------------------
                             47 	.area XISEG
                             48 ;--------------------------------------------------------
                             49 ; extended address mode data
                             50 ;--------------------------------------------------------
                             51 	.area XSEG
   0000                      52 __assert_PARM_2:
   0000                      53 	.ds 2
   0002                      54 __assert_PARM_3:
   0002                      55 	.ds 2
                             56 ;--------------------------------------------------------
                             57 ; global & static initialisations
                             58 ;--------------------------------------------------------
                             59 	.area HOME    (CODE)
                             60 	.area GSINIT  (CODE)
                             61 	.area GSFINAL (CODE)
                             62 	.area GSINIT  (CODE)
                             63 ;--------------------------------------------------------
                             64 ; Home
                             65 ;--------------------------------------------------------
                             66 	.area HOME    (CODE)
                             67 	.area HOME    (CODE)
                             68 ;--------------------------------------------------------
                             69 ; code
                             70 ;--------------------------------------------------------
                             71 	.area CSEG    (CODE)
                             72 ;------------------------------------------------------------
                             73 ;Allocation info for local variables in function '_assert'
                             74 ;------------------------------------------------------------
                             75 ;filename                  Allocated with name '__assert_PARM_2'
                             76 ;linenumber                Allocated with name '__assert_PARM_3'
                             77 ;expr                      Allocated to registers x h 
                             78 ;------------------------------------------------------------
                             79 ;../assert.c:32: void _assert(char *expr, const char *filename, unsigned int linenumber)
                             80 ;	-----------------------------------------
                             81 ;	 function _assert
                             82 ;	-----------------------------------------
                             83 ;	Register assignment is optimal.
                             84 ;	Stack space usage: 0 bytes.
   0000                      85 __assert:
   0000 89            [ 2]   86 	pshx
   0001 97            [ 1]   87 	tax
   0002 8A            [ 3]   88 	pulh
                             89 ;../assert.c:34: printf("Assert(%s) failed at line %u in file %s.\n",
   0003 C6r00r01      [ 4]   90 	lda	(__assert_PARM_2 + 1)
   0006 87            [ 2]   91 	psha
   0007 C6r00r00      [ 4]   92 	lda	__assert_PARM_2
   000A 87            [ 2]   93 	psha
   000B C6r00r03      [ 4]   94 	lda	(__assert_PARM_3 + 1)
   000E 87            [ 2]   95 	psha
   000F C6r00r02      [ 4]   96 	lda	__assert_PARM_3
   0012 87            [ 2]   97 	psha
   0013 89            [ 2]   98 	pshx
   0014 8B            [ 2]   99 	pshh
   0015 A6r00         [ 2]  100 	lda	#___str_0
   0017 87            [ 2]  101 	psha
   0018 A6s00         [ 2]  102 	lda	#>___str_0
   001A 87            [ 2]  103 	psha
   001B CDr00r00      [ 6]  104 	jsr	_printf
   001E A7 08         [ 2]  105 	ais	#8
                            106 ;../assert.c:36: while(1);
   0020                     107 00102$:
   0020 20 FE         [ 3]  108 	bra	00102$
   0022 81            [ 6]  109 	rts
                            110 	.area CSEG    (CODE)
                            111 	.area CONST   (CODE)
   0000                     112 ___str_0:
   0000 41 73 73 65 72 74   113 	.ascii "Assert(%s) failed at line %u in file %s."
        28 25 73 29 20 66
        61 69 6C 65 64 20
        61 74 20 6C 69 6E
        65 20 25 75 20 69
        6E 20 66 69 6C 65
        20 25 73 2E
   0028 0A                  114 	.db 0x0A
   0029 00                  115 	.db 0x00
                            116 	.area XINIT   (CODE)
                            117 	.area CABS    (ABS,CODE)
