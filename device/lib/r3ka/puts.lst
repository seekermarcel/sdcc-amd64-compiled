                              1 ;--------------------------------------------------------
                              2 ; File Created by SDCC : free open source ANSI-C Compiler
                              3 ; Version 3.5.0 #9253 (Apr  4 2022) (Linux)
                              4 ; This file was generated Mon Apr  4 14:16:24 2022
                              5 ;--------------------------------------------------------
                              6 	.r3k
                              7 	.module puts
                              8 	.optsdcc -mr3ka
                              9 	
                             10 ;--------------------------------------------------------
                             11 ; Public variables in this module
                             12 ;--------------------------------------------------------
                             13 	.globl _puts
                             14 	.globl _putchar
                             15 ;--------------------------------------------------------
                             16 ; special function registers
                             17 ;--------------------------------------------------------
                             18 ;--------------------------------------------------------
                             19 ; ram data
                             20 ;--------------------------------------------------------
                             21 	.area _DATA
                             22 ;--------------------------------------------------------
                             23 ; ram data
                             24 ;--------------------------------------------------------
                             25 	.area _INITIALIZED
                             26 ;--------------------------------------------------------
                             27 ; absolute external ram data
                             28 ;--------------------------------------------------------
                             29 	.area _DABS (ABS)
                             30 ;--------------------------------------------------------
                             31 ; global & static initialisations
                             32 ;--------------------------------------------------------
                             33 	.area _HOME
                             34 	.area _GSINIT
                             35 	.area _GSFINAL
                             36 	.area _GSINIT
                             37 ;--------------------------------------------------------
                             38 ; Home
                             39 ;--------------------------------------------------------
                             40 	.area _HOME
                             41 	.area _HOME
                             42 ;--------------------------------------------------------
                             43 ; code
                             44 ;--------------------------------------------------------
                             45 	.area _CODE
                             46 ;../puts.c:31: int puts (char *s)
                             47 ;	---------------------------------
                             48 ; Function puts
                             49 ; ---------------------------------
   0000                      50 _puts::
   0000 DD E5                51 	push	ix
                             52 ;../puts.c:34: while (*s){
   0002 C4 04                53 	ld	hl, 4 (sp)
   0004 01 00 00             54 	ld	bc,#0x0000
   0007                      55 00101$:
   0007 56                   56 	ld	d,(hl)
                             57 ;../puts.c:36: i++;
   0008 03                   58 	inc	bc
                             59 ;../puts.c:34: while (*s){
   0009 7A                   60 	ld	a,d
   000A B7                   61 	or	a, a
   000B 28 0D                62 	jr	Z,00103$
                             63 ;../puts.c:35: putchar(*s++);
   000D 23                   64 	inc	hl
   000E E5                   65 	push	hl
   000F C5                   66 	push	bc
   0010 D5                   67 	push	de
   0011 33                   68 	inc	sp
   0012 CDr00r00             69 	call	_putchar
   0015 33                   70 	inc	sp
   0016 C1                   71 	pop	bc
   0017 E1                   72 	pop	hl
                             73 ;../puts.c:36: i++;
   0018 18 ED                74 	jr	00101$
   001A                      75 00103$:
                             76 ;../puts.c:38: putchar('\n');
   001A C5                   77 	push	bc
   001B 3E 0A                78 	ld	a,#0x0A
   001D F5                   79 	push	af
   001E 33                   80 	inc	sp
   001F CDr00r00             81 	call	_putchar
   0022 33                   82 	inc	sp
                             83 ;../puts.c:39: return i+1;
   0023 E1                   84 	pop	hl
   0024 DD E1                85 	pop	ix
   0026 C9                   86 	ret
                             87 	.area _CODE
                             88 	.area _INITIALIZER
                             89 	.area _CABS (ABS)
