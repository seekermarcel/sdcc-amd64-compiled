                                      1 ;--------------------------------------------------------
                                      2 ; File Created by SDCC : free open source ANSI-C Compiler
                                      3 ; Version 3.5.0 #9253 (Apr  4 2022) (Linux)
                                      4 ; This file was generated Mon Apr  4 14:10:31 2022
                                      5 ;--------------------------------------------------------
                                      6 	.module _memmove
                                      7 	.optsdcc -mds400 --model-flat24
                                      8 	
                                      9 ;--------------------------------------------------------
                                     10 ; CPU specific extensions
                                     11 ;--------------------------------------------------------
                                     12 	.DS80C390
                                     13 	.amode	2	; 24 bit flat addressing
                           000082    14 dpl	=	0x82
                           000083    15 dph	=	0x83
                           000084    16 dpl1	=	0x84
                           000085    17 dph1	=	0x85
                           000086    18 dps	=	0x86
                           000093    19 dpx	=	0x93
                           000095    20 dpx1	=	0x95
                           00009B    21 esp	=	0x9B
                           00009C    22 ap	=	0x9C
                           00009C    23 acc1	=	0x9C
                           0000D1    24 mcnt0	=	0xD1
                           0000D2    25 mcnt1	=	0xD2
                           0000D3    26 ma	=	0xD3
                           0000D4    27 mb	=	0xD4
                           0000D5    28 mc	=	0xD5
                           00009D    29 acon	=	0x9D
                           0000D1    30 F1	=	0xD1	; user flag
                                     31 ;--------------------------------------------------------
                                     32 ; Public variables in this module
                                     33 ;--------------------------------------------------------
                                     34 	.globl _memmove_PARM_3
                                     35 	.globl _memmove_PARM_2
                                     36 	.globl _memmove
                                     37 ;--------------------------------------------------------
                                     38 ; special function registers
                                     39 ;--------------------------------------------------------
                                     40 ;--------------------------------------------------------
                                     41 ; special function bits
                                     42 ;--------------------------------------------------------
                                     43 ;--------------------------------------------------------
                                     44 ; overlayable register banks
                                     45 ;--------------------------------------------------------
                                     46 	.area REG_BANK_0	(REL,OVR,DATA)
      000000                         47 	.ds 8
                                     48 	.area REG_BANK_3	(REL,OVR,DATA)
      000000                         49 	.ds 8
                                     50 ;--------------------------------------------------------
                                     51 ; internal ram data
                                     52 ;--------------------------------------------------------
                                     53 	.area DSEG    (DATA)
                                     54 ;--------------------------------------------------------
                                     55 ; overlayable items in internal ram 
                                     56 ;--------------------------------------------------------
                                     57 ;--------------------------------------------------------
                                     58 ; indirectly addressable internal ram data
                                     59 ;--------------------------------------------------------
                                     60 	.area ISEG    (DATA)
                                     61 ;--------------------------------------------------------
                                     62 ; absolute internal ram data
                                     63 ;--------------------------------------------------------
                                     64 	.area IABS    (ABS,DATA)
                                     65 	.area IABS    (ABS,DATA)
                                     66 ;--------------------------------------------------------
                                     67 ; bit data
                                     68 ;--------------------------------------------------------
                                     69 	.area BSEG    (BIT)
                                     70 ;--------------------------------------------------------
                                     71 ; paged external ram data
                                     72 ;--------------------------------------------------------
                                     73 	.area PSEG    (PAG,XDATA)
                                     74 ;--------------------------------------------------------
                                     75 ; external ram data
                                     76 ;--------------------------------------------------------
                                     77 	.area XSEG    (XDATA)
      000000                         78 _memmove_PARM_2:
      000000                         79 	.ds 4
      000004                         80 _memmove_PARM_3:
      000004                         81 	.ds 2
      000006                         82 _memmove_dst_1_21:
      000006                         83 	.ds 4
      00000A                         84 _memmove_ret_1_22:
      00000A                         85 	.ds 4
      00000E                         86 _memmove_d_1_22:
      00000E                         87 	.ds 4
      000012                         88 _memmove_sloc0_1_0:
      000012                         89 	.ds 2
      000014                         90 _memmove_sloc1_1_0:
      000014                         91 	.ds 4
      000018                         92 _memmove_sloc2_1_0:
      000018                         93 	.ds 4
                                     94 ;--------------------------------------------------------
                                     95 ; absolute external ram data
                                     96 ;--------------------------------------------------------
                                     97 	.area XABS    (ABS,XDATA)
                                     98 ;--------------------------------------------------------
                                     99 ; external initialized ram data
                                    100 ;--------------------------------------------------------
                                    101 	.area XISEG   (XDATA)
                                    102 ;--------------------------------------------------------
                                    103 ; global & static initialisations
                                    104 ;--------------------------------------------------------
                                    105 	.area HOME    (CODE)
                                    106 	.area GSINIT  (CODE)
                                    107 	.area GSFINAL (CODE)
                                    108 	.area GSINIT  (CODE)
                                    109 ;--------------------------------------------------------
                                    110 ; Home
                                    111 ;--------------------------------------------------------
                                    112 	.area HOME    (CODE)
                                    113 	.area HOME    (CODE)
                                    114 ;--------------------------------------------------------
                                    115 ; code
                                    116 ;--------------------------------------------------------
                                    117 	.area CSEG    (CODE)
                                    118 ;------------------------------------------------------------
                                    119 ;Allocation info for local variables in function 'memmove'
                                    120 ;------------------------------------------------------------
                                    121 ;src                       Allocated with name '_memmove_PARM_2'
                                    122 ;acount                    Allocated with name '_memmove_PARM_3'
                                    123 ;dst                       Allocated with name '_memmove_dst_1_21'
                                    124 ;ret                       Allocated with name '_memmove_ret_1_22'
                                    125 ;d                         Allocated with name '_memmove_d_1_22'
                                    126 ;s                         Allocated to registers r6 r7 r0 r1 
                                    127 ;sloc0                     Allocated with name '_memmove_sloc0_1_0'
                                    128 ;sloc1                     Allocated with name '_memmove_sloc1_1_0'
                                    129 ;sloc2                     Allocated with name '_memmove_sloc2_1_0'
                                    130 ;------------------------------------------------------------
                                    131 ;	_memmove.c:40: void * memmove (void * dst, const void * src, size_t acount)
                                    132 ;	-----------------------------------------
                                    133 ;	 function memmove
                                    134 ;	-----------------------------------------
      000000                        135 _memmove:
                           000002   136 	ar2 = 0x02
                           000003   137 	ar3 = 0x03
                           000004   138 	ar4 = 0x04
                           000005   139 	ar5 = 0x05
                           000006   140 	ar6 = 0x06
                           000007   141 	ar7 = 0x07
                           000000   142 	ar0 = 0x00
                           000001   143 	ar1 = 0x01
      000000 75 86 01         [12]  144 	mov     dps, #1
      000003 90s00r00r06      [12]  145 	mov     dptr, #_memmove_dst_1_21
      000007 E5 82            [ 8]  146 	mov	a,dpl
      000009 F0               [ 8]  147 	movx	@dptr,a
      00000A A3               [12]  148 	inc	dptr
      00000B E5 83            [ 8]  149 	mov	a,dph
      00000D F0               [ 8]  150 	movx	@dptr,a
      00000E A3               [12]  151 	inc	dptr
      00000F E5 93            [ 8]  152 	mov	a,dpx
      000011 F0               [ 8]  153 	movx	@dptr,a
      000012 A3               [12]  154 	inc	dptr
      000013 E5 F0            [ 8]  155 	mov	a,b
      000015 F0               [ 8]  156 	movx	@dptr,a
      000016 75 86 00         [12]  157 	mov	dps,#0
                                    158 ;	_memmove.c:42: void * ret = dst;
      000019 90s00r00r06      [12]  159 	mov	dptr,#_memmove_dst_1_21
                                    160 ;	genAssign: resultIsFar = TRUE
      00001D 75 86 21         [12]  161 	mov	dps,#0x21
      000020 90s00r00r0A      [12]  162 	mov	dptr,#_memmove_ret_1_22
      000024 E0               [ 8]  163 	movx	a,@dptr
      000025 F0               [ 8]  164 	movx	@dptr,a
      000026 A3               [12]  165 	inc	dptr
      000027 A3               [12]  166 	inc	dptr
      000028 E0               [ 8]  167 	movx	a,@dptr
      000029 F0               [ 8]  168 	movx	@dptr,a
      00002A A3               [12]  169 	inc	dptr
      00002B A3               [12]  170 	inc	dptr
      00002C E0               [ 8]  171 	movx	a,@dptr
      00002D F0               [ 8]  172 	movx	@dptr,a
      00002E A3               [12]  173 	inc	dptr
      00002F A3               [12]  174 	inc	dptr
      000030 E0               [ 8]  175 	movx	a,@dptr
      000031 F0               [ 8]  176 	movx	@dptr,a
      000032 75 86 00         [12]  177 	mov	dps,#0
                                    178 ;	_memmove.c:46: if ((uintptr_t)src < (uintptr_t)dst) {
      000035 90s00r00r00      [12]  179 	mov	dptr,#_memmove_PARM_2
                                    180 ;	genAssign: resultIsFar = FALSE
      000039 E0               [ 8]  181 	movx	a,@dptr
      00003A FA               [ 4]  182 	mov	r2,a
      00003B A3               [12]  183 	inc	dptr
      00003C E0               [ 8]  184 	movx	a,@dptr
      00003D FB               [ 4]  185 	mov	r3,a
      00003E A3               [12]  186 	inc	dptr
      00003F E0               [ 8]  187 	movx	a,@dptr
      000040 FC               [ 4]  188 	mov	r4,a
      000041 A3               [12]  189 	inc	dptr
      000042 E0               [ 8]  190 	movx	a,@dptr
      000043 FD               [ 4]  191 	mov	r5,a
      000044 90s00r00r12      [12]  192 	mov	dptr,#_memmove_sloc0_1_0
      000048 EA               [ 4]  193 	mov	a,r2
      000049 F0               [ 8]  194 	movx	@dptr,a
      00004A A3               [12]  195 	inc	dptr
      00004B EB               [ 4]  196 	mov	a,r3
      00004C F0               [ 8]  197 	movx	@dptr,a
      00004D 90s00r00r06      [12]  198 	mov	dptr,#_memmove_dst_1_21
                                    199 ;	genAssign: resultIsFar = FALSE
      000051 E0               [ 8]  200 	movx	a,@dptr
      000052 F8               [ 4]  201 	mov	r0,a
      000053 A3               [12]  202 	inc	dptr
      000054 E0               [ 8]  203 	movx	a,@dptr
      000055 F9               [ 4]  204 	mov	r1,a
      000056 A3               [12]  205 	inc	dptr
      000057 E0               [ 8]  206 	movx	a,@dptr
      000058 FE               [ 4]  207 	mov	r6,a
      000059 A3               [12]  208 	inc	dptr
      00005A E0               [ 8]  209 	movx	a,@dptr
      00005B FF               [ 4]  210 	mov	r7,a
      00005C 90s00r00r12      [12]  211 	mov	dptr,#_memmove_sloc0_1_0
      000060 C3               [ 4]  212 	clr	c
      000061 E0               [ 8]  213 	movx	a,@dptr
      000062 98               [ 4]  214 	subb	a,r0
      000063 A3               [12]  215 	inc	dptr
      000064 E0               [ 8]  216 	movx	a,@dptr
      000065 99               [ 4]  217 	subb	a,r1
      000066 40 04            [12]  218 	jc	00129$
      000068 02s00r01r43      [16]  219 	ljmp	00108$
      00006C                        220 00129$:
                                    221 ;	_memmove.c:50: d = ((char *)dst)+acount-1;
      00006C 90s00r00r06      [12]  222 	mov	dptr,#_memmove_dst_1_21
                                    223 ;	genAssign: resultIsFar = FALSE
      000070 E0               [ 8]  224 	movx	a,@dptr
      000071 FE               [ 4]  225 	mov	r6,a
      000072 A3               [12]  226 	inc	dptr
      000073 E0               [ 8]  227 	movx	a,@dptr
      000074 FF               [ 4]  228 	mov	r7,a
      000075 A3               [12]  229 	inc	dptr
      000076 E0               [ 8]  230 	movx	a,@dptr
      000077 F8               [ 4]  231 	mov	r0,a
      000078 A3               [12]  232 	inc	dptr
      000079 E0               [ 8]  233 	movx	a,@dptr
      00007A F9               [ 4]  234 	mov	r1,a
      00007B 90s00r00r04      [12]  235 	mov	dptr,#_memmove_PARM_3
      00007F E0               [ 8]  236 	movx	a,@dptr
      000080 2E               [ 4]  237 	add	a,r6
      000081 FE               [ 4]  238 	mov	r6,a
      000082 A3               [12]  239 	inc	dptr
      000083 E0               [ 8]  240 	movx	a,@dptr
      000084 3F               [ 4]  241 	addc	a,r7
      000085 FF               [ 4]  242 	mov	r7,a
      000086 E4               [ 4]  243 	clr	a
      000087 38               [ 4]  244 	addc	a,r0
      000088 F8               [ 4]  245 	mov	r0,a
      000089 1E               [ 4]  246 	dec	r6
      00008A BE FF 05         [16]  247 	cjne	r6,#0xFF,00130$
      00008D 1F               [ 4]  248 	dec	r7
      00008E BF FF 01         [16]  249 	cjne	r7,#0xFF,00130$
      000091 18               [ 4]  250 	dec	r0
      000092                        251 00130$:
                                    252 ;	genAssign: resultIsFar = TRUE
      000092 90s00r00r0E      [12]  253 	mov	dptr,#_memmove_d_1_22
      000096 EE               [ 4]  254 	mov	a,r6
      000097 F0               [ 8]  255 	movx	@dptr,a
      000098 A3               [12]  256 	inc	dptr
      000099 EF               [ 4]  257 	mov	a,r7
      00009A F0               [ 8]  258 	movx	@dptr,a
      00009B A3               [12]  259 	inc	dptr
      00009C E8               [ 4]  260 	mov	a,r0
      00009D F0               [ 8]  261 	movx	@dptr,a
      00009E A3               [12]  262 	inc	dptr
      00009F E9               [ 4]  263 	mov	a,r1
      0000A0 F0               [ 8]  264 	movx	@dptr,a
                                    265 ;	_memmove.c:51: s = ((char *)src)+acount-1;
                                    266 ;	genAssign: resultIsFar = FALSE
      0000A1 8A 06            [ 8]  267 	mov	ar6,r2
      0000A3 8B 07            [ 8]  268 	mov	ar7,r3
      0000A5 8C 00            [ 8]  269 	mov	ar0,r4
      0000A7 8D 01            [ 8]  270 	mov	ar1,r5
      0000A9 90s00r00r04      [12]  271 	mov	dptr,#_memmove_PARM_3
      0000AD E0               [ 8]  272 	movx	a,@dptr
      0000AE 2E               [ 4]  273 	add	a,r6
      0000AF FE               [ 4]  274 	mov	r6,a
      0000B0 A3               [12]  275 	inc	dptr
      0000B1 E0               [ 8]  276 	movx	a,@dptr
      0000B2 3F               [ 4]  277 	addc	a,r7
      0000B3 FF               [ 4]  278 	mov	r7,a
      0000B4 E4               [ 4]  279 	clr	a
      0000B5 38               [ 4]  280 	addc	a,r0
      0000B6 F8               [ 4]  281 	mov	r0,a
      0000B7 1E               [ 4]  282 	dec	r6
      0000B8 BE FF 05         [16]  283 	cjne	r6,#0xFF,00131$
      0000BB 1F               [ 4]  284 	dec	r7
      0000BC BF FF 01         [16]  285 	cjne	r7,#0xFF,00131$
      0000BF 18               [ 4]  286 	dec	r0
      0000C0                        287 00131$:
                                    288 ;	genAssign: resultIsFar = TRUE
                                    289 ;	_memmove.c:52: while (acount--) {
                                    290 ;	genAssign: resultIsFar = TRUE
      0000C0 90s00r00r18      [12]  291 	mov	dptr,#_memmove_sloc2_1_0
      0000C4 EE               [ 4]  292 	mov	a,r6
      0000C5 F0               [ 8]  293 	movx	@dptr,a
      0000C6 A3               [12]  294 	inc	dptr
      0000C7 EF               [ 4]  295 	mov	a,r7
      0000C8 F0               [ 8]  296 	movx	@dptr,a
      0000C9 A3               [12]  297 	inc	dptr
      0000CA E8               [ 4]  298 	mov	a,r0
      0000CB F0               [ 8]  299 	movx	@dptr,a
      0000CC A3               [12]  300 	inc	dptr
      0000CD E9               [ 4]  301 	mov	a,r1
      0000CE F0               [ 8]  302 	movx	@dptr,a
      0000CF 90s00r00r0E      [12]  303 	mov	dptr,#_memmove_d_1_22
                                    304 ;	genAssign: resultIsFar = FALSE
      0000D3 E0               [ 8]  305 	movx	a,@dptr
      0000D4 FC               [ 4]  306 	mov	r4,a
      0000D5 A3               [12]  307 	inc	dptr
      0000D6 E0               [ 8]  308 	movx	a,@dptr
      0000D7 FD               [ 4]  309 	mov	r5,a
      0000D8 A3               [12]  310 	inc	dptr
      0000D9 E0               [ 8]  311 	movx	a,@dptr
      0000DA F8               [ 4]  312 	mov	r0,a
      0000DB A3               [12]  313 	inc	dptr
      0000DC E0               [ 8]  314 	movx	a,@dptr
      0000DD F9               [ 4]  315 	mov	r1,a
      0000DE 90s00r00r04      [12]  316 	mov	dptr,#_memmove_PARM_3
                                    317 ;	genAssign: resultIsFar = FALSE
      0000E2 E0               [ 8]  318 	movx	a,@dptr
      0000E3 FA               [ 4]  319 	mov	r2,a
      0000E4 A3               [12]  320 	inc	dptr
      0000E5 E0               [ 8]  321 	movx	a,@dptr
      0000E6 FB               [ 4]  322 	mov	r3,a
      0000E7                        323 00101$:
                                    324 ;	genAssign: resultIsFar = FALSE
      0000E7 8A 06            [ 8]  325 	mov	ar6,r2
      0000E9 8B 07            [ 8]  326 	mov	ar7,r3
      0000EB 1A               [ 4]  327 	dec	r2
      0000EC BA FF 01         [16]  328 	cjne	r2,#0xFF,00132$
      0000EF 1B               [ 4]  329 	dec	r3
      0000F0                        330 00132$:
      0000F0 EE               [ 4]  331 	mov	a,r6
      0000F1 4F               [ 4]  332 	orl	a,r7
      0000F2 70 04            [12]  333 	jnz	00133$
      0000F4 02s00r01rC2      [16]  334 	ljmp	00109$
      0000F8                        335 00133$:
                                    336 ;	_memmove.c:53: *d-- = *s--;
      0000F8 90s00r00r18      [12]  337 	mov	dptr,#_memmove_sloc2_1_0
      0000FC E0               [ 8]  338 	movx	a,@dptr
      0000FD C0 E0            [ 8]  339 	push	acc
      0000FF A3               [12]  340 	inc	dptr
      000100 E0               [ 8]  341 	movx	a,@dptr
      000101 C0 E0            [ 8]  342 	push	acc
      000103 A3               [12]  343 	inc	dptr
      000104 E0               [ 8]  344 	movx	a,@dptr
      000105 C0 E0            [ 8]  345 	push	acc
      000107 A3               [12]  346 	inc	dptr
      000108 E0               [ 8]  347 	movx	a,@dptr
      000109 F5 F0            [ 8]  348 	mov	b,a
      00010B D0 93            [ 8]  349 	pop	dpx
      00010D D0 83            [ 8]  350 	pop	dph
      00010F D0 82            [ 8]  351 	pop	dpl
      000111 12s00r00r00      [16]  352 	lcall	__gptrget
      000115 FE               [ 4]  353 	mov	r6,a
      000116 90s00r00r18      [12]  354 	mov	dptr,#_memmove_sloc2_1_0
      00011A E0               [ 8]  355 	movx	a,@dptr
      00011B 24 FF            [ 8]  356 	add	a,#0xFF
      00011D F0               [ 8]  357 	movx	@dptr,a
      00011E A3               [12]  358 	inc	dptr
      00011F E0               [ 8]  359 	movx	a,@dptr
      000120 34 FF            [ 8]  360 	addc	a,#0xFF
      000122 F0               [ 8]  361 	movx	@dptr,a
      000123 A3               [12]  362 	inc	dptr
      000124 E0               [ 8]  363 	movx	a,@dptr
      000125 34 FF            [ 8]  364 	addc	a,#0xFF
      000127 F0               [ 8]  365 	movx	@dptr,a
      000128 A3               [12]  366 	inc	dptr
      000129 E0               [ 8]  367 	movx	a,@dptr
      00012A F0               [ 8]  368 	movx	@dptr,a
      00012B 8C 82            [ 8]  369 	mov	dpl,r4
      00012D 8D 83            [ 8]  370 	mov	dph,r5
      00012F 88 93            [ 8]  371 	mov	dpx,r0
      000131 89 F0            [ 8]  372 	mov	b,r1
      000133 EE               [ 4]  373 	mov	a,r6
      000134 12s00r00r00      [16]  374 	lcall	__gptrput
      000138 1C               [ 4]  375 	dec	r4
      000139 BC FF 05         [16]  376 	cjne	r4,#0xFF,00134$
      00013C 1D               [ 4]  377 	dec	r5
      00013D BD FF 01         [16]  378 	cjne	r5,#0xFF,00134$
      000140 18               [ 4]  379 	dec	r0
      000141                        380 00134$:
      000141 80 A4            [12]  381 	sjmp 00101$
      000143                        382 00108$:
                                    383 ;	_memmove.c:60: d = dst;
      000143 90s00r00r06      [12]  384 	mov	dptr,#_memmove_dst_1_21
                                    385 ;	genAssign: resultIsFar = FALSE
      000147 E0               [ 8]  386 	movx	a,@dptr
      000148 FE               [ 4]  387 	mov	r6,a
      000149 A3               [12]  388 	inc	dptr
      00014A E0               [ 8]  389 	movx	a,@dptr
      00014B FF               [ 4]  390 	mov	r7,a
      00014C A3               [12]  391 	inc	dptr
      00014D E0               [ 8]  392 	movx	a,@dptr
      00014E F8               [ 4]  393 	mov	r0,a
      00014F A3               [12]  394 	inc	dptr
      000150 E0               [ 8]  395 	movx	a,@dptr
      000151 F9               [ 4]  396 	mov	r1,a
                                    397 ;	_memmove.c:61: s = src;
                                    398 ;	genAssign: resultIsFar = FALSE
      000152 90s00r00r14      [12]  399 	mov	dptr,#_memmove_sloc1_1_0
      000156 EA               [ 4]  400 	mov	a,r2
      000157 F0               [ 8]  401 	movx	@dptr,a
      000158 A3               [12]  402 	inc	dptr
      000159 EB               [ 4]  403 	mov	a,r3
      00015A F0               [ 8]  404 	movx	@dptr,a
      00015B A3               [12]  405 	inc	dptr
      00015C EC               [ 4]  406 	mov	a,r4
      00015D F0               [ 8]  407 	movx	@dptr,a
      00015E A3               [12]  408 	inc	dptr
      00015F ED               [ 4]  409 	mov	a,r5
      000160 F0               [ 8]  410 	movx	@dptr,a
                                    411 ;	_memmove.c:62: while (acount--) {
      000161 90s00r00r04      [12]  412 	mov	dptr,#_memmove_PARM_3
                                    413 ;	genAssign: resultIsFar = FALSE
      000165 E0               [ 8]  414 	movx	a,@dptr
      000166 FC               [ 4]  415 	mov	r4,a
      000167 A3               [12]  416 	inc	dptr
      000168 E0               [ 8]  417 	movx	a,@dptr
      000169 FD               [ 4]  418 	mov	r5,a
      00016A                        419 00104$:
                                    420 ;	genAssign: resultIsFar = FALSE
      00016A 8C 02            [ 8]  421 	mov	ar2,r4
      00016C 8D 03            [ 8]  422 	mov	ar3,r5
      00016E 1C               [ 4]  423 	dec	r4
      00016F BC FF 01         [16]  424 	cjne	r4,#0xFF,00135$
      000172 1D               [ 4]  425 	dec	r5
      000173                        426 00135$:
      000173 EA               [ 4]  427 	mov	a,r2
      000174 4B               [ 4]  428 	orl	a,r3
      000175 60 4B            [12]  429 	jz  00109$
      000177                        430 00136$:
                                    431 ;	_memmove.c:63: *d++ = *s++;
      000177 90s00r00r14      [12]  432 	mov	dptr,#_memmove_sloc1_1_0
      00017B E0               [ 8]  433 	movx	a,@dptr
      00017C C0 E0            [ 8]  434 	push	acc
      00017E A3               [12]  435 	inc	dptr
      00017F E0               [ 8]  436 	movx	a,@dptr
      000180 C0 E0            [ 8]  437 	push	acc
      000182 A3               [12]  438 	inc	dptr
      000183 E0               [ 8]  439 	movx	a,@dptr
      000184 C0 E0            [ 8]  440 	push	acc
      000186 A3               [12]  441 	inc	dptr
      000187 E0               [ 8]  442 	movx	a,@dptr
      000188 F5 F0            [ 8]  443 	mov	b,a
      00018A D0 93            [ 8]  444 	pop	dpx
      00018C D0 83            [ 8]  445 	pop	dph
      00018E D0 82            [ 8]  446 	pop	dpl
      000190 12s00r00r00      [16]  447 	lcall	__gptrget
      000194 FA               [ 4]  448 	mov	r2,a
      000195 90s00r00r14      [12]  449 	mov	dptr,#_memmove_sloc1_1_0
      000199 E0               [ 8]  450 	movx	a,@dptr
      00019A 24 01            [ 8]  451 	add	a,#0x01
      00019C F0               [ 8]  452 	movx	@dptr,a
      00019D A3               [12]  453 	inc	dptr
      00019E E0               [ 8]  454 	movx	a,@dptr
      00019F 34 00            [ 8]  455 	addc	a,#0x00
      0001A1 F0               [ 8]  456 	movx	@dptr,a
      0001A2 A3               [12]  457 	inc	dptr
      0001A3 E0               [ 8]  458 	movx	a,@dptr
      0001A4 34 00            [ 8]  459 	addc	a,#0x00
      0001A6 F0               [ 8]  460 	movx	@dptr,a
      0001A7 A3               [12]  461 	inc	dptr
      0001A8 E0               [ 8]  462 	movx	a,@dptr
      0001A9 F0               [ 8]  463 	movx	@dptr,a
      0001AA 8E 82            [ 8]  464 	mov	dpl,r6
      0001AC 8F 83            [ 8]  465 	mov	dph,r7
      0001AE 88 93            [ 8]  466 	mov	dpx,r0
      0001B0 89 F0            [ 8]  467 	mov	b,r1
      0001B2 EA               [ 4]  468 	mov	a,r2
      0001B3 12s00r00r00      [16]  469 	lcall	__gptrput
      0001B7 A3               [12]  470 	inc	dptr
      0001B8 AE 82            [ 8]  471 	mov	r6,dpl
      0001BA AF 83            [ 8]  472 	mov	r7,dph
      0001BC A8 93            [ 8]  473 	mov	r0,dpx
      0001BE A9 F0            [ 8]  474 	mov	r1,b
      0001C0 80 A8            [12]  475 	sjmp 00104$
      0001C2                        476 00109$:
                                    477 ;	_memmove.c:67: return(ret);
      0001C2 75 86 01         [12]  478 	mov     dps, #1
      0001C5 90s00r00r0A      [12]  479 	mov     dptr, #_memmove_ret_1_22
      0001C9 E0               [ 8]  480 	movx	a,@dptr
      0001CA F5 82            [ 8]  481 	mov	dpl,a
      0001CC A3               [12]  482 	inc	dptr
      0001CD E0               [ 8]  483 	movx	a,@dptr
      0001CE F5 83            [ 8]  484 	mov	dph,a
      0001D0 A3               [12]  485 	inc	dptr
      0001D1 E0               [ 8]  486 	movx	a,@dptr
      0001D2 F5 93            [ 8]  487 	mov	dpx,a
      0001D4 A3               [12]  488 	inc	dptr
      0001D5 E0               [ 8]  489 	movx	a,@dptr
      0001D6 F5 F0            [ 8]  490 	mov	b,a
      0001D8 75 86 00         [12]  491 	mov	dps,#0
      0001DB                        492 00110$:
      0001DB 22               [16]  493 	ret
                                    494 	.area CSEG    (CODE)
                                    495 	.area CONST   (CODE)
                                    496 	.area XINIT   (CODE)
                                    497 	.area CABS    (ABS,CODE)
