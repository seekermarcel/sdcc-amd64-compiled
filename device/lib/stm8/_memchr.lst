                                      1 ;--------------------------------------------------------
                                      2 ; File Created by SDCC : free open source ANSI-C Compiler
                                      3 ; Version 3.5.0 #9253 (Apr  4 2022) (Linux)
                                      4 ; This file was generated Mon Apr  4 14:17:17 2022
                                      5 ;--------------------------------------------------------
                                      6 	.module _memchr
                                      7 	.optsdcc -mstm8
                                      8 	
                                      9 ;--------------------------------------------------------
                                     10 ; Public variables in this module
                                     11 ;--------------------------------------------------------
                                     12 	.globl _memchr
                                     13 ;--------------------------------------------------------
                                     14 ; ram data
                                     15 ;--------------------------------------------------------
                                     16 	.area DATA
                                     17 ;--------------------------------------------------------
                                     18 ; ram data
                                     19 ;--------------------------------------------------------
                                     20 	.area INITIALIZED
                                     21 ;--------------------------------------------------------
                                     22 ; absolute external ram data
                                     23 ;--------------------------------------------------------
                                     24 	.area DABS (ABS)
                                     25 ;--------------------------------------------------------
                                     26 ; global & static initialisations
                                     27 ;--------------------------------------------------------
                                     28 	.area HOME
                                     29 	.area GSINIT
                                     30 	.area GSFINAL
                                     31 	.area GSINIT
                                     32 ;--------------------------------------------------------
                                     33 ; Home
                                     34 ;--------------------------------------------------------
                                     35 	.area HOME
                                     36 	.area HOME
                                     37 ;--------------------------------------------------------
                                     38 ; code
                                     39 ;--------------------------------------------------------
                                     40 	.area CODE
                                     41 ;	../_memchr.c: 31: void *memchr(const void *s, int c, size_t n)
                                     42 ;	-----------------------------------------
                                     43 ;	 function memchr
                                     44 ;	-----------------------------------------
      000000                         45 _memchr:
      000000 52 04            [ 2]   46 	sub	sp, #4
                                     47 ;	../_memchr.c: 33: unsigned char *p = (unsigned char *)s;
      000002 16 07            [ 2]   48 	ldw	y, (0x07, sp)
      000004 17 03            [ 2]   49 	ldw	(0x03, sp), y
                                     50 ;	../_memchr.c: 34: unsigned char *end = p + n;
      000006 16 03            [ 2]   51 	ldw	y, (0x03, sp)
      000008 72 F9 0B         [ 2]   52 	addw	y, (0x0b, sp)
      00000B 17 01            [ 2]   53 	ldw	(0x01, sp), y
                                     54 ;	../_memchr.c: 38: return(0);
      00000D 16 03            [ 2]   55 	ldw	y, (0x03, sp)
      00000F                         56 00105$:
                                     57 ;	../_memchr.c: 35: for(; p != end; p++)
      00000F 93               [ 1]   58 	ldw	x, y
      000010 13 01            [ 2]   59 	cpw	x, (0x01, sp)
      000012 27 12            [ 1]   60 	jreq	00103$
                                     61 ;	../_memchr.c: 36: if(*p == c)
      000014 90 F6            [ 1]   62 	ld	a, (y)
      000016 5F               [ 1]   63 	clrw	x
      000017 97               [ 1]   64 	ld	xl, a
      000018 13 09            [ 2]   65 	cpw	x, (0x09, sp)
      00001A 26 04            [ 1]   66 	jrne	00106$
                                     67 ;	../_memchr.c: 37: return((void *)p);
      00001C 1E 03            [ 2]   68 	ldw	x, (0x03, sp)
      00001E 20 07            [ 2]   69 	jra	00107$
      000020                         70 00106$:
                                     71 ;	../_memchr.c: 35: for(; p != end; p++)
      000020 90 5C            [ 2]   72 	incw	y
      000022 17 03            [ 2]   73 	ldw	(0x03, sp), y
      000024 20 E9            [ 2]   74 	jra	00105$
      000026                         75 00103$:
                                     76 ;	../_memchr.c: 38: return(0);
      000026 5F               [ 1]   77 	clrw	x
      000027                         78 00107$:
      000027 5B 04            [ 2]   79 	addw	sp, #4
      000029 81               [ 4]   80 	ret
                                     81 	.area CODE
                                     82 	.area INITIALIZER
                                     83 	.area CABS (ABS)
