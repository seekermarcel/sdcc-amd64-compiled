                              1 ;--------------------------------------------------------
                              2 ; File Created by SDCC : free open source ANSI-C Compiler
                              3 ; Version 3.5.0 #9253 (Apr  4 2022) (Linux)
                              4 ; This file was generated Mon Apr  4 14:15:45 2022
                              5 ;--------------------------------------------------------
                              6 	.hd64
                              7 	.module _memchr
                              8 	.optsdcc -mz180
                              9 	
                             10 ;--------------------------------------------------------
                             11 ; Public variables in this module
                             12 ;--------------------------------------------------------
                             13 	.globl _memchr
                             14 ;--------------------------------------------------------
                             15 ; special function registers
                             16 ;--------------------------------------------------------
                             17 ;--------------------------------------------------------
                             18 ; ram data
                             19 ;--------------------------------------------------------
                             20 	.area _DATA
                             21 ;--------------------------------------------------------
                             22 ; ram data
                             23 ;--------------------------------------------------------
                             24 	.area _INITIALIZED
                             25 ;--------------------------------------------------------
                             26 ; absolute external ram data
                             27 ;--------------------------------------------------------
                             28 	.area _DABS (ABS)
                             29 ;--------------------------------------------------------
                             30 ; global & static initialisations
                             31 ;--------------------------------------------------------
                             32 	.area _HOME
                             33 	.area _GSINIT
                             34 	.area _GSFINAL
                             35 	.area _GSINIT
                             36 ;--------------------------------------------------------
                             37 ; Home
                             38 ;--------------------------------------------------------
                             39 	.area _HOME
                             40 	.area _HOME
                             41 ;--------------------------------------------------------
                             42 ; code
                             43 ;--------------------------------------------------------
                             44 	.area _CODE
                             45 ;../_memchr.c:31: void *memchr(const void *s, int c, size_t n)
                             46 ;	---------------------------------
                             47 ; Function memchr
                             48 ; ---------------------------------
   0000                      49 _memchr::
   0000 DD E5         [14]   50 	push	ix
   0002 DD 21 00 00   [12]   51 	ld	ix,#0
   0006 DD 39         [10]   52 	add	ix,sp
   0008 3B            [ 4]   53 	dec	sp
   0009 3B            [ 4]   54 	dec	sp
   000A 3B            [ 4]   55 	dec	sp
   000B 3B            [ 4]   56 	dec	sp
                             57 ;../_memchr.c:33: unsigned char *p = (unsigned char *)s;
   000C DD 7E 04      [14]   58 	ld	a,4 (ix)
   000F DD 77 FE      [15]   59 	ld	-2 (ix),a
   0012 DD 7E 05      [14]   60 	ld	a,5 (ix)
   0015 DD 77 FF      [15]   61 	ld	-1 (ix),a
                             62 ;../_memchr.c:34: unsigned char *end = p + n;
   0018 DD 7E 08      [14]   63 	ld	a,8 (ix)
   001B DD 86 FE      [14]   64 	add	a, -2 (ix)
   001E 67            [ 4]   65 	ld	h,a
   001F DD 7E 09      [14]   66 	ld	a,9 (ix)
   0022 DD 8E FF      [14]   67 	adc	a, -1 (ix)
   0025 DD 74 FC      [15]   68 	ld	-4 (ix), h
   0028 DD 77 FD      [15]   69 	ld	-3 (ix), a
                             70 ;../_memchr.c:38: return(0);
   002B C1            [ 9]   71 	pop	bc
   002C D1            [ 9]   72 	pop	de
   002D D5            [11]   73 	push	de
   002E C5            [11]   74 	push	bc
   002F                      75 00105$:
                             76 ;../_memchr.c:35: for(; p != end; p++)
   002F DD 7E FC      [14]   77 	ld	a,-4 (ix)
   0032 93            [ 4]   78 	sub	a, e
   0033 20 06         [ 8]   79 	jr	NZ,00121$
   0035 DD 7E FD      [14]   80 	ld	a,-3 (ix)
   0038 92            [ 4]   81 	sub	a, d
   0039 28 1F         [ 8]   82 	jr	Z,00103$
   003B                      83 00121$:
                             84 ;../_memchr.c:36: if(*p == c)
   003B 1A            [ 6]   85 	ld	a,(de)
   003C 47            [ 4]   86 	ld	b,a
   003D 0E 00         [ 6]   87 	ld	c,#0x00
   003F DD 7E 06      [14]   88 	ld	a,6 (ix)
   0042 90            [ 4]   89 	sub	a, b
   0043 20 0C         [ 8]   90 	jr	NZ,00106$
   0045 DD 7E 07      [14]   91 	ld	a,7 (ix)
   0048 91            [ 4]   92 	sub	a, c
   0049 20 06         [ 8]   93 	jr	NZ,00106$
                             94 ;../_memchr.c:37: return((void *)p);
   004B C1            [ 9]   95 	pop	bc
   004C E1            [ 9]   96 	pop	hl
   004D E5            [11]   97 	push	hl
   004E C5            [11]   98 	push	bc
   004F 18 0C         [ 8]   99 	jr	00107$
   0051                     100 00106$:
                            101 ;../_memchr.c:35: for(; p != end; p++)
   0051 13            [ 4]  102 	inc	de
   0052 DD 73 FE      [15]  103 	ld	-2 (ix),e
   0055 DD 72 FF      [15]  104 	ld	-1 (ix),d
   0058 18 D5         [ 8]  105 	jr	00105$
   005A                     106 00103$:
                            107 ;../_memchr.c:38: return(0);
   005A 21 00 00      [ 9]  108 	ld	hl,#0x0000
   005D                     109 00107$:
   005D DD F9         [ 7]  110 	ld	sp, ix
   005F DD E1         [12]  111 	pop	ix
   0061 C9            [ 9]  112 	ret
                            113 	.area _CODE
                            114 	.area _INITIALIZER
                            115 	.area _CABS (ABS)
