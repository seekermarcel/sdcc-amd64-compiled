                                      1 ;--------------------------------------------------------
                                      2 ; File Created by SDCC : free open source ANSI-C Compiler
                                      3 ; Version 3.5.0 #9253 (Apr  4 2022) (Linux)
                                      4 ; This file was generated Mon Apr  4 14:10:43 2022
                                      5 ;--------------------------------------------------------
                                      6 	.module atol
                                      7 	.optsdcc -mmcs51 --model-medium
                                      8 	
                                      9 ;--------------------------------------------------------
                                     10 ; Public variables in this module
                                     11 ;--------------------------------------------------------
                                     12 	.globl _atol
                                     13 ;--------------------------------------------------------
                                     14 ; special function registers
                                     15 ;--------------------------------------------------------
                                     16 	.area RSEG    (ABS,DATA)
      000000                         17 	.org 0x0000
                                     18 ;--------------------------------------------------------
                                     19 ; special function bits
                                     20 ;--------------------------------------------------------
                                     21 	.area RSEG    (ABS,DATA)
      000000                         22 	.org 0x0000
                                     23 ;--------------------------------------------------------
                                     24 ; overlayable register banks
                                     25 ;--------------------------------------------------------
                                     26 	.area REG_BANK_0	(REL,OVR,DATA)
      000000                         27 	.ds 8
                                     28 ;--------------------------------------------------------
                                     29 ; internal ram data
                                     30 ;--------------------------------------------------------
                                     31 	.area DSEG    (DATA)
      000000                         32 _atol_sloc0_1_0:
      000000                         33 	.ds 3
      000003                         34 _atol_sloc1_1_0:
      000003                         35 	.ds 4
                                     36 ;--------------------------------------------------------
                                     37 ; overlayable items in internal ram 
                                     38 ;--------------------------------------------------------
                                     39 ;--------------------------------------------------------
                                     40 ; indirectly addressable internal ram data
                                     41 ;--------------------------------------------------------
                                     42 	.area ISEG    (DATA)
                                     43 ;--------------------------------------------------------
                                     44 ; absolute internal ram data
                                     45 ;--------------------------------------------------------
                                     46 	.area IABS    (ABS,DATA)
                                     47 	.area IABS    (ABS,DATA)
                                     48 ;--------------------------------------------------------
                                     49 ; bit data
                                     50 ;--------------------------------------------------------
                                     51 	.area BSEG    (BIT)
      000000                         52 _atol_neg_1_37:
      000000                         53 	.ds 1
                                     54 ;--------------------------------------------------------
                                     55 ; paged external ram data
                                     56 ;--------------------------------------------------------
                                     57 	.area PSEG    (PAG,XDATA)
      000000                         58 _atol_ret_1_37:
      000000                         59 	.ds 4
                                     60 ;--------------------------------------------------------
                                     61 ; external ram data
                                     62 ;--------------------------------------------------------
                                     63 	.area XSEG    (XDATA)
                                     64 ;--------------------------------------------------------
                                     65 ; absolute external ram data
                                     66 ;--------------------------------------------------------
                                     67 	.area XABS    (ABS,XDATA)
                                     68 ;--------------------------------------------------------
                                     69 ; external initialized ram data
                                     70 ;--------------------------------------------------------
                                     71 	.area XISEG   (XDATA)
                                     72 	.area HOME    (CODE)
                                     73 	.area GSINIT0 (CODE)
                                     74 	.area GSINIT1 (CODE)
                                     75 	.area GSINIT2 (CODE)
                                     76 	.area GSINIT3 (CODE)
                                     77 	.area GSINIT4 (CODE)
                                     78 	.area GSINIT5 (CODE)
                                     79 	.area GSINIT  (CODE)
                                     80 	.area GSFINAL (CODE)
                                     81 	.area CSEG    (CODE)
                                     82 ;--------------------------------------------------------
                                     83 ; global & static initialisations
                                     84 ;--------------------------------------------------------
                                     85 	.area HOME    (CODE)
                                     86 	.area GSINIT  (CODE)
                                     87 	.area GSFINAL (CODE)
                                     88 	.area GSINIT  (CODE)
                                     89 ;--------------------------------------------------------
                                     90 ; Home
                                     91 ;--------------------------------------------------------
                                     92 	.area HOME    (CODE)
                                     93 	.area HOME    (CODE)
                                     94 ;--------------------------------------------------------
                                     95 ; code
                                     96 ;--------------------------------------------------------
                                     97 	.area CSEG    (CODE)
                                     98 ;------------------------------------------------------------
                                     99 ;Allocation info for local variables in function 'atol'
                                    100 ;------------------------------------------------------------
                                    101 ;sloc0                     Allocated with name '_atol_sloc0_1_0'
                                    102 ;sloc1                     Allocated with name '_atol_sloc1_1_0'
                                    103 ;------------------------------------------------------------
                                    104 ;	atol.c:34: long int atol(const char *nptr)
                                    105 ;	-----------------------------------------
                                    106 ;	 function atol
                                    107 ;	-----------------------------------------
      000000                        108 _atol:
                           000007   109 	ar7 = 0x07
                           000006   110 	ar6 = 0x06
                           000005   111 	ar5 = 0x05
                           000004   112 	ar4 = 0x04
                           000003   113 	ar3 = 0x03
                           000002   114 	ar2 = 0x02
                           000001   115 	ar1 = 0x01
                           000000   116 	ar0 = 0x00
      000000 AC 82            [24]  117 	mov	r4,dpl
      000002 AB 83            [24]  118 	mov	r3,dph
      000004 AA F0            [24]  119 	mov	r2,b
                                    120 ;	atol.c:36: long int ret = 0;
      000006 78r00            [12]  121 	mov	r0,#_atol_ret_1_37
      000008 E4               [12]  122 	clr	a
      000009 F2               [24]  123 	movx	@r0,a
      00000A 08               [12]  124 	inc	r0
      00000B F2               [24]  125 	movx	@r0,a
      00000C 08               [12]  126 	inc	r0
      00000D F2               [24]  127 	movx	@r0,a
      00000E 08               [12]  128 	inc	r0
      00000F F2               [24]  129 	movx	@r0,a
                                    130 ;	atol.c:39: while (isblank (*nptr))
      000010 8C 05            [24]  131 	mov	ar5,r4
      000012 8B 06            [24]  132 	mov	ar6,r3
      000014 8A 07            [24]  133 	mov	ar7,r2
      000016                        134 00101$:
      000016 8D 82            [24]  135 	mov	dpl,r5
      000018 8E 83            [24]  136 	mov	dph,r6
      00001A 8F F0            [24]  137 	mov	b,r7
      00001C 12r00r00         [24]  138 	lcall	__gptrget
      00001F FC               [12]  139 	mov	r4,a
      000020 33               [12]  140 	rlc	a
      000021 95 E0            [12]  141 	subb	a,acc
      000023 FB               [12]  142 	mov	r3,a
                                    143 ;	../../device/include/ctype.h:53: return ((unsigned char)c == ' ' || (unsigned char)c == '\t');
      000024 BC 20 02         [24]  144 	cjne	r4,#0x20,00147$
      000027 80 03            [24]  145 	sjmp	00115$
      000029                        146 00147$:
      000029 BC 09 07         [24]  147 	cjne	r4,#0x09,00131$
      00002C                        148 00115$:
                                    149 ;	atol.c:40: nptr++;
      00002C 0D               [12]  150 	inc	r5
      00002D BD 00 E6         [24]  151 	cjne	r5,#0x00,00101$
      000030 0E               [12]  152 	inc	r6
      000031 80 E3            [24]  153 	sjmp	00101$
      000033                        154 00131$:
      000033 8D 04            [24]  155 	mov	ar4,r5
      000035 8E 03            [24]  156 	mov	ar3,r6
      000037 8F 02            [24]  157 	mov	ar2,r7
                                    158 ;	atol.c:42: neg = (*nptr == '-');
      000039 8D 82            [24]  159 	mov	dpl,r5
      00003B 8E 83            [24]  160 	mov	dph,r6
      00003D 8F F0            [24]  161 	mov	b,r7
      00003F 12r00r00         [24]  162 	lcall	__gptrget
      000042 FF               [12]  163 	mov	r7,a
      000043 BF 2D 03         [24]  164 	cjne	r7,#0x2D,00151$
      000046 D3               [12]  165 	setb	c
      000047 80 01            [24]  166 	sjmp	00152$
      000049                        167 00151$:
      000049 C3               [12]  168 	clr	c
      00004A                        169 00152$:
      00004A 92*00            [24]  170 	mov	_atol_neg_1_37,c
                                    171 ;	atol.c:44: if (*nptr == '-' || *nptr == '+')
      00004C BF 2D 02         [24]  172 	cjne	r7,#0x2D,00153$
      00004F 80 03            [24]  173 	sjmp	00104$
      000051                        174 00153$:
      000051 BF 2B 05         [24]  175 	cjne	r7,#0x2B,00129$
      000054                        176 00104$:
                                    177 ;	atol.c:45: nptr++;
      000054 0C               [12]  178 	inc	r4
      000055 BC 00 01         [24]  179 	cjne	r4,#0x00,00156$
      000058 0B               [12]  180 	inc	r3
      000059                        181 00156$:
                                    182 ;	atol.c:47: while (isdigit (*nptr))
      000059                        183 00129$:
      000059 8C*00            [24]  184 	mov	_atol_sloc0_1_0,r4
      00005B 8B*01            [24]  185 	mov	(_atol_sloc0_1_0 + 1),r3
      00005D 8A*02            [24]  186 	mov	(_atol_sloc0_1_0 + 2),r2
      00005F                        187 00107$:
      00005F 85*00 82         [24]  188 	mov	dpl,_atol_sloc0_1_0
      000062 85*01 83         [24]  189 	mov	dph,(_atol_sloc0_1_0 + 1)
      000065 85*02 F0         [24]  190 	mov	b,(_atol_sloc0_1_0 + 2)
      000068 12r00r00         [24]  191 	lcall	__gptrget
      00006B FC               [12]  192 	mov	r4,a
      00006C 33               [12]  193 	rlc	a
      00006D 95 E0            [12]  194 	subb	a,acc
      00006F FB               [12]  195 	mov	r3,a
                                    196 ;	../../device/include/ctype.h:62: return ((unsigned char)c >= '0' && (unsigned char)c <= '9');
      000070 BC 30 00         [24]  197 	cjne	r4,#0x30,00157$
      000073                        198 00157$:
      000073 40 6B            [24]  199 	jc	00109$
      000075 EC               [12]  200 	mov	a,r4
      000076 24 C6            [12]  201 	add	a,#0xff - 0x39
      000078 40 66            [24]  202 	jc	00109$
                                    203 ;	atol.c:48: ret = ret * 10 + (*(nptr++) - '0');
      00007A 78r00            [12]  204 	mov	r0,#_atol_ret_1_37
      00007C 79r00            [12]  205 	mov	r1,#__mullong_PARM_2
      00007E E2               [24]  206 	movx	a,@r0
      00007F F3               [24]  207 	movx	@r1,a
      000080 08               [12]  208 	inc	r0
      000081 E2               [24]  209 	movx	a,@r0
      000082 09               [12]  210 	inc	r1
      000083 F3               [24]  211 	movx	@r1,a
      000084 08               [12]  212 	inc	r0
      000085 E2               [24]  213 	movx	a,@r0
      000086 09               [12]  214 	inc	r1
      000087 F3               [24]  215 	movx	@r1,a
      000088 08               [12]  216 	inc	r0
      000089 E2               [24]  217 	movx	a,@r0
      00008A 09               [12]  218 	inc	r1
      00008B F3               [24]  219 	movx	@r1,a
      00008C 90 00 0A         [24]  220 	mov	dptr,#(0x0A&0x00ff)
      00008F E4               [12]  221 	clr	a
      000090 F5 F0            [12]  222 	mov	b,a
      000092 12r00r00         [24]  223 	lcall	__mullong
      000095 85 82*03         [24]  224 	mov	_atol_sloc1_1_0,dpl
      000098 85 83*04         [24]  225 	mov	(_atol_sloc1_1_0 + 1),dph
      00009B 85 F0*05         [24]  226 	mov	(_atol_sloc1_1_0 + 2),b
      00009E F5*06            [12]  227 	mov	(_atol_sloc1_1_0 + 3),a
      0000A0 85*00 82         [24]  228 	mov	dpl,_atol_sloc0_1_0
      0000A3 85*01 83         [24]  229 	mov	dph,(_atol_sloc0_1_0 + 1)
      0000A6 85*02 F0         [24]  230 	mov	b,(_atol_sloc0_1_0 + 2)
      0000A9 12r00r00         [24]  231 	lcall	__gptrget
      0000AC FE               [12]  232 	mov	r6,a
      0000AD A3               [24]  233 	inc	dptr
      0000AE 85 82*00         [24]  234 	mov	_atol_sloc0_1_0,dpl
      0000B1 85 83*01         [24]  235 	mov	(_atol_sloc0_1_0 + 1),dph
      0000B4 EE               [12]  236 	mov	a,r6
      0000B5 33               [12]  237 	rlc	a
      0000B6 95 E0            [12]  238 	subb	a,acc
      0000B8 FD               [12]  239 	mov	r5,a
      0000B9 EE               [12]  240 	mov	a,r6
      0000BA 24 D0            [12]  241 	add	a,#0xD0
      0000BC FE               [12]  242 	mov	r6,a
      0000BD ED               [12]  243 	mov	a,r5
      0000BE 34 FF            [12]  244 	addc	a,#0xFF
      0000C0 FD               [12]  245 	mov	r5,a
      0000C1 8E 04            [24]  246 	mov	ar4,r6
      0000C3 33               [12]  247 	rlc	a
      0000C4 95 E0            [12]  248 	subb	a,acc
      0000C6 FE               [12]  249 	mov	r6,a
      0000C7 FF               [12]  250 	mov	r7,a
      0000C8 78r00            [12]  251 	mov	r0,#_atol_ret_1_37
      0000CA EC               [12]  252 	mov	a,r4
      0000CB 25*03            [12]  253 	add	a,_atol_sloc1_1_0
      0000CD F2               [24]  254 	movx	@r0,a
      0000CE ED               [12]  255 	mov	a,r5
      0000CF 35*04            [12]  256 	addc	a,(_atol_sloc1_1_0 + 1)
      0000D1 08               [12]  257 	inc	r0
      0000D2 F2               [24]  258 	movx	@r0,a
      0000D3 EE               [12]  259 	mov	a,r6
      0000D4 35*05            [12]  260 	addc	a,(_atol_sloc1_1_0 + 2)
      0000D6 08               [12]  261 	inc	r0
      0000D7 F2               [24]  262 	movx	@r0,a
      0000D8 EF               [12]  263 	mov	a,r7
      0000D9 35*06            [12]  264 	addc	a,(_atol_sloc1_1_0 + 3)
      0000DB 08               [12]  265 	inc	r0
      0000DC F2               [24]  266 	movx	@r0,a
      0000DD 02r00r5F         [24]  267 	ljmp	00107$
      0000E0                        268 00109$:
                                    269 ;	atol.c:50: return (neg ? -ret : ret); // Since -LONG_MIN is LONG_MIN in sdcc, the result value always turns out ok.
      0000E0 30*00 1C         [24]  270 	jnb	_atol_neg_1_37,00120$
      0000E3 78r00            [12]  271 	mov	r0,#_atol_ret_1_37
      0000E5 E2               [24]  272 	movx	a,@r0
      0000E6 D3               [12]  273 	setb	c
      0000E7 F4               [12]  274 	cpl	a
      0000E8 34 00            [12]  275 	addc	a,#0x00
      0000EA FC               [12]  276 	mov	r4,a
      0000EB 08               [12]  277 	inc	r0
      0000EC E2               [24]  278 	movx	a,@r0
      0000ED F4               [12]  279 	cpl	a
      0000EE 34 00            [12]  280 	addc	a,#0x00
      0000F0 FD               [12]  281 	mov	r5,a
      0000F1 08               [12]  282 	inc	r0
      0000F2 E2               [24]  283 	movx	a,@r0
      0000F3 F4               [12]  284 	cpl	a
      0000F4 34 00            [12]  285 	addc	a,#0x00
      0000F6 FE               [12]  286 	mov	r6,a
      0000F7 08               [12]  287 	inc	r0
      0000F8 E2               [24]  288 	movx	a,@r0
      0000F9 F4               [12]  289 	cpl	a
      0000FA 34 00            [12]  290 	addc	a,#0x00
      0000FC FF               [12]  291 	mov	r7,a
      0000FD 80 0D            [24]  292 	sjmp	00121$
      0000FF                        293 00120$:
      0000FF 78r00            [12]  294 	mov	r0,#_atol_ret_1_37
      000101 E2               [24]  295 	movx	a,@r0
      000102 FC               [12]  296 	mov	r4,a
      000103 08               [12]  297 	inc	r0
      000104 E2               [24]  298 	movx	a,@r0
      000105 FD               [12]  299 	mov	r5,a
      000106 08               [12]  300 	inc	r0
      000107 E2               [24]  301 	movx	a,@r0
      000108 FE               [12]  302 	mov	r6,a
      000109 08               [12]  303 	inc	r0
      00010A E2               [24]  304 	movx	a,@r0
      00010B FF               [12]  305 	mov	r7,a
      00010C                        306 00121$:
      00010C 8C 82            [24]  307 	mov	dpl,r4
      00010E 8D 83            [24]  308 	mov	dph,r5
      000110 8E F0            [24]  309 	mov	b,r6
      000112 EF               [12]  310 	mov	a,r7
      000113 22               [24]  311 	ret
                                    312 	.area CSEG    (CODE)
                                    313 	.area CONST   (CODE)
                                    314 	.area XINIT   (CODE)
                                    315 	.area CABS    (ABS,CODE)
