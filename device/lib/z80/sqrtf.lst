                              1 ;--------------------------------------------------------
                              2 ; File Created by SDCC : free open source ANSI-C Compiler
                              3 ; Version 3.5.0 #9253 (Apr  4 2022) (Linux)
                              4 ; This file was generated Mon Apr  4 14:15:22 2022
                              5 ;--------------------------------------------------------
                              6 	.module sqrtf
                              7 	.optsdcc -mz80
                              8 	
                              9 ;--------------------------------------------------------
                             10 ; Public variables in this module
                             11 ;--------------------------------------------------------
                             12 	.globl _ldexpf
                             13 	.globl _frexpf
                             14 	.globl _sqrtf
                             15 ;--------------------------------------------------------
                             16 ; special function registers
                             17 ;--------------------------------------------------------
                             18 ;--------------------------------------------------------
                             19 ; ram data
                             20 ;--------------------------------------------------------
                             21 	.area _DATA
                             22 ;--------------------------------------------------------
                             23 ; ram data
                             24 ;--------------------------------------------------------
                             25 	.area _INITIALIZED
                             26 ;--------------------------------------------------------
                             27 ; absolute external ram data
                             28 ;--------------------------------------------------------
                             29 	.area _DABS (ABS)
                             30 ;--------------------------------------------------------
                             31 ; global & static initialisations
                             32 ;--------------------------------------------------------
                             33 	.area _HOME
                             34 	.area _GSINIT
                             35 	.area _GSFINAL
                             36 	.area _GSINIT
                             37 ;--------------------------------------------------------
                             38 ; Home
                             39 ;--------------------------------------------------------
                             40 	.area _HOME
                             41 	.area _HOME
                             42 ;--------------------------------------------------------
                             43 ; code
                             44 ;--------------------------------------------------------
                             45 	.area _CODE
                             46 ;../sqrtf.c:37: float sqrtf(float x) _FLOAT_FUNC_REENTRANT
                             47 ;	---------------------------------
                             48 ; Function sqrtf
                             49 ; ---------------------------------
   0000                      50 _sqrtf::
   0000 DD E5         [15]   51 	push	ix
   0002 DD 21 00 00   [14]   52 	ld	ix,#0
   0006 DD 39         [15]   53 	add	ix,sp
   0008 21 F6 FF      [10]   54 	ld	hl,#-10
   000B 39            [11]   55 	add	hl,sp
   000C F9            [ 6]   56 	ld	sp,hl
                             57 ;../sqrtf.c:42: if (x==0.0) return x;
   000D DD 7E 07      [19]   58 	ld	a,7 (ix)
   0010 CB BF         [ 8]   59 	res	7, a
   0012 DD B6 06      [19]   60 	or	a, 6 (ix)
   0015 DD B6 05      [19]   61 	or	a, 5 (ix)
   0018 DD B6 04      [19]   62 	or	a,4 (ix)
   001B 20 0F         [12]   63 	jr	NZ,00107$
   001D DD 6E 04      [19]   64 	ld	l,4 (ix)
   0020 DD 66 05      [19]   65 	ld	h,5 (ix)
   0023 DD 5E 06      [19]   66 	ld	e,6 (ix)
   0026 DD 56 07      [19]   67 	ld	d,7 (ix)
   0029 C3r99r01      [10]   68 	jp	00111$
   002C                      69 00107$:
                             70 ;../sqrtf.c:43: else if (x==1.0) return 1.0;
   002C 21 80 3F      [10]   71 	ld	hl,#0x3F80
   002F E5            [11]   72 	push	hl
   0030 21 00 00      [10]   73 	ld	hl,#0x0000
   0033 E5            [11]   74 	push	hl
   0034 DD 6E 06      [19]   75 	ld	l,6 (ix)
   0037 DD 66 07      [19]   76 	ld	h,7 (ix)
   003A E5            [11]   77 	push	hl
   003B DD 6E 04      [19]   78 	ld	l,4 (ix)
   003E DD 66 05      [19]   79 	ld	h,5 (ix)
   0041 E5            [11]   80 	push	hl
   0042 CDr00r00      [17]   81 	call	___fseq
   0045 F1            [10]   82 	pop	af
   0046 F1            [10]   83 	pop	af
   0047 F1            [10]   84 	pop	af
   0048 F1            [10]   85 	pop	af
   0049 7D            [ 4]   86 	ld	a,l
   004A B7            [ 4]   87 	or	a, a
   004B 28 09         [12]   88 	jr	Z,00104$
   004D 21 00 00      [10]   89 	ld	hl,#0x0000
   0050 11 80 3F      [10]   90 	ld	de,#0x3F80
   0053 C3r99r01      [10]   91 	jp	00111$
   0056                      92 00104$:
                             93 ;../sqrtf.c:44: else if (x<0.0)
   0056 21 00 00      [10]   94 	ld	hl,#0x0000
   0059 E5            [11]   95 	push	hl
   005A 21 00 00      [10]   96 	ld	hl,#0x0000
   005D E5            [11]   97 	push	hl
   005E DD 6E 06      [19]   98 	ld	l,6 (ix)
   0061 DD 66 07      [19]   99 	ld	h,7 (ix)
   0064 E5            [11]  100 	push	hl
   0065 DD 6E 04      [19]  101 	ld	l,4 (ix)
   0068 DD 66 05      [19]  102 	ld	h,5 (ix)
   006B E5            [11]  103 	push	hl
   006C CDr00r00      [17]  104 	call	___fslt
   006F F1            [10]  105 	pop	af
   0070 F1            [10]  106 	pop	af
   0071 F1            [10]  107 	pop	af
   0072 F1            [10]  108 	pop	af
   0073 7D            [ 4]  109 	ld	a,l
   0074 B7            [ 4]  110 	or	a, a
   0075 28 0E         [12]  111 	jr	Z,00108$
                            112 ;../sqrtf.c:46: errno=EDOM;
   0077 21 21 00      [10]  113 	ld	hl,#0x0021
   007A 22r00r00      [16]  114 	ld	(_errno),hl
                            115 ;../sqrtf.c:47: return 0.0;
   007D 21 00 00      [10]  116 	ld	hl,#0x0000
   0080 5D            [ 4]  117 	ld	e,l
   0081 54            [ 4]  118 	ld	d,h
   0082 C3r99r01      [10]  119 	jp	00111$
   0085                     120 00108$:
                            121 ;../sqrtf.c:49: f=frexpf(x, &n);
   0085 21 00 00      [10]  122 	ld	hl,#0x0000
   0088 39            [11]  123 	add	hl,sp
   0089 E5            [11]  124 	push	hl
   008A DD 6E 06      [19]  125 	ld	l,6 (ix)
   008D DD 66 07      [19]  126 	ld	h,7 (ix)
   0090 E5            [11]  127 	push	hl
   0091 DD 6E 04      [19]  128 	ld	l,4 (ix)
   0094 DD 66 05      [19]  129 	ld	h,5 (ix)
   0097 E5            [11]  130 	push	hl
   0098 CDr00r00      [17]  131 	call	_frexpf
   009B F1            [10]  132 	pop	af
   009C F1            [10]  133 	pop	af
   009D F1            [10]  134 	pop	af
   009E DD 75 F8      [19]  135 	ld	-8 (ix),l
   00A1 DD 74 F9      [19]  136 	ld	-7 (ix),h
   00A4 DD 73 FA      [19]  137 	ld	-6 (ix),e
   00A7 DD 72 FB      [19]  138 	ld	-5 (ix),d
                            139 ;../sqrtf.c:50: y=0.41731+0.59016*f; /*Educated guess*/
   00AA DD 6E FA      [19]  140 	ld	l,-6 (ix)
   00AD DD 66 FB      [19]  141 	ld	h,-5 (ix)
   00B0 E5            [11]  142 	push	hl
   00B1 DD 6E F8      [19]  143 	ld	l,-8 (ix)
   00B4 DD 66 F9      [19]  144 	ld	h,-7 (ix)
   00B7 E5            [11]  145 	push	hl
   00B8 21 17 3F      [10]  146 	ld	hl,#0x3F17
   00BB E5            [11]  147 	push	hl
   00BC 21 BA 14      [10]  148 	ld	hl,#0x14BA
   00BF E5            [11]  149 	push	hl
   00C0 CDr00r00      [17]  150 	call	___fsmul
   00C3 F1            [10]  151 	pop	af
   00C4 F1            [10]  152 	pop	af
   00C5 F1            [10]  153 	pop	af
   00C6 F1            [10]  154 	pop	af
   00C7 4D            [ 4]  155 	ld	c,l
   00C8 44            [ 4]  156 	ld	b,h
   00C9 21 D5 3E      [10]  157 	ld	hl,#0x3ED5
   00CC E5            [11]  158 	push	hl
   00CD 21 A8 A9      [10]  159 	ld	hl,#0xA9A8
   00D0 E5            [11]  160 	push	hl
   00D1 D5            [11]  161 	push	de
   00D2 C5            [11]  162 	push	bc
   00D3 CDr00r00      [17]  163 	call	___fsadd
   00D6 F1            [10]  164 	pop	af
   00D7 F1            [10]  165 	pop	af
   00D8 F1            [10]  166 	pop	af
   00D9 F1            [10]  167 	pop	af
   00DA 4D            [ 4]  168 	ld	c,l
   00DB 44            [ 4]  169 	ld	b,h
                            170 ;../sqrtf.c:52: y+=f/y;
   00DC C5            [11]  171 	push	bc
   00DD D5            [11]  172 	push	de
   00DE D5            [11]  173 	push	de
   00DF C5            [11]  174 	push	bc
   00E0 DD 6E FA      [19]  175 	ld	l,-6 (ix)
   00E3 DD 66 FB      [19]  176 	ld	h,-5 (ix)
   00E6 E5            [11]  177 	push	hl
   00E7 DD 6E F8      [19]  178 	ld	l,-8 (ix)
   00EA DD 66 F9      [19]  179 	ld	h,-7 (ix)
   00ED E5            [11]  180 	push	hl
   00EE CDr00r00      [17]  181 	call	___fsdiv
   00F1 F1            [10]  182 	pop	af
   00F2 F1            [10]  183 	pop	af
   00F3 F1            [10]  184 	pop	af
   00F4 F1            [10]  185 	pop	af
   00F5 DD 72 FF      [19]  186 	ld	-1 (ix),d
   00F8 DD 73 FE      [19]  187 	ld	-2 (ix),e
   00FB DD 74 FD      [19]  188 	ld	-3 (ix),h
   00FE DD 75 FC      [19]  189 	ld	-4 (ix),l
   0101 D1            [10]  190 	pop	de
   0102 C1            [10]  191 	pop	bc
   0103 DD 6E FE      [19]  192 	ld	l,-2 (ix)
   0106 DD 66 FF      [19]  193 	ld	h,-1 (ix)
   0109 E5            [11]  194 	push	hl
   010A DD 6E FC      [19]  195 	ld	l,-4 (ix)
   010D DD 66 FD      [19]  196 	ld	h,-3 (ix)
   0110 E5            [11]  197 	push	hl
   0111 D5            [11]  198 	push	de
   0112 C5            [11]  199 	push	bc
   0113 CDr00r00      [17]  200 	call	___fsadd
   0116 F1            [10]  201 	pop	af
   0117 F1            [10]  202 	pop	af
   0118 F1            [10]  203 	pop	af
   0119 F1            [10]  204 	pop	af
   011A EB            [ 4]  205 	ex	de, hl
                            206 ;../sqrtf.c:53: y=ldexpf(y, -2) + f/y; /*Faster version of 0.25 * y + f/y*/
   011B E5            [11]  207 	push	hl
   011C D5            [11]  208 	push	de
   011D 01 FE FF      [10]  209 	ld	bc,#0xFFFE
   0120 C5            [11]  210 	push	bc
   0121 E5            [11]  211 	push	hl
   0122 D5            [11]  212 	push	de
   0123 CDr00r00      [17]  213 	call	_ldexpf
   0126 F1            [10]  214 	pop	af
   0127 F1            [10]  215 	pop	af
   0128 F1            [10]  216 	pop	af
   0129 DD 72 FF      [19]  217 	ld	-1 (ix),d
   012C DD 73 FE      [19]  218 	ld	-2 (ix),e
   012F DD 74 FD      [19]  219 	ld	-3 (ix),h
   0132 DD 75 FC      [19]  220 	ld	-4 (ix),l
   0135 DD 6E FA      [19]  221 	ld	l,-6 (ix)
   0138 DD 66 FB      [19]  222 	ld	h,-5 (ix)
   013B E5            [11]  223 	push	hl
   013C DD 6E F8      [19]  224 	ld	l,-8 (ix)
   013F DD 66 F9      [19]  225 	ld	h,-7 (ix)
   0142 E5            [11]  226 	push	hl
   0143 CDr00r00      [17]  227 	call	___fsdiv
   0146 F1            [10]  228 	pop	af
   0147 F1            [10]  229 	pop	af
   0148 F1            [10]  230 	pop	af
   0149 F1            [10]  231 	pop	af
   014A EB            [ 4]  232 	ex	de, hl
   014B E5            [11]  233 	push	hl
   014C D5            [11]  234 	push	de
   014D DD 6E FE      [19]  235 	ld	l,-2 (ix)
   0150 DD 66 FF      [19]  236 	ld	h,-1 (ix)
   0153 E5            [11]  237 	push	hl
   0154 DD 6E FC      [19]  238 	ld	l,-4 (ix)
   0157 DD 66 FD      [19]  239 	ld	h,-3 (ix)
   015A E5            [11]  240 	push	hl
   015B CDr00r00      [17]  241 	call	___fsadd
   015E F1            [10]  242 	pop	af
   015F F1            [10]  243 	pop	af
   0160 F1            [10]  244 	pop	af
   0161 F1            [10]  245 	pop	af
   0162 4D            [ 4]  246 	ld	c,l
   0163 44            [ 4]  247 	ld	b,h
                            248 ;../sqrtf.c:55: if (n&1)
   0164 DD CB F6 46   [20]  249 	bit	0, -10 (ix)
   0168 28 1B         [12]  250 	jr	Z,00110$
                            251 ;../sqrtf.c:57: y*=0.7071067812;
   016A D5            [11]  252 	push	de
   016B C5            [11]  253 	push	bc
   016C 21 35 3F      [10]  254 	ld	hl,#0x3F35
   016F E5            [11]  255 	push	hl
   0170 21 F3 04      [10]  256 	ld	hl,#0x04F3
   0173 E5            [11]  257 	push	hl
   0174 CDr00r00      [17]  258 	call	___fsmul
   0177 F1            [10]  259 	pop	af
   0178 F1            [10]  260 	pop	af
   0179 F1            [10]  261 	pop	af
   017A F1            [10]  262 	pop	af
   017B 4D            [ 4]  263 	ld	c,l
   017C 44            [ 4]  264 	ld	b,h
                            265 ;../sqrtf.c:58: ++n;
   017D DD 34 F6      [23]  266 	inc	-10 (ix)
   0180 20 03         [12]  267 	jr	NZ,00135$
   0182 DD 34 F7      [23]  268 	inc	-9 (ix)
   0185                     269 00135$:
   0185                     270 00110$:
                            271 ;../sqrtf.c:60: return ldexpf(y, n/2);
   0185 E1            [10]  272 	pop	hl
   0186 E5            [11]  273 	push	hl
   0187 CB 7C         [ 8]  274 	bit	7, h
   0189 28 01         [12]  275 	jr	Z,00113$
   018B 23            [ 6]  276 	inc	hl
   018C                     277 00113$:
   018C CB 2C         [ 8]  278 	sra	h
   018E CB 1D         [ 8]  279 	rr	l
   0190 E5            [11]  280 	push	hl
   0191 D5            [11]  281 	push	de
   0192 C5            [11]  282 	push	bc
   0193 CDr00r00      [17]  283 	call	_ldexpf
   0196 F1            [10]  284 	pop	af
   0197 F1            [10]  285 	pop	af
   0198 F1            [10]  286 	pop	af
   0199                     287 00111$:
   0199 DD F9         [10]  288 	ld	sp, ix
   019B DD E1         [14]  289 	pop	ix
   019D C9            [10]  290 	ret
                            291 	.area _CODE
                            292 	.area _INITIALIZER
                            293 	.area _CABS (ABS)
