                              1 ;--------------------------------------------------------
                              2 ; File Created by SDCC : free open source ANSI-C Compiler
                              3 ; Version 3.5.0 #9253 (Apr  4 2022) (Linux)
                              4 ; This file was generated Mon Apr  4 14:16:51 2022
                              5 ;--------------------------------------------------------
                              6 	.module puts
                              7 	.optsdcc -mgbz80
                              8 	
                              9 ;--------------------------------------------------------
                             10 ; Public variables in this module
                             11 ;--------------------------------------------------------
                             12 	.globl _puts
                             13 	.globl _putchar
                             14 ;--------------------------------------------------------
                             15 ; ram data
                             16 ;--------------------------------------------------------
                             17 	.area _DATA
                             18 ;--------------------------------------------------------
                             19 ; absolute external ram data
                             20 ;--------------------------------------------------------
                             21 	.area _DABS (ABS)
                             22 ;--------------------------------------------------------
                             23 ; global & static initialisations
                             24 ;--------------------------------------------------------
                             25 	.area _HOME
                             26 	.area _GSINIT
                             27 	.area _GSFINAL
                             28 	.area _GSINIT
                             29 ;--------------------------------------------------------
                             30 ; Home
                             31 ;--------------------------------------------------------
                             32 	.area _HOME
                             33 	.area _HOME
                             34 ;--------------------------------------------------------
                             35 ; code
                             36 ;--------------------------------------------------------
                             37 	.area _CODE
                             38 ;../puts.c:31: int puts (char *s)
                             39 ;	---------------------------------
                             40 ; Function puts
                             41 ; ---------------------------------
   0000                      42 _puts::
   0000 E8 FD                43 	add	sp, #-3
                             44 ;../puts.c:34: while (*s){
   0002 F8 05                45 	ldhl	sp,#5
   0004 2A                   46 	ld	a,(hl+)
   0005 5E                   47 	ld	e, (hl)
   0006 F8 00                48 	ldhl	sp,#0
   0008 22                   49 	ld	(hl+),a
   0009 73                   50 	ld	(hl),e
   000A 01 00 00             51 	ld	bc,#0x0000
   000D                      52 00101$:
   000D D1                   53 	pop	de
   000E D5                   54 	push	de
   000F 1A                   55 	ld	a,(de)
   0010 F8 02                56 	ldhl	sp,#2
   0012 77                   57 	ld	(hl),a
                             58 ;../puts.c:36: i++;
   0013 03                   59 	inc	bc
                             60 ;../puts.c:34: while (*s){
   0014 7E                   61 	ld	a,(hl)
   0015 B7                   62 	or	a, a
   0016 28 11                63 	jr	Z,00103$
                             64 ;../puts.c:35: putchar(*s++);
   0018 3A                   65 	ld	a,(hl-)
   0019 2B                   66 	dec	hl
   001A 34                   67 	inc	(hl)
   001B 20 02                68 	jr	NZ,00115$
   001D 23                   69 	inc	hl
   001E 34                   70 	inc	(hl)
   001F                      71 00115$:
   001F C5                   72 	push	bc
   0020 F5                   73 	push	af
   0021 33                   74 	inc	sp
   0022 CDr00r00             75 	call	_putchar
   0025 33                   76 	inc	sp
   0026 C1                   77 	pop	bc
                             78 ;../puts.c:36: i++;
   0027 18 E4                79 	jr	00101$
   0029                      80 00103$:
                             81 ;../puts.c:38: putchar('\n');
   0029 C5                   82 	push	bc
   002A 3E 0A                83 	ld	a,#0x0A
   002C F5                   84 	push	af
   002D 33                   85 	inc	sp
   002E CDr00r00             86 	call	_putchar
   0031 33                   87 	inc	sp
   0032 C1                   88 	pop	bc
                             89 ;../puts.c:39: return i+1;
   0033 59                   90 	ld	e, c
   0034 50                   91 	ld	d, b
   0035 E8 03                92 	add	sp, #3
   0037 C9                   93 	ret
                             94 	.area _CODE
                             95 	.area _CABS (ABS)
