                              1 ;--------------------------------------------------------
                              2 ; File Created by SDCC : free open source ANSI-C Compiler
                              3 ; Version 3.5.0 #9253 (Apr  4 2022) (Linux)
                              4 ; This file was generated Mon Apr  4 14:10:37 2022
                              5 ;--------------------------------------------------------
                              6 	.cs08
                              7 	.module _strncat
                              8 	.optsdcc -ms08
                              9 	
                             10 	.area HOME    (CODE)
                             11 	.area GSINIT0 (CODE)
                             12 	.area GSINIT  (CODE)
                             13 	.area GSFINAL (CODE)
                             14 	.area CSEG    (CODE)
                             15 	.area XINIT   (CODE)
                             16 	.area CONST   (CODE)
                             17 	.area DSEG    (PAG)
                             18 	.area OSEG    (PAG, OVR)
                             19 	.area XSEG
                             20 	.area XISEG
                             21 ;--------------------------------------------------------
                             22 ; Public variables in this module
                             23 ;--------------------------------------------------------
                             24 	.globl _strncat_PARM_3
                             25 	.globl _strncat_PARM_2
                             26 	.globl _strncat
                             27 ;--------------------------------------------------------
                             28 ; ram data
                             29 ;--------------------------------------------------------
                             30 	.area DSEG    (PAG)
                             31 ;--------------------------------------------------------
                             32 ; overlayable items in ram 
                             33 ;--------------------------------------------------------
                             34 	.area	OSEG    (PAG, OVR)
   0000                      35 _strncat_sloc0_1_0:
   0000                      36 	.ds 2
   0002                      37 _strncat_sloc1_1_0:
   0002                      38 	.ds 2
   0004                      39 _strncat_sloc2_1_0:
   0004                      40 	.ds 2
                             41 ;--------------------------------------------------------
                             42 ; absolute ram data
                             43 ;--------------------------------------------------------
                             44 	.area IABS    (ABS)
                             45 	.area IABS    (ABS)
                             46 ;--------------------------------------------------------
                             47 ; absolute external ram data
                             48 ;--------------------------------------------------------
                             49 	.area XABS    (ABS)
                             50 ;--------------------------------------------------------
                             51 ; external initialized ram data
                             52 ;--------------------------------------------------------
                             53 	.area XISEG
                             54 ;--------------------------------------------------------
                             55 ; extended address mode data
                             56 ;--------------------------------------------------------
                             57 	.area XSEG
   0000                      58 _strncat_PARM_2:
   0000                      59 	.ds 2
   0002                      60 _strncat_PARM_3:
   0002                      61 	.ds 2
   0004                      62 _strncat_front_1_21:
   0004                      63 	.ds 2
   0006                      64 _strncat_start_1_22:
   0006                      65 	.ds 2
                             66 ;--------------------------------------------------------
                             67 ; global & static initialisations
                             68 ;--------------------------------------------------------
                             69 	.area HOME    (CODE)
                             70 	.area GSINIT  (CODE)
                             71 	.area GSFINAL (CODE)
                             72 	.area GSINIT  (CODE)
                             73 ;--------------------------------------------------------
                             74 ; Home
                             75 ;--------------------------------------------------------
                             76 	.area HOME    (CODE)
                             77 	.area HOME    (CODE)
                             78 ;--------------------------------------------------------
                             79 ; code
                             80 ;--------------------------------------------------------
                             81 	.area CSEG    (CODE)
                             82 ;------------------------------------------------------------
                             83 ;Allocation info for local variables in function 'strncat'
                             84 ;------------------------------------------------------------
                             85 ;back                      Allocated with name '_strncat_PARM_2'
                             86 ;count                     Allocated with name '_strncat_PARM_3'
                             87 ;front                     Allocated with name '_strncat_front_1_21'
                             88 ;start                     Allocated with name '_strncat_start_1_22'
                             89 ;sloc0                     Allocated with name '_strncat_sloc0_1_0'
                             90 ;sloc1                     Allocated with name '_strncat_sloc1_1_0'
                             91 ;sloc2                     Allocated with name '_strncat_sloc2_1_0'
                             92 ;------------------------------------------------------------
                             93 ;../_strncat.c:31: char * strncat ( char * front, const char * back, size_t count )
                             94 ;	-----------------------------------------
                             95 ;	 function strncat
                             96 ;	-----------------------------------------
                             97 ;	Register assignment might be sub-optimal.
                             98 ;	Stack space usage: 0 bytes.
   0000                      99 _strncat:
   0000 89            [ 2]  100 	pshx
   0001 97            [ 1]  101 	tax
   0002 8A            [ 3]  102 	pulh
                            103 ;../_strncat.c:33: char *start = front;
   0003 96r00r06      [ 5]  104 	sthx	_strncat_start_1_22
                            105 ;../_strncat.c:35: while (*front++);
   0006                     106 00101$:
   0006 F6            [ 3]  107 	lda	,x
   0007 AF 01         [ 2]  108 	aix	#1
   0009 4D            [ 1]  109 	tsta
   000A 26 FA         [ 3]  110 	bne	00101$
                            111 ;../_strncat.c:37: front--;
   000C AF FF         [ 2]  112 	aix	#-1
   000E 96r00r04      [ 5]  113 	sthx	_strncat_front_1_21
                            114 ;../_strncat.c:39: while (count--)
   0011 32r00r00      [ 5]  115 	ldhx	_strncat_PARM_2
   0014 35*00         [ 4]  116 	sthx	*_strncat_sloc0_1_0
   0016 32r00r04      [ 5]  117 	ldhx	_strncat_front_1_21
   0019 35*02         [ 4]  118 	sthx	*_strncat_sloc1_1_0
   001B 32r00r02      [ 5]  119 	ldhx	_strncat_PARM_3
   001E                     120 00106$:
   001E 35*04         [ 4]  121 	sthx	*_strncat_sloc2_1_0
   0020 AF FF         [ 2]  122 	aix	#-1
   0022 B6*05         [ 3]  123 	lda	*(_strncat_sloc2_1_0 + 1)
   0024 BA*04         [ 3]  124 	ora	*_strncat_sloc2_1_0
   0026 27 2C         [ 3]  125 	beq	00108$
                            126 ;../_strncat.c:40: if (!(*front++ = *back++))
   0028 89            [ 2]  127 	pshx
   0029 8B            [ 2]  128 	pshh
   002A 55*00         [ 4]  129 	ldhx	*_strncat_sloc0_1_0
   002C F6            [ 3]  130 	lda	,x
   002D AF 01         [ 2]  131 	aix	#1
   002F 35*00         [ 4]  132 	sthx	*_strncat_sloc0_1_0
   0031 8A            [ 3]  133 	pulh
   0032 88            [ 3]  134 	pulx
   0033 89            [ 2]  135 	pshx
   0034 8B            [ 2]  136 	pshh
   0035 55*02         [ 4]  137 	ldhx	*_strncat_sloc1_1_0
   0037 F7            [ 2]  138 	sta	,x
   0038 AF 01         [ 2]  139 	aix	#1
   003A 35*02         [ 4]  140 	sthx	*_strncat_sloc1_1_0
   003C 8A            [ 3]  141 	pulh
   003D 88            [ 3]  142 	pulx
   003E 87            [ 2]  143 	psha
   003F B6*02         [ 3]  144 	lda	*_strncat_sloc1_1_0
   0041 C7r00r04      [ 4]  145 	sta	_strncat_front_1_21
   0044 B6*03         [ 3]  146 	lda	*(_strncat_sloc1_1_0 + 1)
   0046 C7r00r05      [ 4]  147 	sta	(_strncat_front_1_21 + 1)
   0049 86            [ 3]  148 	pula
   004A 4D            [ 1]  149 	tsta
   004B 26 D1         [ 3]  150 	bne	00106$
                            151 ;../_strncat.c:41: return(start);
   004D CEr00r06      [ 4]  152 	ldx	_strncat_start_1_22
   0050 C6r00r07      [ 4]  153 	lda	(_strncat_start_1_22 + 1)
   0053 81            [ 6]  154 	rts
   0054                     155 00108$:
                            156 ;../_strncat.c:43: *front = '\0';
   0054 32r00r04      [ 5]  157 	ldhx	_strncat_front_1_21
   0057 4F            [ 1]  158 	clra
   0058 F7            [ 2]  159 	sta	,x
                            160 ;../_strncat.c:44: return(start);
   0059 CEr00r06      [ 4]  161 	ldx	_strncat_start_1_22
   005C C6r00r07      [ 4]  162 	lda	(_strncat_start_1_22 + 1)
   005F 81            [ 6]  163 	rts
                            164 	.area CSEG    (CODE)
                            165 	.area CONST   (CODE)
                            166 	.area XINIT   (CODE)
                            167 	.area CABS    (ABS,CODE)
