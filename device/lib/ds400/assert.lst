                                      1 ;--------------------------------------------------------
                                      2 ; File Created by SDCC : free open source ANSI-C Compiler
                                      3 ; Version 3.5.0 #9253 (Apr  4 2022) (Linux)
                                      4 ; This file was generated Mon Apr  4 14:10:30 2022
                                      5 ;--------------------------------------------------------
                                      6 	.module assert
                                      7 	.optsdcc -mds400 --model-flat24
                                      8 	
                                      9 ;--------------------------------------------------------
                                     10 ; CPU specific extensions
                                     11 ;--------------------------------------------------------
                                     12 	.DS80C390
                                     13 	.amode	2	; 24 bit flat addressing
                           000082    14 dpl	=	0x82
                           000083    15 dph	=	0x83
                           000084    16 dpl1	=	0x84
                           000085    17 dph1	=	0x85
                           000086    18 dps	=	0x86
                           000093    19 dpx	=	0x93
                           000095    20 dpx1	=	0x95
                           00009B    21 esp	=	0x9B
                           00009C    22 ap	=	0x9C
                           00009C    23 acc1	=	0x9C
                           0000D1    24 mcnt0	=	0xD1
                           0000D2    25 mcnt1	=	0xD2
                           0000D3    26 ma	=	0xD3
                           0000D4    27 mb	=	0xD4
                           0000D5    28 mc	=	0xD5
                           00009D    29 acon	=	0x9D
                           0000D1    30 F1	=	0xD1	; user flag
                                     31 ;--------------------------------------------------------
                                     32 ; Public variables in this module
                                     33 ;--------------------------------------------------------
                                     34 	.globl __assert
                                     35 	.globl _printf
                                     36 	.globl __assert_PARM_3
                                     37 	.globl __assert_PARM_2
                                     38 ;--------------------------------------------------------
                                     39 ; special function registers
                                     40 ;--------------------------------------------------------
                           000080    41 _P4	=	0x0080
                           000081    42 _SP	=	0x0081
                           000082    43 _DPL	=	0x0082
                           000083    44 _DPH	=	0x0083
                           000084    45 _DPL1	=	0x0084
                           000085    46 _DPH1	=	0x0085
                           000086    47 _DPS	=	0x0086
                           000087    48 _PCON	=	0x0087
                           000088    49 _TCON	=	0x0088
                           000089    50 _TMOD	=	0x0089
                           00008A    51 _TL0	=	0x008a
                           00008B    52 _TL1	=	0x008b
                           00008C    53 _TH0	=	0x008c
                           00008D    54 _TH1	=	0x008d
                           00008E    55 _CKCON	=	0x008e
                           000090    56 _P1	=	0x0090
                           000091    57 _EXIF	=	0x0091
                           000092    58 _P4CNT	=	0x0092
                           000093    59 _DPX	=	0x0093
                           000095    60 _DPX1	=	0x0095
                           000098    61 _SCON0	=	0x0098
                           000099    62 _SBUF0	=	0x0099
                           00009B    63 _ESP	=	0x009b
                           00009C    64 _AP	=	0x009c
                           00009D    65 _ACON	=	0x009d
                           0000A0    66 _P2	=	0x00a0
                           0000A1    67 _P5	=	0x00a1
                           0000A2    68 _P5CNT	=	0x00a2
                           0000A8    69 _IE	=	0x00a8
                           0000B0    70 _P3	=	0x00b0
                           0000B8    71 _IP	=	0x00b8
                           0000C0    72 _SCON1	=	0x00c0
                           0000C1    73 _SBUF1	=	0x00c1
                           0000C4    74 _PMR	=	0x00c4
                           0000C6    75 _MCON	=	0x00c6
                           0000C7    76 _TA	=	0x00c7
                           0000C8    77 _T2CON	=	0x00c8
                           0000C9    78 _T2MOD	=	0x00c9
                           0000CA    79 _RCAP2L	=	0x00ca
                           0000CA    80 _RTL2	=	0x00ca
                           0000CB    81 _RCAP2H	=	0x00cb
                           0000CB    82 _RTH2	=	0x00cb
                           0000CC    83 _TL2	=	0x00cc
                           0000CD    84 _TH2	=	0x00cd
                           0000D0    85 _PSW	=	0x00d0
                           0000D1    86 _MCNT0	=	0x00d1
                           0000D2    87 _MCNT1	=	0x00d2
                           0000D3    88 _MA	=	0x00d3
                           0000D4    89 _MB	=	0x00d4
                           0000D5    90 _MC	=	0x00d5
                           0000D8    91 _WDCON	=	0x00d8
                           0000E0    92 _ACC	=	0x00e0
                           0000E8    93 _EIE	=	0x00e8
                           0000EA    94 _MXAX	=	0x00ea
                           0000F0    95 _B	=	0x00f0
                           0000F8    96 _EIP	=	0x00f8
                           008C8A    97 _TMR0	=	0x8c8a
                           008D8B    98 _TMR1	=	0x8d8b
                           00CDCC    99 _TMR2	=	0xcdcc
                           00CBCA   100 _RCAP2	=	0xcbca
                                    101 ;--------------------------------------------------------
                                    102 ; special function bits
                                    103 ;--------------------------------------------------------
                           000088   104 _IT0	=	0x0088
                           000089   105 _IE0	=	0x0089
                           00008A   106 _IT1	=	0x008a
                           00008B   107 _IE1	=	0x008b
                           00008C   108 _TR0	=	0x008c
                           00008D   109 _TF0	=	0x008d
                           00008E   110 _TR1	=	0x008e
                           00008F   111 _TF1	=	0x008f
                           000090   112 _T2	=	0x0090
                           000091   113 _T2EX	=	0x0091
                           000092   114 _RXD1	=	0x0092
                           000093   115 _TXD1	=	0x0093
                           000094   116 _INT2	=	0x0094
                           000095   117 _INT3	=	0x0095
                           000096   118 _INT4	=	0x0096
                           000097   119 _INT5	=	0x0097
                           000098   120 _RI_0	=	0x0098
                           000099   121 _TI_0	=	0x0099
                           00009A   122 _RB8_0	=	0x009a
                           00009B   123 _TB8_0	=	0x009b
                           00009C   124 _REN_0	=	0x009c
                           00009D   125 _SM2_0	=	0x009d
                           00009E   126 _SM1_0	=	0x009e
                           00009F   127 _SM0_0	=	0x009f
                           00009F   128 _FE_0	=	0x009f
                           0000A8   129 _EX0	=	0x00a8
                           0000A9   130 _ET0	=	0x00a9
                           0000AA   131 _EX1	=	0x00aa
                           0000AB   132 _ET1	=	0x00ab
                           0000AC   133 _ES0	=	0x00ac
                           0000AD   134 _ET2	=	0x00ad
                           0000AE   135 _ES1	=	0x00ae
                           0000AF   136 _EA	=	0x00af
                           0000B0   137 _RXD0	=	0x00b0
                           0000B1   138 _TXD0	=	0x00b1
                           0000B2   139 _INT0	=	0x00b2
                           0000B3   140 _INT1	=	0x00b3
                           0000B4   141 _T0	=	0x00b4
                           0000B5   142 _T1	=	0x00b5
                           0000B6   143 _WR	=	0x00b6
                           0000B7   144 _RD	=	0x00b7
                           0000B8   145 _PX0	=	0x00b8
                           0000B9   146 _PT0	=	0x00b9
                           0000BA   147 _PX1	=	0x00ba
                           0000BB   148 _PT1	=	0x00bb
                           0000BC   149 _PS0	=	0x00bc
                           0000BD   150 _PT2	=	0x00bd
                           0000BE   151 _PS1	=	0x00be
                           0000C0   152 _RI_1	=	0x00c0
                           0000C1   153 _TI_1	=	0x00c1
                           0000C2   154 _RB8_1	=	0x00c2
                           0000C3   155 _TB8_1	=	0x00c3
                           0000C4   156 _REN_1	=	0x00c4
                           0000C5   157 _SM2_1	=	0x00c5
                           0000C6   158 _SM1_1	=	0x00c6
                           0000C7   159 _SM0_1	=	0x00c7
                           0000C7   160 _FE_1	=	0x00c7
                           0000C8   161 _CP_RL	=	0x00c8
                           0000C9   162 _C_T	=	0x00c9
                           0000CA   163 _TR2	=	0x00ca
                           0000CB   164 _EXEN2	=	0x00cb
                           0000CC   165 _TCLK	=	0x00cc
                           0000CD   166 _RCLK	=	0x00cd
                           0000CE   167 _EXF2	=	0x00ce
                           0000CF   168 _TF2	=	0x00cf
                           0000D0   169 _P	=	0x00d0
                           0000D1   170 _F1	=	0x00d1
                           0000D2   171 _OV	=	0x00d2
                           0000D3   172 _RS0	=	0x00d3
                           0000D4   173 _RS1	=	0x00d4
                           0000D5   174 _F0	=	0x00d5
                           0000D6   175 _AC	=	0x00d6
                           0000D7   176 _CY	=	0x00d7
                           0000D8   177 _RWT	=	0x00d8
                           0000D9   178 _EWT	=	0x00d9
                           0000DA   179 _WDRF	=	0x00da
                           0000DB   180 _WDIF	=	0x00db
                           0000DC   181 _PFI	=	0x00dc
                           0000DD   182 _EPFI	=	0x00dd
                           0000DE   183 _POR	=	0x00de
                           0000DF   184 _SMOD_1	=	0x00df
                           0000E8   185 _EX2	=	0x00e8
                           0000E9   186 _EX3	=	0x00e9
                           0000EA   187 _EX4	=	0x00ea
                           0000EB   188 _EX5	=	0x00eb
                           0000EC   189 _EWDI	=	0x00ec
                           0000ED   190 _C1IE	=	0x00ed
                           0000EE   191 _C0IE	=	0x00ee
                           0000EF   192 _CANBIE	=	0x00ef
                           0000F8   193 _PX2	=	0x00f8
                           0000F9   194 _PX3	=	0x00f9
                           0000FA   195 _PX4	=	0x00fa
                           0000FB   196 _PX5	=	0x00fb
                           0000FC   197 _PWDI	=	0x00fc
                           0000FD   198 _C1IP	=	0x00fd
                           0000FE   199 _C0IP	=	0x00fe
                           0000FF   200 _CANBIP	=	0x00ff
                                    201 ;--------------------------------------------------------
                                    202 ; overlayable register banks
                                    203 ;--------------------------------------------------------
                                    204 	.area REG_BANK_0	(REL,OVR,DATA)
      000000                        205 	.ds 8
                                    206 	.area REG_BANK_3	(REL,OVR,DATA)
      000000                        207 	.ds 8
                                    208 ;--------------------------------------------------------
                                    209 ; internal ram data
                                    210 ;--------------------------------------------------------
                                    211 	.area DSEG    (DATA)
                                    212 ;--------------------------------------------------------
                                    213 ; overlayable items in internal ram 
                                    214 ;--------------------------------------------------------
                                    215 ;--------------------------------------------------------
                                    216 ; indirectly addressable internal ram data
                                    217 ;--------------------------------------------------------
                                    218 	.area ISEG    (DATA)
                                    219 ;--------------------------------------------------------
                                    220 ; absolute internal ram data
                                    221 ;--------------------------------------------------------
                                    222 	.area IABS    (ABS,DATA)
                                    223 	.area IABS    (ABS,DATA)
                                    224 ;--------------------------------------------------------
                                    225 ; bit data
                                    226 ;--------------------------------------------------------
                                    227 	.area BSEG    (BIT)
                                    228 ;--------------------------------------------------------
                                    229 ; paged external ram data
                                    230 ;--------------------------------------------------------
                                    231 	.area PSEG    (PAG,XDATA)
                                    232 ;--------------------------------------------------------
                                    233 ; external ram data
                                    234 ;--------------------------------------------------------
                                    235 	.area XSEG    (XDATA)
      000000                        236 __assert_PARM_2:
      000000                        237 	.ds 4
      000004                        238 __assert_PARM_3:
      000004                        239 	.ds 2
                                    240 ;--------------------------------------------------------
                                    241 ; absolute external ram data
                                    242 ;--------------------------------------------------------
                                    243 	.area XABS    (ABS,XDATA)
                                    244 ;--------------------------------------------------------
                                    245 ; external initialized ram data
                                    246 ;--------------------------------------------------------
                                    247 	.area XISEG   (XDATA)
                                    248 ;--------------------------------------------------------
                                    249 ; global & static initialisations
                                    250 ;--------------------------------------------------------
                                    251 	.area HOME    (CODE)
                                    252 	.area GSINIT  (CODE)
                                    253 	.area GSFINAL (CODE)
                                    254 	.area GSINIT  (CODE)
                                    255 ;--------------------------------------------------------
                                    256 ; Home
                                    257 ;--------------------------------------------------------
                                    258 	.area HOME    (CODE)
                                    259 	.area HOME    (CODE)
                                    260 ;--------------------------------------------------------
                                    261 ; code
                                    262 ;--------------------------------------------------------
                                    263 	.area CSEG    (CODE)
                                    264 ;------------------------------------------------------------
                                    265 ;Allocation info for local variables in function '_assert'
                                    266 ;------------------------------------------------------------
                                    267 ;filename                  Allocated with name '__assert_PARM_2'
                                    268 ;linenumber                Allocated with name '__assert_PARM_3'
                                    269 ;expr                      Allocated to registers r2 r3 r4 r5 
                                    270 ;------------------------------------------------------------
                                    271 ;	assert.c:32: void _assert(char *expr, const char *filename, unsigned int linenumber)
                                    272 ;	-----------------------------------------
                                    273 ;	 function _assert
                                    274 ;	-----------------------------------------
      000000                        275 __assert:
                           000002   276 	ar2 = 0x02
                           000003   277 	ar3 = 0x03
                           000004   278 	ar4 = 0x04
                           000005   279 	ar5 = 0x05
                           000006   280 	ar6 = 0x06
                           000007   281 	ar7 = 0x07
                           000000   282 	ar0 = 0x00
                           000001   283 	ar1 = 0x01
      000000 AA 82            [ 8]  284 	mov	r2,dpl
      000002 AB 83            [ 8]  285 	mov	r3,dph
      000004 AC 93            [ 8]  286 	mov	r4,dpx
      000006 AD F0            [ 8]  287 	mov	r5,b
                                    288 ;	assert.c:34: printf("Assert(%s) failed at line %u in file %s.\n",
      000008 90s00r00r00      [12]  289 	mov	dptr,#__assert_PARM_2
      00000C E0               [ 8]  290 	movx	a,@dptr
      00000D C0 E0            [ 8]  291 	push	acc
      00000F A3               [12]  292 	inc	dptr
      000010 E0               [ 8]  293 	movx	a,@dptr
      000011 C0 E0            [ 8]  294 	push	acc
      000013 A3               [12]  295 	inc	dptr
      000014 E0               [ 8]  296 	movx	a,@dptr
      000015 C0 E0            [ 8]  297 	push	acc
      000017 A3               [12]  298 	inc	dptr
      000018 E0               [ 8]  299 	movx	a,@dptr
      000019 C0 E0            [ 8]  300 	push	acc
      00001B 90s00r00r04      [12]  301 	mov	dptr,#__assert_PARM_3
      00001F E0               [ 8]  302 	movx	a,@dptr
      000020 C0 E0            [ 8]  303 	push	acc
      000022 A3               [12]  304 	inc	dptr
      000023 E0               [ 8]  305 	movx	a,@dptr
      000024 C0 E0            [ 8]  306 	push	acc
      000026 C0 02            [ 8]  307 	push	ar2
      000028 C0 03            [ 8]  308 	push	ar3
      00002A C0 04            [ 8]  309 	push	ar4
      00002C C0 05            [ 8]  310 	push	ar5
      00002E 74r00            [ 8]  311 	mov	a,#___str_0
      000030 C0 E0            [ 8]  312 	push	acc
      000032 74s00            [ 8]  313 	mov	a,#(___str_0 >> 8)
      000034 C0 E0            [ 8]  314 	push	acc
      000036 74s00            [ 8]  315 	mov	a,#(___str_0 >> 16)
      000038 C0 E0            [ 8]  316 	push	acc
      00003A 74 80            [ 8]  317 	mov	a,#0x80
      00003C C0 E0            [ 8]  318 	push	acc
      00003E 12s00r00r00      [16]  319 	lcall	_printf
      000042 C3               [ 4]  320 	clr	c
      000043 E5 81            [ 8]  321 	mov	a,sp
      000045 94 0E            [ 8]  322 	subb	a,#0x0E
      000047 F5 81            [ 8]  323 	mov	sp,a
      000049 E5 9B            [ 8]  324 	mov	a,esp
      00004B 54 03            [ 8]  325 	anl	a,#3
      00004D 44 DC            [ 8]  326 	orl	a,#0xDC
      00004F 94 00            [ 8]  327 	subb	a,#0x00
      000051 F5 9B            [ 8]  328 	mov	esp,a
                                    329 ;	assert.c:36: while(1);
      000053                        330 00102$:
      000053 80 FE            [12]  331 	sjmp 00102$
      000055                        332 00104$:
      000055 22               [16]  333 	ret
                                    334 	.area CSEG    (CODE)
                                    335 	.area CONST   (CODE)
      000000                        336 ___str_0:
      000000 41 73 73 65 72 74 28   337 	.ascii "Assert(%s) failed at line %u in file %s."
             25 73 29 20 66 61 69
             6C 65 64 20 61 74 20
             6C 69 6E 65 20 25 75
             20 69 6E 20 66 69 6C
             65 20 25 73 2E
      000028 0A                     338 	.db 0x0A
      000029 00                     339 	.db 0x00
                                    340 	.area XINIT   (CODE)
                                    341 	.area CABS    (ABS,CODE)
