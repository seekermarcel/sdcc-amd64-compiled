                                      1 ;--------------------------------------------------------
                                      2 ; File Created by SDCC : free open source ANSI-C Compiler
                                      3 ; Version 3.5.0 #9253 (Apr  4 2022) (Linux)
                                      4 ; This file was generated Mon Apr  4 14:17:10 2022
                                      5 ;--------------------------------------------------------
                                      6 	.module ceilf
                                      7 	.optsdcc -mstm8
                                      8 	
                                      9 ;--------------------------------------------------------
                                     10 ; Public variables in this module
                                     11 ;--------------------------------------------------------
                                     12 	.globl _ceilf
                                     13 ;--------------------------------------------------------
                                     14 ; ram data
                                     15 ;--------------------------------------------------------
                                     16 	.area DATA
                                     17 ;--------------------------------------------------------
                                     18 ; ram data
                                     19 ;--------------------------------------------------------
                                     20 	.area INITIALIZED
                                     21 ;--------------------------------------------------------
                                     22 ; absolute external ram data
                                     23 ;--------------------------------------------------------
                                     24 	.area DABS (ABS)
                                     25 ;--------------------------------------------------------
                                     26 ; global & static initialisations
                                     27 ;--------------------------------------------------------
                                     28 	.area HOME
                                     29 	.area GSINIT
                                     30 	.area GSFINAL
                                     31 	.area GSINIT
                                     32 ;--------------------------------------------------------
                                     33 ; Home
                                     34 ;--------------------------------------------------------
                                     35 	.area HOME
                                     36 	.area HOME
                                     37 ;--------------------------------------------------------
                                     38 ; code
                                     39 ;--------------------------------------------------------
                                     40 	.area CODE
                                     41 ;	../ceilf.c: 33: float ceilf(float x) _FLOAT_FUNC_REENTRANT
                                     42 ;	-----------------------------------------
                                     43 ;	 function ceilf
                                     44 ;	-----------------------------------------
      000000                         45 _ceilf:
      000000 52 10            [ 2]   46 	sub	sp, #16
                                     47 ;	../ceilf.c: 36: r=x;
      000002 1E 15            [ 2]   48 	ldw	x, (0x15, sp)
      000004 89               [ 2]   49 	pushw	x
      000005 1E 15            [ 2]   50 	ldw	x, (0x15, sp)
      000007 89               [ 2]   51 	pushw	x
      000008 CDr00r00         [ 4]   52 	call	___fs2slong
      00000B 5B 04            [ 2]   53 	addw	sp, #4
      00000D 1F 03            [ 2]   54 	ldw	(0x03, sp), x
      00000F 17 01            [ 2]   55 	ldw	(0x01, sp), y
                                     56 ;	../ceilf.c: 38: return r;
      000011 1E 03            [ 2]   57 	ldw	x, (0x03, sp)
      000013 89               [ 2]   58 	pushw	x
      000014 1E 03            [ 2]   59 	ldw	x, (0x03, sp)
      000016 89               [ 2]   60 	pushw	x
      000017 CDr00r00         [ 4]   61 	call	___slong2fs
      00001A 5B 04            [ 2]   62 	addw	sp, #4
      00001C 1F 0F            [ 2]   63 	ldw	(0x0f, sp), x
      00001E 17 0D            [ 2]   64 	ldw	(0x0d, sp), y
                                     65 ;	../ceilf.c: 37: if (r<0)
      000020 0D 01            [ 1]   66 	tnz	(0x01, sp)
      000022 2A 06            [ 1]   67 	jrpl	00102$
                                     68 ;	../ceilf.c: 38: return r;
      000024 1E 0F            [ 2]   69 	ldw	x, (0x0f, sp)
      000026 16 0D            [ 2]   70 	ldw	y, (0x0d, sp)
      000028 20 3A            [ 2]   71 	jra	00104$
      00002A                         72 00102$:
                                     73 ;	../ceilf.c: 40: return (r+((r<x)?1:0));
      00002A 1E 15            [ 2]   74 	ldw	x, (0x15, sp)
      00002C 89               [ 2]   75 	pushw	x
      00002D 1E 15            [ 2]   76 	ldw	x, (0x15, sp)
      00002F 89               [ 2]   77 	pushw	x
      000030 1E 13            [ 2]   78 	ldw	x, (0x13, sp)
      000032 89               [ 2]   79 	pushw	x
      000033 1E 13            [ 2]   80 	ldw	x, (0x13, sp)
      000035 89               [ 2]   81 	pushw	x
      000036 CDr00r00         [ 4]   82 	call	___fslt
      000039 5B 08            [ 2]   83 	addw	sp, #8
      00003B 4D               [ 1]   84 	tnz	a
      00003C 27 03            [ 1]   85 	jreq	00106$
      00003E A6 01            [ 1]   86 	ld	a, #0x01
      000040 21                      87 	.byte 0x21
      000041                         88 00106$:
      000041 4F               [ 1]   89 	clr	a
      000042                         90 00107$:
      000042 5F               [ 1]   91 	clrw	x
      000043 97               [ 1]   92 	ld	xl, a
      000044 1F 07            [ 2]   93 	ldw	(0x07, sp), x
      000046 5F               [ 1]   94 	clrw	x
      000047 0D 07            [ 1]   95 	tnz	(0x07, sp)
      000049 2A 01            [ 1]   96 	jrpl	00118$
      00004B 5A               [ 2]   97 	decw	x
      00004C                         98 00118$:
      00004C 16 07            [ 2]   99 	ldw	y, (0x07, sp)
      00004E 72 F9 03         [ 2]  100 	addw	y, (0x03, sp)
      000051 9F               [ 1]  101 	ld	a, xl
      000052 19 02            [ 1]  102 	adc	a, (0x02, sp)
      000054 02               [ 1]  103 	rlwa	x
      000055 19 01            [ 1]  104 	adc	a, (0x01, sp)
      000057 95               [ 1]  105 	ld	xh, a
      000058 90 89            [ 2]  106 	pushw	y
      00005A 89               [ 2]  107 	pushw	x
      00005B CDr00r00         [ 4]  108 	call	___slong2fs
      00005E 5B 04            [ 2]  109 	addw	sp, #4
      000060 1F 0B            [ 2]  110 	ldw	(0x0b, sp), x
      000062 1E 0B            [ 2]  111 	ldw	x, (0x0b, sp)
      000064                        112 00104$:
      000064 5B 10            [ 2]  113 	addw	sp, #16
      000066 81               [ 4]  114 	ret
                                    115 	.area CODE
                                    116 	.area INITIALIZER
                                    117 	.area CABS (ABS)
