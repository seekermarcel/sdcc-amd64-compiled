                              1 ;--------------------------------------------------------
                              2 ; File Created by SDCC : free open source ANSI-C Compiler
                              3 ; Version 3.5.0 #9253 (Apr  4 2022) (Linux)
                              4 ; This file was generated Mon Apr  4 14:15:21 2022
                              5 ;--------------------------------------------------------
                              6 	.module powf
                              7 	.optsdcc -mz80
                              8 	
                              9 ;--------------------------------------------------------
                             10 ; Public variables in this module
                             11 ;--------------------------------------------------------
                             12 	.globl _logf
                             13 	.globl _expf
                             14 	.globl _powf
                             15 ;--------------------------------------------------------
                             16 ; special function registers
                             17 ;--------------------------------------------------------
                             18 ;--------------------------------------------------------
                             19 ; ram data
                             20 ;--------------------------------------------------------
                             21 	.area _DATA
                             22 ;--------------------------------------------------------
                             23 ; ram data
                             24 ;--------------------------------------------------------
                             25 	.area _INITIALIZED
                             26 ;--------------------------------------------------------
                             27 ; absolute external ram data
                             28 ;--------------------------------------------------------
                             29 	.area _DABS (ABS)
                             30 ;--------------------------------------------------------
                             31 ; global & static initialisations
                             32 ;--------------------------------------------------------
                             33 	.area _HOME
                             34 	.area _GSINIT
                             35 	.area _GSFINAL
                             36 	.area _GSINIT
                             37 ;--------------------------------------------------------
                             38 ; Home
                             39 ;--------------------------------------------------------
                             40 	.area _HOME
                             41 	.area _HOME
                             42 ;--------------------------------------------------------
                             43 ; code
                             44 ;--------------------------------------------------------
                             45 	.area _CODE
                             46 ;../powf.c:35: float powf(float x, float y)
                             47 ;	---------------------------------
                             48 ; Function powf
                             49 ; ---------------------------------
   0000                      50 _powf::
   0000 DD E5         [15]   51 	push	ix
   0002 DD 21 00 00   [14]   52 	ld	ix,#0
   0006 DD 39         [15]   53 	add	ix,sp
                             54 ;../powf.c:37: if(y == 0.0) return 1.0;
   0008 DD 7E 0B      [19]   55 	ld	a,11 (ix)
   000B CB BF         [ 8]   56 	res	7, a
   000D DD B6 0A      [19]   57 	or	a, 10 (ix)
   0010 DD B6 09      [19]   58 	or	a, 9 (ix)
   0013 DD B6 08      [19]   59 	or	a,8 (ix)
   0016 20 09         [12]   60 	jr	NZ,00102$
   0018 21 00 00      [10]   61 	ld	hl,#0x0000
   001B 11 80 3F      [10]   62 	ld	de,#0x3F80
   001E C3rABr00      [10]   63 	jp	00107$
   0021                      64 00102$:
                             65 ;../powf.c:38: if(y == 1.0) return x;
   0021 21 80 3F      [10]   66 	ld	hl,#0x3F80
   0024 E5            [11]   67 	push	hl
   0025 21 00 00      [10]   68 	ld	hl,#0x0000
   0028 E5            [11]   69 	push	hl
   0029 DD 6E 0A      [19]   70 	ld	l,10 (ix)
   002C DD 66 0B      [19]   71 	ld	h,11 (ix)
   002F E5            [11]   72 	push	hl
   0030 DD 6E 08      [19]   73 	ld	l,8 (ix)
   0033 DD 66 09      [19]   74 	ld	h,9 (ix)
   0036 E5            [11]   75 	push	hl
   0037 CDr00r00      [17]   76 	call	___fseq
   003A F1            [10]   77 	pop	af
   003B F1            [10]   78 	pop	af
   003C F1            [10]   79 	pop	af
   003D F1            [10]   80 	pop	af
   003E 7D            [ 4]   81 	ld	a,l
   003F B7            [ 4]   82 	or	a, a
   0040 28 0E         [12]   83 	jr	Z,00104$
   0042 DD 6E 04      [19]   84 	ld	l,4 (ix)
   0045 DD 66 05      [19]   85 	ld	h,5 (ix)
   0048 DD 5E 06      [19]   86 	ld	e,6 (ix)
   004B DD 56 07      [19]   87 	ld	d,7 (ix)
   004E 18 5B         [12]   88 	jr	00107$
   0050                      89 00104$:
                             90 ;../powf.c:39: if(x <= 0.0) return 0.0;
   0050 21 00 00      [10]   91 	ld	hl,#0x0000
   0053 E5            [11]   92 	push	hl
   0054 21 00 00      [10]   93 	ld	hl,#0x0000
   0057 E5            [11]   94 	push	hl
   0058 DD 6E 06      [19]   95 	ld	l,6 (ix)
   005B DD 66 07      [19]   96 	ld	h,7 (ix)
   005E E5            [11]   97 	push	hl
   005F DD 6E 04      [19]   98 	ld	l,4 (ix)
   0062 DD 66 05      [19]   99 	ld	h,5 (ix)
   0065 E5            [11]  100 	push	hl
   0066 CDr00r00      [17]  101 	call	___fsgt
   0069 F1            [10]  102 	pop	af
   006A F1            [10]  103 	pop	af
   006B F1            [10]  104 	pop	af
   006C F1            [10]  105 	pop	af
   006D 7D            [ 4]  106 	ld	a,l
   006E B7            [ 4]  107 	or	a, a
   006F 20 07         [12]  108 	jr	NZ,00106$
   0071 21 00 00      [10]  109 	ld	hl,#0x0000
   0074 5D            [ 4]  110 	ld	e,l
   0075 54            [ 4]  111 	ld	d,h
   0076 18 33         [12]  112 	jr	00107$
   0078                     113 00106$:
                            114 ;../powf.c:40: return expf(logf(x) * y);
   0078 DD 6E 06      [19]  115 	ld	l,6 (ix)
   007B DD 66 07      [19]  116 	ld	h,7 (ix)
   007E E5            [11]  117 	push	hl
   007F DD 6E 04      [19]  118 	ld	l,4 (ix)
   0082 DD 66 05      [19]  119 	ld	h,5 (ix)
   0085 E5            [11]  120 	push	hl
   0086 CDr00r00      [17]  121 	call	_logf
   0089 F1            [10]  122 	pop	af
   008A F1            [10]  123 	pop	af
   008B 4D            [ 4]  124 	ld	c,l
   008C 44            [ 4]  125 	ld	b,h
   008D DD 6E 0A      [19]  126 	ld	l,10 (ix)
   0090 DD 66 0B      [19]  127 	ld	h,11 (ix)
   0093 E5            [11]  128 	push	hl
   0094 DD 6E 08      [19]  129 	ld	l,8 (ix)
   0097 DD 66 09      [19]  130 	ld	h,9 (ix)
   009A E5            [11]  131 	push	hl
   009B D5            [11]  132 	push	de
   009C C5            [11]  133 	push	bc
   009D CDr00r00      [17]  134 	call	___fsmul
   00A0 F1            [10]  135 	pop	af
   00A1 F1            [10]  136 	pop	af
   00A2 F1            [10]  137 	pop	af
   00A3 F1            [10]  138 	pop	af
   00A4 D5            [11]  139 	push	de
   00A5 E5            [11]  140 	push	hl
   00A6 CDr00r00      [17]  141 	call	_expf
   00A9 F1            [10]  142 	pop	af
   00AA F1            [10]  143 	pop	af
   00AB                     144 00107$:
   00AB DD E1         [14]  145 	pop	ix
   00AD C9            [10]  146 	ret
                            147 	.area _CODE
                            148 	.area _INITIALIZER
                            149 	.area _CABS (ABS)
