                              1 ;--------------------------------------------------------
                              2 ; File Created by SDCC : free open source ANSI-C Compiler
                              3 ; Version 3.5.0 #9253 (Apr  4 2022) (Linux)
                              4 ; This file was generated Mon Apr  4 14:16:02 2022
                              5 ;--------------------------------------------------------
                              6 	.module _memchr
                              7 	.optsdcc -mr2k
                              8 	
                              9 ;--------------------------------------------------------
                             10 ; Public variables in this module
                             11 ;--------------------------------------------------------
                             12 	.globl _memchr
                             13 ;--------------------------------------------------------
                             14 ; special function registers
                             15 ;--------------------------------------------------------
                             16 ;--------------------------------------------------------
                             17 ; ram data
                             18 ;--------------------------------------------------------
                             19 	.area _DATA
                             20 ;--------------------------------------------------------
                             21 ; ram data
                             22 ;--------------------------------------------------------
                             23 	.area _INITIALIZED
                             24 ;--------------------------------------------------------
                             25 ; absolute external ram data
                             26 ;--------------------------------------------------------
                             27 	.area _DABS (ABS)
                             28 ;--------------------------------------------------------
                             29 ; global & static initialisations
                             30 ;--------------------------------------------------------
                             31 	.area _HOME
                             32 	.area _GSINIT
                             33 	.area _GSFINAL
                             34 	.area _GSINIT
                             35 ;--------------------------------------------------------
                             36 ; Home
                             37 ;--------------------------------------------------------
                             38 	.area _HOME
                             39 	.area _HOME
                             40 ;--------------------------------------------------------
                             41 ; code
                             42 ;--------------------------------------------------------
                             43 	.area _CODE
                             44 ;../_memchr.c:31: void *memchr(const void *s, int c, size_t n)
                             45 ;	---------------------------------
                             46 ; Function memchr
                             47 ; ---------------------------------
   0000                      48 _memchr::
   0000 DD E5                49 	push	ix
   0002 DD 21 00 00          50 	ld	ix,#0
   0006 DD 39                51 	add	ix,sp
   0008 27 FC                52 	add	sp, #-4
                             53 ;../_memchr.c:33: unsigned char *p = (unsigned char *)s;
   000A EB                   54 	ex	de, hl
   000B C4 08                55 	ld	hl, 8 (sp)
   000D EB                   56 	ex	de, hl
                             57 ;../_memchr.c:34: unsigned char *end = p + n;
   000E C4 0C                58 	ld	hl, 12 (sp)
   0010 19                   59 	add	hl,de
   0011 D4 00                60 	ld	0 (sp), hl
                             61 ;../_memchr.c:38: return(0);
   0013 DD 73 FE             62 	ld	-2 (ix),e
   0016 DD 72 FF             63 	ld	-1 (ix),d
   0019                      64 00105$:
                             65 ;../_memchr.c:35: for(; p != end; p++)
   0019 DD 7E FC             66 	ld	a,-4 (ix)
   001C DD 96 FE             67 	sub	a, -2 (ix)
   001F 20 08                68 	jr	NZ,00121$
   0021 DD 7E FD             69 	ld	a,-3 (ix)
   0024 DD 96 FF             70 	sub	a, -1 (ix)
   0027 28 22                71 	jr	Z,00103$
   0029                      72 00121$:
                             73 ;../_memchr.c:36: if(*p == c)
   0029 C4 02                74 	ld	hl, 2 (sp)
   002B 46                   75 	ld	b,(hl)
   002C 0E 00                76 	ld	c,#0x00
   002E DD 7E 06             77 	ld	a,6 (ix)
   0031 90                   78 	sub	a, b
   0032 20 09                79 	jr	NZ,00106$
   0034 DD 7E 07             80 	ld	a,7 (ix)
   0037 91                   81 	sub	a, c
   0038 20 03                82 	jr	NZ,00106$
                             83 ;../_memchr.c:37: return((void *)p);
   003A EB                   84 	ex	de,hl
   003B 18 11                85 	jr	00107$
   003D                      86 00106$:
                             87 ;../_memchr.c:35: for(; p != end; p++)
   003D DD 34 FE             88 	inc	-2 (ix)
   0040 20 03                89 	jr	NZ,00124$
   0042 DD 34 FF             90 	inc	-1 (ix)
   0045                      91 00124$:
   0045 EB                   92 	ex	de, hl
   0046 C4 02                93 	ld	hl, 2 (sp)
   0048 EB                   94 	ex	de, hl
   0049 18 CE                95 	jr	00105$
   004B                      96 00103$:
                             97 ;../_memchr.c:38: return(0);
   004B 21 00 00             98 	ld	hl,#0x0000
   004E                      99 00107$:
   004E DD F9               100 	ld	sp, ix
   0050 DD E1               101 	pop	ix
   0052 C9                  102 	ret
                            103 	.area _CODE
                            104 	.area _INITIALIZER
                            105 	.area _CABS (ABS)
