                              1 ;--------------------------------------------------------
                              2 ; File Created by SDCC : free open source ANSI-C Compiler
                              3 ; Version 3.5.0 #9253 (Apr  4 2022) (Linux)
                              4 ; This file was generated Mon Apr  4 14:16:15 2022
                              5 ;--------------------------------------------------------
                              6 	.r3k
                              7 	.module asinf
                              8 	.optsdcc -mr3ka
                              9 	
                             10 ;--------------------------------------------------------
                             11 ; Public variables in this module
                             12 ;--------------------------------------------------------
                             13 	.globl _asincosf
                             14 	.globl _asinf
                             15 ;--------------------------------------------------------
                             16 ; special function registers
                             17 ;--------------------------------------------------------
                             18 ;--------------------------------------------------------
                             19 ; ram data
                             20 ;--------------------------------------------------------
                             21 	.area _DATA
                             22 ;--------------------------------------------------------
                             23 ; ram data
                             24 ;--------------------------------------------------------
                             25 	.area _INITIALIZED
                             26 ;--------------------------------------------------------
                             27 ; absolute external ram data
                             28 ;--------------------------------------------------------
                             29 	.area _DABS (ABS)
                             30 ;--------------------------------------------------------
                             31 ; global & static initialisations
                             32 ;--------------------------------------------------------
                             33 	.area _HOME
                             34 	.area _GSINIT
                             35 	.area _GSFINAL
                             36 	.area _GSINIT
                             37 ;--------------------------------------------------------
                             38 ; Home
                             39 ;--------------------------------------------------------
                             40 	.area _HOME
                             41 	.area _HOME
                             42 ;--------------------------------------------------------
                             43 ; code
                             44 ;--------------------------------------------------------
                             45 	.area _CODE
                             46 ;../asinf.c:36: float asinf(float x) _FLOAT_FUNC_REENTRANT
                             47 ;	---------------------------------
                             48 ; Function asinf
                             49 ; ---------------------------------
   0000                      50 _asinf::
                             51 ;../asinf.c:38: if (x == 1.0) return  HALF_PI;
   0000 21 80 3F             52 	ld	hl,#0x3F80
   0003 E5                   53 	push	hl
   0004 21 00 00             54 	ld	hl,#0x0000
   0007 E5                   55 	push	hl
   0008 C4 08                56 	ld	hl, 8 (sp)
   000A E5                   57 	push	hl
   000B C4 08                58 	ld	hl, 8 (sp)
   000D E5                   59 	push	hl
   000E CDr00r00             60 	call	___fseq
   0011 27 08                61 	add	sp, #8
   0013 7D                   62 	ld	a,l
   0014 B7                   63 	or	a, a
   0015 28 07                64 	jr	Z,00108$
   0017 21 DB 0F             65 	ld	hl,#0x0FDB
   001A 11 C9 3F             66 	ld	de,#0x3FC9
   001D C9                   67 	ret
   001E                      68 00108$:
                             69 ;../asinf.c:39: else if (x ==-1.0) return -HALF_PI;
   001E 21 80 BF             70 	ld	hl,#0xBF80
   0021 E5                   71 	push	hl
   0022 21 00 00             72 	ld	hl,#0x0000
   0025 E5                   73 	push	hl
   0026 C4 08                74 	ld	hl, 8 (sp)
   0028 E5                   75 	push	hl
   0029 C4 08                76 	ld	hl, 8 (sp)
   002B E5                   77 	push	hl
   002C CDr00r00             78 	call	___fseq
   002F 27 08                79 	add	sp, #8
   0031 7D                   80 	ld	a,l
   0032 B7                   81 	or	a, a
   0033 28 07                82 	jr	Z,00105$
   0035 21 DB 0F             83 	ld	hl,#0x0FDB
   0038 11 C9 BF             84 	ld	de,#0xBFC9
   003B C9                   85 	ret
   003C                      86 00105$:
                             87 ;../asinf.c:40: else if (x == 0.0) return 0.0;
   003C FD 21 02 00          88 	ld	iy,#2
   0040 FD 39                89 	add	iy,sp
   0042 FD 7E 03             90 	ld	a,3 (iy)
   0045 CB BF                91 	res	7, a
   0047 FD B6 02             92 	or	a, 2 (iy)
   004A FD B6 01             93 	or	a, 1 (iy)
   004D FD B6 00             94 	or	a,0 (iy)
   0050 20 06                95 	jr	NZ,00102$
   0052 21 00 00             96 	ld	hl,#0x0000
   0055 5D                   97 	ld	e,l
   0056 54                   98 	ld	d,h
   0057 C9                   99 	ret
   0058                     100 00102$:
                            101 ;../asinf.c:41: else               return asincosf(x, false);
   0058 AF                  102 	xor	a, a
   0059 F5                  103 	push	af
   005A 33                  104 	inc	sp
   005B C4 05               105 	ld	hl, 5 (sp)
   005D E5                  106 	push	hl
   005E C4 05               107 	ld	hl, 5 (sp)
   0060 E5                  108 	push	hl
   0061 CDr00r00            109 	call	_asincosf
   0064 27 05               110 	add	sp, #5
   0066 C9                  111 	ret
                            112 	.area _CODE
                            113 	.area _INITIALIZER
                            114 	.area _CABS (ABS)
