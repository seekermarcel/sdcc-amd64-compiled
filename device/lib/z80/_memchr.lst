                              1 ;--------------------------------------------------------
                              2 ; File Created by SDCC : free open source ANSI-C Compiler
                              3 ; Version 3.5.0 #9253 (Apr  4 2022) (Linux)
                              4 ; This file was generated Mon Apr  4 14:15:28 2022
                              5 ;--------------------------------------------------------
                              6 	.module _memchr
                              7 	.optsdcc -mz80
                              8 	
                              9 ;--------------------------------------------------------
                             10 ; Public variables in this module
                             11 ;--------------------------------------------------------
                             12 	.globl _memchr
                             13 ;--------------------------------------------------------
                             14 ; special function registers
                             15 ;--------------------------------------------------------
                             16 ;--------------------------------------------------------
                             17 ; ram data
                             18 ;--------------------------------------------------------
                             19 	.area _DATA
                             20 ;--------------------------------------------------------
                             21 ; ram data
                             22 ;--------------------------------------------------------
                             23 	.area _INITIALIZED
                             24 ;--------------------------------------------------------
                             25 ; absolute external ram data
                             26 ;--------------------------------------------------------
                             27 	.area _DABS (ABS)
                             28 ;--------------------------------------------------------
                             29 ; global & static initialisations
                             30 ;--------------------------------------------------------
                             31 	.area _HOME
                             32 	.area _GSINIT
                             33 	.area _GSFINAL
                             34 	.area _GSINIT
                             35 ;--------------------------------------------------------
                             36 ; Home
                             37 ;--------------------------------------------------------
                             38 	.area _HOME
                             39 	.area _HOME
                             40 ;--------------------------------------------------------
                             41 ; code
                             42 ;--------------------------------------------------------
                             43 	.area _CODE
                             44 ;../_memchr.c:31: void *memchr(const void *s, int c, size_t n)
                             45 ;	---------------------------------
                             46 ; Function memchr
                             47 ; ---------------------------------
   0000                      48 _memchr::
   0000 DD E5         [15]   49 	push	ix
   0002 DD 21 00 00   [14]   50 	ld	ix,#0
   0006 DD 39         [15]   51 	add	ix,sp
   0008 F5            [11]   52 	push	af
   0009 F5            [11]   53 	push	af
                             54 ;../_memchr.c:33: unsigned char *p = (unsigned char *)s;
   000A DD 7E 04      [19]   55 	ld	a,4 (ix)
   000D DD 77 FE      [19]   56 	ld	-2 (ix),a
   0010 DD 7E 05      [19]   57 	ld	a,5 (ix)
   0013 DD 77 FF      [19]   58 	ld	-1 (ix),a
                             59 ;../_memchr.c:34: unsigned char *end = p + n;
   0016 DD 7E 08      [19]   60 	ld	a,8 (ix)
   0019 DD 86 FE      [19]   61 	add	a, -2 (ix)
   001C 67            [ 4]   62 	ld	h,a
   001D DD 7E 09      [19]   63 	ld	a,9 (ix)
   0020 DD 8E FF      [19]   64 	adc	a, -1 (ix)
   0023 DD 74 FC      [19]   65 	ld	-4 (ix), h
   0026 DD 77 FD      [19]   66 	ld	-3 (ix), a
                             67 ;../_memchr.c:38: return(0);
   0029 C1            [10]   68 	pop	bc
   002A D1            [10]   69 	pop	de
   002B D5            [11]   70 	push	de
   002C C5            [11]   71 	push	bc
   002D                      72 00105$:
                             73 ;../_memchr.c:35: for(; p != end; p++)
   002D DD 7E FC      [19]   74 	ld	a,-4 (ix)
   0030 93            [ 4]   75 	sub	a, e
   0031 20 06         [12]   76 	jr	NZ,00121$
   0033 DD 7E FD      [19]   77 	ld	a,-3 (ix)
   0036 92            [ 4]   78 	sub	a, d
   0037 28 1F         [12]   79 	jr	Z,00103$
   0039                      80 00121$:
                             81 ;../_memchr.c:36: if(*p == c)
   0039 1A            [ 7]   82 	ld	a,(de)
   003A 47            [ 4]   83 	ld	b,a
   003B 0E 00         [ 7]   84 	ld	c,#0x00
   003D DD 7E 06      [19]   85 	ld	a,6 (ix)
   0040 90            [ 4]   86 	sub	a, b
   0041 20 0C         [12]   87 	jr	NZ,00106$
   0043 DD 7E 07      [19]   88 	ld	a,7 (ix)
   0046 91            [ 4]   89 	sub	a, c
   0047 20 06         [12]   90 	jr	NZ,00106$
                             91 ;../_memchr.c:37: return((void *)p);
   0049 C1            [10]   92 	pop	bc
   004A E1            [10]   93 	pop	hl
   004B E5            [11]   94 	push	hl
   004C C5            [11]   95 	push	bc
   004D 18 0C         [12]   96 	jr	00107$
   004F                      97 00106$:
                             98 ;../_memchr.c:35: for(; p != end; p++)
   004F 13            [ 6]   99 	inc	de
   0050 DD 73 FE      [19]  100 	ld	-2 (ix),e
   0053 DD 72 FF      [19]  101 	ld	-1 (ix),d
   0056 18 D5         [12]  102 	jr	00105$
   0058                     103 00103$:
                            104 ;../_memchr.c:38: return(0);
   0058 21 00 00      [10]  105 	ld	hl,#0x0000
   005B                     106 00107$:
   005B DD F9         [10]  107 	ld	sp, ix
   005D DD E1         [14]  108 	pop	ix
   005F C9            [10]  109 	ret
                            110 	.area _CODE
                            111 	.area _INITIALIZER
                            112 	.area _CABS (ABS)
