                                      1 ;--------------------------------------------------------
                                      2 ; File Created by SDCC : free open source ANSI-C Compiler
                                      3 ; Version 3.5.0 #9253 (Apr  4 2022) (Linux)
                                      4 ; This file was generated Mon Apr  4 14:17:25 2022
                                      5 ;--------------------------------------------------------
                                      6 	.module puts
                                      7 	.optsdcc -mstm8
                                      8 	
                                      9 ;--------------------------------------------------------
                                     10 ; Public variables in this module
                                     11 ;--------------------------------------------------------
                                     12 	.globl _puts
                                     13 	.globl _putchar
                                     14 ;--------------------------------------------------------
                                     15 ; ram data
                                     16 ;--------------------------------------------------------
                                     17 	.area DATA
                                     18 ;--------------------------------------------------------
                                     19 ; ram data
                                     20 ;--------------------------------------------------------
                                     21 	.area INITIALIZED
                                     22 ;--------------------------------------------------------
                                     23 ; absolute external ram data
                                     24 ;--------------------------------------------------------
                                     25 	.area DABS (ABS)
                                     26 ;--------------------------------------------------------
                                     27 ; global & static initialisations
                                     28 ;--------------------------------------------------------
                                     29 	.area HOME
                                     30 	.area GSINIT
                                     31 	.area GSFINAL
                                     32 	.area GSINIT
                                     33 ;--------------------------------------------------------
                                     34 ; Home
                                     35 ;--------------------------------------------------------
                                     36 	.area HOME
                                     37 	.area HOME
                                     38 ;--------------------------------------------------------
                                     39 ; code
                                     40 ;--------------------------------------------------------
                                     41 	.area CODE
                                     42 ;	../puts.c: 31: int puts (char *s)
                                     43 ;	-----------------------------------------
                                     44 ;	 function puts
                                     45 ;	-----------------------------------------
      000000                         46 _puts:
      000000 52 04            [ 2]   47 	sub	sp, #4
                                     48 ;	../puts.c: 34: while (*s){
      000002 16 07            [ 2]   49 	ldw	y, (0x07, sp)
      000004 17 03            [ 2]   50 	ldw	(0x03, sp), y
      000006 5F               [ 1]   51 	clrw	x
      000007                         52 00101$:
      000007 16 03            [ 2]   53 	ldw	y, (0x03, sp)
      000009 90 F6            [ 1]   54 	ld	a, (y)
                                     55 ;	../puts.c: 36: i++;
      00000B 5C               [ 2]   56 	incw	x
      00000C 1F 01            [ 2]   57 	ldw	(0x01, sp), x
                                     58 ;	../puts.c: 34: while (*s){
      00000E 4D               [ 1]   59 	tnz	a
      00000F 27 0E            [ 1]   60 	jreq	00103$
                                     61 ;	../puts.c: 35: putchar(*s++);
      000011 1E 03            [ 2]   62 	ldw	x, (0x03, sp)
      000013 5C               [ 2]   63 	incw	x
      000014 1F 03            [ 2]   64 	ldw	(0x03, sp), x
      000016 88               [ 1]   65 	push	a
      000017 CDr00r00         [ 4]   66 	call	_putchar
      00001A 84               [ 1]   67 	pop	a
                                     68 ;	../puts.c: 36: i++;
      00001B 1E 01            [ 2]   69 	ldw	x, (0x01, sp)
      00001D 20 E8            [ 2]   70 	jra	00101$
      00001F                         71 00103$:
                                     72 ;	../puts.c: 38: putchar('\n');
      00001F 4B 0A            [ 1]   73 	push	#0x0a
      000021 CDr00r00         [ 4]   74 	call	_putchar
      000024 84               [ 1]   75 	pop	a
                                     76 ;	../puts.c: 39: return i+1;
      000025 1E 01            [ 2]   77 	ldw	x, (0x01, sp)
      000027 5B 04            [ 2]   78 	addw	sp, #4
      000029 81               [ 4]   79 	ret
                                     80 	.area CODE
                                     81 	.area INITIALIZER
                                     82 	.area CABS (ABS)
