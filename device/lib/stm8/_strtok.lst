                                      1 ;--------------------------------------------------------
                                      2 ; File Created by SDCC : free open source ANSI-C Compiler
                                      3 ; Version 3.5.0 #9253 (Apr  4 2022) (Linux)
                                      4 ; This file was generated Mon Apr  4 14:17:17 2022
                                      5 ;--------------------------------------------------------
                                      6 	.module _strtok
                                      7 	.optsdcc -mstm8
                                      8 	
                                      9 ;--------------------------------------------------------
                                     10 ; Public variables in this module
                                     11 ;--------------------------------------------------------
                                     12 	.globl _strchr
                                     13 	.globl _strtok
                                     14 ;--------------------------------------------------------
                                     15 ; ram data
                                     16 ;--------------------------------------------------------
                                     17 	.area DATA
      000000                         18 _strtok_s_1_22:
      000000                         19 	.ds 2
                                     20 ;--------------------------------------------------------
                                     21 ; ram data
                                     22 ;--------------------------------------------------------
                                     23 	.area INITIALIZED
                                     24 ;--------------------------------------------------------
                                     25 ; absolute external ram data
                                     26 ;--------------------------------------------------------
                                     27 	.area DABS (ABS)
                                     28 ;--------------------------------------------------------
                                     29 ; global & static initialisations
                                     30 ;--------------------------------------------------------
                                     31 	.area HOME
                                     32 	.area GSINIT
                                     33 	.area GSFINAL
                                     34 	.area GSINIT
                                     35 ;--------------------------------------------------------
                                     36 ; Home
                                     37 ;--------------------------------------------------------
                                     38 	.area HOME
                                     39 	.area HOME
                                     40 ;--------------------------------------------------------
                                     41 ; code
                                     42 ;--------------------------------------------------------
                                     43 	.area CODE
                                     44 ;	../_strtok.c: 36: char * strtok ( char * str, const char * control )
                                     45 ;	-----------------------------------------
                                     46 ;	 function strtok
                                     47 ;	-----------------------------------------
      000000                         48 _strtok:
      000000 52 02            [ 2]   49 	sub	sp, #2
                                     50 ;	../_strtok.c: 41: if ( str )
      000002 1E 05            [ 2]   51 	ldw	x, (0x05, sp)
      000004 27 05            [ 1]   52 	jreq	00102$
                                     53 ;	../_strtok.c: 42: s = str;
      000006 1E 05            [ 2]   54 	ldw	x, (0x05, sp)
      000008 CFu00u00         [ 2]   55 	ldw	_strtok_s_1_22+0, x
      00000B                         56 00102$:
                                     57 ;	../_strtok.c: 43: if ( !s )
      00000B CEu00u00         [ 2]   58 	ldw	x, _strtok_s_1_22+0
      00000E 26 03            [ 1]   59 	jrne	00108$
                                     60 ;	../_strtok.c: 44: return NULL;
      000010 5F               [ 1]   61 	clrw	x
      000011 20 66            [ 2]   62 	jra	00119$
                                     63 ;	../_strtok.c: 46: while (*s) {
      000013                         64 00108$:
      000013 CEu00u00         [ 2]   65 	ldw	x, _strtok_s_1_22+0
      000016 F6               [ 1]   66 	ld	a, (x)
      000017 4D               [ 1]   67 	tnz	a
      000018 27 1B            [ 1]   68 	jreq	00110$
                                     69 ;	../_strtok.c: 47: if (strchr(control,*s))
      00001A 97               [ 1]   70 	ld	xl, a
      00001B 49               [ 1]   71 	rlc	a
      00001C 4F               [ 1]   72 	clr	a
      00001D A2 00            [ 1]   73 	sbc	a, #0x00
      00001F 95               [ 1]   74 	ld	xh, a
      000020 89               [ 2]   75 	pushw	x
      000021 1E 09            [ 2]   76 	ldw	x, (0x09, sp)
      000023 89               [ 2]   77 	pushw	x
      000024 CDr00r00         [ 4]   78 	call	_strchr
      000027 5B 04            [ 2]   79 	addw	sp, #4
      000029 5D               [ 2]   80 	tnzw	x
      00002A 27 09            [ 1]   81 	jreq	00110$
                                     82 ;	../_strtok.c: 48: s++;
      00002C CEu00u00         [ 2]   83 	ldw	x, _strtok_s_1_22+0
      00002F 5C               [ 2]   84 	incw	x
      000030 CFu00u00         [ 2]   85 	ldw	_strtok_s_1_22+0, x
      000033 20 DE            [ 2]   86 	jra	00108$
                                     87 ;	../_strtok.c: 50: break;
      000035                         88 00110$:
                                     89 ;	../_strtok.c: 53: s1 = s;
      000035 CEu00u00         [ 2]   90 	ldw	x, _strtok_s_1_22+0
      000038 1F 01            [ 2]   91 	ldw	(0x01, sp), x
                                     92 ;	../_strtok.c: 55: while (*s) {
      00003A                         93 00113$:
                                     94 ;	../_strtok.c: 46: while (*s) {
      00003A CEu00u00         [ 2]   95 	ldw	x, _strtok_s_1_22+0
      00003D F6               [ 1]   96 	ld	a, (x)
                                     97 ;	../_strtok.c: 55: while (*s) {
      00003E 4D               [ 1]   98 	tnz	a
      00003F 27 2A            [ 1]   99 	jreq	00115$
                                    100 ;	../_strtok.c: 56: if (strchr(control,*s)) {
      000041 97               [ 1]  101 	ld	xl, a
      000042 49               [ 1]  102 	rlc	a
      000043 4F               [ 1]  103 	clr	a
      000044 A2 00            [ 1]  104 	sbc	a, #0x00
      000046 95               [ 1]  105 	ld	xh, a
      000047 89               [ 2]  106 	pushw	x
      000048 1E 09            [ 2]  107 	ldw	x, (0x09, sp)
      00004A 89               [ 2]  108 	pushw	x
      00004B CDr00r00         [ 4]  109 	call	_strchr
      00004E 5B 04            [ 2]  110 	addw	sp, #4
      000050 5D               [ 2]  111 	tnzw	x
      000051 27 0F            [ 1]  112 	jreq	00112$
                                    113 ;	../_strtok.c: 57: *s++ = '\0';
      000053 CEu00u00         [ 2]  114 	ldw	x, _strtok_s_1_22+0
      000056 7F               [ 1]  115 	clr	(x)
      000057 CEu00u00         [ 2]  116 	ldw	x, _strtok_s_1_22+0
      00005A 5C               [ 2]  117 	incw	x
      00005B CFu00u00         [ 2]  118 	ldw	_strtok_s_1_22+0, x
                                    119 ;	../_strtok.c: 58: return s1;
      00005E 1E 01            [ 2]  120 	ldw	x, (0x01, sp)
      000060 20 17            [ 2]  121 	jra	00119$
      000062                        122 00112$:
                                    123 ;	../_strtok.c: 60: s++ ;
      000062 CEu00u00         [ 2]  124 	ldw	x, _strtok_s_1_22+0
      000065 5C               [ 2]  125 	incw	x
      000066 CFu00u00         [ 2]  126 	ldw	_strtok_s_1_22+0, x
      000069 20 CF            [ 2]  127 	jra	00113$
      00006B                        128 00115$:
                                    129 ;	../_strtok.c: 63: s = NULL;
      00006B 5F               [ 1]  130 	clrw	x
      00006C CFu00u00         [ 2]  131 	ldw	_strtok_s_1_22+0, x
                                    132 ;	../_strtok.c: 65: if (*s1)
      00006F 1E 01            [ 2]  133 	ldw	x, (0x01, sp)
      000071 F6               [ 1]  134 	ld	a, (x)
      000072 4D               [ 1]  135 	tnz	a
      000073 27 03            [ 1]  136 	jreq	00117$
                                    137 ;	../_strtok.c: 66: return s1;
      000075 1E 01            [ 2]  138 	ldw	x, (0x01, sp)
                                    139 ;	../_strtok.c: 68: return NULL;
      000077 21                     140 	.byte 0x21
      000078                        141 00117$:
      000078 5F               [ 1]  142 	clrw	x
      000079                        143 00119$:
      000079 5B 02            [ 2]  144 	addw	sp, #2
      00007B 81               [ 4]  145 	ret
                                    146 	.area CODE
                                    147 	.area INITIALIZER
                                    148 	.area CABS (ABS)
