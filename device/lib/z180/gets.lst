                              1 ;--------------------------------------------------------
                              2 ; File Created by SDCC : free open source ANSI-C Compiler
                              3 ; Version 3.5.0 #9253 (Apr  4 2022) (Linux)
                              4 ; This file was generated Mon Apr  4 14:15:50 2022
                              5 ;--------------------------------------------------------
                              6 	.hd64
                              7 	.module gets
                              8 	.optsdcc -mz180
                              9 	
                             10 ;--------------------------------------------------------
                             11 ; Public variables in this module
                             12 ;--------------------------------------------------------
                             13 	.globl _putchar
                             14 	.globl _getchar
                             15 	.globl _gets
                             16 ;--------------------------------------------------------
                             17 ; special function registers
                             18 ;--------------------------------------------------------
                             19 ;--------------------------------------------------------
                             20 ; ram data
                             21 ;--------------------------------------------------------
                             22 	.area _DATA
                             23 ;--------------------------------------------------------
                             24 ; ram data
                             25 ;--------------------------------------------------------
                             26 	.area _INITIALIZED
                             27 ;--------------------------------------------------------
                             28 ; absolute external ram data
                             29 ;--------------------------------------------------------
                             30 	.area _DABS (ABS)
                             31 ;--------------------------------------------------------
                             32 ; global & static initialisations
                             33 ;--------------------------------------------------------
                             34 	.area _HOME
                             35 	.area _GSINIT
                             36 	.area _GSFINAL
                             37 	.area _GSINIT
                             38 ;--------------------------------------------------------
                             39 ; Home
                             40 ;--------------------------------------------------------
                             41 	.area _HOME
                             42 	.area _HOME
                             43 ;--------------------------------------------------------
                             44 ; code
                             45 ;--------------------------------------------------------
                             46 	.area _CODE
                             47 ;../gets.c:32: gets (char *s)
                             48 ;	---------------------------------
                             49 ; Function gets
                             50 ; ---------------------------------
   0000                      51 _gets::
   0000 3B            [ 4]   52 	dec	sp
                             53 ;../gets.c:35: unsigned int count = 0;
   0001 11 00 00      [ 9]   54 	ld	de,#0x0000
                             55 ;../gets.c:37: while (1)
   0004                      56 00109$:
                             57 ;../gets.c:39: c = getchar ();
   0004 D5            [11]   58 	push	de
   0005 CDr00r00      [16]   59 	call	_getchar
   0008 D1            [ 9]   60 	pop	de
   0009 FD 21 00 00   [12]   61 	ld	iy,#0
   000D FD 39         [10]   62 	add	iy,sp
   000F FD 75 00      [15]   63 	ld	0 (iy),l
                             64 ;../gets.c:40: switch(c)
   0012 FD 7E 00      [14]   65 	ld	a,0 (iy)
   0015 D6 08         [ 6]   66 	sub	a, #0x08
   0017 28 1D         [ 8]   67 	jr	Z,00101$
                             68 ;../gets.c:57: *s = 0;
   0019 21 03 00      [ 9]   69 	ld	hl, #3
   001C 39            [ 7]   70 	add	hl, sp
   001D 46            [ 6]   71 	ld	b, (hl)
   001E 23            [ 4]   72 	inc	hl
   001F 4E            [ 6]   73 	ld	c, (hl)
                             74 ;../gets.c:40: switch(c)
   0020 FD 21 00 00   [12]   75 	ld	iy,#0
   0024 FD 39         [10]   76 	add	iy,sp
   0026 FD 7E 00      [14]   77 	ld	a,0 (iy)
   0029 D6 0A         [ 6]   78 	sub	a, #0x0A
   002B 28 3D         [ 8]   79 	jr	Z,00105$
   002D FD 7E 00      [14]   80 	ld	a,0 (iy)
   0030 D6 0D         [ 6]   81 	sub	a, #0x0D
   0032 28 36         [ 8]   82 	jr	Z,00105$
   0034 18 4E         [ 8]   83 	jr	00106$
                             84 ;../gets.c:42: case '\b': /* backspace */
   0036                      85 00101$:
                             86 ;../gets.c:43: if (count)
   0036 7A            [ 4]   87 	ld	a,d
   0037 B3            [ 4]   88 	or	a,e
   0038 28 CA         [ 8]   89 	jr	Z,00109$
                             90 ;../gets.c:45: putchar ('\b');
   003A D5            [11]   91 	push	de
   003B 3E 08         [ 6]   92 	ld	a,#0x08
   003D F5            [11]   93 	push	af
   003E 33            [ 4]   94 	inc	sp
   003F CDr00r00      [16]   95 	call	_putchar
   0042 33            [ 4]   96 	inc	sp
   0043 3E 20         [ 6]   97 	ld	a,#0x20
   0045 F5            [11]   98 	push	af
   0046 33            [ 4]   99 	inc	sp
   0047 CDr00r00      [16]  100 	call	_putchar
   004A 33            [ 4]  101 	inc	sp
   004B 3E 08         [ 6]  102 	ld	a,#0x08
   004D F5            [11]  103 	push	af
   004E 33            [ 4]  104 	inc	sp
   004F CDr00r00      [16]  105 	call	_putchar
   0052 33            [ 4]  106 	inc	sp
   0053 D1            [ 9]  107 	pop	de
                            108 ;../gets.c:48: --s;
   0054 FD 21 03 00   [12]  109 	ld	iy,#3
   0058 FD 39         [10]  110 	add	iy,sp
   005A FD 6E 00      [14]  111 	ld	l,0 (iy)
   005D FD 66 01      [14]  112 	ld	h,1 (iy)
   0060 2B            [ 4]  113 	dec	hl
   0061 FD 75 00      [15]  114 	ld	0 (iy),l
   0064 FD 74 01      [15]  115 	ld	1 (iy),h
                            116 ;../gets.c:49: --count;
   0067 1B            [ 4]  117 	dec	de
                            118 ;../gets.c:51: break;
   0068 18 9A         [ 8]  119 	jr	00109$
                            120 ;../gets.c:54: case '\r': /* CR or LF */
   006A                     121 00105$:
                            122 ;../gets.c:55: putchar ('\r');
   006A C5            [11]  123 	push	bc
   006B 3E 0D         [ 6]  124 	ld	a,#0x0D
   006D F5            [11]  125 	push	af
   006E 33            [ 4]  126 	inc	sp
   006F CDr00r00      [16]  127 	call	_putchar
   0072 33            [ 4]  128 	inc	sp
   0073 3E 0A         [ 6]  129 	ld	a,#0x0A
   0075 F5            [11]  130 	push	af
   0076 33            [ 4]  131 	inc	sp
   0077 CDr00r00      [16]  132 	call	_putchar
   007A 33            [ 4]  133 	inc	sp
   007B C1            [ 9]  134 	pop	bc
                            135 ;../gets.c:57: *s = 0;
   007C 68            [ 4]  136 	ld	l, b
   007D 61            [ 4]  137 	ld	h, c
   007E 36 00         [ 9]  138 	ld	(hl),#0x00
                            139 ;../gets.c:58: return s;
   0080 68            [ 4]  140 	ld	l, b
   0081 61            [ 4]  141 	ld	h, c
   0082 18 28         [ 8]  142 	jr	00111$
                            143 ;../gets.c:60: default:
   0084                     144 00106$:
                            145 ;../gets.c:61: *s++ = c;
   0084 68            [ 4]  146 	ld	l, b
   0085 61            [ 4]  147 	ld	h, c
   0086 FD 21 00 00   [12]  148 	ld	iy,#0
   008A FD 39         [10]  149 	add	iy,sp
   008C FD 7E 00      [14]  150 	ld	a,0 (iy)
   008F 77            [ 7]  151 	ld	(hl),a
   0090 78            [ 4]  152 	ld	a,b
   0091 21 03 00      [ 9]  153 	ld	hl,#3
   0094 39            [ 7]  154 	add	hl,sp
   0095 C6 01         [ 6]  155 	add	a, #0x01
   0097 77            [ 7]  156 	ld	(hl),a
   0098 79            [ 4]  157 	ld	a,c
   0099 CE 00         [ 6]  158 	adc	a, #0x00
   009B 23            [ 4]  159 	inc	hl
   009C 77            [ 7]  160 	ld	(hl),a
                            161 ;../gets.c:62: ++count;
   009D 13            [ 4]  162 	inc	de
                            163 ;../gets.c:63: putchar (c);
   009E D5            [11]  164 	push	de
   009F FD 7E 00      [14]  165 	ld	a,0 (iy)
   00A2 F5            [11]  166 	push	af
   00A3 33            [ 4]  167 	inc	sp
   00A4 CDr00r00      [16]  168 	call	_putchar
   00A7 33            [ 4]  169 	inc	sp
   00A8 D1            [ 9]  170 	pop	de
                            171 ;../gets.c:65: }
   00A9 C3r04r00      [ 9]  172 	jp	00109$
   00AC                     173 00111$:
   00AC 33            [ 4]  174 	inc	sp
   00AD C9            [ 9]  175 	ret
                            176 	.area _CODE
                            177 	.area _INITIALIZER
                            178 	.area _CABS (ABS)
