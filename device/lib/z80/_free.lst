                              1 ;--------------------------------------------------------
                              2 ; File Created by SDCC : free open source ANSI-C Compiler
                              3 ; Version 3.5.0 #9253 (Apr  4 2022) (Linux)
                              4 ; This file was generated Mon Apr  4 14:15:29 2022
                              5 ;--------------------------------------------------------
                              6 	.module _free
                              7 	.optsdcc -mz80
                              8 	
                              9 ;--------------------------------------------------------
                             10 ; Public variables in this module
                             11 ;--------------------------------------------------------
                             12 	.globl __sdcc_find_memheader
                             13 	.globl __sdcc_prev_memheader
                             14 	.globl _free
                             15 ;--------------------------------------------------------
                             16 ; special function registers
                             17 ;--------------------------------------------------------
                             18 ;--------------------------------------------------------
                             19 ; ram data
                             20 ;--------------------------------------------------------
                             21 	.area _DATA
   0000                      22 __sdcc_prev_memheader::
   0000                      23 	.ds 2
                             24 ;--------------------------------------------------------
                             25 ; ram data
                             26 ;--------------------------------------------------------
                             27 	.area _INITIALIZED
                             28 ;--------------------------------------------------------
                             29 ; absolute external ram data
                             30 ;--------------------------------------------------------
                             31 	.area _DABS (ABS)
                             32 ;--------------------------------------------------------
                             33 ; global & static initialisations
                             34 ;--------------------------------------------------------
                             35 	.area _HOME
                             36 	.area _GSINIT
                             37 	.area _GSFINAL
                             38 	.area _GSINIT
                             39 ;--------------------------------------------------------
                             40 ; Home
                             41 ;--------------------------------------------------------
                             42 	.area _HOME
                             43 	.area _HOME
                             44 ;--------------------------------------------------------
                             45 ; code
                             46 ;--------------------------------------------------------
                             47 	.area _CODE
                             48 ;../_free.c:62: _sdcc_find_memheader(void * p)
                             49 ;	---------------------------------
                             50 ; Function _sdcc_find_memheader
                             51 ; ---------------------------------
   0000                      52 __sdcc_find_memheader::
                             53 ;../_free.c:65: if (!p)
   0000 21 03 00      [10]   54 	ld	hl, #2+1
   0003 39            [11]   55 	add	hl, sp
   0004 7E            [ 7]   56 	ld	a, (hl)
   0005 2B            [ 6]   57 	dec	hl
   0006 B6            [ 7]   58 	or	a,(hl)
   0007 20 04         [12]   59 	jr	NZ,00102$
                             60 ;../_free.c:66: return NULL;
   0009 21 00 00      [10]   61 	ld	hl,#0x0000
   000C C9            [10]   62 	ret
   000D                      63 00102$:
                             64 ;../_free.c:67: pthis = (MEMHEADER * )((char *)  p - HEADER_SIZE); //to start of header
   000D C1            [10]   65 	pop	bc
   000E D1            [10]   66 	pop	de
   000F D5            [11]   67 	push	de
   0010 C5            [11]   68 	push	bc
   0011 7B            [ 4]   69 	ld	a,e
   0012 C6 FA         [ 7]   70 	add	a,#0xFA
   0014 5F            [ 4]   71 	ld	e,a
   0015 7A            [ 4]   72 	ld	a,d
   0016 CE FF         [ 7]   73 	adc	a,#0xFF
   0018 57            [ 4]   74 	ld	d,a
                             75 ;../_free.c:68: _sdcc_prev_memheader = pthis->prev;
   0019 6B            [ 4]   76 	ld	l, e
   001A 62            [ 4]   77 	ld	h, d
   001B 23            [ 6]   78 	inc	hl
   001C 23            [ 6]   79 	inc	hl
   001D 7E            [ 7]   80 	ld	a,(hl)
   001E FD 21r00r00   [14]   81 	ld	iy,#__sdcc_prev_memheader
   0022 FD 77 00      [19]   82 	ld	0 (iy),a
   0025 23            [ 6]   83 	inc	hl
   0026 7E            [ 7]   84 	ld	a,(hl)
   0027 32r01r00      [13]   85 	ld	(#__sdcc_prev_memheader + 1),a
                             86 ;../_free.c:70: return (pthis);
   002A EB            [ 4]   87 	ex	de,hl
   002B C9            [10]   88 	ret
                             89 ;../_free.c:74: free (void *p)
                             90 ;	---------------------------------
                             91 ; Function free
                             92 ; ---------------------------------
   002C                      93 _free::
   002C DD E5         [15]   94 	push	ix
   002E DD 21 00 00   [14]   95 	ld	ix,#0
   0032 DD 39         [15]   96 	add	ix,sp
   0034 F5            [11]   97 	push	af
                             98 ;../_free.c:78: if ( p ) //For allocated pointers only!
   0035 DD 7E 05      [19]   99 	ld	a,5 (ix)
   0038 DD B6 04      [19]  100 	or	a,4 (ix)
   003B 28 4E         [12]  101 	jr	Z,00108$
                            102 ;../_free.c:95: }
   003D ED 57         [ 9]  103 	ld	a,i
   003F F3            [ 4]  104 	di
   0040 F5            [11]  105 	push	af
                            106 ;../_free.c:81: pthis = (MEMHEADER * )((char *)  p - HEADER_SIZE); //to start of header
   0041 DD 7E 04      [19]  107 	ld	a, 4 (ix)
   0044 DD 66 05      [19]  108 	ld	h, 5 (ix)
   0047 C6 FA         [ 7]  109 	add	a,#0xFA
   0049 4F            [ 4]  110 	ld	c,a
   004A 7C            [ 4]  111 	ld	a,h
   004B CE FF         [ 7]  112 	adc	a,#0xFF
   004D 47            [ 4]  113 	ld	b,a
                            114 ;../_free.c:82: if ( pthis->prev ) // For the regular header
   004E 69            [ 4]  115 	ld	l, c
   004F 60            [ 4]  116 	ld	h, b
   0050 23            [ 6]  117 	inc	hl
   0051 23            [ 6]  118 	inc	hl
   0052 5E            [ 7]  119 	ld	e,(hl)
   0053 23            [ 6]  120 	inc	hl
   0054 56            [ 7]  121 	ld	d,(hl)
   0055 7A            [ 4]  122 	ld	a,d
   0056 B3            [ 4]  123 	or	a,e
   0057 28 25         [12]  124 	jr	Z,00104$
                            125 ;../_free.c:84: prev_header = pthis->prev;
                            126 ;../_free.c:85: prev_header->next = pthis->next;
   0059 0A            [ 7]  127 	ld	a,(bc)
   005A DD 77 FE      [19]  128 	ld	-2 (ix),a
   005D 03            [ 6]  129 	inc	bc
   005E 0A            [ 7]  130 	ld	a,(bc)
   005F DD 77 FF      [19]  131 	ld	-1 (ix),a
   0062 0B            [ 6]  132 	dec	bc
   0063 6B            [ 4]  133 	ld	l, e
   0064 62            [ 4]  134 	ld	h, d
   0065 DD 7E FE      [19]  135 	ld	a,-2 (ix)
   0068 77            [ 7]  136 	ld	(hl),a
   0069 23            [ 6]  137 	inc	hl
   006A DD 7E FF      [19]  138 	ld	a,-1 (ix)
   006D 77            [ 7]  139 	ld	(hl),a
                            140 ;../_free.c:86: if (pthis->next)
   006E 69            [ 4]  141 	ld	l, c
   006F 60            [ 4]  142 	ld	h, b
   0070 7E            [ 7]  143 	ld	a, (hl)
   0071 23            [ 6]  144 	inc	hl
   0072 66            [ 7]  145 	ld	h,(hl)
   0073 6F            [ 4]  146 	ld	l,a
   0074 B4            [ 4]  147 	or	a,h
   0075 28 0F         [12]  148 	jr	Z,00105$
                            149 ;../_free.c:88: pthis->next->prev = prev_header;
   0077 23            [ 6]  150 	inc	hl
   0078 23            [ 6]  151 	inc	hl
   0079 73            [ 7]  152 	ld	(hl),e
   007A 23            [ 6]  153 	inc	hl
   007B 72            [ 7]  154 	ld	(hl),d
   007C 18 08         [12]  155 	jr	00105$
   007E                     156 00104$:
                            157 ;../_free.c:93: pthis->len = 0; //For the first header
   007E 21 04 00      [10]  158 	ld	hl,#0x0004
   0081 09            [11]  159 	add	hl,bc
   0082 AF            [ 4]  160 	xor	a, a
   0083 77            [ 7]  161 	ld	(hl), a
   0084 23            [ 6]  162 	inc	hl
   0085 77            [ 7]  163 	ld	(hl), a
   0086                     164 00105$:
   0086 F1            [10]  165 	pop	af
   0087 E2r8Br00      [10]  166 	jp	PO,00123$
   008A FB            [ 4]  167 	ei
   008B                     168 00123$:
   008B                     169 00108$:
   008B DD F9         [10]  170 	ld	sp, ix
   008D DD E1         [14]  171 	pop	ix
   008F C9            [10]  172 	ret
                            173 	.area _CODE
                            174 	.area _INITIALIZER
                            175 	.area _CABS (ABS)
