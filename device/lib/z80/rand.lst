                              1 ;--------------------------------------------------------
                              2 ; File Created by SDCC : free open source ANSI-C Compiler
                              3 ; Version 3.5.0 #9253 (Apr  4 2022) (Linux)
                              4 ; This file was generated Mon Apr  4 14:15:26 2022
                              5 ;--------------------------------------------------------
                              6 	.module rand
                              7 	.optsdcc -mz80
                              8 	
                              9 ;--------------------------------------------------------
                             10 ; Public variables in this module
                             11 ;--------------------------------------------------------
                             12 	.globl _rand
                             13 	.globl _srand
                             14 ;--------------------------------------------------------
                             15 ; special function registers
                             16 ;--------------------------------------------------------
                             17 ;--------------------------------------------------------
                             18 ; ram data
                             19 ;--------------------------------------------------------
                             20 	.area _DATA
                             21 ;--------------------------------------------------------
                             22 ; ram data
                             23 ;--------------------------------------------------------
                             24 	.area _INITIALIZED
   0000                      25 _next:
   0000                      26 	.ds 4
                             27 ;--------------------------------------------------------
                             28 ; absolute external ram data
                             29 ;--------------------------------------------------------
                             30 	.area _DABS (ABS)
                             31 ;--------------------------------------------------------
                             32 ; global & static initialisations
                             33 ;--------------------------------------------------------
                             34 	.area _HOME
                             35 	.area _GSINIT
                             36 	.area _GSFINAL
                             37 	.area _GSINIT
                             38 ;--------------------------------------------------------
                             39 ; Home
                             40 ;--------------------------------------------------------
                             41 	.area _HOME
                             42 	.area _HOME
                             43 ;--------------------------------------------------------
                             44 ; code
                             45 ;--------------------------------------------------------
                             46 	.area _CODE
                             47 ;../rand.c:33: int rand(void)
                             48 ;	---------------------------------
                             49 ; Function rand
                             50 ; ---------------------------------
   0000                      51 _rand::
                             52 ;../rand.c:35: next = next * 1103515245UL + 12345;
   0000 2Ar02r00      [16]   53 	ld	hl,(_next + 2)
   0003 E5            [11]   54 	push	hl
   0004 2Ar00r00      [16]   55 	ld	hl,(_next)
   0007 E5            [11]   56 	push	hl
   0008 21 C6 41      [10]   57 	ld	hl,#0x41C6
   000B E5            [11]   58 	push	hl
   000C 21 6D 4E      [10]   59 	ld	hl,#0x4E6D
   000F E5            [11]   60 	push	hl
   0010 CDr00r00      [17]   61 	call	__mullong
   0013 F1            [10]   62 	pop	af
   0014 F1            [10]   63 	pop	af
   0015 F1            [10]   64 	pop	af
   0016 F1            [10]   65 	pop	af
   0017 4D            [ 4]   66 	ld	c,l
   0018 44            [ 4]   67 	ld	b,h
   0019 79            [ 4]   68 	ld	a,c
   001A 21r00r00      [10]   69 	ld	hl,#_next
   001D C6 39         [ 7]   70 	add	a, #0x39
   001F 77            [ 7]   71 	ld	(hl),a
   0020 78            [ 4]   72 	ld	a,b
   0021 CE 30         [ 7]   73 	adc	a, #0x30
   0023 23            [ 6]   74 	inc	hl
   0024 77            [ 7]   75 	ld	(hl),a
   0025 7B            [ 4]   76 	ld	a,e
   0026 CE 00         [ 7]   77 	adc	a, #0x00
   0028 23            [ 6]   78 	inc	hl
   0029 77            [ 7]   79 	ld	(hl),a
   002A 7A            [ 4]   80 	ld	a,d
   002B CE 00         [ 7]   81 	adc	a, #0x00
   002D 23            [ 6]   82 	inc	hl
   002E 77            [ 7]   83 	ld	(hl),a
                             84 ;../rand.c:36: return (unsigned int)(next/65536) % (RAND_MAX + 1U);
   002F F5            [11]   85 	push	af
   0030 FD 21r00r00   [14]   86 	ld	iy,#_next
   0034 FD 6E 00      [19]   87 	ld	l,0 (iy)
   0037 FD 21r00r00   [14]   88 	ld	iy,#_next
   003B FD 66 01      [19]   89 	ld	h,1 (iy)
   003E FD 21r00r00   [14]   90 	ld	iy,#_next
   0042 FD 5E 02      [19]   91 	ld	e,2 (iy)
   0045 FD 21r00r00   [14]   92 	ld	iy,#_next
   0049 FD 56 03      [19]   93 	ld	d,3 (iy)
   004C F1            [10]   94 	pop	af
   004D 06 10         [ 7]   95 	ld	b,#0x10
   004F                      96 00103$:
   004F CB 3A         [ 8]   97 	srl	d
   0051 CB 1B         [ 8]   98 	rr	e
   0053 CB 1C         [ 8]   99 	rr	h
   0055 CB 1D         [ 8]  100 	rr	l
   0057 10 F6         [13]  101 	djnz	00103$
   0059 CB BC         [ 8]  102 	res	7, h
   005B C9            [10]  103 	ret
                            104 ;../rand.c:39: void srand(unsigned int seed)
                            105 ;	---------------------------------
                            106 ; Function srand
                            107 ; ---------------------------------
   005C                     108 _srand::
                            109 ;../rand.c:41: next = seed;
   005C 21 02 00      [10]  110 	ld	hl, #2+0
   005F 39            [11]  111 	add	hl, sp
   0060 7E            [ 7]  112 	ld	a, (hl)
   0061 32r00r00      [13]  113 	ld	(#_next + 0),a
   0064 21 03 00      [10]  114 	ld	hl, #2+1
   0067 39            [11]  115 	add	hl, sp
   0068 7E            [ 7]  116 	ld	a, (hl)
   0069 32r01r00      [13]  117 	ld	(#_next + 1),a
   006C 21r02r00      [10]  118 	ld	hl,#_next + 2
   006F 36 00         [10]  119 	ld	(hl), #0x00
   0071 21r03r00      [10]  120 	ld	hl,#_next + 3
   0074 36 00         [10]  121 	ld	(hl), #0x00
   0076 C9            [10]  122 	ret
                            123 	.area _CODE
                            124 	.area _INITIALIZER
   0000                     125 __xinit__next:
   0000 01 00 00 00         126 	.byte #0x01,#0x00,#0x00,#0x00	; 1
                            127 	.area _CABS (ABS)
