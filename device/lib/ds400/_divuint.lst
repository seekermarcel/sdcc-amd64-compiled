                                      1 ;--------------------------------------------------------
                                      2 ; File Created by SDCC : free open source ANSI-C Compiler
                                      3 ; Version 3.5.0 #9253 (Apr  4 2022) (Linux)
                                      4 ; This file was generated Mon Apr  4 14:10:29 2022
                                      5 ;--------------------------------------------------------
                                      6 	.module _divuint
                                      7 	.optsdcc -mds400 --model-flat24
                                      8 	
                                      9 ;--------------------------------------------------------
                                     10 ; CPU specific extensions
                                     11 ;--------------------------------------------------------
                                     12 	.DS80C390
                                     13 	.amode	2	; 24 bit flat addressing
                           000082    14 dpl	=	0x82
                           000083    15 dph	=	0x83
                           000084    16 dpl1	=	0x84
                           000085    17 dph1	=	0x85
                           000086    18 dps	=	0x86
                           000093    19 dpx	=	0x93
                           000095    20 dpx1	=	0x95
                           00009B    21 esp	=	0x9B
                           00009C    22 ap	=	0x9C
                           00009C    23 acc1	=	0x9C
                           0000D1    24 mcnt0	=	0xD1
                           0000D2    25 mcnt1	=	0xD2
                           0000D3    26 ma	=	0xD3
                           0000D4    27 mb	=	0xD4
                           0000D5    28 mc	=	0xD5
                           00009D    29 acon	=	0x9D
                           0000D1    30 F1	=	0xD1	; user flag
                                     31 ;--------------------------------------------------------
                                     32 ; Public variables in this module
                                     33 ;--------------------------------------------------------
                                     34 	.globl __divuint_PARM_2
                                     35 	.globl __divuint
                                     36 ;--------------------------------------------------------
                                     37 ; special function registers
                                     38 ;--------------------------------------------------------
                                     39 ;--------------------------------------------------------
                                     40 ; special function bits
                                     41 ;--------------------------------------------------------
                                     42 ;--------------------------------------------------------
                                     43 ; overlayable register banks
                                     44 ;--------------------------------------------------------
                                     45 	.area REG_BANK_0	(REL,OVR,DATA)
      000000                         46 	.ds 8
                                     47 	.area REG_BANK_3	(REL,OVR,DATA)
      000000                         48 	.ds 8
                                     49 ;--------------------------------------------------------
                                     50 ; internal ram data
                                     51 ;--------------------------------------------------------
                                     52 	.area DSEG    (DATA)
                                     53 ;--------------------------------------------------------
                                     54 ; overlayable items in internal ram 
                                     55 ;--------------------------------------------------------
                                     56 ;--------------------------------------------------------
                                     57 ; indirectly addressable internal ram data
                                     58 ;--------------------------------------------------------
                                     59 	.area ISEG    (DATA)
                                     60 ;--------------------------------------------------------
                                     61 ; absolute internal ram data
                                     62 ;--------------------------------------------------------
                                     63 	.area IABS    (ABS,DATA)
                                     64 	.area IABS    (ABS,DATA)
                                     65 ;--------------------------------------------------------
                                     66 ; bit data
                                     67 ;--------------------------------------------------------
                                     68 	.area BSEG    (BIT)
                                     69 ;--------------------------------------------------------
                                     70 ; paged external ram data
                                     71 ;--------------------------------------------------------
                                     72 	.area PSEG    (PAG,XDATA)
                                     73 ;--------------------------------------------------------
                                     74 ; external ram data
                                     75 ;--------------------------------------------------------
                                     76 	.area XSEG    (XDATA)
      000000                         77 __divuint_PARM_2:
      000000                         78 	.ds 2
                                     79 ;--------------------------------------------------------
                                     80 ; absolute external ram data
                                     81 ;--------------------------------------------------------
                                     82 	.area XABS    (ABS,XDATA)
                                     83 ;--------------------------------------------------------
                                     84 ; external initialized ram data
                                     85 ;--------------------------------------------------------
                                     86 	.area XISEG   (XDATA)
                                     87 ;--------------------------------------------------------
                                     88 ; global & static initialisations
                                     89 ;--------------------------------------------------------
                                     90 	.area HOME    (CODE)
                                     91 	.area GSINIT  (CODE)
                                     92 	.area GSFINAL (CODE)
                                     93 	.area GSINIT  (CODE)
                                     94 ;--------------------------------------------------------
                                     95 ; Home
                                     96 ;--------------------------------------------------------
                                     97 	.area HOME    (CODE)
                                     98 	.area HOME    (CODE)
                                     99 ;--------------------------------------------------------
                                    100 ; code
                                    101 ;--------------------------------------------------------
                                    102 	.area CSEG    (CODE)
                                    103 ;------------------------------------------------------------
                                    104 ;Allocation info for local variables in function '_divuint'
                                    105 ;------------------------------------------------------------
                                    106 ;y                         Allocated with name '__divuint_PARM_2'
                                    107 ;x                         Allocated to registers r2 r3 
                                    108 ;reste                     Allocated to registers r4 r5 
                                    109 ;count                     Allocated to registers r6 
                                    110 ;c                         Allocated to registers r7 
                                    111 ;------------------------------------------------------------
                                    112 ;	_divuint.c:155: _divuint (unsigned int x, unsigned int y)
                                    113 ;	-----------------------------------------
                                    114 ;	 function _divuint
                                    115 ;	-----------------------------------------
      000000                        116 __divuint:
                           000002   117 	ar2 = 0x02
                           000003   118 	ar3 = 0x03
                           000004   119 	ar4 = 0x04
                           000005   120 	ar5 = 0x05
                           000006   121 	ar6 = 0x06
                           000007   122 	ar7 = 0x07
                           000000   123 	ar0 = 0x00
                           000001   124 	ar1 = 0x01
      000000 85 82 84         [12]  125 	mov	dpl1,dpl
      000003 85 83 85         [12]  126 	mov	dph1,dph
                                    127 ;	_divuint.c:157: unsigned int reste = 0;
                                    128 ;	genAssign: resultIsFar = TRUE
      000006 7C 00            [ 8]  129 	mov	r4,#0x00
      000008 7D 00            [ 8]  130 	mov	r5,#0x00
                                    131 ;	_divuint.c:158: unsigned char count = 16;
                                    132 ;	genAssign: resultIsFar = TRUE
      00000A 7E 10            [ 8]  133 	mov	r6,#0x10
                                    134 ;	_divuint.c:161: do
      00000C                        135 00105$:
                                    136 ;	_divuint.c:164: c = MSB_SET(x);
      00000C E5 85            [ 8]  137 	mov	a,dph1
      00000E 23               [ 4]  138 	rl	a
      00000F 54 01            [ 8]  139 	anl	a,#0x01
      000011 FF               [ 4]  140 	mov	r7,a
                                    141 ;	_divuint.c:165: x <<= 1;
      000012 A8 84            [ 8]  142 	mov	r0,dpl1
      000014 E5 85            [ 8]  143 	mov	a,dph1
      000016 C8               [ 4]  144 	xch	a,r0
      000017 25 E0            [ 8]  145 	add	a,acc
      000019 C8               [ 4]  146 	xch	a,r0
      00001A 33               [ 4]  147 	rlc	a
      00001B F9               [ 4]  148 	mov	r1,a
                                    149 ;	genAssign: resultIsFar = TRUE
      00001C 88 84            [ 8]  150 	mov	dpl1,r0
      00001E 89 85            [ 8]  151 	mov	dph1,r1
                                    152 ;	_divuint.c:166: reste <<= 1;
      000020 8C 00            [ 8]  153 	mov	ar0,r4
      000022 ED               [ 4]  154 	mov	a,r5
      000023 C8               [ 4]  155 	xch	a,r0
      000024 25 E0            [ 8]  156 	add	a,acc
      000026 C8               [ 4]  157 	xch	a,r0
      000027 33               [ 4]  158 	rlc	a
      000028 F9               [ 4]  159 	mov	r1,a
                                    160 ;	genAssign: resultIsFar = TRUE
      000029 88 04            [ 8]  161 	mov	ar4,r0
      00002B 89 05            [ 8]  162 	mov	ar5,r1
                                    163 ;	_divuint.c:167: if (c)
      00002D EF               [ 4]  164 	mov	a,r7
      00002E 60 03            [12]  165 	jz  00102$
      000030                        166 00122$:
                                    167 ;	_divuint.c:168: reste |= 1;
      000030 43 04 01         [12]  168 	orl	ar4,#0x01
      000033                        169 00102$:
                                    170 ;	_divuint.c:170: if (reste >= y)
      000033 90s00r00r00      [12]  171 	mov	dptr,#__divuint_PARM_2
      000037 C3               [ 4]  172 	clr	c
      000038 EC               [ 4]  173 	mov	a,r4
      000039 C5 F0            [ 8]  174 	xch	a, b
      00003B E0               [ 8]  175 	movx	a,@dptr
      00003C C5 F0            [ 8]  176 	xch	a, b
      00003E 95 F0            [ 8]  177 	subb	a,b
      000040 ED               [ 4]  178 	mov	a,r5
      000041 C5 F0            [ 8]  179 	xch	a, b
      000043 A3               [12]  180 	inc	dptr
      000044 E0               [ 8]  181 	movx	a,@dptr
      000045 C5 F0            [ 8]  182 	xch	a, b
      000047 95 F0            [ 8]  183 	subb	a,b
      000049 40 1B            [12]  184 	jc   00106$
      00004B                        185 00123$:
                                    186 ;	_divuint.c:172: reste -= y;
      00004B 90s00r00r00      [12]  187 	mov	dptr,#__divuint_PARM_2
      00004F C3               [ 4]  188 	clr	c
      000050 E0               [ 8]  189 	movx	a,@dptr
      000051 F5 F0            [ 8]  190 	mov	b,a
      000053 EC               [ 4]  191 	mov	a,r4
      000054 95 F0            [ 8]  192 	subb	a,b
      000056 FF               [ 4]  193 	mov	r7,a
      000057 A3               [12]  194 	inc	dptr
      000058 E0               [ 8]  195 	movx	a,@dptr
      000059 F5 F0            [ 8]  196 	mov	b,a
      00005B ED               [ 4]  197 	mov	a,r5
      00005C 95 F0            [ 8]  198 	subb	a,b
      00005E F8               [ 4]  199 	mov	r0,a
                                    200 ;	genAssign: resultIsFar = TRUE
      00005F 8F 04            [ 8]  201 	mov	ar4,r7
      000061 88 05            [ 8]  202 	mov	ar5,r0
                                    203 ;	_divuint.c:174: x |= 1;
      000063 43 84 01         [12]  204 	orl	dpl1,#0x01
      000066                        205 00106$:
                                    206 ;	_divuint.c:177: while (--count);
      000066 EE               [ 4]  207 	mov	a,r6
      000067 14               [ 4]  208 	dec	a
                                    209 ;	genAssign: resultIsFar = TRUE
      000068 FF               [ 4]  210 	mov  r7,a
      000069 8F 06            [ 8]  211 	mov  ar6,r7 
      00006B 70 9F            [12]  212 	jnz  00105$
      00006D                        213 00124$:
                                    214 ;	_divuint.c:178: return x;
      00006D 85 84 82         [12]  215 	mov	dpl,dpl1
      000070 85 85 83         [12]  216 	mov	dph,dph1
      000073                        217 00108$:
      000073 22               [16]  218 	ret
                                    219 	.area CSEG    (CODE)
                                    220 	.area CONST   (CODE)
                                    221 	.area XINIT   (CODE)
                                    222 	.area CABS    (ABS,CODE)
