                                      1 ;--------------------------------------------------------
                                      2 ; File Created by SDCC : free open source ANSI-C Compiler
                                      3 ; Version 3.5.0 #9253 (Apr  4 2022) (Linux)
                                      4 ; This file was generated Mon Apr  4 14:10:30 2022
                                      5 ;--------------------------------------------------------
                                      6 	.module _calloc
                                      7 	.optsdcc -mds400 --model-flat24
                                      8 	
                                      9 ;--------------------------------------------------------
                                     10 ; CPU specific extensions
                                     11 ;--------------------------------------------------------
                                     12 	.DS80C390
                                     13 	.amode	2	; 24 bit flat addressing
                           000082    14 dpl	=	0x82
                           000083    15 dph	=	0x83
                           000084    16 dpl1	=	0x84
                           000085    17 dph1	=	0x85
                           000086    18 dps	=	0x86
                           000093    19 dpx	=	0x93
                           000095    20 dpx1	=	0x95
                           00009B    21 esp	=	0x9B
                           00009C    22 ap	=	0x9C
                           00009C    23 acc1	=	0x9C
                           0000D1    24 mcnt0	=	0xD1
                           0000D2    25 mcnt1	=	0xD2
                           0000D3    26 ma	=	0xD3
                           0000D4    27 mb	=	0xD4
                           0000D5    28 mc	=	0xD5
                           00009D    29 acon	=	0x9D
                           0000D1    30 F1	=	0xD1	; user flag
                                     31 ;--------------------------------------------------------
                                     32 ; Public variables in this module
                                     33 ;--------------------------------------------------------
                                     34 	.globl _memset
                                     35 	.globl _malloc
                                     36 	.globl _calloc_PARM_2
                                     37 	.globl _calloc
                                     38 ;--------------------------------------------------------
                                     39 ; special function registers
                                     40 ;--------------------------------------------------------
                                     41 ;--------------------------------------------------------
                                     42 ; special function bits
                                     43 ;--------------------------------------------------------
                                     44 ;--------------------------------------------------------
                                     45 ; overlayable register banks
                                     46 ;--------------------------------------------------------
                                     47 	.area REG_BANK_0	(REL,OVR,DATA)
      000000                         48 	.ds 8
                                     49 	.area REG_BANK_3	(REL,OVR,DATA)
      000000                         50 	.ds 8
                                     51 ;--------------------------------------------------------
                                     52 ; internal ram data
                                     53 ;--------------------------------------------------------
                                     54 	.area DSEG    (DATA)
                                     55 ;--------------------------------------------------------
                                     56 ; overlayable items in internal ram 
                                     57 ;--------------------------------------------------------
                                     58 ;--------------------------------------------------------
                                     59 ; indirectly addressable internal ram data
                                     60 ;--------------------------------------------------------
                                     61 	.area ISEG    (DATA)
                                     62 ;--------------------------------------------------------
                                     63 ; absolute internal ram data
                                     64 ;--------------------------------------------------------
                                     65 	.area IABS    (ABS,DATA)
                                     66 	.area IABS    (ABS,DATA)
                                     67 ;--------------------------------------------------------
                                     68 ; bit data
                                     69 ;--------------------------------------------------------
                                     70 	.area BSEG    (BIT)
                                     71 ;--------------------------------------------------------
                                     72 ; paged external ram data
                                     73 ;--------------------------------------------------------
                                     74 	.area PSEG    (PAG,XDATA)
                                     75 ;--------------------------------------------------------
                                     76 ; external ram data
                                     77 ;--------------------------------------------------------
                                     78 	.area XSEG    (XDATA)
      000000                         79 _calloc_PARM_2:
      000000                         80 	.ds 2
                                     81 ;--------------------------------------------------------
                                     82 ; absolute external ram data
                                     83 ;--------------------------------------------------------
                                     84 	.area XABS    (ABS,XDATA)
                                     85 ;--------------------------------------------------------
                                     86 ; external initialized ram data
                                     87 ;--------------------------------------------------------
                                     88 	.area XISEG   (XDATA)
                                     89 ;--------------------------------------------------------
                                     90 ; global & static initialisations
                                     91 ;--------------------------------------------------------
                                     92 	.area HOME    (CODE)
                                     93 	.area GSINIT  (CODE)
                                     94 	.area GSFINAL (CODE)
                                     95 	.area GSINIT  (CODE)
                                     96 ;--------------------------------------------------------
                                     97 ; Home
                                     98 ;--------------------------------------------------------
                                     99 	.area HOME    (CODE)
                                    100 	.area HOME    (CODE)
                                    101 ;--------------------------------------------------------
                                    102 ; code
                                    103 ;--------------------------------------------------------
                                    104 	.area CSEG    (CODE)
                                    105 ;------------------------------------------------------------
                                    106 ;Allocation info for local variables in function 'calloc'
                                    107 ;------------------------------------------------------------
                                    108 ;size                      Allocated with name '_calloc_PARM_2'
                                    109 ;nmemb                     Allocated to registers r2 r3 
                                    110 ;ptr                       Allocated to registers r4 r5 r6 
                                    111 ;------------------------------------------------------------
                                    112 ;	_calloc.c:45: void __xdata * calloc (size_t nmemb, size_t size)
                                    113 ;	-----------------------------------------
                                    114 ;	 function calloc
                                    115 ;	-----------------------------------------
      000000                        116 _calloc:
                           000002   117 	ar2 = 0x02
                           000003   118 	ar3 = 0x03
                           000004   119 	ar4 = 0x04
                           000005   120 	ar5 = 0x05
                           000006   121 	ar6 = 0x06
                           000007   122 	ar7 = 0x07
                           000000   123 	ar0 = 0x00
                           000001   124 	ar1 = 0x01
      000000 AA 82            [ 8]  125 	mov	r2,dpl
      000002 AB 83            [ 8]  126 	mov	r3,dph
                                    127 ;	_calloc.c:49: ptr = malloc(nmemb * size);
      000004 90s00r00r00      [12]  128 	mov	dptr,#_calloc_PARM_2
                                    129 ;	genAssign: resultIsFar = TRUE
      000008 75 86 21         [12]  130 	mov	dps,#0x21
      00000B 90s00r00r00      [12]  131 	mov	dptr,#__mulint_PARM_2
      00000F E0               [ 8]  132 	movx	a,@dptr
      000010 F0               [ 8]  133 	movx	@dptr,a
      000011 A3               [12]  134 	inc	dptr
      000012 A3               [12]  135 	inc	dptr
      000013 E0               [ 8]  136 	movx	a,@dptr
      000014 F0               [ 8]  137 	movx	@dptr,a
      000015 75 86 00         [12]  138 	mov	dps,#0
      000018 8A 82            [ 8]  139 	mov	dpl,r2
      00001A 8B 83            [ 8]  140 	mov	dph,r3
      00001C 12s00r00r00      [16]  141 	lcall	__mulint
      000020 AA 82            [ 8]  142 	mov	r2,dpl
      000022 AB 83            [ 8]  143 	mov	r3,dph
      000024 C0 02            [ 8]  144 	push	ar2
      000026 C0 03            [ 8]  145 	push	ar3
      000028 8A 82            [ 8]  146 	mov	dpl,r2
      00002A 8B 83            [ 8]  147 	mov	dph,r3
      00002C 12s00r00r00      [16]  148 	lcall	_malloc
      000030 AC 82            [ 8]  149 	mov	r4,dpl
      000032 AD 83            [ 8]  150 	mov	r5,dph
      000034 AE 93            [ 8]  151 	mov	r6,dpx
      000036 D0 03            [ 8]  152 	pop	ar3
      000038 D0 02            [ 8]  153 	pop	ar2
                                    154 ;	genAssign: resultIsFar = TRUE
                                    155 ;	_calloc.c:50: if (ptr)
      00003A EC               [ 4]  156 	mov	a,r4
      00003B 4D               [ 4]  157 	orl	a,r5
      00003C 4E               [ 4]  158 	orl	a,r6
      00003D 60 3D            [12]  159 	jz  00102$
      00003F                        160 00108$:
                                    161 ;	_calloc.c:52: memset(ptr, 0, nmemb * size);
                                    162 ;	genAssign: resultIsFar = FALSE
      00003F 8C 07            [ 8]  163 	mov	ar7,r4
      000041 8D 00            [ 8]  164 	mov	ar0,r5
      000043 8E 01            [ 8]  165 	mov	ar1,r6
      000045 C0 04            [ 8]  166 	push	ar4
      000047 C0 05            [ 8]  167 	push	ar5
      000049 C0 06            [ 8]  168 	push	ar6
      00004B 7C 00            [ 8]  169 	mov	r4,#0x00
                                    170 ;	genAssign: resultIsFar = TRUE
      00004D 90s00r00r00      [12]  171 	mov	dptr,#_memset_PARM_2
      000051 E4               [ 4]  172 	clr	a
      000052 F0               [ 8]  173 	movx	@dptr,a
      000053 A3               [12]  174 	inc	dptr
      000054 F0               [ 8]  175 	movx	@dptr,a
                                    176 ;	genAssign: resultIsFar = TRUE
      000055 90s00r00r00      [12]  177 	mov	dptr,#_memset_PARM_3
      000059 EA               [ 4]  178 	mov	a,r2
      00005A F0               [ 8]  179 	movx	@dptr,a
      00005B A3               [12]  180 	inc	dptr
      00005C EB               [ 4]  181 	mov	a,r3
      00005D F0               [ 8]  182 	movx	@dptr,a
      00005E C0 04            [ 8]  183 	push	ar4
      000060 C0 05            [ 8]  184 	push	ar5
      000062 C0 06            [ 8]  185 	push	ar6
      000064 8F 82            [ 8]  186 	mov	dpl,r7
      000066 88 83            [ 8]  187 	mov	dph,r0
      000068 89 93            [ 8]  188 	mov	dpx,r1
      00006A 8C F0            [ 8]  189 	mov	b,r4
      00006C 12s00r00r00      [16]  190 	lcall	_memset
      000070 D0 06            [ 8]  191 	pop	ar6
      000072 D0 05            [ 8]  192 	pop	ar5
      000074 D0 04            [ 8]  193 	pop	ar4
                                    194 ;	_calloc.c:54: return ptr;
      000076 D0 06            [ 8]  195 	pop	ar6
      000078 D0 05            [ 8]  196 	pop	ar5
      00007A D0 04            [ 8]  197 	pop	ar4
                                    198 ;	_calloc.c:52: memset(ptr, 0, nmemb * size);
      00007C                        199 00102$:
                                    200 ;	_calloc.c:54: return ptr;
      00007C 8C 82            [ 8]  201 	mov	dpl,r4
      00007E 8D 83            [ 8]  202 	mov	dph,r5
      000080 8E 93            [ 8]  203 	mov	dpx,r6
      000082                        204 00103$:
      000082 22               [16]  205 	ret
                                    206 	.area CSEG    (CODE)
                                    207 	.area CONST   (CODE)
                                    208 	.area XINIT   (CODE)
                                    209 	.area CABS    (ABS,CODE)
