                              1 ;--------------------------------------------------------
                              2 ; File Created by SDCC : free open source ANSI-C Compiler
                              3 ; Version 3.5.0 #9253 (Apr  4 2022) (Linux)
                              4 ; This file was generated Mon Apr  4 14:15:40 2022
                              5 ;--------------------------------------------------------
                              6 	.hd64
                              7 	.module cotf
                              8 	.optsdcc -mz180
                              9 	
                             10 ;--------------------------------------------------------
                             11 ; Public variables in this module
                             12 ;--------------------------------------------------------
                             13 	.globl _tancotf
                             14 	.globl _fabsf
                             15 	.globl _cotf
                             16 ;--------------------------------------------------------
                             17 ; special function registers
                             18 ;--------------------------------------------------------
                             19 ;--------------------------------------------------------
                             20 ; ram data
                             21 ;--------------------------------------------------------
                             22 	.area _DATA
                             23 ;--------------------------------------------------------
                             24 ; ram data
                             25 ;--------------------------------------------------------
                             26 	.area _INITIALIZED
                             27 ;--------------------------------------------------------
                             28 ; absolute external ram data
                             29 ;--------------------------------------------------------
                             30 	.area _DABS (ABS)
                             31 ;--------------------------------------------------------
                             32 ; global & static initialisations
                             33 ;--------------------------------------------------------
                             34 	.area _HOME
                             35 	.area _GSINIT
                             36 	.area _GSFINAL
                             37 	.area _GSINIT
                             38 ;--------------------------------------------------------
                             39 ; Home
                             40 ;--------------------------------------------------------
                             41 	.area _HOME
                             42 	.area _HOME
                             43 ;--------------------------------------------------------
                             44 ; code
                             45 ;--------------------------------------------------------
                             46 	.area _CODE
                             47 ;../cotf.c:37: float cotf(float x) _FLOAT_FUNC_REENTRANT
                             48 ;	---------------------------------
                             49 ; Function cotf
                             50 ; ---------------------------------
   0000                      51 _cotf::
   0000 DD E5         [14]   52 	push	ix
   0002 DD 21 00 00   [12]   53 	ld	ix,#0
   0006 DD 39         [10]   54 	add	ix,sp
                             55 ;../cotf.c:41: y=fabsf(x);
   0008 DD 6E 06      [14]   56 	ld	l,6 (ix)
   000B DD 66 07      [14]   57 	ld	h,7 (ix)
   000E E5            [11]   58 	push	hl
   000F DD 6E 04      [14]   59 	ld	l,4 (ix)
   0012 DD 66 05      [14]   60 	ld	h,5 (ix)
   0015 E5            [11]   61 	push	hl
   0016 CDr00r00      [16]   62 	call	_fabsf
   0019 33            [ 4]   63 	inc	sp
   001A 33            [ 4]   64 	inc	sp
   001B 33            [ 4]   65 	inc	sp
   001C 33            [ 4]   66 	inc	sp
   001D 4D            [ 4]   67 	ld	c,l
   001E 44            [ 4]   68 	ld	b,h
                             69 ;../cotf.c:42: if (y<1.0E-30) //This one requires more thinking...
   001F 21 A2 0D      [ 9]   70 	ld	hl,#0x0DA2
   0022 E5            [11]   71 	push	hl
   0023 21 60 42      [ 9]   72 	ld	hl,#0x4260
   0026 E5            [11]   73 	push	hl
   0027 D5            [11]   74 	push	de
   0028 C5            [11]   75 	push	bc
   0029 CDr00r00      [16]   76 	call	___fslt
   002C 33            [ 4]   77 	inc	sp
   002D 33            [ 4]   78 	inc	sp
   002E 33            [ 4]   79 	inc	sp
   002F 33            [ 4]   80 	inc	sp
   0030 33            [ 4]   81 	inc	sp
   0031 33            [ 4]   82 	inc	sp
   0032 33            [ 4]   83 	inc	sp
   0033 33            [ 4]   84 	inc	sp
   0034 7D            [ 4]   85 	ld	a,l
   0035 B7            [ 4]   86 	or	a, a
   0036 28 3B         [ 8]   87 	jr	Z,00105$
                             88 ;../cotf.c:44: errno = ERANGE;
   0038 21 22 00      [ 9]   89 	ld	hl,#0x0022
   003B 22r00r00      [16]   90 	ld	(_errno),hl
                             91 ;../cotf.c:45: if (x<0.0)
   003E 21 00 00      [ 9]   92 	ld	hl,#0x0000
   0041 E5            [11]   93 	push	hl
   0042 21 00 00      [ 9]   94 	ld	hl,#0x0000
   0045 E5            [11]   95 	push	hl
   0046 DD 6E 06      [14]   96 	ld	l,6 (ix)
   0049 DD 66 07      [14]   97 	ld	h,7 (ix)
   004C E5            [11]   98 	push	hl
   004D DD 6E 04      [14]   99 	ld	l,4 (ix)
   0050 DD 66 05      [14]  100 	ld	h,5 (ix)
   0053 E5            [11]  101 	push	hl
   0054 CDr00r00      [16]  102 	call	___fslt
   0057 33            [ 4]  103 	inc	sp
   0058 33            [ 4]  104 	inc	sp
   0059 33            [ 4]  105 	inc	sp
   005A 33            [ 4]  106 	inc	sp
   005B 33            [ 4]  107 	inc	sp
   005C 33            [ 4]  108 	inc	sp
   005D 33            [ 4]  109 	inc	sp
   005E 33            [ 4]  110 	inc	sp
   005F 7D            [ 4]  111 	ld	a,l
   0060 B7            [ 4]  112 	or	a, a
   0061 28 08         [ 8]  113 	jr	Z,00102$
                            114 ;../cotf.c:46: return -HUGE_VALF;
   0063 21 FF FF      [ 9]  115 	ld	hl,#0xFFFF
   0066 11 7F FF      [ 9]  116 	ld	de,#0xFF7F
   0069 18 22         [ 8]  117 	jr	00106$
   006B                     118 00102$:
                            119 ;../cotf.c:48: return +HUGE_VALF;
   006B 21 FF FF      [ 9]  120 	ld	hl,#0xFFFF
   006E 11 7F 7F      [ 9]  121 	ld	de,#0x7F7F
   0071 18 1A         [ 8]  122 	jr	00106$
   0073                     123 00105$:
                            124 ;../cotf.c:50: return tancotf(x, 1);
   0073 3E 01         [ 6]  125 	ld	a,#0x01
   0075 F5            [11]  126 	push	af
   0076 33            [ 4]  127 	inc	sp
   0077 DD 6E 06      [14]  128 	ld	l,6 (ix)
   007A DD 66 07      [14]  129 	ld	h,7 (ix)
   007D E5            [11]  130 	push	hl
   007E DD 6E 04      [14]  131 	ld	l,4 (ix)
   0081 DD 66 05      [14]  132 	ld	h,5 (ix)
   0084 E5            [11]  133 	push	hl
   0085 CDr00r00      [16]  134 	call	_tancotf
   0088 33            [ 4]  135 	inc	sp
   0089 33            [ 4]  136 	inc	sp
   008A 33            [ 4]  137 	inc	sp
   008B 33            [ 4]  138 	inc	sp
   008C 33            [ 4]  139 	inc	sp
   008D                     140 00106$:
   008D DD E1         [12]  141 	pop	ix
   008F C9            [ 9]  142 	ret
                            143 	.area _CODE
                            144 	.area _INITIALIZER
                            145 	.area _CABS (ABS)
