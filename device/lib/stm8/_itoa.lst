                                      1 ;--------------------------------------------------------
                                      2 ; File Created by SDCC : free open source ANSI-C Compiler
                                      3 ; Version 3.5.0 #9253 (Apr  4 2022) (Linux)
                                      4 ; This file was generated Mon Apr  4 14:17:28 2022
                                      5 ;--------------------------------------------------------
                                      6 	.module _itoa
                                      7 	.optsdcc -mstm8
                                      8 	
                                      9 ;--------------------------------------------------------
                                     10 ; Public variables in this module
                                     11 ;--------------------------------------------------------
                                     12 	.globl __itoa
                                     13 	.globl __uitoa
                                     14 ;--------------------------------------------------------
                                     15 ; ram data
                                     16 ;--------------------------------------------------------
                                     17 	.area DATA
                                     18 ;--------------------------------------------------------
                                     19 ; ram data
                                     20 ;--------------------------------------------------------
                                     21 	.area INITIALIZED
                                     22 ;--------------------------------------------------------
                                     23 ; absolute external ram data
                                     24 ;--------------------------------------------------------
                                     25 	.area DABS (ABS)
                                     26 ;--------------------------------------------------------
                                     27 ; global & static initialisations
                                     28 ;--------------------------------------------------------
                                     29 	.area HOME
                                     30 	.area GSINIT
                                     31 	.area GSFINAL
                                     32 	.area GSINIT
                                     33 ;--------------------------------------------------------
                                     34 ; Home
                                     35 ;--------------------------------------------------------
                                     36 	.area HOME
                                     37 	.area HOME
                                     38 ;--------------------------------------------------------
                                     39 ; code
                                     40 ;--------------------------------------------------------
                                     41 	.area CODE
                                     42 ;	../_itoa.c: 40: void _uitoa(unsigned int value, char* string, unsigned char radix)
                                     43 ;	-----------------------------------------
                                     44 ;	 function _uitoa
                                     45 ;	-----------------------------------------
      000000                         46 __uitoa:
      000000 52 08            [ 2]   47 	sub	sp, #8
                                     48 ;	../_itoa.c: 45: do {
      000002 0F 03            [ 1]   49 	clr	(0x03, sp)
      000004                         50 00103$:
                                     51 ;	../_itoa.c: 46: string[index] = '0' + (value % radix);
      000004 5F               [ 1]   52 	clrw	x
      000005 7B 03            [ 1]   53 	ld	a, (0x03, sp)
      000007 97               [ 1]   54 	ld	xl, a
      000008 72 FB 0D         [ 2]   55 	addw	x, (0x0d, sp)
      00000B 1F 04            [ 2]   56 	ldw	(0x04, sp), x
      00000D 7B 0F            [ 1]   57 	ld	a, (0x0f, sp)
      00000F 6B 08            [ 1]   58 	ld	(0x08, sp), a
      000011 0F 07            [ 1]   59 	clr	(0x07, sp)
      000013 1E 0B            [ 2]   60 	ldw	x, (0x0b, sp)
      000015 16 07            [ 2]   61 	ldw	y, (0x07, sp)
      000017 65               [ 2]   62 	divw	x, y
      000018 90 9F            [ 1]   63 	ld	a, yl
      00001A AB 30            [ 1]   64 	add	a, #0x30
      00001C 1E 04            [ 2]   65 	ldw	x, (0x04, sp)
      00001E F7               [ 1]   66 	ld	(x), a
                                     67 ;	../_itoa.c: 47: if (string[index] > '9')
      00001F A1 39            [ 1]   68 	cp	a, #0x39
      000021 2D 08            [ 1]   69 	jrsle	00102$
                                     70 ;	../_itoa.c: 48: string[index] += 'A' - '9' - 1;
      000023 1E 04            [ 2]   71 	ldw	x, (0x04, sp)
      000025 F6               [ 1]   72 	ld	a, (x)
      000026 AB 07            [ 1]   73 	add	a, #0x07
      000028 1E 04            [ 2]   74 	ldw	x, (0x04, sp)
      00002A F7               [ 1]   75 	ld	(x), a
      00002B                         76 00102$:
                                     77 ;	../_itoa.c: 49: value /= radix;
      00002B 1E 0B            [ 2]   78 	ldw	x, (0x0b, sp)
      00002D 16 07            [ 2]   79 	ldw	y, (0x07, sp)
      00002F 65               [ 2]   80 	divw	x, y
      000030 1F 0B            [ 2]   81 	ldw	(0x0b, sp), x
                                     82 ;	../_itoa.c: 50: ++index;
      000032 0C 03            [ 1]   83 	inc	(0x03, sp)
                                     84 ;	../_itoa.c: 51: } while (value != 0);
      000034 1E 0B            [ 2]   85 	ldw	x, (0x0b, sp)
      000036 26 CC            [ 1]   86 	jrne	00103$
                                     87 ;	../_itoa.c: 54: string[index--] = '\0';
      000038 7B 03            [ 1]   88 	ld	a, (0x03, sp)
      00003A 4A               [ 1]   89 	dec	a
      00003B 5F               [ 1]   90 	clrw	x
      00003C 41               [ 1]   91 	exg	a, xl
      00003D 7B 03            [ 1]   92 	ld	a, (0x03, sp)
      00003F 41               [ 1]   93 	exg	a, xl
      000040 72 FB 0D         [ 2]   94 	addw	x, (0x0d, sp)
      000043 7F               [ 1]   95 	clr	(x)
                                     96 ;	../_itoa.c: 57: while (index > i) {
      000044 0F 02            [ 1]   97 	clr	(0x02, sp)
      000046 6B 06            [ 1]   98 	ld	(0x06, sp), a
      000048                         99 00106$:
      000048 7B 06            [ 1]  100 	ld	a, (0x06, sp)
      00004A 11 02            [ 1]  101 	cp	a, (0x02, sp)
      00004C 2D 20            [ 1]  102 	jrsle	00109$
                                    103 ;	../_itoa.c: 58: char tmp = string[i];
      00004E 5F               [ 1]  104 	clrw	x
      00004F 7B 02            [ 1]  105 	ld	a, (0x02, sp)
      000051 97               [ 1]  106 	ld	xl, a
      000052 72 FB 0D         [ 2]  107 	addw	x, (0x0d, sp)
      000055 F6               [ 1]  108 	ld	a, (x)
      000056 6B 01            [ 1]  109 	ld	(0x01, sp), a
                                    110 ;	../_itoa.c: 59: string[i] = string[index];
      000058 90 5F            [ 1]  111 	clrw	y
      00005A 7B 06            [ 1]  112 	ld	a, (0x06, sp)
      00005C 90 97            [ 1]  113 	ld	yl, a
      00005E 72 F9 0D         [ 2]  114 	addw	y, (0x0d, sp)
      000061 90 F6            [ 1]  115 	ld	a, (y)
      000063 F7               [ 1]  116 	ld	(x), a
                                    117 ;	../_itoa.c: 60: string[index] = tmp;
      000064 7B 01            [ 1]  118 	ld	a, (0x01, sp)
      000066 90 F7            [ 1]  119 	ld	(y), a
                                    120 ;	../_itoa.c: 61: ++i;
      000068 0C 02            [ 1]  121 	inc	(0x02, sp)
                                    122 ;	../_itoa.c: 62: --index;
      00006A 0A 06            [ 1]  123 	dec	(0x06, sp)
      00006C 20 DA            [ 2]  124 	jra	00106$
      00006E                        125 00109$:
      00006E 5B 08            [ 2]  126 	addw	sp, #8
      000070 81               [ 4]  127 	ret
                                    128 ;	../_itoa.c: 66: void _itoa(int value, char* string, unsigned char radix)
                                    129 ;	-----------------------------------------
                                    130 ;	 function _itoa
                                    131 ;	-----------------------------------------
      000071                        132 __itoa:
                                    133 ;	../_itoa.c: 68: if (value < 0 && radix == 10) {
      000071 0D 03            [ 1]  134 	tnz	(0x03, sp)
      000073 2A 13            [ 1]  135 	jrpl	00102$
      000075 7B 07            [ 1]  136 	ld	a, (0x07, sp)
      000077 A1 0A            [ 1]  137 	cp	a, #0x0a
      000079 26 0D            [ 1]  138 	jrne	00102$
                                    139 ;	../_itoa.c: 69: *string++ = '-';
      00007B 1E 05            [ 2]  140 	ldw	x, (0x05, sp)
      00007D A6 2D            [ 1]  141 	ld	a, #0x2d
      00007F F7               [ 1]  142 	ld	(x), a
      000080 5C               [ 2]  143 	incw	x
      000081 1F 05            [ 2]  144 	ldw	(0x05, sp), x
                                    145 ;	../_itoa.c: 70: value = -value;
      000083 1E 03            [ 2]  146 	ldw	x, (0x03, sp)
      000085 50               [ 2]  147 	negw	x
      000086 1F 03            [ 2]  148 	ldw	(0x03, sp), x
      000088                        149 00102$:
                                    150 ;	../_itoa.c: 72: _uitoa(value, string, radix);
      000088 7B 07            [ 1]  151 	ld	a, (0x07, sp)
      00008A 88               [ 1]  152 	push	a
      00008B 1E 06            [ 2]  153 	ldw	x, (0x06, sp)
      00008D 89               [ 2]  154 	pushw	x
      00008E 1E 06            [ 2]  155 	ldw	x, (0x06, sp)
      000090 89               [ 2]  156 	pushw	x
      000091 CDr00r00         [ 4]  157 	call	__uitoa
      000094 5B 05            [ 2]  158 	addw	sp, #5
      000096 81               [ 4]  159 	ret
                                    160 	.area CODE
                                    161 	.area INITIALIZER
                                    162 	.area CABS (ABS)
