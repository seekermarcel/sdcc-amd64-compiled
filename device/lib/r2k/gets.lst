                              1 ;--------------------------------------------------------
                              2 ; File Created by SDCC : free open source ANSI-C Compiler
                              3 ; Version 3.5.0 #9253 (Apr  4 2022) (Linux)
                              4 ; This file was generated Mon Apr  4 14:16:07 2022
                              5 ;--------------------------------------------------------
                              6 	.module gets
                              7 	.optsdcc -mr2k
                              8 	
                              9 ;--------------------------------------------------------
                             10 ; Public variables in this module
                             11 ;--------------------------------------------------------
                             12 	.globl _putchar
                             13 	.globl _getchar
                             14 	.globl _gets
                             15 ;--------------------------------------------------------
                             16 ; special function registers
                             17 ;--------------------------------------------------------
                             18 ;--------------------------------------------------------
                             19 ; ram data
                             20 ;--------------------------------------------------------
                             21 	.area _DATA
                             22 ;--------------------------------------------------------
                             23 ; ram data
                             24 ;--------------------------------------------------------
                             25 	.area _INITIALIZED
                             26 ;--------------------------------------------------------
                             27 ; absolute external ram data
                             28 ;--------------------------------------------------------
                             29 	.area _DABS (ABS)
                             30 ;--------------------------------------------------------
                             31 ; global & static initialisations
                             32 ;--------------------------------------------------------
                             33 	.area _HOME
                             34 	.area _GSINIT
                             35 	.area _GSFINAL
                             36 	.area _GSINIT
                             37 ;--------------------------------------------------------
                             38 ; Home
                             39 ;--------------------------------------------------------
                             40 	.area _HOME
                             41 	.area _HOME
                             42 ;--------------------------------------------------------
                             43 ; code
                             44 ;--------------------------------------------------------
                             45 	.area _CODE
                             46 ;../gets.c:32: gets (char *s)
                             47 ;	---------------------------------
                             48 ; Function gets
                             49 ; ---------------------------------
   0000                      50 _gets::
   0000 27 FE                51 	add	sp, #-2
                             52 ;../gets.c:35: unsigned int count = 0;
   0002 21 00 00             53 	ld	hl,#0x0000
   0005 D4 00                54 	ld	0 (sp), hl
                             55 ;../gets.c:37: while (1)
   0007                      56 00109$:
                             57 ;../gets.c:39: c = getchar ();
   0007 CDr00r00             58 	call	_getchar
   000A 45                   59 	ld	b,l
                             60 ;../gets.c:40: switch(c)
   000B 78                   61 	ld	a,b
   000C D6 08                62 	sub	a, #0x08
   000E 28 0F                63 	jr	Z,00101$
                             64 ;../gets.c:57: *s = 0;
   0010 EB                   65 	ex	de, hl
   0011 C4 04                66 	ld	hl, 4 (sp)
   0013 EB                   67 	ex	de, hl
                             68 ;../gets.c:40: switch(c)
   0014 78                   69 	ld	a,b
   0015 FE 0A                70 	cp	a,#0x0A
   0017 28 33                71 	jr	Z,00105$
   0019 D6 0D                72 	sub	a, #0x0D
   001B 28 2F                73 	jr	Z,00105$
   001D 18 44                74 	jr	00106$
                             75 ;../gets.c:42: case '\b': /* backspace */
   001F                      76 00101$:
                             77 ;../gets.c:43: if (count)
   001F 21 00 00             78 	ld	hl, #0
   0022 39                   79 	add	hl, sp
   0023 7E                   80 	ld	a, (hl)
   0024 23                   81 	inc	hl
   0025 B6                   82 	or	a,(hl)
   0026 28 DF                83 	jr	Z,00109$
                             84 ;../gets.c:45: putchar ('\b');
   0028 3E 08                85 	ld	a,#0x08
   002A F5                   86 	push	af
   002B 33                   87 	inc	sp
   002C CDr00r00             88 	call	_putchar
   002F 33                   89 	inc	sp
                             90 ;../gets.c:46: putchar (' ');
   0030 3E 20                91 	ld	a,#0x20
   0032 F5                   92 	push	af
   0033 33                   93 	inc	sp
   0034 CDr00r00             94 	call	_putchar
   0037 33                   95 	inc	sp
                             96 ;../gets.c:47: putchar ('\b');
   0038 3E 08                97 	ld	a,#0x08
   003A F5                   98 	push	af
   003B 33                   99 	inc	sp
   003C CDr00r00            100 	call	_putchar
   003F 33                  101 	inc	sp
                            102 ;../gets.c:48: --s;
   0040 C4 04               103 	ld	hl, 4 (sp)
   0042 2B                  104 	dec	hl
   0043 D4 04               105 	ld	4 (sp), hl
                            106 ;../gets.c:49: --count;
   0045 C4 00               107 	ld	hl, 0 (sp)
   0047 2B                  108 	dec	hl
   0048 D4 00               109 	ld	0 (sp), hl
                            110 ;../gets.c:51: break;
   004A 18 BB               111 	jr	00109$
                            112 ;../gets.c:54: case '\r': /* CR or LF */
   004C                     113 00105$:
                            114 ;../gets.c:55: putchar ('\r');
   004C D5                  115 	push	de
   004D 3E 0D               116 	ld	a,#0x0D
   004F F5                  117 	push	af
   0050 33                  118 	inc	sp
   0051 CDr00r00            119 	call	_putchar
   0054 33                  120 	inc	sp
   0055 3E 0A               121 	ld	a,#0x0A
   0057 F5                  122 	push	af
   0058 33                  123 	inc	sp
   0059 CDr00r00            124 	call	_putchar
   005C 33                  125 	inc	sp
   005D D1                  126 	pop	de
                            127 ;../gets.c:57: *s = 0;
   005E AF                  128 	xor	a, a
   005F 12                  129 	ld	(de),a
                            130 ;../gets.c:58: return s;
   0060 EB                  131 	ex	de,hl
   0061 18 26               132 	jr	00111$
                            133 ;../gets.c:60: default:
   0063                     134 00106$:
                            135 ;../gets.c:61: *s++ = c;
   0063 78                  136 	ld	a,b
   0064 12                  137 	ld	(de),a
   0065 13                  138 	inc	de
   0066 FD 21 04 00         139 	ld	iy,#4
   006A FD 39               140 	add	iy,sp
   006C FD 73 00            141 	ld	0 (iy),e
   006F FD 72 01            142 	ld	1 (iy),d
                            143 ;../gets.c:62: ++count;
   0072 FD 21 00 00         144 	ld	iy,#0
   0076 FD 39               145 	add	iy,sp
   0078 FD 34 00            146 	inc	0 (iy)
   007B 20 03               147 	jr	NZ,00136$
   007D FD 34 01            148 	inc	1 (iy)
   0080                     149 00136$:
                            150 ;../gets.c:63: putchar (c);
   0080 C5                  151 	push	bc
   0081 33                  152 	inc	sp
   0082 CDr00r00            153 	call	_putchar
   0085 33                  154 	inc	sp
                            155 ;../gets.c:65: }
   0086 C3r07r00            156 	jp	00109$
   0089                     157 00111$:
   0089 27 02               158 	add	sp, #2
   008B C9                  159 	ret
                            160 	.area _CODE
                            161 	.area _INITIALIZER
                            162 	.area _CABS (ABS)
