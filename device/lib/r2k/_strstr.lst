                              1 ;--------------------------------------------------------
                              2 ; File Created by SDCC : free open source ANSI-C Compiler
                              3 ; Version 3.5.0 #9253 (Apr  4 2022) (Linux)
                              4 ; This file was generated Mon Apr  4 14:16:02 2022
                              5 ;--------------------------------------------------------
                              6 	.module _strstr
                              7 	.optsdcc -mr2k
                              8 	
                              9 ;--------------------------------------------------------
                             10 ; Public variables in this module
                             11 ;--------------------------------------------------------
                             12 	.globl _strstr
                             13 ;--------------------------------------------------------
                             14 ; special function registers
                             15 ;--------------------------------------------------------
                             16 ;--------------------------------------------------------
                             17 ; ram data
                             18 ;--------------------------------------------------------
                             19 	.area _DATA
                             20 ;--------------------------------------------------------
                             21 ; ram data
                             22 ;--------------------------------------------------------
                             23 	.area _INITIALIZED
                             24 ;--------------------------------------------------------
                             25 ; absolute external ram data
                             26 ;--------------------------------------------------------
                             27 	.area _DABS (ABS)
                             28 ;--------------------------------------------------------
                             29 ; global & static initialisations
                             30 ;--------------------------------------------------------
                             31 	.area _HOME
                             32 	.area _GSINIT
                             33 	.area _GSFINAL
                             34 	.area _GSINIT
                             35 ;--------------------------------------------------------
                             36 ; Home
                             37 ;--------------------------------------------------------
                             38 	.area _HOME
                             39 	.area _HOME
                             40 ;--------------------------------------------------------
                             41 ; code
                             42 ;--------------------------------------------------------
                             43 	.area _CODE
                             44 ;../_strstr.c:31: char * strstr ( const char * str1, const char * str2 )
                             45 ;	---------------------------------
                             46 ; Function strstr
                             47 ; ---------------------------------
   0000                      48 _strstr::
   0000 DD E5                49 	push	ix
   0002 DD 21 00 00          50 	ld	ix,#0
   0006 DD 39                51 	add	ix,sp
   0008 27 F6                52 	add	sp, #-10
                             53 ;../_strstr.c:33: const char * cp = str1;
   000A DD 4E 04             54 	ld	c,4 (ix)
   000D DD 46 05             55 	ld	b,5 (ix)
                             56 ;../_strstr.c:37: if ( !*str2 )
   0010 DD 7E 06             57 	ld	a,6 (ix)
   0013 DD 77 F6             58 	ld	-10 (ix),a
   0016 DD 7E 07             59 	ld	a,7 (ix)
   0019 DD 77 F7             60 	ld	-9 (ix),a
   001C C4 00                61 	ld	hl, 0 (sp)
   001E 7E                   62 	ld	a,(hl)
   001F DD 77 FA             63 	ld	-6 (ix), a
   0022 B7                   64 	or	a, a
   0023 20 05                65 	jr	NZ,00122$
                             66 ;../_strstr.c:38: return str1;
   0025 69                   67 	ld	l, c
   0026 60                   68 	ld	h, b
   0027 C3rA1r00             69 	jp	00113$
                             70 ;../_strstr.c:40: while (*cp)
   002A                      71 00122$:
   002A 59                   72 	ld	e, c
   002B 50                   73 	ld	d, b
   002C                      74 00110$:
   002C 1A                   75 	ld	a,(de)
   002D B7                   76 	or	a, a
   002E 28 6E                77 	jr	Z,00112$
                             78 ;../_strstr.c:43: s2 = str2;
   0030 DD 7E F6             79 	ld	a,-10 (ix)
   0033 DD 77 FB             80 	ld	-5 (ix),a
   0036 DD 7E F7             81 	ld	a,-9 (ix)
   0039 DD 77 FC             82 	ld	-4 (ix),a
                             83 ;../_strstr.c:45: while ( *s1 && *s2 && !(*s1-*s2) )
   003C DD 73 F8             84 	ld	-8 (ix),e
   003F DD 72 F9             85 	ld	-7 (ix),d
   0042                      86 00105$:
   0042 C4 02                87 	ld	hl, 2 (sp)
   0044 7E                   88 	ld	a,(hl)
   0045 DD 77 FA             89 	ld	-6 (ix),a
   0048 C4 05                90 	ld	hl, 5 (sp)
   004A 7E                   91 	ld	a,(hl)
   004B DD 77 FF             92 	ld	-1 (ix),a
   004E DD 7E FA             93 	ld	a,-6 (ix)
   0051 B7                   94 	or	a, a
   0052 28 3B                95 	jr	Z,00107$
   0054 DD 7E FF             96 	ld	a,-1 (ix)
   0057 B7                   97 	or	a, a
   0058 28 35                98 	jr	Z,00107$
   005A DD 7E FA             99 	ld	a,-6 (ix)
   005D DD 77 FD            100 	ld	-3 (ix),a
   0060 DD 7E FA            101 	ld	a,-6 (ix)
   0063 17                  102 	rla
   0064 9F                  103 	sbc	a, a
   0065 DD 77 FE            104 	ld	-2 (ix),a
   0068 DD 66 FF            105 	ld	h,-1 (ix)
   006B DD 7E FF            106 	ld	a,-1 (ix)
   006E 17                  107 	rla
   006F 9F                  108 	sbc	a, a
   0070 6F                  109 	ld	l,a
   0071 DD 7E FD            110 	ld	a,-3 (ix)
   0074 94                  111 	sub	a, h
   0075 67                  112 	ld	h,a
   0076 DD 7E FE            113 	ld	a,-2 (ix)
   0079 9D                  114 	sbc	a, l
   007A B4                  115 	or	a,h
   007B 20 12               116 	jr	NZ,00107$
                            117 ;../_strstr.c:46: s1++, s2++;
   007D DD 34 F8            118 	inc	-8 (ix)
   0080 20 03               119 	jr	NZ,00148$
   0082 DD 34 F9            120 	inc	-7 (ix)
   0085                     121 00148$:
   0085 DD 34 FB            122 	inc	-5 (ix)
   0088 20 B8               123 	jr	NZ,00105$
   008A DD 34 FC            124 	inc	-4 (ix)
   008D 18 B3               125 	jr	00105$
   008F                     126 00107$:
                            127 ;../_strstr.c:48: if (!*s2)
   008F DD 7E FF            128 	ld	a,-1 (ix)
   0092 B7                  129 	or	a, a
   0093 20 04               130 	jr	NZ,00109$
                            131 ;../_strstr.c:49: return( (char*)cp );
   0095 69                  132 	ld	l, c
   0096 60                  133 	ld	h, b
   0097 18 08               134 	jr	00113$
   0099                     135 00109$:
                            136 ;../_strstr.c:51: cp++;
   0099 13                  137 	inc	de
   009A 4B                  138 	ld	c, e
   009B 42                  139 	ld	b, d
   009C 18 8E               140 	jr	00110$
   009E                     141 00112$:
                            142 ;../_strstr.c:54: return (NULL) ;
   009E 21 00 00            143 	ld	hl,#0x0000
   00A1                     144 00113$:
   00A1 DD F9               145 	ld	sp, ix
   00A3 DD E1               146 	pop	ix
   00A5 C9                  147 	ret
                            148 	.area _CODE
                            149 	.area _INITIALIZER
                            150 	.area _CABS (ABS)
