                              1 ;--------------------------------------------------------
                              2 ; File Created by SDCC : free open source ANSI-C Compiler
                              3 ; Version 3.5.0 #9253 (Apr  4 2022) (Linux)
                              4 ; This file was generated Mon Apr  4 14:15:44 2022
                              5 ;--------------------------------------------------------
                              6 	.hd64
                              7 	.module _strpbrk
                              8 	.optsdcc -mz180
                              9 	
                             10 ;--------------------------------------------------------
                             11 ; Public variables in this module
                             12 ;--------------------------------------------------------
                             13 	.globl _strpbrk
                             14 ;--------------------------------------------------------
                             15 ; special function registers
                             16 ;--------------------------------------------------------
                             17 ;--------------------------------------------------------
                             18 ; ram data
                             19 ;--------------------------------------------------------
                             20 	.area _DATA
                             21 ;--------------------------------------------------------
                             22 ; ram data
                             23 ;--------------------------------------------------------
                             24 	.area _INITIALIZED
                             25 ;--------------------------------------------------------
                             26 ; absolute external ram data
                             27 ;--------------------------------------------------------
                             28 	.area _DABS (ABS)
                             29 ;--------------------------------------------------------
                             30 ; global & static initialisations
                             31 ;--------------------------------------------------------
                             32 	.area _HOME
                             33 	.area _GSINIT
                             34 	.area _GSFINAL
                             35 	.area _GSINIT
                             36 ;--------------------------------------------------------
                             37 ; Home
                             38 ;--------------------------------------------------------
                             39 	.area _HOME
                             40 	.area _HOME
                             41 ;--------------------------------------------------------
                             42 ; code
                             43 ;--------------------------------------------------------
                             44 	.area _CODE
                             45 ;../_strpbrk.c:31: char * strpbrk ( const char * string, const char * control )
                             46 ;	---------------------------------
                             47 ; Function strpbrk
                             48 ; ---------------------------------
   0000                      49 _strpbrk::
   0000 DD E5         [14]   50 	push	ix
   0002 DD 21 00 00   [12]   51 	ld	ix,#0
   0006 DD 39         [10]   52 	add	ix,sp
   0008 3B            [ 4]   53 	dec	sp
   0009 3B            [ 4]   54 	dec	sp
                             55 ;../_strpbrk.c:33: char *ret = NULL;
   000A 21 00 00      [ 9]   56 	ld	hl,#0x0000
   000D E3            [16]   57 	ex	(sp), hl
                             58 ;../_strpbrk.c:36: while (ch = *control) {
   000E DD 6E 06      [14]   59 	ld	l,6 (ix)
   0011 DD 66 07      [14]   60 	ld	h,7 (ix)
   0014                      61 00105$:
   0014 7E            [ 6]   62 	ld	a,(hl)
                             63 ;../_strpbrk.c:37: char * p = strchr(string, ch);
   0015 4F            [ 4]   64 	ld	c,a
   0016 B7            [ 4]   65 	or	a,a
   0017 28 2E         [ 8]   66 	jr	Z,00107$
   0019 17            [ 3]   67 	rla
   001A 9F            [ 4]   68 	sbc	a, a
   001B DD 5E 04      [14]   69 	ld	e,4 (ix)
   001E DD 56 05      [14]   70 	ld	d,5 (ix)
   0021                      71 00128$:
   0021 1A            [ 6]   72 	ld	a, (de)
   0022 B9            [ 4]   73 	cp	a, c
   0023 28 06         [ 8]   74 	jr	Z,00127$
   0025 B7            [ 4]   75 	or	a, a
   0026 13            [ 4]   76 	inc	de
   0027 20 F8         [ 8]   77 	jr	NZ, 00128$
   0029 5F            [ 4]   78 	ld	e, a
   002A 57            [ 4]   79 	ld	d, a
   002B                      80 00127$:
                             81 ;../_strpbrk.c:38: if (p != NULL && (ret == NULL || p < ret)) {
   002B 7A            [ 4]   82 	ld	a,d
   002C B3            [ 4]   83 	or	a,e
   002D 28 15         [ 8]   84 	jr	Z,00102$
   002F DD 7E FF      [14]   85 	ld	a,-1 (ix)
   0032 DD B6 FE      [14]   86 	or	a,-2 (ix)
   0035 28 0A         [ 8]   87 	jr	Z,00101$
   0037 7B            [ 4]   88 	ld	a,e
   0038 DD 96 FE      [14]   89 	sub	a, -2 (ix)
   003B 7A            [ 4]   90 	ld	a,d
   003C DD 9E FF      [14]   91 	sbc	a, -1 (ix)
   003F 30 03         [ 8]   92 	jr	NC,00102$
   0041                      93 00101$:
                             94 ;../_strpbrk.c:39: ret = p;
   0041 33            [ 4]   95 	inc	sp
   0042 33            [ 4]   96 	inc	sp
   0043 D5            [11]   97 	push	de
   0044                      98 00102$:
                             99 ;../_strpbrk.c:41: control++;
   0044 23            [ 4]  100 	inc	hl
   0045 18 CD         [ 8]  101 	jr	00105$
   0047                     102 00107$:
                            103 ;../_strpbrk.c:44: return (ret);
   0047 E1            [ 9]  104 	pop	hl
   0048 E5            [11]  105 	push	hl
   0049 DD F9         [ 7]  106 	ld	sp, ix
   004B DD E1         [12]  107 	pop	ix
   004D C9            [ 9]  108 	ret
                            109 	.area _CODE
                            110 	.area _INITIALIZER
                            111 	.area _CABS (ABS)
