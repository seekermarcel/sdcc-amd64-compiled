                              1 ;--------------------------------------------------------
                              2 ; File Created by SDCC : free open source ANSI-C Compiler
                              3 ; Version 3.5.0 #9253 (Apr  4 2022) (Linux)
                              4 ; This file was generated Mon Apr  4 14:16:19 2022
                              5 ;--------------------------------------------------------
                              6 	.r3k
                              7 	.module _strstr
                              8 	.optsdcc -mr3ka
                              9 	
                             10 ;--------------------------------------------------------
                             11 ; Public variables in this module
                             12 ;--------------------------------------------------------
                             13 	.globl _strstr
                             14 ;--------------------------------------------------------
                             15 ; special function registers
                             16 ;--------------------------------------------------------
                             17 ;--------------------------------------------------------
                             18 ; ram data
                             19 ;--------------------------------------------------------
                             20 	.area _DATA
                             21 ;--------------------------------------------------------
                             22 ; ram data
                             23 ;--------------------------------------------------------
                             24 	.area _INITIALIZED
                             25 ;--------------------------------------------------------
                             26 ; absolute external ram data
                             27 ;--------------------------------------------------------
                             28 	.area _DABS (ABS)
                             29 ;--------------------------------------------------------
                             30 ; global & static initialisations
                             31 ;--------------------------------------------------------
                             32 	.area _HOME
                             33 	.area _GSINIT
                             34 	.area _GSFINAL
                             35 	.area _GSINIT
                             36 ;--------------------------------------------------------
                             37 ; Home
                             38 ;--------------------------------------------------------
                             39 	.area _HOME
                             40 	.area _HOME
                             41 ;--------------------------------------------------------
                             42 ; code
                             43 ;--------------------------------------------------------
                             44 	.area _CODE
                             45 ;../_strstr.c:31: char * strstr ( const char * str1, const char * str2 )
                             46 ;	---------------------------------
                             47 ; Function strstr
                             48 ; ---------------------------------
   0000                      49 _strstr::
   0000 DD E5                50 	push	ix
   0002 DD 21 00 00          51 	ld	ix,#0
   0006 DD 39                52 	add	ix,sp
   0008 27 F6                53 	add	sp, #-10
                             54 ;../_strstr.c:33: const char * cp = str1;
   000A DD 4E 04             55 	ld	c,4 (ix)
   000D DD 46 05             56 	ld	b,5 (ix)
                             57 ;../_strstr.c:37: if ( !*str2 )
   0010 DD 7E 06             58 	ld	a,6 (ix)
   0013 DD 77 F6             59 	ld	-10 (ix),a
   0016 DD 7E 07             60 	ld	a,7 (ix)
   0019 DD 77 F7             61 	ld	-9 (ix),a
   001C C4 00                62 	ld	hl, 0 (sp)
   001E 7E                   63 	ld	a,(hl)
   001F DD 77 FA             64 	ld	-6 (ix), a
   0022 B7                   65 	or	a, a
   0023 20 05                66 	jr	NZ,00122$
                             67 ;../_strstr.c:38: return str1;
   0025 69                   68 	ld	l, c
   0026 60                   69 	ld	h, b
   0027 C3rA1r00             70 	jp	00113$
                             71 ;../_strstr.c:40: while (*cp)
   002A                      72 00122$:
   002A 59                   73 	ld	e, c
   002B 50                   74 	ld	d, b
   002C                      75 00110$:
   002C 1A                   76 	ld	a,(de)
   002D B7                   77 	or	a, a
   002E 28 6E                78 	jr	Z,00112$
                             79 ;../_strstr.c:43: s2 = str2;
   0030 DD 7E F6             80 	ld	a,-10 (ix)
   0033 DD 77 FB             81 	ld	-5 (ix),a
   0036 DD 7E F7             82 	ld	a,-9 (ix)
   0039 DD 77 FC             83 	ld	-4 (ix),a
                             84 ;../_strstr.c:45: while ( *s1 && *s2 && !(*s1-*s2) )
   003C DD 73 F8             85 	ld	-8 (ix),e
   003F DD 72 F9             86 	ld	-7 (ix),d
   0042                      87 00105$:
   0042 C4 02                88 	ld	hl, 2 (sp)
   0044 7E                   89 	ld	a,(hl)
   0045 DD 77 FA             90 	ld	-6 (ix),a
   0048 C4 05                91 	ld	hl, 5 (sp)
   004A 7E                   92 	ld	a,(hl)
   004B DD 77 FF             93 	ld	-1 (ix),a
   004E DD 7E FA             94 	ld	a,-6 (ix)
   0051 B7                   95 	or	a, a
   0052 28 3B                96 	jr	Z,00107$
   0054 DD 7E FF             97 	ld	a,-1 (ix)
   0057 B7                   98 	or	a, a
   0058 28 35                99 	jr	Z,00107$
   005A DD 7E FA            100 	ld	a,-6 (ix)
   005D DD 77 FD            101 	ld	-3 (ix),a
   0060 DD 7E FA            102 	ld	a,-6 (ix)
   0063 17                  103 	rla
   0064 9F                  104 	sbc	a, a
   0065 DD 77 FE            105 	ld	-2 (ix),a
   0068 DD 66 FF            106 	ld	h,-1 (ix)
   006B DD 7E FF            107 	ld	a,-1 (ix)
   006E 17                  108 	rla
   006F 9F                  109 	sbc	a, a
   0070 6F                  110 	ld	l,a
   0071 DD 7E FD            111 	ld	a,-3 (ix)
   0074 94                  112 	sub	a, h
   0075 67                  113 	ld	h,a
   0076 DD 7E FE            114 	ld	a,-2 (ix)
   0079 9D                  115 	sbc	a, l
   007A B4                  116 	or	a,h
   007B 20 12               117 	jr	NZ,00107$
                            118 ;../_strstr.c:46: s1++, s2++;
   007D DD 34 F8            119 	inc	-8 (ix)
   0080 20 03               120 	jr	NZ,00148$
   0082 DD 34 F9            121 	inc	-7 (ix)
   0085                     122 00148$:
   0085 DD 34 FB            123 	inc	-5 (ix)
   0088 20 B8               124 	jr	NZ,00105$
   008A DD 34 FC            125 	inc	-4 (ix)
   008D 18 B3               126 	jr	00105$
   008F                     127 00107$:
                            128 ;../_strstr.c:48: if (!*s2)
   008F DD 7E FF            129 	ld	a,-1 (ix)
   0092 B7                  130 	or	a, a
   0093 20 04               131 	jr	NZ,00109$
                            132 ;../_strstr.c:49: return( (char*)cp );
   0095 69                  133 	ld	l, c
   0096 60                  134 	ld	h, b
   0097 18 08               135 	jr	00113$
   0099                     136 00109$:
                            137 ;../_strstr.c:51: cp++;
   0099 13                  138 	inc	de
   009A 4B                  139 	ld	c, e
   009B 42                  140 	ld	b, d
   009C 18 8E               141 	jr	00110$
   009E                     142 00112$:
                            143 ;../_strstr.c:54: return (NULL) ;
   009E 21 00 00            144 	ld	hl,#0x0000
   00A1                     145 00113$:
   00A1 DD F9               146 	ld	sp, ix
   00A3 DD E1               147 	pop	ix
   00A5 C9                  148 	ret
                            149 	.area _CODE
                            150 	.area _INITIALIZER
                            151 	.area _CABS (ABS)
