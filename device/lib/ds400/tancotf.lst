                                      1 ;--------------------------------------------------------
                                      2 ; File Created by SDCC : free open source ANSI-C Compiler
                                      3 ; Version 3.5.0 #9253 (Apr  4 2022) (Linux)
                                      4 ; This file was generated Mon Apr  4 14:10:29 2022
                                      5 ;--------------------------------------------------------
                                      6 	.module tancotf
                                      7 	.optsdcc -mds400 --model-flat24
                                      8 	
                                      9 ;--------------------------------------------------------
                                     10 ; CPU specific extensions
                                     11 ;--------------------------------------------------------
                                     12 	.DS80C390
                                     13 	.amode	2	; 24 bit flat addressing
                           000082    14 dpl	=	0x82
                           000083    15 dph	=	0x83
                           000084    16 dpl1	=	0x84
                           000085    17 dph1	=	0x85
                           000086    18 dps	=	0x86
                           000093    19 dpx	=	0x93
                           000095    20 dpx1	=	0x95
                           00009B    21 esp	=	0x9B
                           00009C    22 ap	=	0x9C
                           00009C    23 acc1	=	0x9C
                           0000D1    24 mcnt0	=	0xD1
                           0000D2    25 mcnt1	=	0xD2
                           0000D3    26 ma	=	0xD3
                           0000D4    27 mb	=	0xD4
                           0000D5    28 mc	=	0xD5
                           00009D    29 acon	=	0x9D
                           0000D1    30 F1	=	0xD1	; user flag
                                     31 ;--------------------------------------------------------
                                     32 ; Public variables in this module
                                     33 ;--------------------------------------------------------
                                     34 	.globl _tancotf
                                     35 	.globl _fabsf
                                     36 	.globl _tancotf_PARM_2
                                     37 ;--------------------------------------------------------
                                     38 ; special function registers
                                     39 ;--------------------------------------------------------
                                     40 ;--------------------------------------------------------
                                     41 ; special function bits
                                     42 ;--------------------------------------------------------
                                     43 ;--------------------------------------------------------
                                     44 ; overlayable register banks
                                     45 ;--------------------------------------------------------
                                     46 	.area REG_BANK_0	(REL,OVR,DATA)
      000000                         47 	.ds 8
                                     48 	.area REG_BANK_3	(REL,OVR,DATA)
      000000                         49 	.ds 8
                                     50 ;--------------------------------------------------------
                                     51 ; internal ram data
                                     52 ;--------------------------------------------------------
                                     53 	.area DSEG    (DATA)
                                     54 ;--------------------------------------------------------
                                     55 ; overlayable items in internal ram 
                                     56 ;--------------------------------------------------------
                                     57 ;--------------------------------------------------------
                                     58 ; indirectly addressable internal ram data
                                     59 ;--------------------------------------------------------
                                     60 	.area ISEG    (DATA)
                                     61 ;--------------------------------------------------------
                                     62 ; absolute internal ram data
                                     63 ;--------------------------------------------------------
                                     64 	.area IABS    (ABS,DATA)
                                     65 	.area IABS    (ABS,DATA)
                                     66 ;--------------------------------------------------------
                                     67 ; bit data
                                     68 ;--------------------------------------------------------
                                     69 	.area BSEG    (BIT)
                                     70 ;--------------------------------------------------------
                                     71 ; paged external ram data
                                     72 ;--------------------------------------------------------
                                     73 	.area PSEG    (PAG,XDATA)
                                     74 ;--------------------------------------------------------
                                     75 ; external ram data
                                     76 ;--------------------------------------------------------
                                     77 	.area XSEG    (XDATA)
      000000                         78 _tancotf_PARM_2:
      000000                         79 	.ds 1
      000001                         80 _tancotf_f_1_24:
      000001                         81 	.ds 4
      000005                         82 _tancotf_g_1_24:
      000005                         83 	.ds 4
      000009                         84 _tancotf_xn_1_24:
      000009                         85 	.ds 4
      00000D                         86 _tancotf_xden_1_24:
      00000D                         87 	.ds 4
      000011                         88 _tancotf_n_1_24:
      000011                         89 	.ds 2
      000013                         90 _tancotf_sloc0_1_0:
      000013                         91 	.ds 4
                                     92 ;--------------------------------------------------------
                                     93 ; absolute external ram data
                                     94 ;--------------------------------------------------------
                                     95 	.area XABS    (ABS,XDATA)
                                     96 ;--------------------------------------------------------
                                     97 ; external initialized ram data
                                     98 ;--------------------------------------------------------
                                     99 	.area XISEG   (XDATA)
                                    100 ;--------------------------------------------------------
                                    101 ; global & static initialisations
                                    102 ;--------------------------------------------------------
                                    103 	.area HOME    (CODE)
                                    104 	.area GSINIT  (CODE)
                                    105 	.area GSFINAL (CODE)
                                    106 	.area GSINIT  (CODE)
                                    107 ;--------------------------------------------------------
                                    108 ; Home
                                    109 ;--------------------------------------------------------
                                    110 	.area HOME    (CODE)
                                    111 	.area HOME    (CODE)
                                    112 ;--------------------------------------------------------
                                    113 ; code
                                    114 ;--------------------------------------------------------
                                    115 	.area CSEG    (CODE)
                                    116 ;------------------------------------------------------------
                                    117 ;Allocation info for local variables in function 'tancotf'
                                    118 ;------------------------------------------------------------
                                    119 ;iscotan                   Allocated with name '_tancotf_PARM_2'
                                    120 ;x                         Allocated to registers r2 r3 r4 r5 
                                    121 ;f                         Allocated with name '_tancotf_f_1_24'
                                    122 ;g                         Allocated with name '_tancotf_g_1_24'
                                    123 ;xn                        Allocated with name '_tancotf_xn_1_24'
                                    124 ;xnum                      Allocated to registers r6 r7 r0 r1 
                                    125 ;xden                      Allocated with name '_tancotf_xden_1_24'
                                    126 ;n                         Allocated with name '_tancotf_n_1_24'
                                    127 ;sloc0                     Allocated with name '_tancotf_sloc0_1_0'
                                    128 ;------------------------------------------------------------
                                    129 ;	tancotf.c:53: float tancotf(float x, bool iscotan)
                                    130 ;	-----------------------------------------
                                    131 ;	 function tancotf
                                    132 ;	-----------------------------------------
      000000                        133 _tancotf:
                           000002   134 	ar2 = 0x02
                           000003   135 	ar3 = 0x03
                           000004   136 	ar4 = 0x04
                           000005   137 	ar5 = 0x05
                           000006   138 	ar6 = 0x06
                           000007   139 	ar7 = 0x07
                           000000   140 	ar0 = 0x00
                           000001   141 	ar1 = 0x01
      000000 AA 82            [ 8]  142 	mov	r2,dpl
      000002 AB 83            [ 8]  143 	mov	r3,dph
      000004 AC 93            [ 8]  144 	mov	r4,dpx
      000006 AD F0            [ 8]  145 	mov	r5,b
                                    146 ;	tancotf.c:58: if (fabsf(x) > YMAX)
      000008 C0 02            [ 8]  147 	push	ar2
      00000A C0 03            [ 8]  148 	push	ar3
      00000C C0 04            [ 8]  149 	push	ar4
      00000E C0 05            [ 8]  150 	push	ar5
      000010 8A 82            [ 8]  151 	mov	dpl,r2
      000012 8B 83            [ 8]  152 	mov	dph,r3
      000014 8C 93            [ 8]  153 	mov	dpx,r4
      000016 8D F0            [ 8]  154 	mov	b,r5
      000018 12s00r00r00      [16]  155 	lcall	_fabsf
      00001C AE 82            [ 8]  156 	mov	r6,dpl
      00001E AF 83            [ 8]  157 	mov	r7,dph
      000020 A8 93            [ 8]  158 	mov	r0,dpx
      000022 A9 F0            [ 8]  159 	mov	r1,b
      000024 D0 05            [ 8]  160 	pop	ar5
      000026 D0 04            [ 8]  161 	pop	ar4
      000028 D0 03            [ 8]  162 	pop	ar3
      00002A D0 02            [ 8]  163 	pop	ar2
                                    164 ;	genAssign: resultIsFar = TRUE
      00002C 90s00r00r00      [12]  165 	mov	dptr,#___fsgt_PARM_2
      000030 E4               [ 4]  166 	clr	a
      000031 F0               [ 8]  167 	movx	@dptr,a
      000032 A3               [12]  168 	inc	dptr
      000033 74 08            [ 8]  169 	mov	a,#0x08
      000035 F0               [ 8]  170 	movx	@dptr,a
      000036 A3               [12]  171 	inc	dptr
      000037 74 C9            [ 8]  172 	mov	a,#0xC9
      000039 F0               [ 8]  173 	movx	@dptr,a
      00003A A3               [12]  174 	inc	dptr
      00003B 74 45            [ 8]  175 	mov	a,#0x45
      00003D F0               [ 8]  176 	movx	@dptr,a
      00003E C0 02            [ 8]  177 	push	ar2
      000040 C0 03            [ 8]  178 	push	ar3
      000042 C0 04            [ 8]  179 	push	ar4
      000044 C0 05            [ 8]  180 	push	ar5
      000046 8E 82            [ 8]  181 	mov	dpl,r6
      000048 8F 83            [ 8]  182 	mov	dph,r7
      00004A 88 93            [ 8]  183 	mov	dpx,r0
      00004C 89 F0            [ 8]  184 	mov	b,r1
      00004E 12s00r00r00      [16]  185 	lcall	___fsgt
      000052 D0 05            [ 8]  186 	pop	ar5
      000054 D0 04            [ 8]  187 	pop	ar4
      000056 D0 03            [ 8]  188 	pop	ar3
      000058 D0 02            [ 8]  189 	pop	ar2
      00005A E5 82            [ 8]  190 	mov	a,dpl
      00005C 60 15            [12]  191 	jz  00102$
      00005E                        192 00137$:
                                    193 ;	tancotf.c:60: errno = ERANGE;
                                    194 ;	genAssign: resultIsFar = TRUE
      00005E 90s00r00r00      [12]  195 	mov	dptr,#_errno
      000062 74 22            [ 8]  196 	mov	a,#0x22
      000064 F0               [ 8]  197 	movx	@dptr,a
      000065 E4               [ 4]  198 	clr	a
      000066 A3               [12]  199 	inc	dptr
      000067 F0               [ 8]  200 	movx	@dptr,a
                                    201 ;	tancotf.c:61: return 0.0;
      000068 90 00 00 00      [12]  202 	mov  dptr,#0x0000
      00006C 75 F0 00         [12]  203 	mov	b,#0x00
      00006F 02s00r06r2D      [16]  204 	ljmp	00115$
      000073                        205 00102$:
                                    206 ;	tancotf.c:65: n=(x*TWO_O_PI+(x>0.0?0.5:-0.5)); /*works for +-x*/
                                    207 ;	genAssign: resultIsFar = TRUE
      000073 90s00r00r00      [12]  208 	mov	dptr,#___fsmul_PARM_2
      000077 EA               [ 4]  209 	mov	a,r2
      000078 F0               [ 8]  210 	movx	@dptr,a
      000079 A3               [12]  211 	inc	dptr
      00007A EB               [ 4]  212 	mov	a,r3
      00007B F0               [ 8]  213 	movx	@dptr,a
      00007C A3               [12]  214 	inc	dptr
      00007D EC               [ 4]  215 	mov	a,r4
      00007E F0               [ 8]  216 	movx	@dptr,a
      00007F A3               [12]  217 	inc	dptr
      000080 ED               [ 4]  218 	mov	a,r5
      000081 F0               [ 8]  219 	movx	@dptr,a
      000082 C0 02            [ 8]  220 	push	ar2
      000084 C0 03            [ 8]  221 	push	ar3
      000086 C0 04            [ 8]  222 	push	ar4
      000088 C0 05            [ 8]  223 	push	ar5
      00008A 90 22 F9 83      [12]  224 	mov	dptr,#0x22F983
      00008E 75 F0 3F         [12]  225 	mov	b,#0x3F
      000091 12s00r00r00      [16]  226 	lcall	___fsmul
      000095 AE 82            [ 8]  227 	mov	r6,dpl
      000097 AF 83            [ 8]  228 	mov	r7,dph
      000099 A8 93            [ 8]  229 	mov	r0,dpx
      00009B A9 F0            [ 8]  230 	mov	r1,b
      00009D D0 05            [ 8]  231 	pop	ar5
      00009F D0 04            [ 8]  232 	pop	ar4
      0000A1 D0 03            [ 8]  233 	pop	ar3
      0000A3 D0 02            [ 8]  234 	pop	ar2
                                    235 ;	genAssign: resultIsFar = TRUE
      0000A5 90s00r00r00      [12]  236 	mov	dptr,#___fsgt_PARM_2
      0000A9 E4               [ 4]  237 	clr	a
      0000AA F0               [ 8]  238 	movx	@dptr,a
      0000AB A3               [12]  239 	inc	dptr
      0000AC F0               [ 8]  240 	movx	@dptr,a
      0000AD A3               [12]  241 	inc	dptr
      0000AE F0               [ 8]  242 	movx	@dptr,a
      0000AF A3               [12]  243 	inc	dptr
      0000B0 F0               [ 8]  244 	movx	@dptr,a
      0000B1 C0 02            [ 8]  245 	push	ar2
      0000B3 C0 03            [ 8]  246 	push	ar3
      0000B5 C0 04            [ 8]  247 	push	ar4
      0000B7 C0 05            [ 8]  248 	push	ar5
      0000B9 C0 06            [ 8]  249 	push	ar6
      0000BB C0 07            [ 8]  250 	push	ar7
      0000BD C0 00            [ 8]  251 	push	ar0
      0000BF C0 01            [ 8]  252 	push	ar1
      0000C1 8A 82            [ 8]  253 	mov	dpl,r2
      0000C3 8B 83            [ 8]  254 	mov	dph,r3
      0000C5 8C 93            [ 8]  255 	mov	dpx,r4
      0000C7 8D F0            [ 8]  256 	mov	b,r5
      0000C9 12s00r00r00      [16]  257 	lcall	___fsgt
      0000CD D0 01            [ 8]  258 	pop	ar1
      0000CF D0 00            [ 8]  259 	pop	ar0
      0000D1 D0 07            [ 8]  260 	pop	ar7
      0000D3 D0 06            [ 8]  261 	pop	ar6
      0000D5 D0 05            [ 8]  262 	pop	ar5
      0000D7 D0 04            [ 8]  263 	pop	ar4
      0000D9 D0 03            [ 8]  264 	pop	ar3
      0000DB D0 02            [ 8]  265 	pop	ar2
      0000DD E5 82            [ 8]  266 	mov	a,dpl
      0000DF 60 12            [12]  267 	jz  00117$
      0000E1                        268 00138$:
                                    269 ;	genAssign: resultIsFar = TRUE
      0000E1 90s00r00r13      [12]  270 	mov	dptr,#_tancotf_sloc0_1_0
      0000E5 E4               [ 4]  271 	clr	a
      0000E6 F0               [ 8]  272 	movx	@dptr,a
      0000E7 A3               [12]  273 	inc	dptr
      0000E8 E4               [ 4]  274 	clr	a
      0000E9 F0               [ 8]  275 	movx	@dptr,a
      0000EA A3               [12]  276 	inc	dptr
      0000EB E4               [ 4]  277 	clr	a
      0000EC F0               [ 8]  278 	movx	@dptr,a
      0000ED A3               [12]  279 	inc	dptr
      0000EE 74 3F            [ 8]  280 	mov	a,#0x3F
      0000F0 F0               [ 8]  281 	movx	@dptr,a
      0000F1 80 10            [12]  282 	sjmp 00118$
      0000F3                        283 00117$:
                                    284 ;	genAssign: resultIsFar = TRUE
      0000F3 90s00r00r13      [12]  285 	mov	dptr,#_tancotf_sloc0_1_0
      0000F7 E4               [ 4]  286 	clr	a
      0000F8 F0               [ 8]  287 	movx	@dptr,a
      0000F9 A3               [12]  288 	inc	dptr
      0000FA E4               [ 4]  289 	clr	a
      0000FB F0               [ 8]  290 	movx	@dptr,a
      0000FC A3               [12]  291 	inc	dptr
      0000FD E4               [ 4]  292 	clr	a
      0000FE F0               [ 8]  293 	movx	@dptr,a
      0000FF A3               [12]  294 	inc	dptr
      000100 74 BF            [ 8]  295 	mov	a,#0xBF
      000102 F0               [ 8]  296 	movx	@dptr,a
      000103                        297 00118$:
      000103 90s00r00r13      [12]  298 	mov	dptr,#_tancotf_sloc0_1_0
                                    299 ;	genAssign: resultIsFar = TRUE
      000107 75 86 21         [12]  300 	mov	dps,#0x21
      00010A 90s00r00r00      [12]  301 	mov	dptr,#___fsadd_PARM_2
      00010E E0               [ 8]  302 	movx	a,@dptr
      00010F F0               [ 8]  303 	movx	@dptr,a
      000110 A3               [12]  304 	inc	dptr
      000111 A3               [12]  305 	inc	dptr
      000112 E0               [ 8]  306 	movx	a,@dptr
      000113 F0               [ 8]  307 	movx	@dptr,a
      000114 A3               [12]  308 	inc	dptr
      000115 A3               [12]  309 	inc	dptr
      000116 E0               [ 8]  310 	movx	a,@dptr
      000117 F0               [ 8]  311 	movx	@dptr,a
      000118 A3               [12]  312 	inc	dptr
      000119 A3               [12]  313 	inc	dptr
      00011A E0               [ 8]  314 	movx	a,@dptr
      00011B F0               [ 8]  315 	movx	@dptr,a
      00011C 75 86 00         [12]  316 	mov	dps,#0
      00011F C0 02            [ 8]  317 	push	ar2
      000121 C0 03            [ 8]  318 	push	ar3
      000123 C0 04            [ 8]  319 	push	ar4
      000125 C0 05            [ 8]  320 	push	ar5
      000127 8E 82            [ 8]  321 	mov	dpl,r6
      000129 8F 83            [ 8]  322 	mov	dph,r7
      00012B 88 93            [ 8]  323 	mov	dpx,r0
      00012D 89 F0            [ 8]  324 	mov	b,r1
      00012F 12s00r00r00      [16]  325 	lcall	___fsadd
      000133 D0 05            [ 8]  326 	pop	ar5
      000135 D0 04            [ 8]  327 	pop	ar4
      000137 D0 03            [ 8]  328 	pop	ar3
      000139 D0 02            [ 8]  329 	pop	ar2
      00013B C0 02            [ 8]  330 	push	ar2
      00013D C0 03            [ 8]  331 	push	ar3
      00013F C0 04            [ 8]  332 	push	ar4
      000141 C0 05            [ 8]  333 	push	ar5
      000143 12s00r00r00      [16]  334 	lcall	___fs2sint
      000147 AE 82            [ 8]  335 	mov	r6,dpl
      000149 AF 83            [ 8]  336 	mov	r7,dph
      00014B D0 05            [ 8]  337 	pop	ar5
      00014D D0 04            [ 8]  338 	pop	ar4
      00014F D0 03            [ 8]  339 	pop	ar3
      000151 D0 02            [ 8]  340 	pop	ar2
                                    341 ;	genAssign: resultIsFar = TRUE
      000153 90s00r00r11      [12]  342 	mov	dptr,#_tancotf_n_1_24
      000157 EE               [ 4]  343 	mov	a,r6
      000158 F0               [ 8]  344 	movx	@dptr,a
      000159 A3               [12]  345 	inc	dptr
      00015A EF               [ 4]  346 	mov	a,r7
      00015B F0               [ 8]  347 	movx	@dptr,a
                                    348 ;	tancotf.c:66: xn=n;
      00015C C0 02            [ 8]  349 	push	ar2
      00015E C0 03            [ 8]  350 	push	ar3
      000160 C0 04            [ 8]  351 	push	ar4
      000162 C0 05            [ 8]  352 	push	ar5
      000164 05 86            [ 8]  353 	inc	dps
      000166 90s00r00r11      [12]  354 	mov	dptr,#_tancotf_n_1_24
      00016A E0               [ 8]  355 	movx	a,@dptr
      00016B F5 82            [ 8]  356 	mov	dpl,a
      00016D A3               [12]  357 	inc	dptr
      00016E E0               [ 8]  358 	movx	a,@dptr
      00016F F5 83            [ 8]  359 	mov	dph,a
      000171 75 86 00         [12]  360 	mov	dps,#0
      000174 12s00r00r00      [16]  361 	lcall	___sint2fs
      000178 A8 82            [ 8]  362 	mov	r0,dpl
      00017A A9 83            [ 8]  363 	mov	r1,dph
      00017C AE 93            [ 8]  364 	mov	r6,dpx
      00017E AF F0            [ 8]  365 	mov	r7,b
      000180 D0 05            [ 8]  366 	pop	ar5
      000182 D0 04            [ 8]  367 	pop	ar4
      000184 D0 03            [ 8]  368 	pop	ar3
      000186 D0 02            [ 8]  369 	pop	ar2
                                    370 ;	genAssign: resultIsFar = TRUE
      000188 90s00r00r09      [12]  371 	mov	dptr,#_tancotf_xn_1_24
      00018C E8               [ 4]  372 	mov	a,r0
      00018D F0               [ 8]  373 	movx	@dptr,a
      00018E A3               [12]  374 	inc	dptr
      00018F E9               [ 4]  375 	mov	a,r1
      000190 F0               [ 8]  376 	movx	@dptr,a
      000191 A3               [12]  377 	inc	dptr
      000192 EE               [ 4]  378 	mov	a,r6
      000193 F0               [ 8]  379 	movx	@dptr,a
      000194 A3               [12]  380 	inc	dptr
      000195 EF               [ 4]  381 	mov	a,r7
      000196 F0               [ 8]  382 	movx	@dptr,a
                                    383 ;	tancotf.c:68: xnum=(int)x;
      000197 C0 02            [ 8]  384 	push	ar2
      000199 C0 03            [ 8]  385 	push	ar3
      00019B C0 04            [ 8]  386 	push	ar4
      00019D C0 05            [ 8]  387 	push	ar5
      00019F 8A 82            [ 8]  388 	mov	dpl,r2
      0001A1 8B 83            [ 8]  389 	mov	dph,r3
      0001A3 8C 93            [ 8]  390 	mov	dpx,r4
      0001A5 8D F0            [ 8]  391 	mov	b,r5
      0001A7 12s00r00r00      [16]  392 	lcall	___fs2sint
      0001AB D0 05            [ 8]  393 	pop	ar5
      0001AD D0 04            [ 8]  394 	pop	ar4
      0001AF D0 03            [ 8]  395 	pop	ar3
      0001B1 D0 02            [ 8]  396 	pop	ar2
      0001B3 C0 02            [ 8]  397 	push	ar2
      0001B5 C0 03            [ 8]  398 	push	ar3
      0001B7 C0 04            [ 8]  399 	push	ar4
      0001B9 C0 05            [ 8]  400 	push	ar5
      0001BB 12s00r00r00      [16]  401 	lcall	___sint2fs
      0001BF AE 82            [ 8]  402 	mov	r6,dpl
      0001C1 AF 83            [ 8]  403 	mov	r7,dph
      0001C3 A8 93            [ 8]  404 	mov	r0,dpx
      0001C5 A9 F0            [ 8]  405 	mov	r1,b
      0001C7 D0 05            [ 8]  406 	pop	ar5
      0001C9 D0 04            [ 8]  407 	pop	ar4
      0001CB D0 03            [ 8]  408 	pop	ar3
      0001CD D0 02            [ 8]  409 	pop	ar2
                                    410 ;	genAssign: resultIsFar = TRUE
                                    411 ;	tancotf.c:69: xden=x-xnum;
                                    412 ;	genAssign: resultIsFar = TRUE
      0001CF 90s00r00r00      [12]  413 	mov	dptr,#___fssub_PARM_2
      0001D3 EE               [ 4]  414 	mov	a,r6
      0001D4 F0               [ 8]  415 	movx	@dptr,a
      0001D5 A3               [12]  416 	inc	dptr
      0001D6 EF               [ 4]  417 	mov	a,r7
      0001D7 F0               [ 8]  418 	movx	@dptr,a
      0001D8 A3               [12]  419 	inc	dptr
      0001D9 E8               [ 4]  420 	mov	a,r0
      0001DA F0               [ 8]  421 	movx	@dptr,a
      0001DB A3               [12]  422 	inc	dptr
      0001DC E9               [ 4]  423 	mov	a,r1
      0001DD F0               [ 8]  424 	movx	@dptr,a
      0001DE C0 06            [ 8]  425 	push	ar6
      0001E0 C0 07            [ 8]  426 	push	ar7
      0001E2 C0 00            [ 8]  427 	push	ar0
      0001E4 C0 01            [ 8]  428 	push	ar1
      0001E6 8A 82            [ 8]  429 	mov	dpl,r2
      0001E8 8B 83            [ 8]  430 	mov	dph,r3
      0001EA 8C 93            [ 8]  431 	mov	dpx,r4
      0001EC 8D F0            [ 8]  432 	mov	b,r5
      0001EE 12s00r00r00      [16]  433 	lcall	___fssub
      0001F2 AA 82            [ 8]  434 	mov	r2,dpl
      0001F4 AB 83            [ 8]  435 	mov	r3,dph
      0001F6 AC 93            [ 8]  436 	mov	r4,dpx
      0001F8 AD F0            [ 8]  437 	mov	r5,b
      0001FA D0 01            [ 8]  438 	pop	ar1
      0001FC D0 00            [ 8]  439 	pop	ar0
      0001FE D0 07            [ 8]  440 	pop	ar7
      000200 D0 06            [ 8]  441 	pop	ar6
                                    442 ;	genAssign: resultIsFar = TRUE
      000202 90s00r00r0D      [12]  443 	mov	dptr,#_tancotf_xden_1_24
      000206 EA               [ 4]  444 	mov	a,r2
      000207 F0               [ 8]  445 	movx	@dptr,a
      000208 A3               [12]  446 	inc	dptr
      000209 EB               [ 4]  447 	mov	a,r3
      00020A F0               [ 8]  448 	movx	@dptr,a
      00020B A3               [12]  449 	inc	dptr
      00020C EC               [ 4]  450 	mov	a,r4
      00020D F0               [ 8]  451 	movx	@dptr,a
      00020E A3               [12]  452 	inc	dptr
      00020F ED               [ 4]  453 	mov	a,r5
      000210 F0               [ 8]  454 	movx	@dptr,a
                                    455 ;	tancotf.c:70: f=((xnum-xn*C1)+xden)-xn*C2;
      000211 90s00r00r09      [12]  456 	mov	dptr,#_tancotf_xn_1_24
                                    457 ;	genAssign: resultIsFar = TRUE
      000215 75 86 21         [12]  458 	mov	dps,#0x21
      000218 90s00r00r00      [12]  459 	mov	dptr,#___fsmul_PARM_2
      00021C E0               [ 8]  460 	movx	a,@dptr
      00021D F0               [ 8]  461 	movx	@dptr,a
      00021E A3               [12]  462 	inc	dptr
      00021F A3               [12]  463 	inc	dptr
      000220 E0               [ 8]  464 	movx	a,@dptr
      000221 F0               [ 8]  465 	movx	@dptr,a
      000222 A3               [12]  466 	inc	dptr
      000223 A3               [12]  467 	inc	dptr
      000224 E0               [ 8]  468 	movx	a,@dptr
      000225 F0               [ 8]  469 	movx	@dptr,a
      000226 A3               [12]  470 	inc	dptr
      000227 A3               [12]  471 	inc	dptr
      000228 E0               [ 8]  472 	movx	a,@dptr
      000229 F0               [ 8]  473 	movx	@dptr,a
      00022A 75 86 00         [12]  474 	mov	dps,#0
      00022D C0 06            [ 8]  475 	push	ar6
      00022F C0 07            [ 8]  476 	push	ar7
      000231 C0 00            [ 8]  477 	push	ar0
      000233 C0 01            [ 8]  478 	push	ar1
      000235 90 00 00 00      [12]  479 	mov  dptr,#0x0000
      000239 75 93 C9         [12]  480 	mov	dpx,#0xC9
      00023C 75 F0 3F         [12]  481 	mov	b,#0x3F
      00023F 12s00r00r00      [16]  482 	lcall	___fsmul
      000243 AA 82            [ 8]  483 	mov	r2,dpl
      000245 AB 83            [ 8]  484 	mov	r3,dph
      000247 AC 93            [ 8]  485 	mov	r4,dpx
      000249 AD F0            [ 8]  486 	mov	r5,b
      00024B D0 01            [ 8]  487 	pop	ar1
      00024D D0 00            [ 8]  488 	pop	ar0
      00024F D0 07            [ 8]  489 	pop	ar7
      000251 D0 06            [ 8]  490 	pop	ar6
                                    491 ;	genAssign: resultIsFar = TRUE
      000253 90s00r00r00      [12]  492 	mov	dptr,#___fssub_PARM_2
      000257 EA               [ 4]  493 	mov	a,r2
      000258 F0               [ 8]  494 	movx	@dptr,a
      000259 A3               [12]  495 	inc	dptr
      00025A EB               [ 4]  496 	mov	a,r3
      00025B F0               [ 8]  497 	movx	@dptr,a
      00025C A3               [12]  498 	inc	dptr
      00025D EC               [ 4]  499 	mov	a,r4
      00025E F0               [ 8]  500 	movx	@dptr,a
      00025F A3               [12]  501 	inc	dptr
      000260 ED               [ 4]  502 	mov	a,r5
      000261 F0               [ 8]  503 	movx	@dptr,a
      000262 8E 82            [ 8]  504 	mov	dpl,r6
      000264 8F 83            [ 8]  505 	mov	dph,r7
      000266 88 93            [ 8]  506 	mov	dpx,r0
      000268 89 F0            [ 8]  507 	mov	b,r1
      00026A 12s00r00r00      [16]  508 	lcall	___fssub
      00026E AA 82            [ 8]  509 	mov	r2,dpl
      000270 AB 83            [ 8]  510 	mov	r3,dph
      000272 AC 93            [ 8]  511 	mov	r4,dpx
      000274 AD F0            [ 8]  512 	mov	r5,b
      000276 90s00r00r0D      [12]  513 	mov	dptr,#_tancotf_xden_1_24
                                    514 ;	genAssign: resultIsFar = TRUE
      00027A 75 86 21         [12]  515 	mov	dps,#0x21
      00027D 90s00r00r00      [12]  516 	mov	dptr,#___fsadd_PARM_2
      000281 E0               [ 8]  517 	movx	a,@dptr
      000282 F0               [ 8]  518 	movx	@dptr,a
      000283 A3               [12]  519 	inc	dptr
      000284 A3               [12]  520 	inc	dptr
      000285 E0               [ 8]  521 	movx	a,@dptr
      000286 F0               [ 8]  522 	movx	@dptr,a
      000287 A3               [12]  523 	inc	dptr
      000288 A3               [12]  524 	inc	dptr
      000289 E0               [ 8]  525 	movx	a,@dptr
      00028A F0               [ 8]  526 	movx	@dptr,a
      00028B A3               [12]  527 	inc	dptr
      00028C A3               [12]  528 	inc	dptr
      00028D E0               [ 8]  529 	movx	a,@dptr
      00028E F0               [ 8]  530 	movx	@dptr,a
      00028F 75 86 00         [12]  531 	mov	dps,#0
      000292 8A 82            [ 8]  532 	mov	dpl,r2
      000294 8B 83            [ 8]  533 	mov	dph,r3
      000296 8C 93            [ 8]  534 	mov	dpx,r4
      000298 8D F0            [ 8]  535 	mov	b,r5
      00029A 12s00r00r00      [16]  536 	lcall	___fsadd
      00029E AE 82            [ 8]  537 	mov	r6,dpl
      0002A0 AF 83            [ 8]  538 	mov	r7,dph
      0002A2 A8 93            [ 8]  539 	mov	r0,dpx
      0002A4 A9 F0            [ 8]  540 	mov	r1,b
      0002A6 90s00r00r09      [12]  541 	mov	dptr,#_tancotf_xn_1_24
                                    542 ;	genAssign: resultIsFar = TRUE
      0002AA 75 86 21         [12]  543 	mov	dps,#0x21
      0002AD 90s00r00r00      [12]  544 	mov	dptr,#___fsmul_PARM_2
      0002B1 E0               [ 8]  545 	movx	a,@dptr
      0002B2 F0               [ 8]  546 	movx	@dptr,a
      0002B3 A3               [12]  547 	inc	dptr
      0002B4 A3               [12]  548 	inc	dptr
      0002B5 E0               [ 8]  549 	movx	a,@dptr
      0002B6 F0               [ 8]  550 	movx	@dptr,a
      0002B7 A3               [12]  551 	inc	dptr
      0002B8 A3               [12]  552 	inc	dptr
      0002B9 E0               [ 8]  553 	movx	a,@dptr
      0002BA F0               [ 8]  554 	movx	@dptr,a
      0002BB A3               [12]  555 	inc	dptr
      0002BC A3               [12]  556 	inc	dptr
      0002BD E0               [ 8]  557 	movx	a,@dptr
      0002BE F0               [ 8]  558 	movx	@dptr,a
      0002BF 75 86 00         [12]  559 	mov	dps,#0
      0002C2 C0 06            [ 8]  560 	push	ar6
      0002C4 C0 07            [ 8]  561 	push	ar7
      0002C6 C0 00            [ 8]  562 	push	ar0
      0002C8 C0 01            [ 8]  563 	push	ar1
      0002CA 90 FD AA 22      [12]  564 	mov	dptr,#0xFDAA22
      0002CE 75 F0 39         [12]  565 	mov	b,#0x39
      0002D1 12s00r00r00      [16]  566 	lcall	___fsmul
      0002D5 AA 82            [ 8]  567 	mov	r2,dpl
      0002D7 AB 83            [ 8]  568 	mov	r3,dph
      0002D9 AC 93            [ 8]  569 	mov	r4,dpx
      0002DB AD F0            [ 8]  570 	mov	r5,b
      0002DD D0 01            [ 8]  571 	pop	ar1
      0002DF D0 00            [ 8]  572 	pop	ar0
      0002E1 D0 07            [ 8]  573 	pop	ar7
      0002E3 D0 06            [ 8]  574 	pop	ar6
                                    575 ;	genAssign: resultIsFar = TRUE
      0002E5 90s00r00r00      [12]  576 	mov	dptr,#___fssub_PARM_2
      0002E9 EA               [ 4]  577 	mov	a,r2
      0002EA F0               [ 8]  578 	movx	@dptr,a
      0002EB A3               [12]  579 	inc	dptr
      0002EC EB               [ 4]  580 	mov	a,r3
      0002ED F0               [ 8]  581 	movx	@dptr,a
      0002EE A3               [12]  582 	inc	dptr
      0002EF EC               [ 4]  583 	mov	a,r4
      0002F0 F0               [ 8]  584 	movx	@dptr,a
      0002F1 A3               [12]  585 	inc	dptr
      0002F2 ED               [ 4]  586 	mov	a,r5
      0002F3 F0               [ 8]  587 	movx	@dptr,a
      0002F4 8E 82            [ 8]  588 	mov	dpl,r6
      0002F6 8F 83            [ 8]  589 	mov	dph,r7
      0002F8 88 93            [ 8]  590 	mov	dpx,r0
      0002FA 89 F0            [ 8]  591 	mov	b,r1
      0002FC 12s00r00r00      [16]  592 	lcall	___fssub
      000300 AA 82            [ 8]  593 	mov	r2,dpl
      000302 AB 83            [ 8]  594 	mov	r3,dph
      000304 AC 93            [ 8]  595 	mov	r4,dpx
      000306 AD F0            [ 8]  596 	mov	r5,b
                                    597 ;	genAssign: resultIsFar = TRUE
      000308 90s00r00r01      [12]  598 	mov	dptr,#_tancotf_f_1_24
      00030C EA               [ 4]  599 	mov	a,r2
      00030D F0               [ 8]  600 	movx	@dptr,a
      00030E A3               [12]  601 	inc	dptr
      00030F EB               [ 4]  602 	mov	a,r3
      000310 F0               [ 8]  603 	movx	@dptr,a
      000311 A3               [12]  604 	inc	dptr
      000312 EC               [ 4]  605 	mov	a,r4
      000313 F0               [ 8]  606 	movx	@dptr,a
      000314 A3               [12]  607 	inc	dptr
      000315 ED               [ 4]  608 	mov	a,r5
      000316 F0               [ 8]  609 	movx	@dptr,a
                                    610 ;	tancotf.c:72: if (fabsf(f) < EPS)
      000317 05 86            [ 8]  611 	inc	dps
      000319 90s00r00r01      [12]  612 	mov	dptr,#_tancotf_f_1_24
      00031D E0               [ 8]  613 	movx	a,@dptr
      00031E F5 82            [ 8]  614 	mov	dpl,a
      000320 A3               [12]  615 	inc	dptr
      000321 E0               [ 8]  616 	movx	a,@dptr
      000322 F5 83            [ 8]  617 	mov	dph,a
      000324 A3               [12]  618 	inc	dptr
      000325 E0               [ 8]  619 	movx	a,@dptr
      000326 F5 93            [ 8]  620 	mov	dpx,a
      000328 A3               [12]  621 	inc	dptr
      000329 E0               [ 8]  622 	movx	a,@dptr
      00032A F5 F0            [ 8]  623 	mov	b,a
      00032C 75 86 00         [12]  624 	mov	dps,#0
      00032F 12s00r00r00      [16]  625 	lcall	_fabsf
      000333 AA 82            [ 8]  626 	mov	r2,dpl
      000335 AB 83            [ 8]  627 	mov	r3,dph
      000337 AC 93            [ 8]  628 	mov	r4,dpx
      000339 AD F0            [ 8]  629 	mov	r5,b
                                    630 ;	genAssign: resultIsFar = TRUE
      00033B 90s00r00r00      [12]  631 	mov	dptr,#___fslt_PARM_2
      00033F E4               [ 4]  632 	clr	a
      000340 F0               [ 8]  633 	movx	@dptr,a
      000341 A3               [12]  634 	inc	dptr
      000342 E4               [ 4]  635 	clr	a
      000343 F0               [ 8]  636 	movx	@dptr,a
      000344 A3               [12]  637 	inc	dptr
      000345 74 80            [ 8]  638 	mov	a,#0x80
      000347 F0               [ 8]  639 	movx	@dptr,a
      000348 A3               [12]  640 	inc	dptr
      000349 74 39            [ 8]  641 	mov	a,#0x39
      00034B F0               [ 8]  642 	movx	@dptr,a
      00034C 8A 82            [ 8]  643 	mov	dpl,r2
      00034E 8B 83            [ 8]  644 	mov	dph,r3
      000350 8C 93            [ 8]  645 	mov	dpx,r4
      000352 8D F0            [ 8]  646 	mov	b,r5
      000354 12s00r00r00      [16]  647 	lcall	___fslt
      000358 E5 82            [ 8]  648 	mov	a,dpl
      00035A 60 24            [12]  649 	jz  00104$
      00035C                        650 00139$:
                                    651 ;	tancotf.c:74: xnum = f;
      00035C 90s00r00r01      [12]  652 	mov	dptr,#_tancotf_f_1_24
                                    653 ;	genAssign: resultIsFar = TRUE
      000360 E0               [ 8]  654 	movx	a,@dptr
      000361 FE               [ 4]  655 	mov	r6,a
      000362 A3               [12]  656 	inc	dptr
      000363 E0               [ 8]  657 	movx	a,@dptr
      000364 FF               [ 4]  658 	mov	r7,a
      000365 A3               [12]  659 	inc	dptr
      000366 E0               [ 8]  660 	movx	a,@dptr
      000367 F8               [ 4]  661 	mov	r0,a
      000368 A3               [12]  662 	inc	dptr
      000369 E0               [ 8]  663 	movx	a,@dptr
      00036A F9               [ 4]  664 	mov	r1,a
                                    665 ;	tancotf.c:75: xden = 1.0;
                                    666 ;	genAssign: resultIsFar = TRUE
      00036B 90s00r00r0D      [12]  667 	mov	dptr,#_tancotf_xden_1_24
      00036F E4               [ 4]  668 	clr	a
      000370 F0               [ 8]  669 	movx	@dptr,a
      000371 A3               [12]  670 	inc	dptr
      000372 E4               [ 4]  671 	clr	a
      000373 F0               [ 8]  672 	movx	@dptr,a
      000374 A3               [12]  673 	inc	dptr
      000375 74 80            [ 8]  674 	mov	a,#0x80
      000377 F0               [ 8]  675 	movx	@dptr,a
      000378 A3               [12]  676 	inc	dptr
      000379 74 3F            [ 8]  677 	mov	a,#0x3F
      00037B F0               [ 8]  678 	movx	@dptr,a
      00037C 02s00r05r5E      [16]  679 	ljmp	00105$
      000380                        680 00104$:
                                    681 ;	tancotf.c:79: g = f*f;
      000380 90s00r00r01      [12]  682 	mov	dptr,#_tancotf_f_1_24
                                    683 ;	genAssign: resultIsFar = TRUE
      000384 75 86 21         [12]  684 	mov	dps,#0x21
      000387 90s00r00r00      [12]  685 	mov	dptr,#___fsmul_PARM_2
      00038B E0               [ 8]  686 	movx	a,@dptr
      00038C F0               [ 8]  687 	movx	@dptr,a
      00038D A3               [12]  688 	inc	dptr
      00038E A3               [12]  689 	inc	dptr
      00038F E0               [ 8]  690 	movx	a,@dptr
      000390 F0               [ 8]  691 	movx	@dptr,a
      000391 A3               [12]  692 	inc	dptr
      000392 A3               [12]  693 	inc	dptr
      000393 E0               [ 8]  694 	movx	a,@dptr
      000394 F0               [ 8]  695 	movx	@dptr,a
      000395 A3               [12]  696 	inc	dptr
      000396 A3               [12]  697 	inc	dptr
      000397 E0               [ 8]  698 	movx	a,@dptr
      000398 F0               [ 8]  699 	movx	@dptr,a
      000399 75 86 01         [12]  700 	mov	dps, #1
      00039C 90s00r00r01      [12]  701 	mov	dptr,#_tancotf_f_1_24
      0003A0 E0               [ 8]  702 	movx	a,@dptr
      0003A1 F5 82            [ 8]  703 	mov	dpl,a
      0003A3 A3               [12]  704 	inc	dptr
      0003A4 E0               [ 8]  705 	movx	a,@dptr
      0003A5 F5 83            [ 8]  706 	mov	dph,a
      0003A7 A3               [12]  707 	inc	dptr
      0003A8 E0               [ 8]  708 	movx	a,@dptr
      0003A9 F5 93            [ 8]  709 	mov	dpx,a
      0003AB A3               [12]  710 	inc	dptr
      0003AC E0               [ 8]  711 	movx	a,@dptr
      0003AD F5 F0            [ 8]  712 	mov	b,a
      0003AF 75 86 00         [12]  713 	mov	dps,#0
      0003B2 12s00r00r00      [16]  714 	lcall	___fsmul
      0003B6 AA 82            [ 8]  715 	mov	r2,dpl
      0003B8 AB 83            [ 8]  716 	mov	r3,dph
      0003BA AC 93            [ 8]  717 	mov	r4,dpx
      0003BC AD F0            [ 8]  718 	mov	r5,b
                                    719 ;	genAssign: resultIsFar = TRUE
      0003BE 90s00r00r05      [12]  720 	mov	dptr,#_tancotf_g_1_24
      0003C2 EA               [ 4]  721 	mov	a,r2
      0003C3 F0               [ 8]  722 	movx	@dptr,a
      0003C4 A3               [12]  723 	inc	dptr
      0003C5 EB               [ 4]  724 	mov	a,r3
      0003C6 F0               [ 8]  725 	movx	@dptr,a
      0003C7 A3               [12]  726 	inc	dptr
      0003C8 EC               [ 4]  727 	mov	a,r4
      0003C9 F0               [ 8]  728 	movx	@dptr,a
      0003CA A3               [12]  729 	inc	dptr
      0003CB ED               [ 4]  730 	mov	a,r5
      0003CC F0               [ 8]  731 	movx	@dptr,a
                                    732 ;	tancotf.c:80: xnum = P(f,g);
      0003CD 90s00r00r05      [12]  733 	mov	dptr,#_tancotf_g_1_24
                                    734 ;	genAssign: resultIsFar = TRUE
      0003D1 75 86 21         [12]  735 	mov	dps,#0x21
      0003D4 90s00r00r00      [12]  736 	mov	dptr,#___fsmul_PARM_2
      0003D8 E0               [ 8]  737 	movx	a,@dptr
      0003D9 F0               [ 8]  738 	movx	@dptr,a
      0003DA A3               [12]  739 	inc	dptr
      0003DB A3               [12]  740 	inc	dptr
      0003DC E0               [ 8]  741 	movx	a,@dptr
      0003DD F0               [ 8]  742 	movx	@dptr,a
      0003DE A3               [12]  743 	inc	dptr
      0003DF A3               [12]  744 	inc	dptr
      0003E0 E0               [ 8]  745 	movx	a,@dptr
      0003E1 F0               [ 8]  746 	movx	@dptr,a
      0003E2 A3               [12]  747 	inc	dptr
      0003E3 A3               [12]  748 	inc	dptr
      0003E4 E0               [ 8]  749 	movx	a,@dptr
      0003E5 F0               [ 8]  750 	movx	@dptr,a
      0003E6 75 86 00         [12]  751 	mov	dps,#0
      0003E9 90 C4 33 B8      [12]  752 	mov	dptr,#0xC433B8
      0003ED 75 F0 BD         [12]  753 	mov	b,#0xBD
      0003F0 12s00r00r00      [16]  754 	lcall	___fsmul
      0003F4 AA 82            [ 8]  755 	mov	r2,dpl
      0003F6 AB 83            [ 8]  756 	mov	r3,dph
      0003F8 AC 93            [ 8]  757 	mov	r4,dpx
      0003FA AD F0            [ 8]  758 	mov	r5,b
      0003FC 90s00r00r01      [12]  759 	mov	dptr,#_tancotf_f_1_24
                                    760 ;	genAssign: resultIsFar = TRUE
      000400 75 86 21         [12]  761 	mov	dps,#0x21
      000403 90s00r00r00      [12]  762 	mov	dptr,#___fsmul_PARM_2
      000407 E0               [ 8]  763 	movx	a,@dptr
      000408 F0               [ 8]  764 	movx	@dptr,a
      000409 A3               [12]  765 	inc	dptr
      00040A A3               [12]  766 	inc	dptr
      00040B E0               [ 8]  767 	movx	a,@dptr
      00040C F0               [ 8]  768 	movx	@dptr,a
      00040D A3               [12]  769 	inc	dptr
      00040E A3               [12]  770 	inc	dptr
      00040F E0               [ 8]  771 	movx	a,@dptr
      000410 F0               [ 8]  772 	movx	@dptr,a
      000411 A3               [12]  773 	inc	dptr
      000412 A3               [12]  774 	inc	dptr
      000413 E0               [ 8]  775 	movx	a,@dptr
      000414 F0               [ 8]  776 	movx	@dptr,a
      000415 75 86 00         [12]  777 	mov	dps,#0
      000418 8A 82            [ 8]  778 	mov	dpl,r2
      00041A 8B 83            [ 8]  779 	mov	dph,r3
      00041C 8C 93            [ 8]  780 	mov	dpx,r4
      00041E 8D F0            [ 8]  781 	mov	b,r5
      000420 12s00r00r00      [16]  782 	lcall	___fsmul
      000424 AA 82            [ 8]  783 	mov	r2,dpl
      000426 AB 83            [ 8]  784 	mov	r3,dph
      000428 AC 93            [ 8]  785 	mov	r4,dpx
      00042A AD F0            [ 8]  786 	mov	r5,b
      00042C 90s00r00r01      [12]  787 	mov	dptr,#_tancotf_f_1_24
                                    788 ;	genAssign: resultIsFar = TRUE
      000430 75 86 21         [12]  789 	mov	dps,#0x21
      000433 90s00r00r00      [12]  790 	mov	dptr,#___fsadd_PARM_2
      000437 E0               [ 8]  791 	movx	a,@dptr
      000438 F0               [ 8]  792 	movx	@dptr,a
      000439 A3               [12]  793 	inc	dptr
      00043A A3               [12]  794 	inc	dptr
      00043B E0               [ 8]  795 	movx	a,@dptr
      00043C F0               [ 8]  796 	movx	@dptr,a
      00043D A3               [12]  797 	inc	dptr
      00043E A3               [12]  798 	inc	dptr
      00043F E0               [ 8]  799 	movx	a,@dptr
      000440 F0               [ 8]  800 	movx	@dptr,a
      000441 A3               [12]  801 	inc	dptr
      000442 A3               [12]  802 	inc	dptr
      000443 E0               [ 8]  803 	movx	a,@dptr
      000444 F0               [ 8]  804 	movx	@dptr,a
      000445 75 86 00         [12]  805 	mov	dps,#0
      000448 8A 82            [ 8]  806 	mov	dpl,r2
      00044A 8B 83            [ 8]  807 	mov	dph,r3
      00044C 8C 93            [ 8]  808 	mov	dpx,r4
      00044E 8D F0            [ 8]  809 	mov	b,r5
      000450 12s00r00r00      [16]  810 	lcall	___fsadd
      000454 AA 82            [ 8]  811 	mov	r2,dpl
      000456 AB 83            [ 8]  812 	mov	r3,dph
      000458 AC 93            [ 8]  813 	mov	r4,dpx
      00045A AD F0            [ 8]  814 	mov	r5,b
                                    815 ;	genAssign: resultIsFar = TRUE
      00045C 8A 06            [ 8]  816 	mov	ar6,r2
      00045E 8B 07            [ 8]  817 	mov	ar7,r3
      000460 8C 00            [ 8]  818 	mov	ar0,r4
      000462 8D 01            [ 8]  819 	mov	ar1,r5
                                    820 ;	tancotf.c:81: xden = Q(g);
      000464 90s00r00r05      [12]  821 	mov	dptr,#_tancotf_g_1_24
                                    822 ;	genAssign: resultIsFar = TRUE
      000468 75 86 21         [12]  823 	mov	dps,#0x21
      00046B 90s00r00r00      [12]  824 	mov	dptr,#___fsmul_PARM_2
      00046F E0               [ 8]  825 	movx	a,@dptr
      000470 F0               [ 8]  826 	movx	@dptr,a
      000471 A3               [12]  827 	inc	dptr
      000472 A3               [12]  828 	inc	dptr
      000473 E0               [ 8]  829 	movx	a,@dptr
      000474 F0               [ 8]  830 	movx	@dptr,a
      000475 A3               [12]  831 	inc	dptr
      000476 A3               [12]  832 	inc	dptr
      000477 E0               [ 8]  833 	movx	a,@dptr
      000478 F0               [ 8]  834 	movx	@dptr,a
      000479 A3               [12]  835 	inc	dptr
      00047A A3               [12]  836 	inc	dptr
      00047B E0               [ 8]  837 	movx	a,@dptr
      00047C F0               [ 8]  838 	movx	@dptr,a
      00047D 75 86 00         [12]  839 	mov	dps,#0
      000480 C0 06            [ 8]  840 	push	ar6
      000482 C0 07            [ 8]  841 	push	ar7
      000484 C0 00            [ 8]  842 	push	ar0
      000486 C0 01            [ 8]  843 	push	ar1
      000488 90 1F 33 75      [12]  844 	mov	dptr,#0x1F3375
      00048C 75 F0 3C         [12]  845 	mov	b,#0x3C
      00048F 12s00r00r00      [16]  846 	lcall	___fsmul
      000493 AA 82            [ 8]  847 	mov	r2,dpl
      000495 AB 83            [ 8]  848 	mov	r3,dph
      000497 AC 93            [ 8]  849 	mov	r4,dpx
      000499 AD F0            [ 8]  850 	mov	r5,b
      00049B D0 01            [ 8]  851 	pop	ar1
      00049D D0 00            [ 8]  852 	pop	ar0
      00049F D0 07            [ 8]  853 	pop	ar7
      0004A1 D0 06            [ 8]  854 	pop	ar6
                                    855 ;	genAssign: resultIsFar = TRUE
      0004A3 90s00r00r00      [12]  856 	mov	dptr,#___fsadd_PARM_2
      0004A7 74 AF            [ 8]  857 	mov	a,#0xAF
      0004A9 F0               [ 8]  858 	movx	@dptr,a
      0004AA A3               [12]  859 	inc	dptr
      0004AB 74 B7            [ 8]  860 	mov	a,#0xB7
      0004AD F0               [ 8]  861 	movx	@dptr,a
      0004AE A3               [12]  862 	inc	dptr
      0004AF 74 DB            [ 8]  863 	mov	a,#0xDB
      0004B1 F0               [ 8]  864 	movx	@dptr,a
      0004B2 A3               [12]  865 	inc	dptr
      0004B3 74 BE            [ 8]  866 	mov	a,#0xBE
      0004B5 F0               [ 8]  867 	movx	@dptr,a
      0004B6 C0 06            [ 8]  868 	push	ar6
      0004B8 C0 07            [ 8]  869 	push	ar7
      0004BA C0 00            [ 8]  870 	push	ar0
      0004BC C0 01            [ 8]  871 	push	ar1
      0004BE 8A 82            [ 8]  872 	mov	dpl,r2
      0004C0 8B 83            [ 8]  873 	mov	dph,r3
      0004C2 8C 93            [ 8]  874 	mov	dpx,r4
      0004C4 8D F0            [ 8]  875 	mov	b,r5
      0004C6 12s00r00r00      [16]  876 	lcall	___fsadd
      0004CA AA 82            [ 8]  877 	mov	r2,dpl
      0004CC AB 83            [ 8]  878 	mov	r3,dph
      0004CE AC 93            [ 8]  879 	mov	r4,dpx
      0004D0 AD F0            [ 8]  880 	mov	r5,b
      0004D2 D0 01            [ 8]  881 	pop	ar1
      0004D4 D0 00            [ 8]  882 	pop	ar0
      0004D6 D0 07            [ 8]  883 	pop	ar7
      0004D8 D0 06            [ 8]  884 	pop	ar6
      0004DA 90s00r00r05      [12]  885 	mov	dptr,#_tancotf_g_1_24
                                    886 ;	genAssign: resultIsFar = TRUE
      0004DE 75 86 21         [12]  887 	mov	dps,#0x21
      0004E1 90s00r00r00      [12]  888 	mov	dptr,#___fsmul_PARM_2
      0004E5 E0               [ 8]  889 	movx	a,@dptr
      0004E6 F0               [ 8]  890 	movx	@dptr,a
      0004E7 A3               [12]  891 	inc	dptr
      0004E8 A3               [12]  892 	inc	dptr
      0004E9 E0               [ 8]  893 	movx	a,@dptr
      0004EA F0               [ 8]  894 	movx	@dptr,a
      0004EB A3               [12]  895 	inc	dptr
      0004EC A3               [12]  896 	inc	dptr
      0004ED E0               [ 8]  897 	movx	a,@dptr
      0004EE F0               [ 8]  898 	movx	@dptr,a
      0004EF A3               [12]  899 	inc	dptr
      0004F0 A3               [12]  900 	inc	dptr
      0004F1 E0               [ 8]  901 	movx	a,@dptr
      0004F2 F0               [ 8]  902 	movx	@dptr,a
      0004F3 75 86 00         [12]  903 	mov	dps,#0
      0004F6 C0 06            [ 8]  904 	push	ar6
      0004F8 C0 07            [ 8]  905 	push	ar7
      0004FA C0 00            [ 8]  906 	push	ar0
      0004FC C0 01            [ 8]  907 	push	ar1
      0004FE 8A 82            [ 8]  908 	mov	dpl,r2
      000500 8B 83            [ 8]  909 	mov	dph,r3
      000502 8C 93            [ 8]  910 	mov	dpx,r4
      000504 8D F0            [ 8]  911 	mov	b,r5
      000506 12s00r00r00      [16]  912 	lcall	___fsmul
      00050A AA 82            [ 8]  913 	mov	r2,dpl
      00050C AB 83            [ 8]  914 	mov	r3,dph
      00050E AC 93            [ 8]  915 	mov	r4,dpx
      000510 AD F0            [ 8]  916 	mov	r5,b
      000512 D0 01            [ 8]  917 	pop	ar1
      000514 D0 00            [ 8]  918 	pop	ar0
      000516 D0 07            [ 8]  919 	pop	ar7
      000518 D0 06            [ 8]  920 	pop	ar6
                                    921 ;	genAssign: resultIsFar = TRUE
      00051A 90s00r00r00      [12]  922 	mov	dptr,#___fsadd_PARM_2
      00051E E4               [ 4]  923 	clr	a
      00051F F0               [ 8]  924 	movx	@dptr,a
      000520 A3               [12]  925 	inc	dptr
      000521 E4               [ 4]  926 	clr	a
      000522 F0               [ 8]  927 	movx	@dptr,a
      000523 A3               [12]  928 	inc	dptr
      000524 74 80            [ 8]  929 	mov	a,#0x80
      000526 F0               [ 8]  930 	movx	@dptr,a
      000527 A3               [12]  931 	inc	dptr
      000528 74 3F            [ 8]  932 	mov	a,#0x3F
      00052A F0               [ 8]  933 	movx	@dptr,a
      00052B C0 06            [ 8]  934 	push	ar6
      00052D C0 07            [ 8]  935 	push	ar7
      00052F C0 00            [ 8]  936 	push	ar0
      000531 C0 01            [ 8]  937 	push	ar1
      000533 8A 82            [ 8]  938 	mov	dpl,r2
      000535 8B 83            [ 8]  939 	mov	dph,r3
      000537 8C 93            [ 8]  940 	mov	dpx,r4
      000539 8D F0            [ 8]  941 	mov	b,r5
      00053B 12s00r00r00      [16]  942 	lcall	___fsadd
      00053F AA 82            [ 8]  943 	mov	r2,dpl
      000541 AB 83            [ 8]  944 	mov	r3,dph
      000543 AC 93            [ 8]  945 	mov	r4,dpx
      000545 AD F0            [ 8]  946 	mov	r5,b
      000547 D0 01            [ 8]  947 	pop	ar1
      000549 D0 00            [ 8]  948 	pop	ar0
      00054B D0 07            [ 8]  949 	pop	ar7
      00054D D0 06            [ 8]  950 	pop	ar6
                                    951 ;	genAssign: resultIsFar = TRUE
      00054F 90s00r00r0D      [12]  952 	mov	dptr,#_tancotf_xden_1_24
      000553 EA               [ 4]  953 	mov	a,r2
      000554 F0               [ 8]  954 	movx	@dptr,a
      000555 A3               [12]  955 	inc	dptr
      000556 EB               [ 4]  956 	mov	a,r3
      000557 F0               [ 8]  957 	movx	@dptr,a
      000558 A3               [12]  958 	inc	dptr
      000559 EC               [ 4]  959 	mov	a,r4
      00055A F0               [ 8]  960 	movx	@dptr,a
      00055B A3               [12]  961 	inc	dptr
      00055C ED               [ 4]  962 	mov	a,r5
      00055D F0               [ 8]  963 	movx	@dptr,a
      00055E                        964 00105$:
                                    965 ;	tancotf.c:84: if(n&1)
      00055E 90s00r00r11      [12]  966 	mov	dptr,#_tancotf_n_1_24
      000562 E0               [ 8]  967 	movx	a,@dptr
      000563 30 E0 6B         [12]  968 	jnb  acc[0],00113$
      000566                        969 00140$:
                                    970 ;	tancotf.c:87: if(iscotan) return (-xnum/xden);
      000566 90s00r00r00      [12]  971 	mov	dptr,#_tancotf_PARM_2
      00056A E0               [ 8]  972 	movx	a,@dptr
      00056B 60 36            [12]  973 	jz  00107$
      00056D                        974 00141$:
      00056D 8E 02            [ 8]  975 	mov	ar2,r6
      00056F 8F 03            [ 8]  976 	mov	ar3,r7
      000571 88 04            [ 8]  977 	mov	ar4,r0
      000573 E9               [ 4]  978 	mov	a,r1
      000574 B2 E7            [ 8]  979 	cpl	acc[7]
      000576 FD               [ 4]  980 	mov	r5,a
      000577 90s00r00r0D      [12]  981 	mov	dptr,#_tancotf_xden_1_24
                                    982 ;	genAssign: resultIsFar = TRUE
      00057B 75 86 21         [12]  983 	mov	dps,#0x21
      00057E 90s00r00r00      [12]  984 	mov	dptr,#___fsdiv_PARM_2
      000582 E0               [ 8]  985 	movx	a,@dptr
      000583 F0               [ 8]  986 	movx	@dptr,a
      000584 A3               [12]  987 	inc	dptr
      000585 A3               [12]  988 	inc	dptr
      000586 E0               [ 8]  989 	movx	a,@dptr
      000587 F0               [ 8]  990 	movx	@dptr,a
      000588 A3               [12]  991 	inc	dptr
      000589 A3               [12]  992 	inc	dptr
      00058A E0               [ 8]  993 	movx	a,@dptr
      00058B F0               [ 8]  994 	movx	@dptr,a
      00058C A3               [12]  995 	inc	dptr
      00058D A3               [12]  996 	inc	dptr
      00058E E0               [ 8]  997 	movx	a,@dptr
      00058F F0               [ 8]  998 	movx	@dptr,a
      000590 75 86 00         [12]  999 	mov	dps,#0
      000593 8A 82            [ 8] 1000 	mov	dpl,r2
      000595 8B 83            [ 8] 1001 	mov	dph,r3
      000597 8C 93            [ 8] 1002 	mov	dpx,r4
      000599 8D F0            [ 8] 1003 	mov	b,r5
      00059B 12s00r00r00      [16] 1004 	lcall	___fsdiv
      00059F 02s00r06r2D      [16] 1005 	ljmp	00115$
      0005A3                       1006 00107$:
                                   1007 ;	tancotf.c:88: else return (-xden/xnum);
      0005A3 90s00r00r0D      [12] 1008 	mov	dptr,#_tancotf_xden_1_24
      0005A7 E0               [ 8] 1009 	movx	a,@dptr
      0005A8 FA               [ 4] 1010 	mov	r2,a
      0005A9 A3               [12] 1011 	inc	dptr
      0005AA E0               [ 8] 1012 	movx	a,@dptr
      0005AB FB               [ 4] 1013 	mov	r3,a
      0005AC A3               [12] 1014 	inc	dptr
      0005AD E0               [ 8] 1015 	movx	a,@dptr
      0005AE FC               [ 4] 1016 	mov	r4,a
      0005AF A3               [12] 1017 	inc	dptr
      0005B0 E0               [ 8] 1018 	movx	a,@dptr
      0005B1 B2 E7            [ 8] 1019 	cpl	acc[7]
      0005B3 FD               [ 4] 1020 	mov	r5,a
                                   1021 ;	genAssign: resultIsFar = TRUE
      0005B4 90s00r00r00      [12] 1022 	mov	dptr,#___fsdiv_PARM_2
      0005B8 EE               [ 4] 1023 	mov	a,r6
      0005B9 F0               [ 8] 1024 	movx	@dptr,a
      0005BA A3               [12] 1025 	inc	dptr
      0005BB EF               [ 4] 1026 	mov	a,r7
      0005BC F0               [ 8] 1027 	movx	@dptr,a
      0005BD A3               [12] 1028 	inc	dptr
      0005BE E8               [ 4] 1029 	mov	a,r0
      0005BF F0               [ 8] 1030 	movx	@dptr,a
      0005C0 A3               [12] 1031 	inc	dptr
      0005C1 E9               [ 4] 1032 	mov	a,r1
      0005C2 F0               [ 8] 1033 	movx	@dptr,a
      0005C3 8A 82            [ 8] 1034 	mov	dpl,r2
      0005C5 8B 83            [ 8] 1035 	mov	dph,r3
      0005C7 8C 93            [ 8] 1036 	mov	dpx,r4
      0005C9 8D F0            [ 8] 1037 	mov	b,r5
      0005CB 12s00r00r00      [16] 1038 	lcall	___fsdiv
      0005CF 80 5C            [12] 1039 	sjmp 00115$
      0005D1                       1040 00113$:
                                   1041 ;	tancotf.c:92: if(iscotan) return (xden/xnum);
      0005D1 90s00r00r00      [12] 1042 	mov	dptr,#_tancotf_PARM_2
      0005D5 E0               [ 8] 1043 	movx	a,@dptr
      0005D6 60 2D            [12] 1044 	jz  00110$
      0005D8                       1045 00142$:
                                   1046 ;	genAssign: resultIsFar = TRUE
      0005D8 90s00r00r00      [12] 1047 	mov	dptr,#___fsdiv_PARM_2
      0005DC EE               [ 4] 1048 	mov	a,r6
      0005DD F0               [ 8] 1049 	movx	@dptr,a
      0005DE A3               [12] 1050 	inc	dptr
      0005DF EF               [ 4] 1051 	mov	a,r7
      0005E0 F0               [ 8] 1052 	movx	@dptr,a
      0005E1 A3               [12] 1053 	inc	dptr
      0005E2 E8               [ 4] 1054 	mov	a,r0
      0005E3 F0               [ 8] 1055 	movx	@dptr,a
      0005E4 A3               [12] 1056 	inc	dptr
      0005E5 E9               [ 4] 1057 	mov	a,r1
      0005E6 F0               [ 8] 1058 	movx	@dptr,a
      0005E7 05 86            [ 8] 1059 	inc	dps
      0005E9 90s00r00r0D      [12] 1060 	mov	dptr,#_tancotf_xden_1_24
      0005ED E0               [ 8] 1061 	movx	a,@dptr
      0005EE F5 82            [ 8] 1062 	mov	dpl,a
      0005F0 A3               [12] 1063 	inc	dptr
      0005F1 E0               [ 8] 1064 	movx	a,@dptr
      0005F2 F5 83            [ 8] 1065 	mov	dph,a
      0005F4 A3               [12] 1066 	inc	dptr
      0005F5 E0               [ 8] 1067 	movx	a,@dptr
      0005F6 F5 93            [ 8] 1068 	mov	dpx,a
      0005F8 A3               [12] 1069 	inc	dptr
      0005F9 E0               [ 8] 1070 	movx	a,@dptr
      0005FA F5 F0            [ 8] 1071 	mov	b,a
      0005FC 75 86 00         [12] 1072 	mov	dps,#0
      0005FF 12s00r00r00      [16] 1073 	lcall	___fsdiv
      000603 80 28            [12] 1074 	sjmp 00115$
      000605                       1075 00110$:
                                   1076 ;	tancotf.c:93: else return (xnum/xden);
      000605 90s00r00r0D      [12] 1077 	mov	dptr,#_tancotf_xden_1_24
                                   1078 ;	genAssign: resultIsFar = TRUE
      000609 75 86 21         [12] 1079 	mov	dps,#0x21
      00060C 90s00r00r00      [12] 1080 	mov	dptr,#___fsdiv_PARM_2
      000610 E0               [ 8] 1081 	movx	a,@dptr
      000611 F0               [ 8] 1082 	movx	@dptr,a
      000612 A3               [12] 1083 	inc	dptr
      000613 A3               [12] 1084 	inc	dptr
      000614 E0               [ 8] 1085 	movx	a,@dptr
      000615 F0               [ 8] 1086 	movx	@dptr,a
      000616 A3               [12] 1087 	inc	dptr
      000617 A3               [12] 1088 	inc	dptr
      000618 E0               [ 8] 1089 	movx	a,@dptr
      000619 F0               [ 8] 1090 	movx	@dptr,a
      00061A A3               [12] 1091 	inc	dptr
      00061B A3               [12] 1092 	inc	dptr
      00061C E0               [ 8] 1093 	movx	a,@dptr
      00061D F0               [ 8] 1094 	movx	@dptr,a
      00061E 75 86 00         [12] 1095 	mov	dps,#0
      000621 8E 82            [ 8] 1096 	mov	dpl,r6
      000623 8F 83            [ 8] 1097 	mov	dph,r7
      000625 88 93            [ 8] 1098 	mov	dpx,r0
      000627 89 F0            [ 8] 1099 	mov	b,r1
      000629 12s00r00r00      [16] 1100 	lcall	___fsdiv
      00062D                       1101 00115$:
      00062D 22               [16] 1102 	ret
                                   1103 	.area CSEG    (CODE)
                                   1104 	.area CONST   (CODE)
                                   1105 	.area XINIT   (CODE)
                                   1106 	.area CABS    (ABS,CODE)
