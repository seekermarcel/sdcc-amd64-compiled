                              1 ;--------------------------------------------------------
                              2 ; File Created by SDCC : free open source ANSI-C Compiler
                              3 ; Version 3.5.0 #9253 (Apr  4 2022) (Linux)
                              4 ; This file was generated Mon Apr  4 14:15:28 2022
                              5 ;--------------------------------------------------------
                              6 	.module _calloc
                              7 	.optsdcc -mz80
                              8 	
                              9 ;--------------------------------------------------------
                             10 ; Public variables in this module
                             11 ;--------------------------------------------------------
                             12 	.globl _malloc
                             13 	.globl _calloc
                             14 ;--------------------------------------------------------
                             15 ; special function registers
                             16 ;--------------------------------------------------------
                             17 ;--------------------------------------------------------
                             18 ; ram data
                             19 ;--------------------------------------------------------
                             20 	.area _DATA
                             21 ;--------------------------------------------------------
                             22 ; ram data
                             23 ;--------------------------------------------------------
                             24 	.area _INITIALIZED
                             25 ;--------------------------------------------------------
                             26 ; absolute external ram data
                             27 ;--------------------------------------------------------
                             28 	.area _DABS (ABS)
                             29 ;--------------------------------------------------------
                             30 ; global & static initialisations
                             31 ;--------------------------------------------------------
                             32 	.area _HOME
                             33 	.area _GSINIT
                             34 	.area _GSFINAL
                             35 	.area _GSINIT
                             36 ;--------------------------------------------------------
                             37 ; Home
                             38 ;--------------------------------------------------------
                             39 	.area _HOME
                             40 	.area _HOME
                             41 ;--------------------------------------------------------
                             42 ; code
                             43 ;--------------------------------------------------------
                             44 	.area _CODE
                             45 ;../_calloc.c:45: void __xdata * calloc (size_t nmemb, size_t size)
                             46 ;	---------------------------------
                             47 ; Function calloc
                             48 ; ---------------------------------
   0000                      49 _calloc::
   0000 DD E5         [15]   50 	push	ix
   0002 DD 21 00 00   [14]   51 	ld	ix,#0
   0006 DD 39         [15]   52 	add	ix,sp
                             53 ;../_calloc.c:49: ptr = malloc(nmemb * size);
   0008 DD 6E 06      [19]   54 	ld	l,6 (ix)
   000B DD 66 07      [19]   55 	ld	h,7 (ix)
   000E E5            [11]   56 	push	hl
   000F DD 6E 04      [19]   57 	ld	l,4 (ix)
   0012 DD 66 05      [19]   58 	ld	h,5 (ix)
   0015 E5            [11]   59 	push	hl
   0016 CDr00r00      [17]   60 	call	__mulint
   0019 F1            [10]   61 	pop	af
   001A F1            [10]   62 	pop	af
   001B EB            [ 4]   63 	ex	de,hl
   001C D5            [11]   64 	push	de
   001D D5            [11]   65 	push	de
   001E CDr00r00      [17]   66 	call	_malloc
   0021 F1            [10]   67 	pop	af
   0022 D1            [10]   68 	pop	de
                             69 ;../_calloc.c:50: if (ptr)
   0023 7C            [ 4]   70 	ld	a,h
   0024 B5            [ 4]   71 	or	a,l
   0025 28 10         [12]   72 	jr	Z,00102$
                             73 ;../_calloc.c:52: memset(ptr, 0, nmemb * size);
   0027 E5            [11]   74 	push	hl
   0028 D5            [11]   75 	push	de
   0029 01 00 00      [10]   76 	ld	bc,#0x0000
   002C C5            [11]   77 	push	bc
   002D E5            [11]   78 	push	hl
   002E CDr00r00      [17]   79 	call	_memset
   0031 21 06 00      [10]   80 	ld	hl,#6
   0034 39            [11]   81 	add	hl,sp
   0035 F9            [ 6]   82 	ld	sp,hl
   0036 E1            [10]   83 	pop	hl
   0037                      84 00102$:
                             85 ;../_calloc.c:54: return ptr;
   0037 DD E1         [14]   86 	pop	ix
   0039 C9            [10]   87 	ret
                             88 	.area _CODE
                             89 	.area _INITIALIZER
                             90 	.area _CABS (ABS)
