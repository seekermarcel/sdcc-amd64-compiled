                                      1 ;--------------------------------------------------------
                                      2 ; File Created by SDCC : free open source ANSI-C Compiler
                                      3 ; Version 3.5.0 #9253 (Apr  4 2022) (Linux)
                                      4 ; This file was generated Mon Apr  4 14:17:06 2022
                                      5 ;--------------------------------------------------------
                                      6 	.module cotf
                                      7 	.optsdcc -mstm8
                                      8 	
                                      9 ;--------------------------------------------------------
                                     10 ; Public variables in this module
                                     11 ;--------------------------------------------------------
                                     12 	.globl _tancotf
                                     13 	.globl _fabsf
                                     14 	.globl _cotf
                                     15 ;--------------------------------------------------------
                                     16 ; ram data
                                     17 ;--------------------------------------------------------
                                     18 	.area DATA
                                     19 ;--------------------------------------------------------
                                     20 ; ram data
                                     21 ;--------------------------------------------------------
                                     22 	.area INITIALIZED
                                     23 ;--------------------------------------------------------
                                     24 ; absolute external ram data
                                     25 ;--------------------------------------------------------
                                     26 	.area DABS (ABS)
                                     27 ;--------------------------------------------------------
                                     28 ; global & static initialisations
                                     29 ;--------------------------------------------------------
                                     30 	.area HOME
                                     31 	.area GSINIT
                                     32 	.area GSFINAL
                                     33 	.area GSINIT
                                     34 ;--------------------------------------------------------
                                     35 ; Home
                                     36 ;--------------------------------------------------------
                                     37 	.area HOME
                                     38 	.area HOME
                                     39 ;--------------------------------------------------------
                                     40 ; code
                                     41 ;--------------------------------------------------------
                                     42 	.area CODE
                                     43 ;	../cotf.c: 37: float cotf(float x) _FLOAT_FUNC_REENTRANT
                                     44 ;	-----------------------------------------
                                     45 ;	 function cotf
                                     46 ;	-----------------------------------------
      000000                         47 _cotf:
                                     48 ;	../cotf.c: 41: y=fabsf(x);
      000000 1E 05            [ 2]   49 	ldw	x, (0x05, sp)
      000002 89               [ 2]   50 	pushw	x
      000003 1E 05            [ 2]   51 	ldw	x, (0x05, sp)
      000005 89               [ 2]   52 	pushw	x
      000006 CDr00r00         [ 4]   53 	call	_fabsf
      000009 5B 04            [ 2]   54 	addw	sp, #4
                                     55 ;	../cotf.c: 42: if (y<1.0E-30) //This one requires more thinking...
      00000B 4B 60            [ 1]   56 	push	#0x60
      00000D 4B 42            [ 1]   57 	push	#0x42
      00000F 4B A2            [ 1]   58 	push	#0xa2
      000011 4B 0D            [ 1]   59 	push	#0x0d
      000013 89               [ 2]   60 	pushw	x
      000014 90 89            [ 2]   61 	pushw	y
      000016 CDr00r00         [ 4]   62 	call	___fslt
      000019 5B 08            [ 2]   63 	addw	sp, #8
      00001B 4D               [ 1]   64 	tnz	a
      00001C 27 2A            [ 1]   65 	jreq	00105$
                                     66 ;	../cotf.c: 44: errno = ERANGE;
      00001E AE 00 22         [ 2]   67 	ldw	x, #0x0022
      000021 CFu00u00         [ 2]   68 	ldw	_errno+0, x
                                     69 ;	../cotf.c: 45: if (x<0.0)
      000024 5F               [ 1]   70 	clrw	x
      000025 89               [ 2]   71 	pushw	x
      000026 5F               [ 1]   72 	clrw	x
      000027 89               [ 2]   73 	pushw	x
      000028 1E 09            [ 2]   74 	ldw	x, (0x09, sp)
      00002A 89               [ 2]   75 	pushw	x
      00002B 1E 09            [ 2]   76 	ldw	x, (0x09, sp)
      00002D 89               [ 2]   77 	pushw	x
      00002E CDr00r00         [ 4]   78 	call	___fslt
      000031 5B 08            [ 2]   79 	addw	sp, #8
      000033 4D               [ 1]   80 	tnz	a
      000034 27 09            [ 1]   81 	jreq	00102$
                                     82 ;	../cotf.c: 46: return -HUGE_VALF;
      000036 AE FF FF         [ 2]   83 	ldw	x, #0xffff
      000039 90 AE FF 7F      [ 2]   84 	ldw	y, #0xff7f
      00003D 20 16            [ 2]   85 	jra	00106$
      00003F                         86 00102$:
                                     87 ;	../cotf.c: 48: return +HUGE_VALF;
      00003F AE FF FF         [ 2]   88 	ldw	x, #0xffff
      000042 90 AE 7F 7F      [ 2]   89 	ldw	y, #0x7f7f
      000046 20 0D            [ 2]   90 	jra	00106$
      000048                         91 00105$:
                                     92 ;	../cotf.c: 50: return tancotf(x, 1);
      000048 4B 01            [ 1]   93 	push	#0x01
      00004A 1E 06            [ 2]   94 	ldw	x, (0x06, sp)
      00004C 89               [ 2]   95 	pushw	x
      00004D 1E 06            [ 2]   96 	ldw	x, (0x06, sp)
      00004F 89               [ 2]   97 	pushw	x
      000050 CDr00r00         [ 4]   98 	call	_tancotf
      000053 5B 05            [ 2]   99 	addw	sp, #5
      000055                        100 00106$:
      000055 81               [ 4]  101 	ret
                                    102 	.area CODE
                                    103 	.area INITIALIZER
                                    104 	.area CABS (ABS)
