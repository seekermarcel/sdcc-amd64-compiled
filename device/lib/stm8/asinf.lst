                                      1 ;--------------------------------------------------------
                                      2 ; File Created by SDCC : free open source ANSI-C Compiler
                                      3 ; Version 3.5.0 #9253 (Apr  4 2022) (Linux)
                                      4 ; This file was generated Mon Apr  4 14:17:07 2022
                                      5 ;--------------------------------------------------------
                                      6 	.module asinf
                                      7 	.optsdcc -mstm8
                                      8 	
                                      9 ;--------------------------------------------------------
                                     10 ; Public variables in this module
                                     11 ;--------------------------------------------------------
                                     12 	.globl _asincosf
                                     13 	.globl _asinf
                                     14 ;--------------------------------------------------------
                                     15 ; ram data
                                     16 ;--------------------------------------------------------
                                     17 	.area DATA
                                     18 ;--------------------------------------------------------
                                     19 ; ram data
                                     20 ;--------------------------------------------------------
                                     21 	.area INITIALIZED
                                     22 ;--------------------------------------------------------
                                     23 ; absolute external ram data
                                     24 ;--------------------------------------------------------
                                     25 	.area DABS (ABS)
                                     26 ;--------------------------------------------------------
                                     27 ; global & static initialisations
                                     28 ;--------------------------------------------------------
                                     29 	.area HOME
                                     30 	.area GSINIT
                                     31 	.area GSFINAL
                                     32 	.area GSINIT
                                     33 ;--------------------------------------------------------
                                     34 ; Home
                                     35 ;--------------------------------------------------------
                                     36 	.area HOME
                                     37 	.area HOME
                                     38 ;--------------------------------------------------------
                                     39 ; code
                                     40 ;--------------------------------------------------------
                                     41 	.area CODE
                                     42 ;	../asinf.c: 36: float asinf(float x) _FLOAT_FUNC_REENTRANT
                                     43 ;	-----------------------------------------
                                     44 ;	 function asinf
                                     45 ;	-----------------------------------------
      000000                         46 _asinf:
                                     47 ;	../asinf.c: 38: if (x == 1.0) return  HALF_PI;
      000000 5F               [ 1]   48 	clrw	x
      000001 89               [ 2]   49 	pushw	x
      000002 4B 80            [ 1]   50 	push	#0x80
      000004 4B 3F            [ 1]   51 	push	#0x3f
      000006 1E 09            [ 2]   52 	ldw	x, (0x09, sp)
      000008 89               [ 2]   53 	pushw	x
      000009 1E 09            [ 2]   54 	ldw	x, (0x09, sp)
      00000B 89               [ 2]   55 	pushw	x
      00000C CDr00r00         [ 4]   56 	call	___fseq
      00000F 5B 08            [ 2]   57 	addw	sp, #8
      000011 4D               [ 1]   58 	tnz	a
      000012 27 09            [ 1]   59 	jreq	00108$
      000014 AE 0F DB         [ 2]   60 	ldw	x, #0x0fdb
      000017 90 AE 3F C9      [ 2]   61 	ldw	y, #0x3fc9
      00001B 20 38            [ 2]   62 	jra	00110$
      00001D                         63 00108$:
                                     64 ;	../asinf.c: 39: else if (x ==-1.0) return -HALF_PI;
      00001D 5F               [ 1]   65 	clrw	x
      00001E 89               [ 2]   66 	pushw	x
      00001F 4B 80            [ 1]   67 	push	#0x80
      000021 4B BF            [ 1]   68 	push	#0xbf
      000023 1E 09            [ 2]   69 	ldw	x, (0x09, sp)
      000025 89               [ 2]   70 	pushw	x
      000026 1E 09            [ 2]   71 	ldw	x, (0x09, sp)
      000028 89               [ 2]   72 	pushw	x
      000029 CDr00r00         [ 4]   73 	call	___fseq
      00002C 5B 08            [ 2]   74 	addw	sp, #8
      00002E 4D               [ 1]   75 	tnz	a
      00002F 27 09            [ 1]   76 	jreq	00105$
      000031 AE 0F DB         [ 2]   77 	ldw	x, #0x0fdb
      000034 90 AE BF C9      [ 2]   78 	ldw	y, #0xbfc9
      000038 20 1B            [ 2]   79 	jra	00110$
      00003A                         80 00105$:
                                     81 ;	../asinf.c: 40: else if (x == 0.0) return 0.0;
      00003A 1E 05            [ 2]   82 	ldw	x, (0x05, sp)
      00003C 26 0A            [ 1]   83 	jrne	00102$
      00003E 1E 03            [ 2]   84 	ldw	x, (0x03, sp)
      000040 58               [ 2]   85 	sllw	x
      000041 26 05            [ 1]   86 	jrne	00102$
      000043 5F               [ 1]   87 	clrw	x
      000044 90 5F            [ 1]   88 	clrw	y
      000046 20 0D            [ 2]   89 	jra	00110$
      000048                         90 00102$:
                                     91 ;	../asinf.c: 41: else               return asincosf(x, false);
      000048 4B 00            [ 1]   92 	push	#0x00
      00004A 1E 06            [ 2]   93 	ldw	x, (0x06, sp)
      00004C 89               [ 2]   94 	pushw	x
      00004D 1E 06            [ 2]   95 	ldw	x, (0x06, sp)
      00004F 89               [ 2]   96 	pushw	x
      000050 CDr00r00         [ 4]   97 	call	_asincosf
      000053 5B 05            [ 2]   98 	addw	sp, #5
      000055                         99 00110$:
      000055 81               [ 4]  100 	ret
                                    101 	.area CODE
                                    102 	.area INITIALIZER
                                    103 	.area CABS (ABS)
