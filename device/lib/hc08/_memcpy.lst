                              1 ;--------------------------------------------------------
                              2 ; File Created by SDCC : free open source ANSI-C Compiler
                              3 ; Version 3.5.0 #9253 (Apr  4 2022) (Linux)
                              4 ; This file was generated Mon Apr  4 14:10:33 2022
                              5 ;--------------------------------------------------------
                              6 	.module _memcpy
                              7 	.optsdcc -mhc08
                              8 	
                              9 	.area HOME    (CODE)
                             10 	.area GSINIT0 (CODE)
                             11 	.area GSINIT  (CODE)
                             12 	.area GSFINAL (CODE)
                             13 	.area CSEG    (CODE)
                             14 	.area XINIT   (CODE)
                             15 	.area CONST   (CODE)
                             16 	.area DSEG    (PAG)
                             17 	.area OSEG    (PAG, OVR)
                             18 	.area XSEG
                             19 	.area XISEG
                             20 ;--------------------------------------------------------
                             21 ; Public variables in this module
                             22 ;--------------------------------------------------------
                             23 	.globl _memcpy_PARM_3
                             24 	.globl _memcpy_PARM_2
                             25 	.globl _memcpy
                             26 ;--------------------------------------------------------
                             27 ; ram data
                             28 ;--------------------------------------------------------
                             29 	.area DSEG    (PAG)
                             30 ;--------------------------------------------------------
                             31 ; overlayable items in ram 
                             32 ;--------------------------------------------------------
                             33 	.area	OSEG    (PAG, OVR)
   0000                      34 _memcpy_sloc0_1_0:
   0000                      35 	.ds 2
   0002                      36 _memcpy_sloc1_1_0:
   0002                      37 	.ds 2
   0004                      38 _memcpy_sloc2_1_0:
   0004                      39 	.ds 2
                             40 ;--------------------------------------------------------
                             41 ; absolute ram data
                             42 ;--------------------------------------------------------
                             43 	.area IABS    (ABS)
                             44 	.area IABS    (ABS)
                             45 ;--------------------------------------------------------
                             46 ; absolute external ram data
                             47 ;--------------------------------------------------------
                             48 	.area XABS    (ABS)
                             49 ;--------------------------------------------------------
                             50 ; external initialized ram data
                             51 ;--------------------------------------------------------
                             52 	.area XISEG
                             53 ;--------------------------------------------------------
                             54 ; extended address mode data
                             55 ;--------------------------------------------------------
                             56 	.area XSEG
   0000                      57 _memcpy_PARM_2:
   0000                      58 	.ds 2
   0002                      59 _memcpy_PARM_3:
   0002                      60 	.ds 2
   0004                      61 _memcpy_ret_1_22:
   0004                      62 	.ds 2
                             63 ;--------------------------------------------------------
                             64 ; global & static initialisations
                             65 ;--------------------------------------------------------
                             66 	.area HOME    (CODE)
                             67 	.area GSINIT  (CODE)
                             68 	.area GSFINAL (CODE)
                             69 	.area GSINIT  (CODE)
                             70 ;--------------------------------------------------------
                             71 ; Home
                             72 ;--------------------------------------------------------
                             73 	.area HOME    (CODE)
                             74 	.area HOME    (CODE)
                             75 ;--------------------------------------------------------
                             76 ; code
                             77 ;--------------------------------------------------------
                             78 	.area CSEG    (CODE)
                             79 ;------------------------------------------------------------
                             80 ;Allocation info for local variables in function 'memcpy'
                             81 ;------------------------------------------------------------
                             82 ;src                       Allocated with name '_memcpy_PARM_2'
                             83 ;acount                    Allocated with name '_memcpy_PARM_3'
                             84 ;dst                       Allocated to registers x h 
                             85 ;ret                       Allocated with name '_memcpy_ret_1_22'
                             86 ;d                         Allocated to registers 
                             87 ;s                         Allocated to registers 
                             88 ;sloc0                     Allocated with name '_memcpy_sloc0_1_0'
                             89 ;sloc1                     Allocated with name '_memcpy_sloc1_1_0'
                             90 ;sloc2                     Allocated with name '_memcpy_sloc2_1_0'
                             91 ;------------------------------------------------------------
                             92 ;../_memcpy.c:36: void * memcpy (void * dst, const void * src, size_t acount)
                             93 ;	-----------------------------------------
                             94 ;	 function memcpy
                             95 ;	-----------------------------------------
                             96 ;	Register assignment is optimal.
                             97 ;	Stack space usage: 0 bytes.
   0000                      98 _memcpy:
   0000 89            [ 2]   99 	pshx
   0001 97            [ 1]  100 	tax
   0002 8A            [ 2]  101 	pulh
                            102 ;../_memcpy.c:38: void * ret = dst;
   0003 8B            [ 2]  103 	pshh
   0004 86            [ 2]  104 	pula
   0005 C7r00r04      [ 4]  105 	sta	_memcpy_ret_1_22
   0008 CFr00r05      [ 4]  106 	stx	(_memcpy_ret_1_22 + 1)
                            107 ;../_memcpy.c:39: char * d = dst;
                            108 ;../_memcpy.c:40: const char * s = src;
   000B C6r00r01      [ 4]  109 	lda	(_memcpy_PARM_2 + 1)
   000E B7*01         [ 3]  110 	sta	*(_memcpy_sloc0_1_0 + 1)
   0010 C6r00r00      [ 4]  111 	lda	_memcpy_PARM_2
   0013 B7*00         [ 3]  112 	sta	*_memcpy_sloc0_1_0
                            113 ;../_memcpy.c:45: while (acount--) {
   0015 C6r00r02      [ 4]  114 	lda	_memcpy_PARM_3
   0018 B7*02         [ 3]  115 	sta	*_memcpy_sloc1_1_0
   001A C6r00r03      [ 4]  116 	lda	(_memcpy_PARM_3 + 1)
   001D B7*03         [ 3]  117 	sta	*(_memcpy_sloc1_1_0 + 1)
   001F                     118 00101$:
   001F 4E*02*04      [ 5]  119 	mov	*_memcpy_sloc1_1_0,*_memcpy_sloc2_1_0
   0022 4E*03*05      [ 5]  120 	mov	*(_memcpy_sloc1_1_0 + 1),*(_memcpy_sloc2_1_0 + 1)
   0025 89            [ 2]  121 	pshx
   0026 8B            [ 2]  122 	pshh
   0027 55*02         [ 4]  123 	ldhx	*_memcpy_sloc1_1_0
   0029 AF FF         [ 2]  124 	aix	#-1
   002B 35*02         [ 4]  125 	sthx	*_memcpy_sloc1_1_0
   002D 8A            [ 2]  126 	pulh
   002E 88            [ 2]  127 	pulx
   002F B6*05         [ 3]  128 	lda	*(_memcpy_sloc2_1_0 + 1)
   0031 BA*04         [ 3]  129 	ora	*_memcpy_sloc2_1_0
   0033 27 10         [ 3]  130 	beq	00103$
                            131 ;../_memcpy.c:46: *d++ = *s++;
   0035 89            [ 2]  132 	pshx
   0036 8B            [ 2]  133 	pshh
   0037 55*00         [ 4]  134 	ldhx	*_memcpy_sloc0_1_0
   0039 F6            [ 2]  135 	lda	,x
   003A AF 01         [ 2]  136 	aix	#1
   003C 35*00         [ 4]  137 	sthx	*_memcpy_sloc0_1_0
   003E 8A            [ 2]  138 	pulh
   003F 88            [ 2]  139 	pulx
   0040 F7            [ 2]  140 	sta	,x
   0041 AF 01         [ 2]  141 	aix	#1
   0043 20 DA         [ 3]  142 	bra	00101$
   0045                     143 00103$:
                            144 ;../_memcpy.c:49: return(ret);
   0045 CEr00r04      [ 4]  145 	ldx	_memcpy_ret_1_22
   0048 C6r00r05      [ 4]  146 	lda	(_memcpy_ret_1_22 + 1)
   004B 81            [ 4]  147 	rts
                            148 	.area CSEG    (CODE)
                            149 	.area CONST   (CODE)
                            150 	.area XINIT   (CODE)
                            151 	.area CABS    (ABS,CODE)
