                              1 ;--------------------------------------------------------
                              2 ; File Created by SDCC : free open source ANSI-C Compiler
                              3 ; Version 3.5.0 #9253 (Apr  4 2022) (Linux)
                              4 ; This file was generated Mon Apr  4 14:10:32 2022
                              5 ;--------------------------------------------------------
                              6 	.module _rlulonglong
                              7 	.optsdcc -mhc08
                              8 	
                              9 	.area HOME    (CODE)
                             10 	.area GSINIT0 (CODE)
                             11 	.area GSINIT  (CODE)
                             12 	.area GSFINAL (CODE)
                             13 	.area CSEG    (CODE)
                             14 	.area XINIT   (CODE)
                             15 	.area CONST   (CODE)
                             16 	.area DSEG    (PAG)
                             17 	.area OSEG    (PAG, OVR)
                             18 	.area XSEG
                             19 	.area XISEG
                             20 ;--------------------------------------------------------
                             21 ; Public variables in this module
                             22 ;--------------------------------------------------------
                             23 	.globl __rlulonglong_PARM_2
                             24 	.globl __rlulonglong_PARM_1
                             25 	.globl __rlulonglong
                             26 ;--------------------------------------------------------
                             27 ; ram data
                             28 ;--------------------------------------------------------
                             29 	.area DSEG    (PAG)
                             30 ;--------------------------------------------------------
                             31 ; overlayable items in ram 
                             32 ;--------------------------------------------------------
                             33 	.area	OSEG    (PAG, OVR)
   0000                      34 __rlulonglong_sloc0_1_0:
   0000                      35 	.ds 4
   0004                      36 __rlulonglong_sloc1_1_0:
   0004                      37 	.ds 4
                             38 ;--------------------------------------------------------
                             39 ; absolute ram data
                             40 ;--------------------------------------------------------
                             41 	.area IABS    (ABS)
                             42 	.area IABS    (ABS)
                             43 ;--------------------------------------------------------
                             44 ; absolute external ram data
                             45 ;--------------------------------------------------------
                             46 	.area XABS    (ABS)
                             47 ;--------------------------------------------------------
                             48 ; external initialized ram data
                             49 ;--------------------------------------------------------
                             50 	.area XISEG
                             51 ;--------------------------------------------------------
                             52 ; extended address mode data
                             53 ;--------------------------------------------------------
                             54 	.area XSEG
   0000                      55 __rlulonglong_PARM_1:
   0000                      56 	.ds 8
   0008                      57 __rlulonglong_PARM_2:
   0008                      58 	.ds 1
                             59 ;--------------------------------------------------------
                             60 ; global & static initialisations
                             61 ;--------------------------------------------------------
                             62 	.area HOME    (CODE)
                             63 	.area GSINIT  (CODE)
                             64 	.area GSFINAL (CODE)
                             65 	.area GSINIT  (CODE)
                             66 ;--------------------------------------------------------
                             67 ; Home
                             68 ;--------------------------------------------------------
                             69 	.area HOME    (CODE)
                             70 	.area HOME    (CODE)
                             71 ;--------------------------------------------------------
                             72 ; code
                             73 ;--------------------------------------------------------
                             74 	.area CSEG    (CODE)
                             75 ;------------------------------------------------------------
                             76 ;Allocation info for local variables in function '_rlulonglong'
                             77 ;------------------------------------------------------------
                             78 ;l                         Allocated with name '__rlulonglong_PARM_1'
                             79 ;s                         Allocated with name '__rlulonglong_PARM_2'
                             80 ;top                       Allocated to registers 
                             81 ;middle                    Allocated to registers 
                             82 ;bottom                    Allocated to registers 
                             83 ;b                         Allocated to registers 
                             84 ;sloc0                     Allocated with name '__rlulonglong_sloc0_1_0'
                             85 ;sloc1                     Allocated with name '__rlulonglong_sloc1_1_0'
                             86 ;------------------------------------------------------------
                             87 ;../_rlulonglong.c:35: unsigned long long _rlulonglong(unsigned long long l, signed char s)
                             88 ;	-----------------------------------------
                             89 ;	 function _rlulonglong
                             90 ;	-----------------------------------------
                             91 ;	Register assignment is optimal.
                             92 ;	Stack space usage: 0 bytes.
   0000                      93 __rlulonglong:
                             94 ;../_rlulonglong.c:37: uint32_t *const top = (uint32_t *)((char *)(&l) + 4);
                             95 ;../_rlulonglong.c:38: uint16_t *const middle = (uint16_t *)((char *)(&l) + 2);
                             96 ;../_rlulonglong.c:39: uint32_t *const bottom = (uint32_t *)(&l);
                             97 ;../_rlulonglong.c:40: uint16_t *const b = (uint16_t *)(&l);
                             98 ;../_rlulonglong.c:50: (*top) <<= s;
   0000 C6r00r08      [ 4]   99 	lda	__rlulonglong_PARM_2
   0003 87            [ 2]  100 	psha
   0004 8A            [ 2]  101 	pulh
   0005                     102 00103$:
                            103 ;../_rlulonglong.c:42: for(;s >= 16; s-= 16)
   0005 8B            [ 2]  104 	pshh
   0006 86            [ 2]  105 	pula
   0007 A1 10         [ 2]  106 	cmp	#0x10
   0009 91 33         [ 3]  107 	blt	00101$
                            108 ;../_rlulonglong.c:44: b[3] = b[2];
   000B C6r00r04      [ 4]  109 	lda	(__rlulonglong_PARM_1 + 0x0004)
   000E CEr00r05      [ 4]  110 	ldx	((__rlulonglong_PARM_1 + 0x0004) + 1)
   0011 C7r00r06      [ 4]  111 	sta	(__rlulonglong_PARM_1 + 0x0006)
   0014 CFr00r07      [ 4]  112 	stx	((__rlulonglong_PARM_1 + 0x0006) + 1)
                            113 ;../_rlulonglong.c:45: b[2] = b[1];
   0017 C6r00r02      [ 4]  114 	lda	(__rlulonglong_PARM_1 + 0x0002)
   001A CEr00r03      [ 4]  115 	ldx	((__rlulonglong_PARM_1 + 0x0002) + 1)
   001D C7r00r04      [ 4]  116 	sta	(__rlulonglong_PARM_1 + 0x0004)
   0020 CFr00r05      [ 4]  117 	stx	((__rlulonglong_PARM_1 + 0x0004) + 1)
                            118 ;../_rlulonglong.c:46: b[1] = b[0];
   0023 C6r00r00      [ 4]  119 	lda	__rlulonglong_PARM_1
   0026 CEr00r01      [ 4]  120 	ldx	(__rlulonglong_PARM_1 + 1)
   0029 C7r00r02      [ 4]  121 	sta	(__rlulonglong_PARM_1 + 0x0002)
   002C CFr00r03      [ 4]  122 	stx	((__rlulonglong_PARM_1 + 0x0002) + 1)
                            123 ;../_rlulonglong.c:47: b[0] = 0;
   002F 4F            [ 1]  124 	clra
   0030 C7r00r00      [ 4]  125 	sta	__rlulonglong_PARM_1
   0033 C7r00r01      [ 4]  126 	sta	(__rlulonglong_PARM_1 + 1)
                            127 ;../_rlulonglong.c:42: for(;s >= 16; s-= 16)
   0036 8B            [ 2]  128 	pshh
   0037 86            [ 2]  129 	pula
   0038 A0 10         [ 2]  130 	sub	#0x10
   003A 87            [ 2]  131 	psha
   003B 8A            [ 2]  132 	pulh
   003C 20 C7         [ 3]  133 	bra	00103$
   003E                     134 00101$:
                            135 ;../_rlulonglong.c:50: (*top) <<= s;
   003E C6r00r04      [ 4]  136 	lda	(__rlulonglong_PARM_1 + 0x0004)
   0041 B7*00         [ 3]  137 	sta	*__rlulonglong_sloc0_1_0
   0043 C6r00r05      [ 4]  138 	lda	((__rlulonglong_PARM_1 + 0x0004) + 1)
   0046 B7*01         [ 3]  139 	sta	*(__rlulonglong_sloc0_1_0 + 1)
   0048 C6r00r06      [ 4]  140 	lda	((__rlulonglong_PARM_1 + 0x0004) + 2)
   004B B7*02         [ 3]  141 	sta	*(__rlulonglong_sloc0_1_0 + 2)
   004D C6r00r07      [ 4]  142 	lda	((__rlulonglong_PARM_1 + 0x0004) + 3)
   0050 B7*03         [ 3]  143 	sta	*(__rlulonglong_sloc0_1_0 + 3)
   0052 8B            [ 2]  144 	pshh
   0053 88            [ 2]  145 	pulx
   0054 5D            [ 1]  146 	tstx
   0055 27 0A         [ 3]  147 	beq	00118$
   0057                     148 00117$:
   0057 38*03         [ 4]  149 	lsl	*(__rlulonglong_sloc0_1_0 + 3)
   0059 39*02         [ 4]  150 	rol	*(__rlulonglong_sloc0_1_0 + 2)
   005B 39*01         [ 4]  151 	rol	*(__rlulonglong_sloc0_1_0 + 1)
   005D 39*00         [ 4]  152 	rol	*__rlulonglong_sloc0_1_0
   005F 5B F6         [ 3]  153 	dbnzx	00117$
   0061                     154 00118$:
   0061 B6*00         [ 3]  155 	lda	*__rlulonglong_sloc0_1_0
   0063 C7r00r04      [ 4]  156 	sta	(__rlulonglong_PARM_1 + 0x0004)
   0066 B6*01         [ 3]  157 	lda	*(__rlulonglong_sloc0_1_0 + 1)
   0068 C7r00r05      [ 4]  158 	sta	((__rlulonglong_PARM_1 + 0x0004) + 1)
   006B B6*02         [ 3]  159 	lda	*(__rlulonglong_sloc0_1_0 + 2)
   006D C7r00r06      [ 4]  160 	sta	((__rlulonglong_PARM_1 + 0x0004) + 2)
   0070 B6*03         [ 3]  161 	lda	*(__rlulonglong_sloc0_1_0 + 3)
   0072 C7r00r07      [ 4]  162 	sta	((__rlulonglong_PARM_1 + 0x0004) + 3)
                            163 ;../_rlulonglong.c:51: (*top) |= (((uint32_t)((*middle) & 0xffffu) << s) >> 16);
   0075 CEr00r02      [ 4]  164 	ldx	(__rlulonglong_PARM_1 + 0x0002)
   0078 C6r00r03      [ 4]  165 	lda	((__rlulonglong_PARM_1 + 0x0002) + 1)
   007B B7*07         [ 3]  166 	sta	*(__rlulonglong_sloc1_1_0 + 3)
   007D BF*06         [ 3]  167 	stx	*(__rlulonglong_sloc1_1_0 + 2)
   007F 6E 00*05      [ 4]  168 	mov	#0x00,*(__rlulonglong_sloc1_1_0 + 1)
   0082 6E 00*04      [ 4]  169 	mov	#0x00,*__rlulonglong_sloc1_1_0
   0085 8B            [ 2]  170 	pshh
   0086 88            [ 2]  171 	pulx
   0087 5D            [ 1]  172 	tstx
   0088 27 0A         [ 3]  173 	beq	00120$
   008A                     174 00119$:
   008A 38*07         [ 4]  175 	lsl	*(__rlulonglong_sloc1_1_0 + 3)
   008C 39*06         [ 4]  176 	rol	*(__rlulonglong_sloc1_1_0 + 2)
   008E 39*05         [ 4]  177 	rol	*(__rlulonglong_sloc1_1_0 + 1)
   0090 39*04         [ 4]  178 	rol	*__rlulonglong_sloc1_1_0
   0092 5B F6         [ 3]  179 	dbnzx	00119$
   0094                     180 00120$:
   0094 B6*05         [ 3]  181 	lda	*(__rlulonglong_sloc1_1_0 + 1)
   0096 BE*04         [ 3]  182 	ldx	*__rlulonglong_sloc1_1_0
   0098 B7*07         [ 3]  183 	sta	*(__rlulonglong_sloc1_1_0 + 3)
   009A BF*06         [ 3]  184 	stx	*(__rlulonglong_sloc1_1_0 + 2)
   009C 6E 00*05      [ 4]  185 	mov	#0x00,*(__rlulonglong_sloc1_1_0 + 1)
   009F 6E 00*04      [ 4]  186 	mov	#0x00,*__rlulonglong_sloc1_1_0
   00A2 B6*03         [ 3]  187 	lda	*(__rlulonglong_sloc0_1_0 + 3)
   00A4 BA*07         [ 3]  188 	ora	*(__rlulonglong_sloc1_1_0 + 3)
   00A6 B7*07         [ 3]  189 	sta	*(__rlulonglong_sloc1_1_0 + 3)
   00A8 B6*02         [ 3]  190 	lda	*(__rlulonglong_sloc0_1_0 + 2)
   00AA BA*06         [ 3]  191 	ora	*(__rlulonglong_sloc1_1_0 + 2)
   00AC B7*06         [ 3]  192 	sta	*(__rlulonglong_sloc1_1_0 + 2)
   00AE B6*01         [ 3]  193 	lda	*(__rlulonglong_sloc0_1_0 + 1)
   00B0 BA*05         [ 3]  194 	ora	*(__rlulonglong_sloc1_1_0 + 1)
   00B2 B7*05         [ 3]  195 	sta	*(__rlulonglong_sloc1_1_0 + 1)
   00B4 B6*00         [ 3]  196 	lda	*__rlulonglong_sloc0_1_0
   00B6 BA*04         [ 3]  197 	ora	*__rlulonglong_sloc1_1_0
   00B8 B7*04         [ 3]  198 	sta	*__rlulonglong_sloc1_1_0
   00BA B6*04         [ 3]  199 	lda	*__rlulonglong_sloc1_1_0
   00BC C7r00r04      [ 4]  200 	sta	(__rlulonglong_PARM_1 + 0x0004)
   00BF B6*05         [ 3]  201 	lda	*(__rlulonglong_sloc1_1_0 + 1)
   00C1 C7r00r05      [ 4]  202 	sta	((__rlulonglong_PARM_1 + 0x0004) + 1)
   00C4 B6*06         [ 3]  203 	lda	*(__rlulonglong_sloc1_1_0 + 2)
   00C6 C7r00r06      [ 4]  204 	sta	((__rlulonglong_PARM_1 + 0x0004) + 2)
   00C9 B6*07         [ 3]  205 	lda	*(__rlulonglong_sloc1_1_0 + 3)
   00CB C7r00r07      [ 4]  206 	sta	((__rlulonglong_PARM_1 + 0x0004) + 3)
                            207 ;../_rlulonglong.c:52: (*bottom) <<= s;
   00CE C6r00r00      [ 4]  208 	lda	__rlulonglong_PARM_1
   00D1 B7*04         [ 3]  209 	sta	*__rlulonglong_sloc1_1_0
   00D3 C6r00r01      [ 4]  210 	lda	(__rlulonglong_PARM_1 + 1)
   00D6 B7*05         [ 3]  211 	sta	*(__rlulonglong_sloc1_1_0 + 1)
   00D8 C6r00r02      [ 4]  212 	lda	(__rlulonglong_PARM_1 + 2)
   00DB B7*06         [ 3]  213 	sta	*(__rlulonglong_sloc1_1_0 + 2)
   00DD C6r00r03      [ 4]  214 	lda	(__rlulonglong_PARM_1 + 3)
   00E0 B7*07         [ 3]  215 	sta	*(__rlulonglong_sloc1_1_0 + 3)
   00E2 8B            [ 2]  216 	pshh
   00E3 88            [ 2]  217 	pulx
   00E4 5D            [ 1]  218 	tstx
   00E5 27 0A         [ 3]  219 	beq	00122$
   00E7                     220 00121$:
   00E7 38*07         [ 4]  221 	lsl	*(__rlulonglong_sloc1_1_0 + 3)
   00E9 39*06         [ 4]  222 	rol	*(__rlulonglong_sloc1_1_0 + 2)
   00EB 39*05         [ 4]  223 	rol	*(__rlulonglong_sloc1_1_0 + 1)
   00ED 39*04         [ 4]  224 	rol	*__rlulonglong_sloc1_1_0
   00EF 5B F6         [ 3]  225 	dbnzx	00121$
   00F1                     226 00122$:
   00F1 B6*04         [ 3]  227 	lda	*__rlulonglong_sloc1_1_0
   00F3 C7r00r00      [ 4]  228 	sta	__rlulonglong_PARM_1
   00F6 B6*05         [ 3]  229 	lda	*(__rlulonglong_sloc1_1_0 + 1)
   00F8 C7r00r01      [ 4]  230 	sta	(__rlulonglong_PARM_1 + 1)
   00FB B6*06         [ 3]  231 	lda	*(__rlulonglong_sloc1_1_0 + 2)
   00FD C7r00r02      [ 4]  232 	sta	(__rlulonglong_PARM_1 + 2)
   0100 B6*07         [ 3]  233 	lda	*(__rlulonglong_sloc1_1_0 + 3)
   0102 C7r00r03      [ 4]  234 	sta	(__rlulonglong_PARM_1 + 3)
                            235 ;../_rlulonglong.c:54: return(l);
   0105 C6r00r00      [ 4]  236 	lda	__rlulonglong_PARM_1
   0108 B7*00         [ 3]  237 	sta	*___SDCC_hc08_ret7
   010A C6r00r01      [ 4]  238 	lda	(__rlulonglong_PARM_1 + 1)
   010D B7*00         [ 3]  239 	sta	*___SDCC_hc08_ret6
   010F C6r00r02      [ 4]  240 	lda	(__rlulonglong_PARM_1 + 2)
   0112 B7*00         [ 3]  241 	sta	*___SDCC_hc08_ret5
   0114 C6r00r03      [ 4]  242 	lda	(__rlulonglong_PARM_1 + 3)
   0117 B7*00         [ 3]  243 	sta	*___SDCC_hc08_ret4
   0119 C6r00r04      [ 4]  244 	lda	(__rlulonglong_PARM_1 + 4)
   011C B7*00         [ 3]  245 	sta	*___SDCC_hc08_ret3
   011E C6r00r05      [ 4]  246 	lda	(__rlulonglong_PARM_1 + 5)
   0121 B7*00         [ 3]  247 	sta	*___SDCC_hc08_ret2
   0123 CEr00r06      [ 4]  248 	ldx	(__rlulonglong_PARM_1 + 6)
   0126 C6r00r07      [ 4]  249 	lda	(__rlulonglong_PARM_1 + 7)
   0129 81            [ 4]  250 	rts
                            251 	.area CSEG    (CODE)
                            252 	.area CONST   (CODE)
                            253 	.area XINIT   (CODE)
                            254 	.area CABS    (ABS,CODE)
