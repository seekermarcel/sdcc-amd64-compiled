                                      1 ;--------------------------------------------------------
                                      2 ; File Created by SDCC : free open source ANSI-C Compiler
                                      3 ; Version 3.5.0 #9253 (Apr  4 2022) (Linux)
                                      4 ; This file was generated Mon Apr  4 14:10:41 2022
                                      5 ;--------------------------------------------------------
                                      6 	.module atol
                                      7 	.optsdcc -mmcs51 --model-small
                                      8 	
                                      9 ;--------------------------------------------------------
                                     10 ; Public variables in this module
                                     11 ;--------------------------------------------------------
                                     12 	.globl _atol
                                     13 ;--------------------------------------------------------
                                     14 ; special function registers
                                     15 ;--------------------------------------------------------
                                     16 	.area RSEG    (ABS,DATA)
      000000                         17 	.org 0x0000
                                     18 ;--------------------------------------------------------
                                     19 ; special function bits
                                     20 ;--------------------------------------------------------
                                     21 	.area RSEG    (ABS,DATA)
      000000                         22 	.org 0x0000
                                     23 ;--------------------------------------------------------
                                     24 ; overlayable register banks
                                     25 ;--------------------------------------------------------
                                     26 	.area REG_BANK_0	(REL,OVR,DATA)
      000000                         27 	.ds 8
                                     28 ;--------------------------------------------------------
                                     29 ; internal ram data
                                     30 ;--------------------------------------------------------
                                     31 	.area DSEG    (DATA)
      000000                         32 _atol_nptr_1_36:
      000000                         33 	.ds 3
      000003                         34 _atol_ret_1_37:
      000003                         35 	.ds 4
      000007                         36 _atol___00020002_3_39:
      000007                         37 	.ds 2
      000009                         38 _atol___00020005_3_42:
      000009                         39 	.ds 2
      00000B                         40 _atol_sloc0_1_0:
      00000B                         41 	.ds 4
                                     42 ;--------------------------------------------------------
                                     43 ; overlayable items in internal ram 
                                     44 ;--------------------------------------------------------
                                     45 ;--------------------------------------------------------
                                     46 ; indirectly addressable internal ram data
                                     47 ;--------------------------------------------------------
                                     48 	.area ISEG    (DATA)
                                     49 ;--------------------------------------------------------
                                     50 ; absolute internal ram data
                                     51 ;--------------------------------------------------------
                                     52 	.area IABS    (ABS,DATA)
                                     53 	.area IABS    (ABS,DATA)
                                     54 ;--------------------------------------------------------
                                     55 ; bit data
                                     56 ;--------------------------------------------------------
                                     57 	.area BSEG    (BIT)
      000000                         58 _atol_neg_1_37:
      000000                         59 	.ds 1
                                     60 ;--------------------------------------------------------
                                     61 ; paged external ram data
                                     62 ;--------------------------------------------------------
                                     63 	.area PSEG    (PAG,XDATA)
                                     64 ;--------------------------------------------------------
                                     65 ; external ram data
                                     66 ;--------------------------------------------------------
                                     67 	.area XSEG    (XDATA)
                                     68 ;--------------------------------------------------------
                                     69 ; absolute external ram data
                                     70 ;--------------------------------------------------------
                                     71 	.area XABS    (ABS,XDATA)
                                     72 ;--------------------------------------------------------
                                     73 ; external initialized ram data
                                     74 ;--------------------------------------------------------
                                     75 	.area XISEG   (XDATA)
                                     76 	.area HOME    (CODE)
                                     77 	.area GSINIT0 (CODE)
                                     78 	.area GSINIT1 (CODE)
                                     79 	.area GSINIT2 (CODE)
                                     80 	.area GSINIT3 (CODE)
                                     81 	.area GSINIT4 (CODE)
                                     82 	.area GSINIT5 (CODE)
                                     83 	.area GSINIT  (CODE)
                                     84 	.area GSFINAL (CODE)
                                     85 	.area CSEG    (CODE)
                                     86 ;--------------------------------------------------------
                                     87 ; global & static initialisations
                                     88 ;--------------------------------------------------------
                                     89 	.area HOME    (CODE)
                                     90 	.area GSINIT  (CODE)
                                     91 	.area GSFINAL (CODE)
                                     92 	.area GSINIT  (CODE)
                                     93 ;--------------------------------------------------------
                                     94 ; Home
                                     95 ;--------------------------------------------------------
                                     96 	.area HOME    (CODE)
                                     97 	.area HOME    (CODE)
                                     98 ;--------------------------------------------------------
                                     99 ; code
                                    100 ;--------------------------------------------------------
                                    101 	.area CSEG    (CODE)
                                    102 ;------------------------------------------------------------
                                    103 ;Allocation info for local variables in function 'atol'
                                    104 ;------------------------------------------------------------
                                    105 ;nptr                      Allocated with name '_atol_nptr_1_36'
                                    106 ;__00010004                Allocated to registers 
                                    107 ;__00010001                Allocated to registers 
                                    108 ;ret                       Allocated with name '_atol_ret_1_37'
                                    109 ;__00020002                Allocated with name '_atol___00020002_3_39'
                                    110 ;c                         Allocated to registers 
                                    111 ;__00020005                Allocated with name '_atol___00020005_3_42'
                                    112 ;c                         Allocated to registers 
                                    113 ;sloc0                     Allocated with name '_atol_sloc0_1_0'
                                    114 ;------------------------------------------------------------
                                    115 ;	atol.c:34: long int atol(const char *nptr)
                                    116 ;	-----------------------------------------
                                    117 ;	 function atol
                                    118 ;	-----------------------------------------
      000000                        119 _atol:
                           000007   120 	ar7 = 0x07
                           000006   121 	ar6 = 0x06
                           000005   122 	ar5 = 0x05
                           000004   123 	ar4 = 0x04
                           000003   124 	ar3 = 0x03
                           000002   125 	ar2 = 0x02
                           000001   126 	ar1 = 0x01
                           000000   127 	ar0 = 0x00
      000000 85 82*00         [24]  128 	mov	_atol_nptr_1_36,dpl
      000003 85 83*01         [24]  129 	mov	(_atol_nptr_1_36 + 1),dph
      000006 85 F0*02         [24]  130 	mov	(_atol_nptr_1_36 + 2),b
                                    131 ;	atol.c:36: long int ret = 0;
      000009 E4               [12]  132 	clr	a
      00000A F5*03            [12]  133 	mov	_atol_ret_1_37,a
      00000C F5*04            [12]  134 	mov	(_atol_ret_1_37 + 1),a
      00000E F5*05            [12]  135 	mov	(_atol_ret_1_37 + 2),a
      000010 F5*06            [12]  136 	mov	(_atol_ret_1_37 + 3),a
                                    137 ;	atol.c:39: while (isblank (*nptr))
      000012 A8*00            [24]  138 	mov	r0,_atol_nptr_1_36
      000014 AE*01            [24]  139 	mov	r6,(_atol_nptr_1_36 + 1)
      000016 AF*02            [24]  140 	mov	r7,(_atol_nptr_1_36 + 2)
      000018                        141 00101$:
      000018 88 82            [24]  142 	mov	dpl,r0
      00001A 8E 83            [24]  143 	mov	dph,r6
      00001C 8F F0            [24]  144 	mov	b,r7
      00001E 12r00r00         [24]  145 	lcall	__gptrget
      000021 FD               [12]  146 	mov	r5,a
      000022 8D*07            [24]  147 	mov	_atol___00020002_3_39,r5
      000024 33               [12]  148 	rlc	a
      000025 95 E0            [12]  149 	subb	a,acc
      000027 F5*08            [12]  150 	mov	(_atol___00020002_3_39 + 1),a
                                    151 ;	../../device/include/ctype.h:53: return ((unsigned char)c == ' ' || (unsigned char)c == '\t');
      000029 AD*07            [24]  152 	mov	r5,_atol___00020002_3_39
      00002B BD 20 02         [24]  153 	cjne	r5,#0x20,00147$
      00002E 80 03            [24]  154 	sjmp	00115$
      000030                        155 00147$:
      000030 BD 09 07         [24]  156 	cjne	r5,#0x09,00131$
      000033                        157 00115$:
                                    158 ;	atol.c:40: nptr++;
      000033 08               [12]  159 	inc	r0
      000034 B8 00 E1         [24]  160 	cjne	r0,#0x00,00101$
      000037 0E               [12]  161 	inc	r6
      000038 80 DE            [24]  162 	sjmp	00101$
      00003A                        163 00131$:
      00003A 88*00            [24]  164 	mov	_atol_nptr_1_36,r0
      00003C 8E*01            [24]  165 	mov	(_atol_nptr_1_36 + 1),r6
      00003E 8F*02            [24]  166 	mov	(_atol_nptr_1_36 + 2),r7
                                    167 ;	atol.c:42: neg = (*nptr == '-');
      000040 88 82            [24]  168 	mov	dpl,r0
      000042 8E 83            [24]  169 	mov	dph,r6
      000044 8F F0            [24]  170 	mov	b,r7
      000046 12r00r00         [24]  171 	lcall	__gptrget
      000049 FF               [12]  172 	mov	r7,a
      00004A BF 2D 03         [24]  173 	cjne	r7,#0x2D,00151$
      00004D D3               [12]  174 	setb	c
      00004E 80 01            [24]  175 	sjmp	00152$
      000050                        176 00151$:
      000050 C3               [12]  177 	clr	c
      000051                        178 00152$:
      000051 92*00            [24]  179 	mov	_atol_neg_1_37,c
                                    180 ;	atol.c:44: if (*nptr == '-' || *nptr == '+')
      000053 BF 2D 02         [24]  181 	cjne	r7,#0x2D,00153$
      000056 80 03            [24]  182 	sjmp	00104$
      000058                        183 00153$:
      000058 BF 2B 08         [24]  184 	cjne	r7,#0x2B,00129$
      00005B                        185 00104$:
                                    186 ;	atol.c:45: nptr++;
      00005B 05*00            [12]  187 	inc	_atol_nptr_1_36
      00005D E4               [12]  188 	clr	a
      00005E B5*00 02         [24]  189 	cjne	a,_atol_nptr_1_36,00156$
      000061 05*01            [12]  190 	inc	(_atol_nptr_1_36 + 1)
      000063                        191 00156$:
                                    192 ;	atol.c:47: while (isdigit (*nptr))
      000063                        193 00129$:
      000063 AD*00            [24]  194 	mov	r5,_atol_nptr_1_36
      000065 AE*01            [24]  195 	mov	r6,(_atol_nptr_1_36 + 1)
      000067 AF*02            [24]  196 	mov	r7,(_atol_nptr_1_36 + 2)
      000069                        197 00107$:
      000069 8D 82            [24]  198 	mov	dpl,r5
      00006B 8E 83            [24]  199 	mov	dph,r6
      00006D 8F F0            [24]  200 	mov	b,r7
      00006F 12r00r00         [24]  201 	lcall	__gptrget
      000072 F8               [12]  202 	mov	r0,a
      000073 88*09            [24]  203 	mov	_atol___00020005_3_42,r0
      000075 33               [12]  204 	rlc	a
      000076 95 E0            [12]  205 	subb	a,acc
      000078 F5*0A            [12]  206 	mov	(_atol___00020005_3_42 + 1),a
                                    207 ;	../../device/include/ctype.h:62: return ((unsigned char)c >= '0' && (unsigned char)c <= '9');
      00007A A8*09            [24]  208 	mov	r0,_atol___00020005_3_42
      00007C B8 30 00         [24]  209 	cjne	r0,#0x30,00157$
      00007F                        210 00157$:
      00007F 40 69            [24]  211 	jc	00109$
      000081 E8               [12]  212 	mov	a,r0
      000082 24 C6            [12]  213 	add	a,#0xff - 0x39
      000084 40 64            [24]  214 	jc	00109$
                                    215 ;	atol.c:48: ret = ret * 10 + (*(nptr++) - '0');
      000086 85*03*00         [24]  216 	mov	__mullong_PARM_2,_atol_ret_1_37
      000089 85*04*01         [24]  217 	mov	(__mullong_PARM_2 + 1),(_atol_ret_1_37 + 1)
      00008C 85*05*02         [24]  218 	mov	(__mullong_PARM_2 + 2),(_atol_ret_1_37 + 2)
      00008F 85*06*03         [24]  219 	mov	(__mullong_PARM_2 + 3),(_atol_ret_1_37 + 3)
      000092 90 00 0A         [24]  220 	mov	dptr,#(0x0A&0x00ff)
      000095 E4               [12]  221 	clr	a
      000096 F5 F0            [12]  222 	mov	b,a
      000098 C0 07            [24]  223 	push	ar7
      00009A C0 06            [24]  224 	push	ar6
      00009C C0 05            [24]  225 	push	ar5
      00009E 12r00r00         [24]  226 	lcall	__mullong
      0000A1 85 82*0B         [24]  227 	mov	_atol_sloc0_1_0,dpl
      0000A4 85 83*0C         [24]  228 	mov	(_atol_sloc0_1_0 + 1),dph
      0000A7 85 F0*0D         [24]  229 	mov	(_atol_sloc0_1_0 + 2),b
      0000AA F5*0E            [12]  230 	mov	(_atol_sloc0_1_0 + 3),a
      0000AC D0 05            [24]  231 	pop	ar5
      0000AE D0 06            [24]  232 	pop	ar6
      0000B0 D0 07            [24]  233 	pop	ar7
      0000B2 8D 82            [24]  234 	mov	dpl,r5
      0000B4 8E 83            [24]  235 	mov	dph,r6
      0000B6 8F F0            [24]  236 	mov	b,r7
      0000B8 12r00r00         [24]  237 	lcall	__gptrget
      0000BB F8               [12]  238 	mov	r0,a
      0000BC A3               [24]  239 	inc	dptr
      0000BD AD 82            [24]  240 	mov	r5,dpl
      0000BF AE 83            [24]  241 	mov	r6,dph
      0000C1 E8               [12]  242 	mov	a,r0
      0000C2 33               [12]  243 	rlc	a
      0000C3 95 E0            [12]  244 	subb	a,acc
      0000C5 FC               [12]  245 	mov	r4,a
      0000C6 E8               [12]  246 	mov	a,r0
      0000C7 24 D0            [12]  247 	add	a,#0xD0
      0000C9 F8               [12]  248 	mov	r0,a
      0000CA EC               [12]  249 	mov	a,r4
      0000CB 34 FF            [12]  250 	addc	a,#0xFF
      0000CD FC               [12]  251 	mov	r4,a
      0000CE 33               [12]  252 	rlc	a
      0000CF 95 E0            [12]  253 	subb	a,acc
      0000D1 FB               [12]  254 	mov	r3,a
      0000D2 FA               [12]  255 	mov	r2,a
      0000D3 E8               [12]  256 	mov	a,r0
      0000D4 25*0B            [12]  257 	add	a,_atol_sloc0_1_0
      0000D6 F5*03            [12]  258 	mov	_atol_ret_1_37,a
      0000D8 EC               [12]  259 	mov	a,r4
      0000D9 35*0C            [12]  260 	addc	a,(_atol_sloc0_1_0 + 1)
      0000DB F5*04            [12]  261 	mov	(_atol_ret_1_37 + 1),a
      0000DD EB               [12]  262 	mov	a,r3
      0000DE 35*0D            [12]  263 	addc	a,(_atol_sloc0_1_0 + 2)
      0000E0 F5*05            [12]  264 	mov	(_atol_ret_1_37 + 2),a
      0000E2 EA               [12]  265 	mov	a,r2
      0000E3 35*0E            [12]  266 	addc	a,(_atol_sloc0_1_0 + 3)
      0000E5 F5*06            [12]  267 	mov	(_atol_ret_1_37 + 3),a
      0000E7 02r00r69         [24]  268 	ljmp	00107$
      0000EA                        269 00109$:
                                    270 ;	atol.c:50: return (neg ? -ret : ret); // Since -LONG_MIN is LONG_MIN in sdcc, the result value always turns out ok.
      0000EA 30*00 13         [24]  271 	jnb	_atol_neg_1_37,00120$
      0000ED C3               [12]  272 	clr	c
      0000EE E4               [12]  273 	clr	a
      0000EF 95*03            [12]  274 	subb	a,_atol_ret_1_37
      0000F1 FC               [12]  275 	mov	r4,a
      0000F2 E4               [12]  276 	clr	a
      0000F3 95*04            [12]  277 	subb	a,(_atol_ret_1_37 + 1)
      0000F5 FD               [12]  278 	mov	r5,a
      0000F6 E4               [12]  279 	clr	a
      0000F7 95*05            [12]  280 	subb	a,(_atol_ret_1_37 + 2)
      0000F9 FE               [12]  281 	mov	r6,a
      0000FA E4               [12]  282 	clr	a
      0000FB 95*06            [12]  283 	subb	a,(_atol_ret_1_37 + 3)
      0000FD FF               [12]  284 	mov	r7,a
      0000FE 80 08            [24]  285 	sjmp	00121$
      000100                        286 00120$:
      000100 AC*03            [24]  287 	mov	r4,_atol_ret_1_37
      000102 AD*04            [24]  288 	mov	r5,(_atol_ret_1_37 + 1)
      000104 AE*05            [24]  289 	mov	r6,(_atol_ret_1_37 + 2)
      000106 AF*06            [24]  290 	mov	r7,(_atol_ret_1_37 + 3)
      000108                        291 00121$:
      000108 8C 82            [24]  292 	mov	dpl,r4
      00010A 8D 83            [24]  293 	mov	dph,r5
      00010C 8E F0            [24]  294 	mov	b,r6
      00010E EF               [12]  295 	mov	a,r7
      00010F 22               [24]  296 	ret
                                    297 	.area CSEG    (CODE)
                                    298 	.area CONST   (CODE)
                                    299 	.area XINIT   (CODE)
                                    300 	.area CABS    (ABS,CODE)
