                              1 ;--------------------------------------------------------
                              2 ; File Created by SDCC : free open source ANSI-C Compiler
                              3 ; Version 3.5.0 #9253 (Apr  4 2022) (Linux)
                              4 ; This file was generated Mon Apr  4 14:15:50 2022
                              5 ;--------------------------------------------------------
                              6 	.hd64
                              7 	.module puts
                              8 	.optsdcc -mz180
                              9 	
                             10 ;--------------------------------------------------------
                             11 ; Public variables in this module
                             12 ;--------------------------------------------------------
                             13 	.globl _puts
                             14 	.globl _putchar
                             15 ;--------------------------------------------------------
                             16 ; special function registers
                             17 ;--------------------------------------------------------
                             18 ;--------------------------------------------------------
                             19 ; ram data
                             20 ;--------------------------------------------------------
                             21 	.area _DATA
                             22 ;--------------------------------------------------------
                             23 ; ram data
                             24 ;--------------------------------------------------------
                             25 	.area _INITIALIZED
                             26 ;--------------------------------------------------------
                             27 ; absolute external ram data
                             28 ;--------------------------------------------------------
                             29 	.area _DABS (ABS)
                             30 ;--------------------------------------------------------
                             31 ; global & static initialisations
                             32 ;--------------------------------------------------------
                             33 	.area _HOME
                             34 	.area _GSINIT
                             35 	.area _GSFINAL
                             36 	.area _GSINIT
                             37 ;--------------------------------------------------------
                             38 ; Home
                             39 ;--------------------------------------------------------
                             40 	.area _HOME
                             41 	.area _HOME
                             42 ;--------------------------------------------------------
                             43 ; code
                             44 ;--------------------------------------------------------
                             45 	.area _CODE
                             46 ;../puts.c:31: int puts (char *s)
                             47 ;	---------------------------------
                             48 ; Function puts
                             49 ; ---------------------------------
   0000                      50 _puts::
   0000 DD E5         [14]   51 	push	ix
   0002 DD 21 00 00   [12]   52 	ld	ix,#0
   0006 DD 39         [10]   53 	add	ix,sp
                             54 ;../puts.c:34: while (*s){
   0008 DD 6E 04      [14]   55 	ld	l,4 (ix)
   000B DD 66 05      [14]   56 	ld	h,5 (ix)
   000E 11 00 00      [ 9]   57 	ld	de,#0x0000
   0011                      58 00101$:
   0011 46            [ 6]   59 	ld	b,(hl)
                             60 ;../puts.c:36: i++;
   0012 13            [ 4]   61 	inc	de
                             62 ;../puts.c:34: while (*s){
   0013 78            [ 4]   63 	ld	a,b
   0014 B7            [ 4]   64 	or	a, a
   0015 28 0D         [ 8]   65 	jr	Z,00103$
                             66 ;../puts.c:35: putchar(*s++);
   0017 23            [ 4]   67 	inc	hl
   0018 E5            [11]   68 	push	hl
   0019 D5            [11]   69 	push	de
   001A C5            [11]   70 	push	bc
   001B 33            [ 4]   71 	inc	sp
   001C CDr00r00      [16]   72 	call	_putchar
   001F 33            [ 4]   73 	inc	sp
   0020 D1            [ 9]   74 	pop	de
   0021 E1            [ 9]   75 	pop	hl
                             76 ;../puts.c:36: i++;
   0022 18 ED         [ 8]   77 	jr	00101$
   0024                      78 00103$:
                             79 ;../puts.c:38: putchar('\n');
   0024 D5            [11]   80 	push	de
   0025 3E 0A         [ 6]   81 	ld	a,#0x0A
   0027 F5            [11]   82 	push	af
   0028 33            [ 4]   83 	inc	sp
   0029 CDr00r00      [16]   84 	call	_putchar
   002C 33            [ 4]   85 	inc	sp
                             86 ;../puts.c:39: return i+1;
   002D E1            [ 9]   87 	pop	hl
   002E DD E1         [12]   88 	pop	ix
   0030 C9            [ 9]   89 	ret
                             90 	.area _CODE
                             91 	.area _INITIALIZER
                             92 	.area _CABS (ABS)
