                              1 ;--------------------------------------------------------
                              2 ; File Created by SDCC : free open source ANSI-C Compiler
                              3 ; Version 3.5.0 #9253 (Apr  4 2022) (Linux)
                              4 ; This file was generated Mon Apr  4 14:10:33 2022
                              5 ;--------------------------------------------------------
                              6 	.module rand
                              7 	.optsdcc -mhc08
                              8 	
                              9 	.area HOME    (CODE)
                             10 	.area GSINIT0 (CODE)
                             11 	.area GSINIT  (CODE)
                             12 	.area GSFINAL (CODE)
                             13 	.area CSEG    (CODE)
                             14 	.area XINIT   (CODE)
                             15 	.area CONST   (CODE)
                             16 	.area DSEG    (PAG)
                             17 	.area OSEG    (PAG, OVR)
                             18 	.area XSEG
                             19 	.area XISEG
                             20 ;--------------------------------------------------------
                             21 ; Public variables in this module
                             22 ;--------------------------------------------------------
                             23 	.globl _rand
                             24 	.globl _srand
                             25 ;--------------------------------------------------------
                             26 ; ram data
                             27 ;--------------------------------------------------------
                             28 	.area DSEG    (PAG)
   0000                      29 _rand_sloc0_1_0:
   0000                      30 	.ds 4
                             31 ;--------------------------------------------------------
                             32 ; overlayable items in ram 
                             33 ;--------------------------------------------------------
                             34 ;--------------------------------------------------------
                             35 ; absolute ram data
                             36 ;--------------------------------------------------------
                             37 	.area IABS    (ABS)
                             38 	.area IABS    (ABS)
                             39 ;--------------------------------------------------------
                             40 ; absolute external ram data
                             41 ;--------------------------------------------------------
                             42 	.area XABS    (ABS)
                             43 ;--------------------------------------------------------
                             44 ; external initialized ram data
                             45 ;--------------------------------------------------------
                             46 	.area XISEG
   0000                      47 _next:
   0000                      48 	.ds 4
                             49 ;--------------------------------------------------------
                             50 ; extended address mode data
                             51 ;--------------------------------------------------------
                             52 	.area XSEG
                             53 ;--------------------------------------------------------
                             54 ; global & static initialisations
                             55 ;--------------------------------------------------------
                             56 	.area HOME    (CODE)
                             57 	.area GSINIT  (CODE)
                             58 	.area GSFINAL (CODE)
                             59 	.area GSINIT  (CODE)
                             60 ;--------------------------------------------------------
                             61 ; Home
                             62 ;--------------------------------------------------------
                             63 	.area HOME    (CODE)
                             64 	.area HOME    (CODE)
                             65 ;--------------------------------------------------------
                             66 ; code
                             67 ;--------------------------------------------------------
                             68 	.area CSEG    (CODE)
                             69 ;------------------------------------------------------------
                             70 ;Allocation info for local variables in function 'rand'
                             71 ;------------------------------------------------------------
                             72 ;sloc0                     Allocated with name '_rand_sloc0_1_0'
                             73 ;------------------------------------------------------------
                             74 ;../rand.c:33: int rand(void)
                             75 ;	-----------------------------------------
                             76 ;	 function rand
                             77 ;	-----------------------------------------
                             78 ;	Register assignment is optimal.
                             79 ;	Stack space usage: 0 bytes.
   0000                      80 _rand:
                             81 ;../rand.c:35: next = next * 1103515245UL + 12345;
   0000 45r00r00      [ 3]   82 	ldhx	#__mullong_PARM_1
   0003 A6 41         [ 2]   83 	lda	#0x41
   0005 F7            [ 2]   84 	sta	,x
   0006 A6 C6         [ 2]   85 	lda	#0xC6
   0008 E7 01         [ 3]   86 	sta	1,x
   000A A6 4E         [ 2]   87 	lda	#0x4E
   000C E7 02         [ 3]   88 	sta	2,x
   000E A6 6D         [ 2]   89 	lda	#0x6D
   0010 E7 03         [ 3]   90 	sta	3,x
   0012 45r00r00      [ 3]   91 	ldhx	#__mullong_PARM_2
   0015 C6r00r00      [ 4]   92 	lda	_next
   0018 F7            [ 2]   93 	sta	,x
   0019 C6r00r01      [ 4]   94 	lda	(_next + 1)
   001C E7 01         [ 3]   95 	sta	1,x
   001E C6r00r02      [ 4]   96 	lda	(_next + 2)
   0021 E7 02         [ 3]   97 	sta	2,x
   0023 C6r00r03      [ 4]   98 	lda	(_next + 3)
   0026 E7 03         [ 3]   99 	sta	3,x
   0028 CDr00r00      [ 5]  100 	jsr	__mullong
   002B B7*03         [ 3]  101 	sta	*(_rand_sloc0_1_0 + 3)
   002D BF*02         [ 3]  102 	stx	*(_rand_sloc0_1_0 + 2)
   002F 4E*00*01      [ 5]  103 	mov	*___SDCC_hc08_ret2,*(_rand_sloc0_1_0 + 1)
   0032 4E*00*00      [ 5]  104 	mov	*___SDCC_hc08_ret3,*_rand_sloc0_1_0
   0035 45r00r00      [ 3]  105 	ldhx	#_next
   0038 B6*03         [ 3]  106 	lda	*(_rand_sloc0_1_0 + 3)
   003A AB 39         [ 2]  107 	add	#0x39
   003C E7 03         [ 3]  108 	sta	3,x
   003E B6*02         [ 3]  109 	lda	*(_rand_sloc0_1_0 + 2)
   0040 A9 30         [ 2]  110 	adc	#0x30
   0042 E7 02         [ 3]  111 	sta	2,x
   0044 B6*01         [ 3]  112 	lda	*(_rand_sloc0_1_0 + 1)
   0046 A9 00         [ 2]  113 	adc	#0x00
   0048 E7 01         [ 3]  114 	sta	1,x
   004A B6*00         [ 3]  115 	lda	*_rand_sloc0_1_0
   004C A9 00         [ 2]  116 	adc	#0x00
   004E F7            [ 2]  117 	sta	,x
                            118 ;../rand.c:36: return (unsigned int)(next/65536) % (RAND_MAX + 1U);
   004F C6r00r01      [ 4]  119 	lda	(_next + 1)
   0052 CEr00r00      [ 4]  120 	ldx	_next
   0055 B7*03         [ 3]  121 	sta	*(_rand_sloc0_1_0 + 3)
   0057 BF*02         [ 3]  122 	stx	*(_rand_sloc0_1_0 + 2)
   0059 6E 00*01      [ 4]  123 	mov	#0x00,*(_rand_sloc0_1_0 + 1)
   005C 6E 00*00      [ 4]  124 	mov	#0x00,*_rand_sloc0_1_0
   005F B6*03         [ 3]  125 	lda	*(_rand_sloc0_1_0 + 3)
   0061 BE*02         [ 3]  126 	ldx	*(_rand_sloc0_1_0 + 2)
   0063 87            [ 2]  127 	psha
   0064 9F            [ 1]  128 	txa
   0065 A4 7F         [ 2]  129 	and	#0x7F
   0067 97            [ 1]  130 	tax
   0068 86            [ 2]  131 	pula
   0069 81            [ 4]  132 	rts
                            133 ;------------------------------------------------------------
                            134 ;Allocation info for local variables in function 'srand'
                            135 ;------------------------------------------------------------
                            136 ;seed                      Allocated to registers x h 
                            137 ;------------------------------------------------------------
                            138 ;../rand.c:39: void srand(unsigned int seed)
                            139 ;	-----------------------------------------
                            140 ;	 function srand
                            141 ;	-----------------------------------------
                            142 ;	Register assignment is optimal.
                            143 ;	Stack space usage: 0 bytes.
   006A                     144 _srand:
   006A 89            [ 2]  145 	pshx
   006B 97            [ 1]  146 	tax
   006C 8A            [ 2]  147 	pulh
                            148 ;../rand.c:41: next = seed;
   006D CFr00r03      [ 4]  149 	stx	(_next + 3)
   0070 8B            [ 2]  150 	pshh
   0071 86            [ 2]  151 	pula
   0072 C7r00r02      [ 4]  152 	sta	(_next + 2)
   0075 4F            [ 1]  153 	clra
   0076 C7r00r01      [ 4]  154 	sta	(_next + 1)
   0079 C7r00r00      [ 4]  155 	sta	_next
   007C 81            [ 4]  156 	rts
                            157 	.area CSEG    (CODE)
                            158 	.area CONST   (CODE)
                            159 	.area XINIT   (CODE)
   0000                     160 __xinit__next:
   0000 00 00 00 01         161 	.byte #0x00,#0x00,#0x00,#0x01	; 1
                            162 	.area CABS    (ABS,CODE)
