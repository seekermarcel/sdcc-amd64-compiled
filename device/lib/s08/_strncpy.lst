                              1 ;--------------------------------------------------------
                              2 ; File Created by SDCC : free open source ANSI-C Compiler
                              3 ; Version 3.5.0 #9253 (Apr  4 2022) (Linux)
                              4 ; This file was generated Mon Apr  4 14:10:37 2022
                              5 ;--------------------------------------------------------
                              6 	.cs08
                              7 	.module _strncpy
                              8 	.optsdcc -ms08
                              9 	
                             10 	.area HOME    (CODE)
                             11 	.area GSINIT0 (CODE)
                             12 	.area GSINIT  (CODE)
                             13 	.area GSFINAL (CODE)
                             14 	.area CSEG    (CODE)
                             15 	.area XINIT   (CODE)
                             16 	.area CONST   (CODE)
                             17 	.area DSEG    (PAG)
                             18 	.area OSEG    (PAG, OVR)
                             19 	.area XSEG
                             20 	.area XISEG
                             21 ;--------------------------------------------------------
                             22 ; Public variables in this module
                             23 ;--------------------------------------------------------
                             24 	.globl _strncpy_PARM_3
                             25 	.globl _strncpy_PARM_2
                             26 	.globl _strncpy
                             27 ;--------------------------------------------------------
                             28 ; ram data
                             29 ;--------------------------------------------------------
                             30 	.area DSEG    (PAG)
                             31 ;--------------------------------------------------------
                             32 ; overlayable items in ram 
                             33 ;--------------------------------------------------------
                             34 	.area	OSEG    (PAG, OVR)
   0000                      35 _strncpy_sloc0_1_0:
   0000                      36 	.ds 2
   0002                      37 _strncpy_sloc1_1_0:
   0002                      38 	.ds 2
                             39 ;--------------------------------------------------------
                             40 ; absolute ram data
                             41 ;--------------------------------------------------------
                             42 	.area IABS    (ABS)
                             43 	.area IABS    (ABS)
                             44 ;--------------------------------------------------------
                             45 ; absolute external ram data
                             46 ;--------------------------------------------------------
                             47 	.area XABS    (ABS)
                             48 ;--------------------------------------------------------
                             49 ; external initialized ram data
                             50 ;--------------------------------------------------------
                             51 	.area XISEG
                             52 ;--------------------------------------------------------
                             53 ; extended address mode data
                             54 ;--------------------------------------------------------
                             55 	.area XSEG
   0000                      56 _strncpy_PARM_2:
   0000                      57 	.ds 2
   0002                      58 _strncpy_PARM_3:
   0002                      59 	.ds 2
   0004                      60 _strncpy_d_1_21:
   0004                      61 	.ds 2
   0006                      62 _strncpy_d1_1_22:
   0006                      63 	.ds 2
                             64 ;--------------------------------------------------------
                             65 ; global & static initialisations
                             66 ;--------------------------------------------------------
                             67 	.area HOME    (CODE)
                             68 	.area GSINIT  (CODE)
                             69 	.area GSFINAL (CODE)
                             70 	.area GSINIT  (CODE)
                             71 ;--------------------------------------------------------
                             72 ; Home
                             73 ;--------------------------------------------------------
                             74 	.area HOME    (CODE)
                             75 	.area HOME    (CODE)
                             76 ;--------------------------------------------------------
                             77 ; code
                             78 ;--------------------------------------------------------
                             79 	.area CSEG    (CODE)
                             80 ;------------------------------------------------------------
                             81 ;Allocation info for local variables in function 'strncpy'
                             82 ;------------------------------------------------------------
                             83 ;s                         Allocated with name '_strncpy_PARM_2'
                             84 ;n                         Allocated with name '_strncpy_PARM_3'
                             85 ;d                         Allocated with name '_strncpy_d_1_21'
                             86 ;d1                        Allocated with name '_strncpy_d1_1_22'
                             87 ;sloc0                     Allocated with name '_strncpy_sloc0_1_0'
                             88 ;sloc1                     Allocated with name '_strncpy_sloc1_1_0'
                             89 ;------------------------------------------------------------
                             90 ;../_strncpy.c:33: char *strncpy ( char * d, const char * s, size_t n )
                             91 ;	-----------------------------------------
                             92 ;	 function strncpy
                             93 ;	-----------------------------------------
                             94 ;	Register assignment is optimal.
                             95 ;	Stack space usage: 0 bytes.
   0000                      96 _strncpy:
   0000 C7r00r05      [ 4]   97 	sta	(_strncpy_d_1_21 + 1)
   0003 CFr00r04      [ 4]   98 	stx	_strncpy_d_1_21
                             99 ;../_strncpy.c:35: register char * d1 =  d;
   0006 32r00r04      [ 5]  100 	ldhx	_strncpy_d_1_21
   0009 96r00r06      [ 5]  101 	sthx	_strncpy_d1_1_22
                            102 ;../_strncpy.c:37: while ( n && *s )
   000C 32r00r02      [ 5]  103 	ldhx	_strncpy_PARM_3
   000F 35*00         [ 4]  104 	sthx	*_strncpy_sloc0_1_0
   0011 32r00r00      [ 5]  105 	ldhx	_strncpy_PARM_2
   0014 35*02         [ 4]  106 	sthx	*_strncpy_sloc1_1_0
   0016 32r00r04      [ 5]  107 	ldhx	_strncpy_d_1_21
   0019                     108 00102$:
   0019 B6*01         [ 3]  109 	lda	*(_strncpy_sloc0_1_0 + 1)
   001B BA*00         [ 3]  110 	ora	*_strncpy_sloc0_1_0
   001D 27 23         [ 3]  111 	beq	00114$
   001F 89            [ 2]  112 	pshx
   0020 8B            [ 2]  113 	pshh
   0021 55*02         [ 4]  114 	ldhx	*_strncpy_sloc1_1_0
   0023 F6            [ 3]  115 	lda	,x
   0024 8A            [ 3]  116 	pulh
   0025 88            [ 3]  117 	pulx
   0026 4D            [ 1]  118 	tsta
   0027 27 19         [ 3]  119 	beq	00114$
                            120 ;../_strncpy.c:39: n-- ;
   0029 89            [ 2]  121 	pshx
   002A 8B            [ 2]  122 	pshh
   002B 55*00         [ 4]  123 	ldhx	*_strncpy_sloc0_1_0
   002D AF FF         [ 2]  124 	aix	#-1
   002F 35*00         [ 4]  125 	sthx	*_strncpy_sloc0_1_0
   0031 8A            [ 3]  126 	pulh
   0032 88            [ 3]  127 	pulx
                            128 ;../_strncpy.c:40: *d++ = *s++ ;
   0033 89            [ 2]  129 	pshx
   0034 8B            [ 2]  130 	pshh
   0035 55*02         [ 4]  131 	ldhx	*_strncpy_sloc1_1_0
   0037 AF 01         [ 2]  132 	aix	#1
   0039 35*02         [ 4]  133 	sthx	*_strncpy_sloc1_1_0
   003B 8A            [ 3]  134 	pulh
   003C 88            [ 3]  135 	pulx
   003D F7            [ 2]  136 	sta	,x
   003E AF 01         [ 2]  137 	aix	#1
   0040 20 D7         [ 3]  138 	bra	00102$
                            139 ;../_strncpy.c:42: while ( n-- )
   0042                     140 00114$:
   0042 4E*00*02      [ 6]  141 	mov	*_strncpy_sloc0_1_0,*_strncpy_sloc1_1_0
   0045 4E*01*03      [ 6]  142 	mov	*(_strncpy_sloc0_1_0 + 1),*(_strncpy_sloc1_1_0 + 1)
   0048                     143 00105$:
   0048 4E*02*00      [ 6]  144 	mov	*_strncpy_sloc1_1_0,*_strncpy_sloc0_1_0
   004B 4E*03*01      [ 6]  145 	mov	*(_strncpy_sloc1_1_0 + 1),*(_strncpy_sloc0_1_0 + 1)
   004E 89            [ 2]  146 	pshx
   004F 8B            [ 2]  147 	pshh
   0050 55*02         [ 4]  148 	ldhx	*_strncpy_sloc1_1_0
   0052 AF FF         [ 2]  149 	aix	#-1
   0054 35*02         [ 4]  150 	sthx	*_strncpy_sloc1_1_0
   0056 8A            [ 3]  151 	pulh
   0057 88            [ 3]  152 	pulx
   0058 B6*01         [ 3]  153 	lda	*(_strncpy_sloc0_1_0 + 1)
   005A BA*00         [ 3]  154 	ora	*_strncpy_sloc0_1_0
   005C 27 06         [ 3]  155 	beq	00107$
                            156 ;../_strncpy.c:44: *d++ = '\0' ;
   005E 4F            [ 1]  157 	clra
   005F F7            [ 2]  158 	sta	,x
   0060 AF 01         [ 2]  159 	aix	#1
   0062 20 E4         [ 3]  160 	bra	00105$
   0064                     161 00107$:
                            162 ;../_strncpy.c:46: return d1;
   0064 CEr00r06      [ 4]  163 	ldx	_strncpy_d1_1_22
   0067 C6r00r07      [ 4]  164 	lda	(_strncpy_d1_1_22 + 1)
   006A 81            [ 6]  165 	rts
                            166 	.area CSEG    (CODE)
                            167 	.area CONST   (CODE)
                            168 	.area XINIT   (CODE)
                            169 	.area CABS    (ABS,CODE)
