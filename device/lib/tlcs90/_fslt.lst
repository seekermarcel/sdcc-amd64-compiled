                              1 ;--------------------------------------------------------
                              2 ; File Created by SDCC : free open source ANSI-C Compiler
                              3 ; Version 3.5.0 #9253 (Apr  4 2022) (Linux)
                              4 ; This file was generated Mon Apr  4 14:16:29 2022
                              5 ;--------------------------------------------------------
                              6 	.module _fslt
                              7 	.optsdcc -mtlcs90
                              8 	
                              9 ;--------------------------------------------------------
                             10 ; Public variables in this module
                             11 ;--------------------------------------------------------
                             12 	.globl ___fslt
                             13 ;--------------------------------------------------------
                             14 ; ram data
                             15 ;--------------------------------------------------------
                             16 	.area _DATA
                             17 ;--------------------------------------------------------
                             18 ; ram data
                             19 ;--------------------------------------------------------
                             20 	.area _INITIALIZED
                             21 ;--------------------------------------------------------
                             22 ; absolute external ram data
                             23 ;--------------------------------------------------------
                             24 	.area _DABS (ABS)
                             25 ;--------------------------------------------------------
                             26 ; global & static initialisations
                             27 ;--------------------------------------------------------
                             28 	.area _HOME
                             29 	.area _GSINIT
                             30 	.area _GSFINAL
                             31 	.area _GSINIT
                             32 ;--------------------------------------------------------
                             33 ; Home
                             34 ;--------------------------------------------------------
                             35 	.area _HOME
                             36 ;../_fslt.c:108: char __fslt (float a1, float a2)
                             37 ;	---------------------------------
                             38 ; Function __fslt
                             39 ; ---------------------------------
   0000                      40 ___fslt::
   0000 54            [ 4]   41 	push	ix
   0001 3C 00 00      [ 4]   42 	ld	ix,#0
   0004 FE 14         [ 7]   43 	add	ix,sp
   0006 16 F4 FF      [ 7]   44 	add	sp, #-12
                             45 ;../_fslt.c:112: fl1.f = a1;
   0009 3A 04 00      [13]   46 	ld	hl,#0x0004
   000C FE 70         [ 7]   47 	add	hl,sp
   000E 08            [ 4]   48 	ex	de,hl
   000F 3A 10 00      [13]   49 	ld	hl, #0x0010
   0012 FE 70         [ 7]   50 	add	hl, sp
   0014 38 04 00      [12]   51 	ld	bc, #0x0004
   0017 FE 59         [ 7]   52 	ldir
                             53 ;../_fslt.c:113: fl2.f = a2;
   0019 3A 00 00      [13]   54 	ld	hl,#0x0000
   001C FE 70         [ 7]   55 	add	hl,sp
   001E 08            [ 4]   56 	ex	de,hl
   001F 3A 14 00      [13]   57 	ld	hl, #0x0014
   0022 FE 70         [ 7]   58 	add	hl, sp
   0024 38 04 00      [12]   59 	ld	bc, #0x0004
   0027 FE 59         [ 7]   60 	ldir
                             61 ;../_fslt.c:115: if (((fl1.l | fl2.l) & 0x7FFFFFFF) == 0)
   0029 3A 04 00      [13]   62 	ld	hl,#0x0004
   002C FE 70         [ 7]   63 	add	hl,sp
   002E 08            [ 4]   64 	ex	de,hl
   002F 3A 08 00      [13]   65 	ld	hl, #0x0008
   0032 FE 70         [ 7]   66 	add	hl, sp
   0034 08            [ 4]   67 	ex	de, hl
   0035 38 04 00      [12]   68 	ld	bc, #0x0004
   0038 FE 59         [ 7]   69 	ldir
   003A 3A 00 00      [13]   70 	ld	hl,#0x0000
   003D FE 70         [ 7]   71 	add	hl,sp
   003F E2 2B         [10]   72 	ld	e,(hl)
   0041 92            [ 4]   73 	inc	hl
   0042 E2 2A         [10]   74 	ld	d,(hl)
   0044 92            [ 4]   75 	inc	hl
   0045 E2 29         [10]   76 	ld	c,(hl)
   0047 92            [ 4]   77 	inc	hl
   0048 E2 28         [10]   78 	ld	b,(hl)
   004A F0 FC 2E      [11]   79 	ld	a,-4 (ix)
   004D FB 66         [ 4]   80 	or	a, e
   004F 2B            [ 6]   81 	ld	e,a
   0050 F0 FD 2E      [11]   82 	ld	a,-3 (ix)
   0053 FA 66         [10]   83 	or	a, d
   0055 2A            [16]   84 	ld	d,a
   0056 F0 FE 2E      [11]   85 	ld	a,-2 (ix)
   0059 F9 66         [ 6]   86 	or	a, c
   005B 2D            [ 4]   87 	ld	l,a
   005C F0 FF 2E      [11]   88 	ld	a,-1 (ix)
   005F F8 66         [11]   89 	or	a, b
   0061 2C            [ 4]   90 	ld	h,a
   0062 23            [ 6]   91 	ld	a,e
   0063 FE 66         [ 7]   92 	or	a,a
   0065 CE 0F         [ 7]   93 	jr	NZ,00102$
   0067 FA 66         [10]   94 	or	a,d
   0069 CE 0B         [ 7]   95 	jr	NZ,00102$
   006B FE 67         [ 7]   96 	cp	a, a
   006D FA 71         [10]   97 	adc	hl, hl
   006F CE 05         [ 7]   98 	jr	NZ,00102$
                             99 ;../_fslt.c:116: return (0);
   0071 35 00         [11]  100 	ld	l,#0x00
   0073 1Ar30r01      [ 7]  101 	jp	00110$
   0076                     102 00102$:
                            103 ;../_fslt.c:118: if (fl1.l<0 && fl2.l<0) {
   0076 3A 04 00      [13]  104 	ld	hl,#0x0004
   0079 FE 70         [ 7]  105 	add	hl,sp
   007B E2 2A         [10]  106 	ld	d,(hl)
   007D 92            [ 4]  107 	inc	hl
   007E E2 2B         [10]  108 	ld	e,(hl)
   0080 92            [ 4]  109 	inc	hl
   0081 E2 29         [10]  110 	ld	c,(hl)
   0083 92            [ 4]  111 	inc	hl
   0084 E2 2C         [10]  112 	ld	h,(hl)
   0086 FC AF         [17]  113 	bit	7, h
   0088 EBrEBr00 C6   [ 4]  114 	jp	Z,00106$
   008C 3A 00 00      [13]  115 	ld	hl,#0x0000
   008F FE 70         [ 7]  116 	add	hl,sp
   0091 E2 2A         [10]  117 	ld	d,(hl)
   0093 92            [ 4]  118 	inc	hl
   0094 E2 2B         [10]  119 	ld	e,(hl)
   0096 92            [ 4]  120 	inc	hl
   0097 E2 29         [10]  121 	ld	c,(hl)
   0099 92            [ 4]  122 	inc	hl
   009A E2 2C         [10]  123 	ld	h,(hl)
   009C FC AF         [17]  124 	bit	7, h
   009E EBrEBr00 C6   [ 4]  125 	jp	Z,00106$
                            126 ;../_fslt.c:119: if (fl2.l < fl1.l)
   00A2 3A 00 00      [13]  127 	ld	hl,#0x0000
   00A5 FE 70         [ 7]  128 	add	hl,sp
   00A7 08            [ 4]  129 	ex	de,hl
   00A8 3A 08 00      [13]  130 	ld	hl, #0x0008
   00AB FE 70         [ 7]  131 	add	hl, sp
   00AD 08            [ 4]  132 	ex	de, hl
   00AE 38 04 00      [12]  133 	ld	bc, #0x0004
   00B1 FE 59         [ 7]  134 	ldir
   00B3 3A 04 00      [13]  135 	ld	hl,#0x0004
   00B6 FE 70         [ 7]  136 	add	hl,sp
   00B8 E2 2A         [10]  137 	ld	d,(hl)
   00BA 92            [ 4]  138 	inc	hl
   00BB E2 2B         [10]  139 	ld	e,(hl)
   00BD 92            [ 4]  140 	inc	hl
   00BE E2 29         [10]  141 	ld	c,(hl)
   00C0 92            [ 4]  142 	inc	hl
   00C1 E2 2C         [10]  143 	ld	h,(hl)
   00C3 F0 FC 2E      [11]  144 	ld	a,-4 (ix)
   00C6 FA 62         [10]  145 	sub	a, d
   00C8 F0 FD 2E      [11]  146 	ld	a,-3 (ix)
   00CB FB 63         [ 4]  147 	sbc	a, e
   00CD F0 FE 2E      [11]  148 	ld	a,-2 (ix)
   00D0 F9 63         [ 6]  149 	sbc	a, c
   00D2 F0 FF 2E      [11]  150 	ld	a,-1 (ix)
   00D5 FC 63         [17]  151 	sbc	a, h
   00D7 EBrDDr00 CC   [ 4]  152 	jp	PO, 00134$
   00DB 6D 80         [ 4]  153 	xor	a, #0x80
   00DD                     154 00134$:
   00DD EBrE6r00 CD   [ 4]  155 	jp	P,00104$
                            156 ;../_fslt.c:120: return (1);
   00E1 35 01         [11]  157 	ld	l,#0x01
   00E3 1Ar30r01      [ 7]  158 	jp	00110$
   00E6                     159 00104$:
                            160 ;../_fslt.c:121: return (0);
   00E6 35 00         [11]  161 	ld	l,#0x00
   00E8 1Ar30r01      [ 7]  162 	jp	00110$
   00EB                     163 00106$:
                            164 ;../_fslt.c:124: if (fl1.l < fl2.l)
   00EB 3A 04 00      [13]  165 	ld	hl,#0x0004
   00EE FE 70         [ 7]  166 	add	hl,sp
   00F0 08            [ 4]  167 	ex	de,hl
   00F1 3A 08 00      [13]  168 	ld	hl, #0x0008
   00F4 FE 70         [ 7]  169 	add	hl, sp
   00F6 08            [ 4]  170 	ex	de, hl
   00F7 38 04 00      [12]  171 	ld	bc, #0x0004
   00FA FE 59         [ 7]  172 	ldir
   00FC 3A 00 00      [13]  173 	ld	hl,#0x0000
   00FF FE 70         [ 7]  174 	add	hl,sp
   0101 E2 2A         [10]  175 	ld	d,(hl)
   0103 92            [ 4]  176 	inc	hl
   0104 E2 2B         [10]  177 	ld	e,(hl)
   0106 92            [ 4]  178 	inc	hl
   0107 E2 29         [10]  179 	ld	c,(hl)
   0109 92            [ 4]  180 	inc	hl
   010A E2 2C         [10]  181 	ld	h,(hl)
   010C F0 FC 2E      [11]  182 	ld	a,-4 (ix)
   010F FA 62         [10]  183 	sub	a, d
   0111 F0 FD 2E      [11]  184 	ld	a,-3 (ix)
   0114 FB 63         [ 4]  185 	sbc	a, e
   0116 F0 FE 2E      [11]  186 	ld	a,-2 (ix)
   0119 F9 63         [ 6]  187 	sbc	a, c
   011B F0 FF 2E      [11]  188 	ld	a,-1 (ix)
   011E FC 63         [17]  189 	sbc	a, h
   0120 EBr26r01 CC   [ 4]  190 	jp	PO, 00135$
   0124 6D 80         [ 4]  191 	xor	a, #0x80
   0126                     192 00135$:
   0126 EBr2Er01 CD   [ 4]  193 	jp	P,00109$
                            194 ;../_fslt.c:125: return (1);
   012A 35 01         [11]  195 	ld	l,#0x01
   012C C8 02         [11]  196 	jr	00110$
   012E                     197 00109$:
                            198 ;../_fslt.c:126: return (0);
   012E 35 00         [11]  199 	ld	l,#0x00
   0130                     200 00110$:
   0130 FC 3E         [17]  201 	ld	sp, ix
   0132 5C            [ 4]  202 	pop	ix
   0133 1E            [ 7]  203 	ret
                            204 	.area _HOME
                            205 ;--------------------------------------------------------
                            206 ; code
                            207 ;--------------------------------------------------------
                            208 	.area _CODE
                            209 	.area _CODE
                            210 	.area _INITIALIZER
                            211 	.area _CABS (ABS)
