                              1 ;--------------------------------------------------------
                              2 ; File Created by SDCC : free open source ANSI-C Compiler
                              3 ; Version 3.5.0 #9253 (Apr  4 2022) (Linux)
                              4 ; This file was generated Mon Apr  4 14:10:32 2022
                              5 ;--------------------------------------------------------
                              6 	.module modff
                              7 	.optsdcc -mhc08
                              8 	
                              9 	.area HOME    (CODE)
                             10 	.area GSINIT0 (CODE)
                             11 	.area GSINIT  (CODE)
                             12 	.area GSFINAL (CODE)
                             13 	.area CSEG    (CODE)
                             14 	.area XINIT   (CODE)
                             15 	.area CONST   (CODE)
                             16 	.area DSEG    (PAG)
                             17 	.area OSEG    (PAG, OVR)
                             18 	.area XSEG
                             19 	.area XISEG
                             20 ;--------------------------------------------------------
                             21 ; Public variables in this module
                             22 ;--------------------------------------------------------
                             23 	.globl _modff_PARM_2
                             24 	.globl _modff_PARM_1
                             25 	.globl _modff
                             26 ;--------------------------------------------------------
                             27 ; ram data
                             28 ;--------------------------------------------------------
                             29 	.area DSEG    (PAG)
   0000                      30 _modff_sloc0_1_0:
   0000                      31 	.ds 4
                             32 ;--------------------------------------------------------
                             33 ; overlayable items in ram 
                             34 ;--------------------------------------------------------
                             35 ;--------------------------------------------------------
                             36 ; absolute ram data
                             37 ;--------------------------------------------------------
                             38 	.area IABS    (ABS)
                             39 	.area IABS    (ABS)
                             40 ;--------------------------------------------------------
                             41 ; absolute external ram data
                             42 ;--------------------------------------------------------
                             43 	.area XABS    (ABS)
                             44 ;--------------------------------------------------------
                             45 ; external initialized ram data
                             46 ;--------------------------------------------------------
                             47 	.area XISEG
                             48 ;--------------------------------------------------------
                             49 ; extended address mode data
                             50 ;--------------------------------------------------------
                             51 	.area XSEG
   0000                      52 _modff_PARM_1:
   0000                      53 	.ds 4
   0004                      54 _modff_PARM_2:
   0004                      55 	.ds 2
                             56 ;--------------------------------------------------------
                             57 ; global & static initialisations
                             58 ;--------------------------------------------------------
                             59 	.area HOME    (CODE)
                             60 	.area GSINIT  (CODE)
                             61 	.area GSFINAL (CODE)
                             62 	.area GSINIT  (CODE)
                             63 ;--------------------------------------------------------
                             64 ; Home
                             65 ;--------------------------------------------------------
                             66 	.area HOME    (CODE)
                             67 	.area HOME    (CODE)
                             68 ;--------------------------------------------------------
                             69 ; code
                             70 ;--------------------------------------------------------
                             71 	.area CSEG    (CODE)
                             72 ;------------------------------------------------------------
                             73 ;Allocation info for local variables in function 'modff'
                             74 ;------------------------------------------------------------
                             75 ;sloc0                     Allocated with name '_modff_sloc0_1_0'
                             76 ;x                         Allocated with name '_modff_PARM_1'
                             77 ;y                         Allocated with name '_modff_PARM_2'
                             78 ;------------------------------------------------------------
                             79 ;../modff.c:33: float modff(float x, float * y)
                             80 ;	-----------------------------------------
                             81 ;	 function modff
                             82 ;	-----------------------------------------
                             83 ;	Register assignment is optimal.
                             84 ;	Stack space usage: 0 bytes.
   0000                      85 _modff:
                             86 ;../modff.c:35: *y=(long)x;
   0000 C6r00r04      [ 4]   87 	lda	_modff_PARM_2
   0003 87            [ 2]   88 	psha
   0004 8A            [ 2]   89 	pulh
   0005 CEr00r05      [ 4]   90 	ldx	(_modff_PARM_2 + 1)
   0008 C6r00r00      [ 4]   91 	lda	_modff_PARM_1
   000B C7r00r00      [ 4]   92 	sta	___fs2slong_PARM_1
   000E C6r00r01      [ 4]   93 	lda	(_modff_PARM_1 + 1)
   0011 C7r00r01      [ 4]   94 	sta	(___fs2slong_PARM_1 + 1)
   0014 C6r00r02      [ 4]   95 	lda	(_modff_PARM_1 + 2)
   0017 C7r00r02      [ 4]   96 	sta	(___fs2slong_PARM_1 + 2)
   001A C6r00r03      [ 4]   97 	lda	(_modff_PARM_1 + 3)
   001D C7r00r03      [ 4]   98 	sta	(___fs2slong_PARM_1 + 3)
   0020 89            [ 2]   99 	pshx
   0021 8B            [ 2]  100 	pshh
   0022 CDr00r00      [ 5]  101 	jsr	___fs2slong
   0025 C7r00r03      [ 4]  102 	sta	(___slong2fs_PARM_1 + 3)
   0028 CFr00r02      [ 4]  103 	stx	(___slong2fs_PARM_1 + 2)
   002B B6*00         [ 3]  104 	lda	*___SDCC_hc08_ret2
   002D C7r00r01      [ 4]  105 	sta	(___slong2fs_PARM_1 + 1)
   0030 B6*00         [ 3]  106 	lda	*___SDCC_hc08_ret3
   0032 C7r00r00      [ 4]  107 	sta	___slong2fs_PARM_1
   0035 8A            [ 2]  108 	pulh
   0036 88            [ 2]  109 	pulx
   0037 89            [ 2]  110 	pshx
   0038 8B            [ 2]  111 	pshh
   0039 CDr00r00      [ 5]  112 	jsr	___slong2fs
   003C B7*03         [ 3]  113 	sta	*(_modff_sloc0_1_0 + 3)
   003E BF*02         [ 3]  114 	stx	*(_modff_sloc0_1_0 + 2)
   0040 4E*00*01      [ 5]  115 	mov	*___SDCC_hc08_ret2,*(_modff_sloc0_1_0 + 1)
   0043 4E*00*00      [ 5]  116 	mov	*___SDCC_hc08_ret3,*_modff_sloc0_1_0
   0046 8A            [ 2]  117 	pulh
   0047 88            [ 2]  118 	pulx
   0048 B6*00         [ 3]  119 	lda	*_modff_sloc0_1_0
   004A F7            [ 2]  120 	sta	,x
   004B B6*01         [ 3]  121 	lda	*(_modff_sloc0_1_0 + 1)
   004D E7 01         [ 3]  122 	sta	1,x
   004F B6*02         [ 3]  123 	lda	*(_modff_sloc0_1_0 + 2)
   0051 E7 02         [ 3]  124 	sta	2,x
   0053 B6*03         [ 3]  125 	lda	*(_modff_sloc0_1_0 + 3)
   0055 E7 03         [ 3]  126 	sta	3,x
                            127 ;../modff.c:36: return (x-*y);
   0057 45r00r00      [ 3]  128 	ldhx	#___fssub_PARM_1
   005A C6r00r00      [ 4]  129 	lda	_modff_PARM_1
   005D F7            [ 2]  130 	sta	,x
   005E C6r00r01      [ 4]  131 	lda	(_modff_PARM_1 + 1)
   0061 E7 01         [ 3]  132 	sta	1,x
   0063 C6r00r02      [ 4]  133 	lda	(_modff_PARM_1 + 2)
   0066 E7 02         [ 3]  134 	sta	2,x
   0068 C6r00r03      [ 4]  135 	lda	(_modff_PARM_1 + 3)
   006B E7 03         [ 3]  136 	sta	3,x
   006D 45r00r00      [ 3]  137 	ldhx	#___fssub_PARM_2
   0070 5E*00         [ 4]  138 	mov	*_modff_sloc0_1_0,x+
   0072 5E*01         [ 4]  139 	mov	*(_modff_sloc0_1_0 + 1),x+
   0074 5E*02         [ 4]  140 	mov	*(_modff_sloc0_1_0 + 2),x+
   0076 5E*03         [ 4]  141 	mov	*(_modff_sloc0_1_0 + 3),x+
   0078 CDr00r00      [ 5]  142 	jsr	___fssub
   007B B7*03         [ 3]  143 	sta	*(_modff_sloc0_1_0 + 3)
   007D BF*02         [ 3]  144 	stx	*(_modff_sloc0_1_0 + 2)
   007F 4E*00*01      [ 5]  145 	mov	*___SDCC_hc08_ret2,*(_modff_sloc0_1_0 + 1)
   0082 4E*00*00      [ 5]  146 	mov	*___SDCC_hc08_ret3,*_modff_sloc0_1_0
   0085 4E*00*00      [ 5]  147 	mov	*_modff_sloc0_1_0,*___SDCC_hc08_ret3
   0088 4E*01*00      [ 5]  148 	mov	*(_modff_sloc0_1_0 + 1),*___SDCC_hc08_ret2
   008B BE*02         [ 3]  149 	ldx	*(_modff_sloc0_1_0 + 2)
   008D B6*03         [ 3]  150 	lda	*(_modff_sloc0_1_0 + 3)
   008F 81            [ 4]  151 	rts
                            152 	.area CSEG    (CODE)
                            153 	.area CONST   (CODE)
                            154 	.area XINIT   (CODE)
                            155 	.area CABS    (ABS,CODE)
