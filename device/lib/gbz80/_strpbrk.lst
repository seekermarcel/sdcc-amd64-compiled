                              1 ;--------------------------------------------------------
                              2 ; File Created by SDCC : free open source ANSI-C Compiler
                              3 ; Version 3.5.0 #9253 (Apr  4 2022) (Linux)
                              4 ; This file was generated Mon Apr  4 14:16:48 2022
                              5 ;--------------------------------------------------------
                              6 	.module _strpbrk
                              7 	.optsdcc -mgbz80
                              8 	
                              9 ;--------------------------------------------------------
                             10 ; Public variables in this module
                             11 ;--------------------------------------------------------
                             12 	.globl _strchr
                             13 	.globl _strpbrk
                             14 ;--------------------------------------------------------
                             15 ; ram data
                             16 ;--------------------------------------------------------
                             17 	.area _DATA
                             18 ;--------------------------------------------------------
                             19 ; absolute external ram data
                             20 ;--------------------------------------------------------
                             21 	.area _DABS (ABS)
                             22 ;--------------------------------------------------------
                             23 ; global & static initialisations
                             24 ;--------------------------------------------------------
                             25 	.area _HOME
                             26 	.area _GSINIT
                             27 	.area _GSFINAL
                             28 	.area _GSINIT
                             29 ;--------------------------------------------------------
                             30 ; Home
                             31 ;--------------------------------------------------------
                             32 	.area _HOME
                             33 	.area _HOME
                             34 ;--------------------------------------------------------
                             35 ; code
                             36 ;--------------------------------------------------------
                             37 	.area _CODE
                             38 ;../_strpbrk.c:31: char * strpbrk ( const char * string, const char * control )
                             39 ;	---------------------------------
                             40 ; Function strpbrk
                             41 ; ---------------------------------
   0000                      42 _strpbrk::
   0000 E8 FC                43 	add	sp, #-4
                             44 ;../_strpbrk.c:33: char *ret = NULL;
   0002 F8 02                45 	ldhl	sp,#2
   0004 36 00                46 	ld	(hl),#0x00
   0006 23                   47 	inc	hl
   0007 36 00                48 	ld	(hl),#0x00
                             49 ;../_strpbrk.c:36: while (ch = *control) {
   0009 F8 09                50 	ldhl	sp,#9
   000B 2B                   51 	dec	hl
   000C 4E                   52 	ld	c,(hl)
   000D 23                   53 	inc	hl
   000E 46                   54 	ld	b,(hl)
   000F                      55 00105$:
   000F 0A                   56 	ld	a,(bc)
   0010 5F                   57 	ld	e,a
   0011 B7                   58 	or	a, a
   0012 CAr4Fr00             59 	jp	Z,00107$
                             60 ;../_strpbrk.c:37: char * p = strchr(string, ch);
   0015 7B                   61 	ld	a,e
   0016 17                   62 	rla
   0017 9F                   63 	sbc	a, a
   0018 57                   64 	ld	d,a
   0019 C5                   65 	push	bc
   001A D5                   66 	push	de
   001B F8 0A                67 	ldhl	sp,#10
   001D 2A                   68 	ld	a,(hl+)
   001E 66                   69 	ld	h,(hl)
   001F 6F                   70 	ld	l,a
   0020 E5                   71 	push	hl
   0021 CDr00r00             72 	call	_strchr
   0024 E8 04                73 	add	sp, #4
   0026 C1                   74 	pop	bc
   0027 33                   75 	inc	sp
   0028 33                   76 	inc	sp
   0029 D5                   77 	push	de
                             78 ;../_strpbrk.c:38: if (p != NULL && (ret == NULL || p < ret)) {
   002A F8 01                79 	ldhl	sp,#1
   002C 3A                   80 	ld	a,(hl-)
   002D B6                   81 	or	a,(hl)
   002E 28 1B                82 	jr	Z,00102$
   0030 F8 03                83 	ldhl	sp,#3
   0032 3A                   84 	ld	a,(hl-)
   0033 B6                   85 	or	a,(hl)
   0034 28 0E                86 	jr	Z,00101$
   0036 2B                   87 	dec	hl
   0037 2B                   88 	dec	hl
   0038 54                   89 	ld	d, h
   0039 5D                   90 	ld	e, l
   003A 23                   91 	inc	hl
   003B 23                   92 	inc	hl
   003C 1A                   93 	ld	a, (de)
   003D 96                   94 	sub	a, (hl)
   003E 23                   95 	inc	hl
   003F 13                   96 	inc	de
   0040 1A                   97 	ld	a, (de)
   0041 9E                   98 	sbc	a, (hl)
   0042 30 07                99 	jr	NC,00102$
   0044                     100 00101$:
                            101 ;../_strpbrk.c:39: ret = p;
   0044 F8 00               102 	ldhl	sp,#0
   0046 2A                  103 	ld	a,(hl+)
   0047 5E                  104 	ld	e, (hl)
   0048 23                  105 	inc	hl
   0049 22                  106 	ld	(hl+),a
   004A 73                  107 	ld	(hl),e
   004B                     108 00102$:
                            109 ;../_strpbrk.c:41: control++;
   004B 03                  110 	inc	bc
   004C C3r0Fr00            111 	jp	00105$
   004F                     112 00107$:
                            113 ;../_strpbrk.c:44: return (ret);
   004F C1                  114 	pop	bc
   0050 D1                  115 	pop	de
   0051 D5                  116 	push	de
   0052 C5                  117 	push	bc
   0053 E8 04               118 	add	sp, #4
   0055 C9                  119 	ret
                            120 	.area _CODE
                            121 	.area _CABS (ABS)
