                                      1 ;--------------------------------------------------------
                                      2 ; File Created by SDCC : free open source ANSI-C Compiler
                                      3 ; Version 3.5.0 #9253 (Apr  4 2022) (Linux)
                                      4 ; This file was generated Mon Apr  4 14:10:29 2022
                                      5 ;--------------------------------------------------------
                                      6 	.module _modsint
                                      7 	.optsdcc -mds400 --model-flat24
                                      8 	
                                      9 ;--------------------------------------------------------
                                     10 ; CPU specific extensions
                                     11 ;--------------------------------------------------------
                                     12 	.DS80C390
                                     13 	.amode	2	; 24 bit flat addressing
                           000082    14 dpl	=	0x82
                           000083    15 dph	=	0x83
                           000084    16 dpl1	=	0x84
                           000085    17 dph1	=	0x85
                           000086    18 dps	=	0x86
                           000093    19 dpx	=	0x93
                           000095    20 dpx1	=	0x95
                           00009B    21 esp	=	0x9B
                           00009C    22 ap	=	0x9C
                           00009C    23 acc1	=	0x9C
                           0000D1    24 mcnt0	=	0xD1
                           0000D2    25 mcnt1	=	0xD2
                           0000D3    26 ma	=	0xD3
                           0000D4    27 mb	=	0xD4
                           0000D5    28 mc	=	0xD5
                           00009D    29 acon	=	0x9D
                           0000D1    30 F1	=	0xD1	; user flag
                                     31 ;--------------------------------------------------------
                                     32 ; Public variables in this module
                                     33 ;--------------------------------------------------------
                                     34 	.globl __modsint_PARM_2
                                     35 	.globl __modsint
                                     36 ;--------------------------------------------------------
                                     37 ; special function registers
                                     38 ;--------------------------------------------------------
                                     39 ;--------------------------------------------------------
                                     40 ; special function bits
                                     41 ;--------------------------------------------------------
                                     42 ;--------------------------------------------------------
                                     43 ; overlayable register banks
                                     44 ;--------------------------------------------------------
                                     45 	.area REG_BANK_0	(REL,OVR,DATA)
      000000                         46 	.ds 8
                                     47 	.area REG_BANK_3	(REL,OVR,DATA)
      000000                         48 	.ds 8
                                     49 ;--------------------------------------------------------
                                     50 ; internal ram data
                                     51 ;--------------------------------------------------------
                                     52 	.area DSEG    (DATA)
                                     53 ;--------------------------------------------------------
                                     54 ; overlayable items in internal ram 
                                     55 ;--------------------------------------------------------
                                     56 ;--------------------------------------------------------
                                     57 ; indirectly addressable internal ram data
                                     58 ;--------------------------------------------------------
                                     59 	.area ISEG    (DATA)
                                     60 ;--------------------------------------------------------
                                     61 ; absolute internal ram data
                                     62 ;--------------------------------------------------------
                                     63 	.area IABS    (ABS,DATA)
                                     64 	.area IABS    (ABS,DATA)
                                     65 ;--------------------------------------------------------
                                     66 ; bit data
                                     67 ;--------------------------------------------------------
                                     68 	.area BSEG    (BIT)
                                     69 ;--------------------------------------------------------
                                     70 ; paged external ram data
                                     71 ;--------------------------------------------------------
                                     72 	.area PSEG    (PAG,XDATA)
                                     73 ;--------------------------------------------------------
                                     74 ; external ram data
                                     75 ;--------------------------------------------------------
                                     76 	.area XSEG    (XDATA)
      000000                         77 __modsint_PARM_2:
      000000                         78 	.ds 2
                                     79 ;--------------------------------------------------------
                                     80 ; absolute external ram data
                                     81 ;--------------------------------------------------------
                                     82 	.area XABS    (ABS,XDATA)
                                     83 ;--------------------------------------------------------
                                     84 ; external initialized ram data
                                     85 ;--------------------------------------------------------
                                     86 	.area XISEG   (XDATA)
                                     87 ;--------------------------------------------------------
                                     88 ; global & static initialisations
                                     89 ;--------------------------------------------------------
                                     90 	.area HOME    (CODE)
                                     91 	.area GSINIT  (CODE)
                                     92 	.area GSFINAL (CODE)
                                     93 	.area GSINIT  (CODE)
                                     94 ;--------------------------------------------------------
                                     95 ; Home
                                     96 ;--------------------------------------------------------
                                     97 	.area HOME    (CODE)
                                     98 	.area HOME    (CODE)
                                     99 ;--------------------------------------------------------
                                    100 ; code
                                    101 ;--------------------------------------------------------
                                    102 	.area CSEG    (CODE)
                                    103 ;------------------------------------------------------------
                                    104 ;Allocation info for local variables in function '_modsint'
                                    105 ;------------------------------------------------------------
                                    106 ;r                         Allocated to registers r2 r3 
                                    107 ;b                         Allocated with name '__modsint_PARM_2'
                                    108 ;a                         Allocated to registers r2 r3 
                                    109 ;------------------------------------------------------------
                                    110 ;	_modsint.c:203: int _modsint (int a, int b)
                                    111 ;	-----------------------------------------
                                    112 ;	 function _modsint
                                    113 ;	-----------------------------------------
      000000                        114 __modsint:
                           000002   115 	ar2 = 0x02
                           000003   116 	ar3 = 0x03
                           000004   117 	ar4 = 0x04
                           000005   118 	ar5 = 0x05
                           000006   119 	ar6 = 0x06
                           000007   120 	ar7 = 0x07
                           000000   121 	ar0 = 0x00
                           000001   122 	ar1 = 0x01
                                    123 ;	_modsint.c:207: r = (unsigned)(a < 0 ? -a : a) % (unsigned)(b < 0 ? -b : b);
      000000 E5 83            [ 8]  124 	mov	a,dph
      000002 33               [ 4]  125 	rlc	a
      000003 E4               [ 4]  126 	clr	a
      000004 33               [ 4]  127 	rlc	a
      000005 FC               [ 4]  128 	mov  r4,a
      000006 60 0B            [12]  129 	jz  00106$
      000008                        130 00119$:
      000008 C3               [ 4]  131 	clr	c
      000009 E4               [ 4]  132 	clr	a
      00000A 95 82            [ 8]  133 	subb	a,dpl
      00000C FD               [ 4]  134 	mov	r5,a
      00000D E4               [ 4]  135 	clr	a
      00000E 95 83            [ 8]  136 	subb	a,dph
      000010 FE               [ 4]  137 	mov	r6,a
      000011 80 04            [12]  138 	sjmp 00107$
      000013                        139 00106$:
                                    140 ;	genAssign: resultIsFar = FALSE
      000013 AD 82            [ 8]  141 	mov	r5,dpl
      000015 AE 83            [ 8]  142 	mov	r6,dph
      000017                        143 00107$:
      000017 8D 02            [ 8]  144 	mov	ar2,r5
      000019 8E 03            [ 8]  145 	mov	ar3,r6
      00001B 90s00r00r00      [12]  146 	mov	dptr,#__modsint_PARM_2
      00001F A3               [12]  147 	inc	dptr
      000020 E0               [ 8]  148 	movx	a,@dptr
      000021 30 E7 12         [12]  149 	jnb  acc[7],00108$
      000024                        150 00120$:
      000024 90s00r00r00      [12]  151 	mov	dptr,#__modsint_PARM_2
      000028 E0               [ 8]  152 	movx	a,@dptr
      000029 D3               [ 4]  153 	setb	c
      00002A F4               [ 4]  154 	cpl	a
      00002B 34 00            [ 8]  155 	addc	a,#0x00
      00002D FD               [ 4]  156 	mov	r5,a
      00002E A3               [12]  157 	inc	dptr
      00002F E0               [ 8]  158 	movx	a,@dptr
      000030 F4               [ 4]  159 	cpl	a
      000031 34 00            [ 8]  160 	addc	a,#0x00
      000033 FE               [ 4]  161 	mov	r6,a
      000034 80 09            [12]  162 	sjmp 00109$
      000036                        163 00108$:
      000036 90s00r00r00      [12]  164 	mov	dptr,#__modsint_PARM_2
                                    165 ;	genAssign: resultIsFar = FALSE
      00003A E0               [ 8]  166 	movx	a,@dptr
      00003B FD               [ 4]  167 	mov	r5,a
      00003C A3               [12]  168 	inc	dptr
      00003D E0               [ 8]  169 	movx	a,@dptr
      00003E FE               [ 4]  170 	mov	r6,a
      00003F                        171 00109$:
      00003F 90s00r00r00      [12]  172 	mov	dptr,#__moduint_PARM_2
      000043 ED               [ 4]  173 	mov	a,r5
      000044 F0               [ 8]  174 	movx	@dptr,a
      000045 A3               [12]  175 	inc	dptr
      000046 EE               [ 4]  176 	mov	a,r6
      000047 F0               [ 8]  177 	movx	@dptr,a
      000048 C0 04            [ 8]  178 	push	ar4
      00004A 8A 82            [ 8]  179 	mov	dpl,r2
      00004C 8B 83            [ 8]  180 	mov	dph,r3
      00004E 12s00r00r00      [16]  181 	lcall	__moduint
      000052 D0 04            [ 8]  182 	pop	ar4
                                    183 ;	_modsint.c:209: if (a < 0)
      000054 EC               [ 4]  184 	mov	a,r4
      000055 60 11            [12]  185 	jz  00102$
      000057                        186 00121$:
                                    187 ;	_modsint.c:210: return -r;
      000057 C3               [ 4]  188 	clr	c
      000058 E4               [ 4]  189 	clr	a
      000059 95 82            [ 8]  190 	subb	a,dpl
      00005B F5 84            [ 8]  191 	mov	dpl1,a
      00005D E4               [ 4]  192 	clr	a
      00005E 95 83            [ 8]  193 	subb	a,dph
      000060 F5 85            [ 8]  194 	mov	dph1,a
      000062 85 84 82         [12]  195 	mov	dpl,dpl1
      000065 85 85 83         [12]  196 	mov	dph,dph1
                                    197 ;	_modsint.c:212: return r;
      000068                        198 00102$:
      000068                        199 00104$:
      000068 22               [16]  200 	ret
                                    201 	.area CSEG    (CODE)
                                    202 	.area CONST   (CODE)
                                    203 	.area XINIT   (CODE)
                                    204 	.area CABS    (ABS,CODE)
