                              1 ;--------------------------------------------------------
                              2 ; File Created by SDCC : free open source ANSI-C Compiler
                              3 ; Version 3.5.0 #9253 (Apr  4 2022) (Linux)
                              4 ; This file was generated Mon Apr  4 14:10:37 2022
                              5 ;--------------------------------------------------------
                              6 	.cs08
                              7 	.module toupper
                              8 	.optsdcc -ms08
                              9 	
                             10 	.area HOME    (CODE)
                             11 	.area GSINIT0 (CODE)
                             12 	.area GSINIT  (CODE)
                             13 	.area GSFINAL (CODE)
                             14 	.area CSEG    (CODE)
                             15 	.area XINIT   (CODE)
                             16 	.area CONST   (CODE)
                             17 	.area DSEG    (PAG)
                             18 	.area OSEG    (PAG, OVR)
                             19 	.area XSEG
                             20 	.area XISEG
                             21 ;--------------------------------------------------------
                             22 ; Public variables in this module
                             23 ;--------------------------------------------------------
                             24 	.globl _toupper
                             25 ;--------------------------------------------------------
                             26 ; ram data
                             27 ;--------------------------------------------------------
                             28 	.area DSEG    (PAG)
                             29 ;--------------------------------------------------------
                             30 ; overlayable items in ram 
                             31 ;--------------------------------------------------------
                             32 	.area	OSEG    (PAG, OVR)
   0000                      33 _toupper_sloc0_1_0:
   0000                      34 	.ds 1
                             35 ;--------------------------------------------------------
                             36 ; absolute ram data
                             37 ;--------------------------------------------------------
                             38 	.area IABS    (ABS)
                             39 	.area IABS    (ABS)
                             40 ;--------------------------------------------------------
                             41 ; absolute external ram data
                             42 ;--------------------------------------------------------
                             43 	.area XABS    (ABS)
                             44 ;--------------------------------------------------------
                             45 ; external initialized ram data
                             46 ;--------------------------------------------------------
                             47 	.area XISEG
                             48 ;--------------------------------------------------------
                             49 ; extended address mode data
                             50 ;--------------------------------------------------------
                             51 	.area XSEG
                             52 ;--------------------------------------------------------
                             53 ; global & static initialisations
                             54 ;--------------------------------------------------------
                             55 	.area HOME    (CODE)
                             56 	.area GSINIT  (CODE)
                             57 	.area GSFINAL (CODE)
                             58 	.area GSINIT  (CODE)
                             59 ;--------------------------------------------------------
                             60 ; Home
                             61 ;--------------------------------------------------------
                             62 	.area HOME    (CODE)
                             63 	.area HOME    (CODE)
                             64 ;--------------------------------------------------------
                             65 ; code
                             66 ;--------------------------------------------------------
                             67 	.area CSEG    (CODE)
                             68 ;------------------------------------------------------------
                             69 ;Allocation info for local variables in function 'toupper'
                             70 ;------------------------------------------------------------
                             71 ;c                         Allocated to registers x h 
                             72 ;__00010001                Allocated to registers 
                             73 ;__00020002                Allocated to registers 
                             74 ;c                         Allocated to registers 
                             75 ;sloc0                     Allocated with name '_toupper_sloc0_1_0'
                             76 ;------------------------------------------------------------
                             77 ;../toupper.c:33: int toupper (int c)
                             78 ;	-----------------------------------------
                             79 ;	 function toupper
                             80 ;	-----------------------------------------
                             81 ;	Register assignment is optimal.
                             82 ;	Stack space usage: 0 bytes.
   0000                      83 _toupper:
   0000 89            [ 2]   84 	pshx
   0001 97            [ 1]   85 	tax
   0002 8A            [ 3]   86 	pulh
                             87 ;./../../include/ctype.h:71: return ((unsigned char)c >= 'a' && (unsigned char)c <= 'z');
   0003 9F            [ 1]   88 	txa
   0004 A1 61         [ 2]   89 	cmp	#0x61
   0006 25 06         [ 3]   90 	bcs	00104$
   0008 A1 7A         [ 2]   91 	cmp	#0x7A
   000A 22 02         [ 3]   92 	bhi	00104$
                             93 ;../toupper.c:35: return (islower (c) ? c + ('A' - 'a') : c);
   000C AF E0         [ 2]   94 	aix	#-32
   000E                      95 00104$:
   000E 89            [ 2]   96 	pshx
   000F 8B            [ 2]   97 	pshh
   0010 88            [ 3]   98 	pulx
   0011 86            [ 3]   99 	pula
   0012 81            [ 6]  100 	rts
                            101 	.area CSEG    (CODE)
                            102 	.area CONST   (CODE)
                            103 	.area XINIT   (CODE)
                            104 	.area CABS    (ABS,CODE)
