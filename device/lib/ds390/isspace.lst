                                      1 ;--------------------------------------------------------
                                      2 ; File Created by SDCC : free open source ANSI-C Compiler
                                      3 ; Version 3.5.0 #9253 (Apr  4 2022) (Linux)
                                      4 ; This file was generated Mon Apr  4 14:10:26 2022
                                      5 ;--------------------------------------------------------
                                      6 	.module isspace
                                      7 	.optsdcc -mds390 --model-flat24
                                      8 	
                                      9 ;--------------------------------------------------------
                                     10 ; CPU specific extensions
                                     11 ;--------------------------------------------------------
                                     12 	.DS80C390
                                     13 	.amode	2	; 24 bit flat addressing
                           000082    14 dpl	=	0x82
                           000083    15 dph	=	0x83
                           000084    16 dpl1	=	0x84
                           000085    17 dph1	=	0x85
                           000086    18 dps	=	0x86
                           000093    19 dpx	=	0x93
                           000095    20 dpx1	=	0x95
                           00009B    21 esp	=	0x9B
                           00009C    22 ap	=	0x9C
                           00009C    23 acc1	=	0x9C
                           0000D1    24 mcnt0	=	0xD1
                           0000D2    25 mcnt1	=	0xD2
                           0000D3    26 ma	=	0xD3
                           0000D4    27 mb	=	0xD4
                           0000D5    28 mc	=	0xD5
                           00009D    29 acon	=	0x9D
                           0000D1    30 F1	=	0xD1	; user flag
                                     31 ;--------------------------------------------------------
                                     32 ; Public variables in this module
                                     33 ;--------------------------------------------------------
                                     34 	.globl _isspace
                                     35 ;--------------------------------------------------------
                                     36 ; special function registers
                                     37 ;--------------------------------------------------------
                                     38 ;--------------------------------------------------------
                                     39 ; special function bits
                                     40 ;--------------------------------------------------------
                                     41 ;--------------------------------------------------------
                                     42 ; overlayable register banks
                                     43 ;--------------------------------------------------------
                                     44 	.area REG_BANK_0	(REL,OVR,DATA)
      000000                         45 	.ds 8
                                     46 ;--------------------------------------------------------
                                     47 ; internal ram data
                                     48 ;--------------------------------------------------------
                                     49 	.area DSEG    (DATA)
                                     50 ;--------------------------------------------------------
                                     51 ; overlayable items in internal ram 
                                     52 ;--------------------------------------------------------
                                     53 ;--------------------------------------------------------
                                     54 ; indirectly addressable internal ram data
                                     55 ;--------------------------------------------------------
                                     56 	.area ISEG    (DATA)
                                     57 ;--------------------------------------------------------
                                     58 ; absolute internal ram data
                                     59 ;--------------------------------------------------------
                                     60 	.area IABS    (ABS,DATA)
                                     61 	.area IABS    (ABS,DATA)
                                     62 ;--------------------------------------------------------
                                     63 ; bit data
                                     64 ;--------------------------------------------------------
                                     65 	.area BSEG    (BIT)
                                     66 ;--------------------------------------------------------
                                     67 ; paged external ram data
                                     68 ;--------------------------------------------------------
                                     69 	.area PSEG    (PAG,XDATA)
                                     70 ;--------------------------------------------------------
                                     71 ; external ram data
                                     72 ;--------------------------------------------------------
                                     73 	.area XSEG    (XDATA)
                                     74 ;--------------------------------------------------------
                                     75 ; absolute external ram data
                                     76 ;--------------------------------------------------------
                                     77 	.area XABS    (ABS,XDATA)
                                     78 ;--------------------------------------------------------
                                     79 ; external initialized ram data
                                     80 ;--------------------------------------------------------
                                     81 	.area XISEG   (XDATA)
                                     82 ;--------------------------------------------------------
                                     83 ; global & static initialisations
                                     84 ;--------------------------------------------------------
                                     85 	.area HOME    (CODE)
                                     86 	.area GSINIT  (CODE)
                                     87 	.area GSFINAL (CODE)
                                     88 	.area GSINIT  (CODE)
                                     89 ;--------------------------------------------------------
                                     90 ; Home
                                     91 ;--------------------------------------------------------
                                     92 	.area HOME    (CODE)
                                     93 	.area HOME    (CODE)
                                     94 ;--------------------------------------------------------
                                     95 ; code
                                     96 ;--------------------------------------------------------
                                     97 	.area CSEG    (CODE)
                                     98 ;------------------------------------------------------------
                                     99 ;Allocation info for local variables in function 'isspace'
                                    100 ;------------------------------------------------------------
                                    101 ;c                         Allocated to registers r2 r3 
                                    102 ;------------------------------------------------------------
                                    103 ;	isspace.c:37: int isspace (int c)
                                    104 ;	-----------------------------------------
                                    105 ;	 function isspace
                                    106 ;	-----------------------------------------
      000000                        107 _isspace:
                           000002   108 	ar2 = 0x02
                           000003   109 	ar3 = 0x03
                           000004   110 	ar4 = 0x04
                           000005   111 	ar5 = 0x05
                           000006   112 	ar6 = 0x06
                           000007   113 	ar7 = 0x07
                           000000   114 	ar0 = 0x00
                           000001   115 	ar1 = 0x01
                                    116 ;	isspace.c:39: return (c == ' ' || c == '\f' || c == '\n' || c == '\r' || c == '\t' || c == '\v');
      000000 E5 82            [ 8]  117 	mov	a,dpl
      000002 B4 20 07         [16]  118 	cjne	a,#0x20,00136$
      000005 E5 83            [ 8]  119 	mov	a,dph
      000007 B4 00 02         [16]  120 	cjne	a,#0x00,00136$
      00000A 80 40            [12]  121 	sjmp 00104$
      00000C                        122 00136$:
      00000C E5 82            [ 8]  123 	mov	a,dpl
      00000E B4 0C 07         [16]  124 	cjne	a,#0x0C,00137$
      000011 E5 83            [ 8]  125 	mov	a,dph
      000013 B4 00 02         [16]  126 	cjne	a,#0x00,00137$
      000016 80 34            [12]  127 	sjmp 00104$
      000018                        128 00137$:
      000018 E5 82            [ 8]  129 	mov	a,dpl
      00001A B4 0A 07         [16]  130 	cjne	a,#0x0A,00138$
      00001D E5 83            [ 8]  131 	mov	a,dph
      00001F B4 00 02         [16]  132 	cjne	a,#0x00,00138$
      000022 80 28            [12]  133 	sjmp 00104$
      000024                        134 00138$:
      000024 E5 82            [ 8]  135 	mov	a,dpl
      000026 B4 0D 07         [16]  136 	cjne	a,#0x0D,00139$
      000029 E5 83            [ 8]  137 	mov	a,dph
      00002B B4 00 02         [16]  138 	cjne	a,#0x00,00139$
      00002E 80 1C            [12]  139 	sjmp 00104$
      000030                        140 00139$:
      000030 E5 82            [ 8]  141 	mov	a,dpl
      000032 B4 09 07         [16]  142 	cjne	a,#0x09,00140$
      000035 E5 83            [ 8]  143 	mov	a,dph
      000037 B4 00 02         [16]  144 	cjne	a,#0x00,00140$
      00003A 80 10            [12]  145 	sjmp 00104$
      00003C                        146 00140$:
      00003C E5 82            [ 8]  147 	mov	a,dpl
      00003E B4 0B 07         [16]  148 	cjne	a,#0x0B,00141$
      000041 E5 83            [ 8]  149 	mov	a,dph
      000043 B4 00 02         [16]  150 	cjne	a,#0x00,00141$
      000046 80 04            [12]  151 	sjmp 00104$
      000048                        152 00141$:
                                    153 ;	genAssign: resultIsFar = FALSE
      000048 7A 00            [ 8]  154 	mov	r2,#0x00
      00004A 80 02            [12]  155 	sjmp 00105$
      00004C                        156 00104$:
                                    157 ;	genAssign: resultIsFar = FALSE
      00004C 7A 01            [ 8]  158 	mov	r2,#0x01
      00004E                        159 00105$:
      00004E 8A 84            [ 8]  160 	mov	dpl1,r2
      000050 EA               [ 4]  161 	mov	a,r2
      000051 33               [ 4]  162 	rlc	a
      000052 95 E0            [ 8]  163 	subb	a,acc
      000054 F5 85            [ 8]  164 	mov	dph1,a
      000056 85 84 82         [12]  165 	mov	dpl,dpl1
      000059 85 85 83         [12]  166 	mov	dph,dph1
      00005C                        167 00101$:
      00005C 22               [16]  168 	ret
                                    169 	.area CSEG    (CODE)
                                    170 	.area CONST   (CODE)
                                    171 	.area XINIT   (CODE)
                                    172 	.area CABS    (ABS,CODE)
