                              1 ;--------------------------------------------------------
                              2 ; File Created by SDCC : free open source ANSI-C Compiler
                              3 ; Version 3.5.0 #9253 (Apr  4 2022) (Linux)
                              4 ; This file was generated Mon Apr  4 14:16:31 2022
                              5 ;--------------------------------------------------------
                              6 	.module sqrtf
                              7 	.optsdcc -mtlcs90
                              8 	
                              9 ;--------------------------------------------------------
                             10 ; Public variables in this module
                             11 ;--------------------------------------------------------
                             12 	.globl _ldexpf
                             13 	.globl _frexpf
                             14 	.globl _sqrtf
                             15 ;--------------------------------------------------------
                             16 ; ram data
                             17 ;--------------------------------------------------------
                             18 	.area _DATA
                             19 ;--------------------------------------------------------
                             20 ; ram data
                             21 ;--------------------------------------------------------
                             22 	.area _INITIALIZED
                             23 ;--------------------------------------------------------
                             24 ; absolute external ram data
                             25 ;--------------------------------------------------------
                             26 	.area _DABS (ABS)
                             27 ;--------------------------------------------------------
                             28 ; global & static initialisations
                             29 ;--------------------------------------------------------
                             30 	.area _HOME
                             31 	.area _GSINIT
                             32 	.area _GSFINAL
                             33 	.area _GSINIT
                             34 ;--------------------------------------------------------
                             35 ; Home
                             36 ;--------------------------------------------------------
                             37 	.area _HOME
                             38 	.area _HOME
                             39 ;--------------------------------------------------------
                             40 ; code
                             41 ;--------------------------------------------------------
                             42 	.area _CODE
                             43 ;../sqrtf.c:37: float sqrtf(float x) _FLOAT_FUNC_REENTRANT
                             44 ;	---------------------------------
                             45 ; Function sqrtf
                             46 ; ---------------------------------
   0000                      47 _sqrtf::
   0000 54            [ 4]   48 	push	ix
   0001 3C 00 00      [ 4]   49 	ld	ix,#0
   0004 FE 14         [ 7]   50 	add	ix,sp
   0006 16 F6 FF      [ 7]   51 	add	sp, #-10
                             52 ;../sqrtf.c:42: if (x==0.0) return x;
   0009 F0 07 2E      [11]   53 	ld	a,7 (ix)
   000C FE B7         [ 7]   54 	res	7, a
   000E F0 06 66      [11]   55 	or	a, 6 (ix)
   0011 F0 05 66      [11]   56 	or	a, 5 (ix)
   0014 F0 04 66      [11]   57 	or	a,4 (ix)
   0017 CE 0F         [ 7]   58 	jr	NZ,00107$
   0019 F0 04 2D      [11]   59 	ld	l,4 (ix)
   001C F0 05 2C      [11]   60 	ld	h,5 (ix)
   001F F0 06 2B      [11]   61 	ld	e,6 (ix)
   0022 F0 07 2A      [11]   62 	ld	d,7 (ix)
   0025 1Ar68r01      [ 7]   63 	jp	00111$
   0028                      64 00107$:
                             65 ;../sqrtf.c:43: else if (x==1.0) return 1.0;
   0028 3A 80 3F      [13]   66 	ld	hl,#0x3F80
   002B 52            [ 4]   67 	push	hl
   002C 3A 00 00      [13]   68 	ld	hl,#0x0000
   002F 52            [ 4]   69 	push	hl
   0030 F2 14 4A      [10]   70 	ld	hl, 20 (sp)
   0033 52            [ 4]   71 	push	hl
   0034 F2 14 4A      [10]   72 	ld	hl, 20 (sp)
   0037 52            [ 4]   73 	push	hl
   0038 1Cr00r00      [ 4]   74 	call	___fseq
   003B 16 08 00      [ 7]   75 	add	sp, #8
   003E 25            [ 4]   76 	ld	a,l
   003F FE 66         [ 7]   77 	or	a, a
   0041 C6 09         [ 7]   78 	jr	Z,00104$
   0043 3A 00 00      [13]   79 	ld	hl,#0x0000
   0046 39 80 3F      [11]   80 	ld	de,#0x3F80
   0049 1Ar68r01      [ 7]   81 	jp	00111$
   004C                      82 00104$:
                             83 ;../sqrtf.c:44: else if (x<0.0)
   004C 3A 00 00      [13]   84 	ld	hl,#0x0000
   004F 52            [ 4]   85 	push	hl
   0050 3A 00 00      [13]   86 	ld	hl,#0x0000
   0053 52            [ 4]   87 	push	hl
   0054 F2 14 4A      [10]   88 	ld	hl, 20 (sp)
   0057 52            [ 4]   89 	push	hl
   0058 F2 14 4A      [10]   90 	ld	hl, 20 (sp)
   005B 52            [ 4]   91 	push	hl
   005C 1Cr00r00      [ 4]   92 	call	___fslt
   005F 16 08 00      [ 7]   93 	add	sp, #8
   0062 25            [ 4]   94 	ld	a,l
   0063 FE 66         [ 7]   95 	or	a, a
   0065 C6 11         [ 7]   96 	jr	Z,00108$
                             97 ;../sqrtf.c:46: errno=EDOM;
   0067 3A 21 00      [13]   98 	ld	hl,#0x0021
   006A EBr00r00 42   [ 4]   99 	ld	(_errno),hl
                            100 ;../sqrtf.c:47: return 0.0;
   006E 3A 00 00      [13]  101 	ld	hl,#0x0000
   0071 FD 33               102 	ld	e,l
   0073 FC 32         [17]  103 	ld	d,h
   0075 1Ar68r01      [ 7]  104 	jp	00111$
   0078                     105 00108$:
                            106 ;../sqrtf.c:49: f=frexpf(x, &n);
   0078 3A 00 00      [13]  107 	ld	hl,#0x0000
   007B FE 70         [ 7]  108 	add	hl,sp
   007D 52            [ 4]  109 	push	hl
   007E F2 12 4A      [10]  110 	ld	hl, 18 (sp)
   0081 52            [ 4]  111 	push	hl
   0082 F2 12 4A      [10]  112 	ld	hl, 18 (sp)
   0085 52            [ 4]  113 	push	hl
   0086 1Cr00r00      [ 4]  114 	call	_frexpf
   0089 16 06 00      [ 7]  115 	add	sp, #6
   008C F4 F8 25      [17]  116 	ld	-8 (ix),l
   008F F4 F9 24      [17]  117 	ld	-7 (ix),h
   0092 F4 FA 23      [17]  118 	ld	-6 (ix),e
   0095 F4 FB 22      [17]  119 	ld	-5 (ix),d
                            120 ;../sqrtf.c:50: y=0.41731+0.59016*f; /*Educated guess*/
   0098 F2 04 4A      [10]  121 	ld	hl, 4 (sp)
   009B 52            [ 4]  122 	push	hl
   009C F2 04 4A      [10]  123 	ld	hl, 4 (sp)
   009F 52            [ 4]  124 	push	hl
   00A0 3A 17 3F      [13]  125 	ld	hl,#0x3F17
   00A3 52            [ 4]  126 	push	hl
   00A4 3A BA 14      [13]  127 	ld	hl,#0x14BA
   00A7 52            [ 4]  128 	push	hl
   00A8 1Cr00r00      [ 4]  129 	call	___fsmul
   00AB 16 08 00      [ 7]  130 	add	sp, #8
   00AE FD 31               131 	ld	c,l
   00B0 FC 30         [17]  132 	ld	b,h
   00B2 3A D5 3E      [13]  133 	ld	hl,#0x3ED5
   00B5 52            [ 4]  134 	push	hl
   00B6 3A A8 A9      [13]  135 	ld	hl,#0xA9A8
   00B9 52            [ 4]  136 	push	hl
   00BA 51            [ 4]  137 	push	de
   00BB 50            [ 4]  138 	push	bc
   00BC 1Cr00r00      [ 4]  139 	call	___fsadd
   00BF 16 08 00      [ 7]  140 	add	sp, #8
   00C2 F4 FC 25      [17]  141 	ld	-4 (ix),l
   00C5 F4 FD 24      [17]  142 	ld	-3 (ix),h
   00C8 F4 FE 23      [17]  143 	ld	-2 (ix),e
   00CB F4 FF 22      [17]  144 	ld	-1 (ix),d
                            145 ;../sqrtf.c:52: y+=f/y;
   00CE F2 08 4A      [10]  146 	ld	hl, 8 (sp)
   00D1 52            [ 4]  147 	push	hl
   00D2 F2 08 4A      [10]  148 	ld	hl, 8 (sp)
   00D5 52            [ 4]  149 	push	hl
   00D6 F2 08 4A      [10]  150 	ld	hl, 8 (sp)
   00D9 52            [ 4]  151 	push	hl
   00DA F2 08 4A      [10]  152 	ld	hl, 8 (sp)
   00DD 52            [ 4]  153 	push	hl
   00DE 1Cr00r00      [ 4]  154 	call	___fsdiv
   00E1 16 08 00      [ 7]  155 	add	sp, #8
   00E4 08            [ 4]  156 	ex	de, hl
   00E5 52            [ 4]  157 	push	hl
   00E6 51            [ 4]  158 	push	de
   00E7 F2 0C 4A      [10]  159 	ld	hl, 12 (sp)
   00EA 52            [ 4]  160 	push	hl
   00EB F2 0C 4A      [10]  161 	ld	hl, 12 (sp)
   00EE 52            [ 4]  162 	push	hl
   00EF 1Cr00r00      [ 4]  163 	call	___fsadd
   00F2 16 08 00      [ 7]  164 	add	sp, #8
   00F5 08            [ 4]  165 	ex	de, hl
                            166 ;../sqrtf.c:53: y=ldexpf(y, -2) + f/y; /*Faster version of 0.25 * y + f/y*/
   00F6 52            [ 4]  167 	push	hl
   00F7 51            [ 4]  168 	push	de
   00F8 38 FE FF      [12]  169 	ld	bc,#0xFFFE
   00FB 50            [ 4]  170 	push	bc
   00FC 52            [ 4]  171 	push	hl
   00FD 51            [ 4]  172 	push	de
   00FE 1Cr00r00      [ 4]  173 	call	_ldexpf
   0101 16 06 00      [ 7]  174 	add	sp, #6
   0104 F4 FF 22      [17]  175 	ld	-1 (ix),d
   0107 F4 FE 23      [17]  176 	ld	-2 (ix),e
   010A F4 FD 24      [17]  177 	ld	-3 (ix),h
   010D F4 FC 25      [17]  178 	ld	-4 (ix),l
   0110 F2 08 4A      [10]  179 	ld	hl, 8 (sp)
   0113 52            [ 4]  180 	push	hl
   0114 F2 08 4A      [10]  181 	ld	hl, 8 (sp)
   0117 52            [ 4]  182 	push	hl
   0118 1Cr00r00      [ 4]  183 	call	___fsdiv
   011B 16 08 00      [ 7]  184 	add	sp, #8
   011E 08            [ 4]  185 	ex	de, hl
   011F 52            [ 4]  186 	push	hl
   0120 51            [ 4]  187 	push	de
   0121 F2 0C 4A      [10]  188 	ld	hl, 12 (sp)
   0124 52            [ 4]  189 	push	hl
   0125 F2 0C 4A      [10]  190 	ld	hl, 12 (sp)
   0128 52            [ 4]  191 	push	hl
   0129 1Cr00r00      [ 4]  192 	call	___fsadd
   012C 16 08 00      [ 7]  193 	add	sp, #8
   012F FD 31               194 	ld	c,l
   0131 FC 30         [17]  195 	ld	b,h
                            196 ;../sqrtf.c:55: if (n&1)
   0133 F0 F6 A8      [11]  197 	bit	0, -10 (ix)
   0136 C6 1C         [ 7]  198 	jr	Z,00110$
                            199 ;../sqrtf.c:57: y*=0.7071067812;
   0138 51            [ 4]  200 	push	de
   0139 50            [ 4]  201 	push	bc
   013A 3A 35 3F      [13]  202 	ld	hl,#0x3F35
   013D 52            [ 4]  203 	push	hl
   013E 3A F3 04      [13]  204 	ld	hl,#0x04F3
   0141 52            [ 4]  205 	push	hl
   0142 1Cr00r00      [ 4]  206 	call	___fsmul
   0145 16 08 00      [ 7]  207 	add	sp, #8
   0148 FD 31               208 	ld	c,l
   014A FC 30         [17]  209 	ld	b,h
                            210 ;../sqrtf.c:58: ++n;
   014C F0 F6 87      [11]  211 	inc	-10 (ix)
   014F CE 03         [ 7]  212 	jr	NZ,00135$
   0151 F0 F7 87      [11]  213 	inc	-9 (ix)
   0154                     214 00135$:
   0154                     215 00110$:
                            216 ;../sqrtf.c:60: return ldexpf(y, n/2);
   0154 5A            [ 4]  217 	pop	hl
   0155 52            [ 4]  218 	push	hl
   0156 FC AF         [17]  219 	bit	7, h
   0158 C6 01         [ 7]  220 	jr	Z,00113$
   015A 92            [ 4]  221 	inc	hl
   015B                     222 00113$:
   015B FC A5         [17]  223 	sra	h
   015D FD A3               224 	rr	l
   015F 52            [ 4]  225 	push	hl
   0160 51            [ 4]  226 	push	de
   0161 50            [ 4]  227 	push	bc
   0162 1Cr00r00      [ 4]  228 	call	_ldexpf
   0165 16 06 00      [ 7]  229 	add	sp, #6
   0168                     230 00111$:
   0168 FC 3E         [17]  231 	ld	sp, ix
   016A 5C            [ 4]  232 	pop	ix
   016B 1E            [ 7]  233 	ret
                            234 	.area _CODE
                            235 	.area _INITIALIZER
                            236 	.area _CABS (ABS)
