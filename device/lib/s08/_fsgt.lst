                              1 ;--------------------------------------------------------
                              2 ; File Created by SDCC : free open source ANSI-C Compiler
                              3 ; Version 3.5.0 #9253 (Apr  4 2022) (Linux)
                              4 ; This file was generated Mon Apr  4 14:10:36 2022
                              5 ;--------------------------------------------------------
                              6 	.cs08
                              7 	.module _fsgt
                              8 	.optsdcc -ms08
                              9 	
                             10 	.area HOME    (CODE)
                             11 	.area GSINIT0 (CODE)
                             12 	.area GSINIT  (CODE)
                             13 	.area GSFINAL (CODE)
                             14 	.area CSEG    (CODE)
                             15 	.area XINIT   (CODE)
                             16 	.area CONST   (CODE)
                             17 	.area DSEG    (PAG)
                             18 	.area OSEG    (PAG, OVR)
                             19 	.area XSEG
                             20 	.area XISEG
                             21 ;--------------------------------------------------------
                             22 ; Public variables in this module
                             23 ;--------------------------------------------------------
                             24 	.globl ___fsgt_PARM_2
                             25 	.globl ___fsgt_PARM_1
                             26 	.globl ___fsgt
                             27 ;--------------------------------------------------------
                             28 ; ram data
                             29 ;--------------------------------------------------------
                             30 	.area DSEG    (PAG)
                             31 ;--------------------------------------------------------
                             32 ; overlayable items in ram 
                             33 ;--------------------------------------------------------
                             34 	.area	OSEG    (PAG, OVR)
   0000                      35 ___fsgt_sloc0_1_0:
   0000                      36 	.ds 4
   0004                      37 ___fsgt_sloc1_1_0:
   0004                      38 	.ds 4
                             39 ;--------------------------------------------------------
                             40 ; absolute ram data
                             41 ;--------------------------------------------------------
                             42 	.area IABS    (ABS)
                             43 	.area IABS    (ABS)
                             44 ;--------------------------------------------------------
                             45 ; absolute external ram data
                             46 ;--------------------------------------------------------
                             47 	.area XABS    (ABS)
                             48 ;--------------------------------------------------------
                             49 ; external initialized ram data
                             50 ;--------------------------------------------------------
                             51 	.area XISEG
                             52 ;--------------------------------------------------------
                             53 ; extended address mode data
                             54 ;--------------------------------------------------------
                             55 	.area XSEG
   0000                      56 ___fsgt_PARM_1:
   0000                      57 	.ds 4
   0004                      58 ___fsgt_PARM_2:
   0004                      59 	.ds 4
   0008                      60 ___fsgt_fl1_1_21:
   0008                      61 	.ds 4
   000C                      62 ___fsgt_fl2_1_21:
   000C                      63 	.ds 4
                             64 ;--------------------------------------------------------
                             65 ; global & static initialisations
                             66 ;--------------------------------------------------------
                             67 	.area HOME    (CODE)
                             68 	.area GSINIT  (CODE)
                             69 	.area GSFINAL (CODE)
                             70 	.area GSINIT  (CODE)
                             71 ;--------------------------------------------------------
                             72 ; Home
                             73 ;--------------------------------------------------------
                             74 	.area HOME    (CODE)
                             75 	.area HOME    (CODE)
                             76 ;--------------------------------------------------------
                             77 ; code
                             78 ;--------------------------------------------------------
                             79 	.area CSEG    (CODE)
                             80 ;------------------------------------------------------------
                             81 ;Allocation info for local variables in function '__fsgt'
                             82 ;------------------------------------------------------------
                             83 ;a1                        Allocated with name '___fsgt_PARM_1'
                             84 ;a2                        Allocated with name '___fsgt_PARM_2'
                             85 ;fl1                       Allocated with name '___fsgt_fl1_1_21'
                             86 ;fl2                       Allocated with name '___fsgt_fl2_1_21'
                             87 ;sloc0                     Allocated with name '___fsgt_sloc0_1_0'
                             88 ;sloc1                     Allocated with name '___fsgt_sloc1_1_0'
                             89 ;------------------------------------------------------------
                             90 ;../_fsgt.c:108: char __fsgt (float a1, float a2)
                             91 ;	-----------------------------------------
                             92 ;	 function __fsgt
                             93 ;	-----------------------------------------
                             94 ;	Register assignment is optimal.
                             95 ;	Stack space usage: 0 bytes.
   0000                      96 ___fsgt:
                             97 ;../_fsgt.c:112: fl1.f = a1;
   0000 C6r00r00      [ 4]   98 	lda	___fsgt_PARM_1
   0003 C7r00r08      [ 4]   99 	sta	___fsgt_fl1_1_21
   0006 C6r00r01      [ 4]  100 	lda	(___fsgt_PARM_1 + 1)
   0009 C7r00r09      [ 4]  101 	sta	(___fsgt_fl1_1_21 + 1)
   000C C6r00r02      [ 4]  102 	lda	(___fsgt_PARM_1 + 2)
   000F C7r00r0A      [ 4]  103 	sta	(___fsgt_fl1_1_21 + 2)
   0012 C6r00r03      [ 4]  104 	lda	(___fsgt_PARM_1 + 3)
   0015 C7r00r0B      [ 4]  105 	sta	(___fsgt_fl1_1_21 + 3)
                            106 ;../_fsgt.c:113: fl2.f = a2;
   0018 C6r00r04      [ 4]  107 	lda	___fsgt_PARM_2
   001B C7r00r0C      [ 4]  108 	sta	___fsgt_fl2_1_21
   001E C6r00r05      [ 4]  109 	lda	(___fsgt_PARM_2 + 1)
   0021 C7r00r0D      [ 4]  110 	sta	(___fsgt_fl2_1_21 + 1)
   0024 C6r00r06      [ 4]  111 	lda	(___fsgt_PARM_2 + 2)
   0027 C7r00r0E      [ 4]  112 	sta	(___fsgt_fl2_1_21 + 2)
   002A C6r00r07      [ 4]  113 	lda	(___fsgt_PARM_2 + 3)
   002D C7r00r0F      [ 4]  114 	sta	(___fsgt_fl2_1_21 + 3)
                            115 ;../_fsgt.c:115: if (((fl1.l | fl2.l) & 0x7FFFFFFF) == 0)
   0030 C6r00r08      [ 4]  116 	lda	___fsgt_fl1_1_21
   0033 B7*00         [ 3]  117 	sta	*___fsgt_sloc0_1_0
   0035 C6r00r09      [ 4]  118 	lda	(___fsgt_fl1_1_21 + 1)
   0038 B7*01         [ 3]  119 	sta	*(___fsgt_sloc0_1_0 + 1)
   003A C6r00r0A      [ 4]  120 	lda	(___fsgt_fl1_1_21 + 2)
   003D B7*02         [ 3]  121 	sta	*(___fsgt_sloc0_1_0 + 2)
   003F C6r00r0B      [ 4]  122 	lda	(___fsgt_fl1_1_21 + 3)
   0042 B7*03         [ 3]  123 	sta	*(___fsgt_sloc0_1_0 + 3)
   0044 C6r00r0C      [ 4]  124 	lda	___fsgt_fl2_1_21
   0047 B7*04         [ 3]  125 	sta	*___fsgt_sloc1_1_0
   0049 C6r00r0D      [ 4]  126 	lda	(___fsgt_fl2_1_21 + 1)
   004C B7*05         [ 3]  127 	sta	*(___fsgt_sloc1_1_0 + 1)
   004E C6r00r0E      [ 4]  128 	lda	(___fsgt_fl2_1_21 + 2)
   0051 B7*06         [ 3]  129 	sta	*(___fsgt_sloc1_1_0 + 2)
   0053 C6r00r0F      [ 4]  130 	lda	(___fsgt_fl2_1_21 + 3)
   0056 B7*07         [ 3]  131 	sta	*(___fsgt_sloc1_1_0 + 3)
   0058 B6*03         [ 3]  132 	lda	*(___fsgt_sloc0_1_0 + 3)
   005A BA*07         [ 3]  133 	ora	*(___fsgt_sloc1_1_0 + 3)
   005C B7*07         [ 3]  134 	sta	*(___fsgt_sloc1_1_0 + 3)
   005E B6*02         [ 3]  135 	lda	*(___fsgt_sloc0_1_0 + 2)
   0060 BA*06         [ 3]  136 	ora	*(___fsgt_sloc1_1_0 + 2)
   0062 B7*06         [ 3]  137 	sta	*(___fsgt_sloc1_1_0 + 2)
   0064 B6*01         [ 3]  138 	lda	*(___fsgt_sloc0_1_0 + 1)
   0066 BA*05         [ 3]  139 	ora	*(___fsgt_sloc1_1_0 + 1)
   0068 B7*05         [ 3]  140 	sta	*(___fsgt_sloc1_1_0 + 1)
   006A B6*00         [ 3]  141 	lda	*___fsgt_sloc0_1_0
   006C BA*04         [ 3]  142 	ora	*___fsgt_sloc1_1_0
   006E B7*04         [ 3]  143 	sta	*___fsgt_sloc1_1_0
   0070 3D*07         [ 4]  144 	tst	*(___fsgt_sloc1_1_0 + 3)
   0072 26 0C         [ 3]  145 	bne	00132$
   0074 3D*06         [ 4]  146 	tst	*(___fsgt_sloc1_1_0 + 2)
   0076 26 08         [ 3]  147 	bne	00132$
   0078 3D*05         [ 4]  148 	tst	*(___fsgt_sloc1_1_0 + 1)
   007A 26 04         [ 3]  149 	bne	00132$
   007C B6*04         [ 3]  150 	lda	*___fsgt_sloc1_1_0
   007E A5 7F         [ 2]  151 	bit	#0x7F
   0080                     152 00132$:
   0080 26 02         [ 3]  153 	bne	00102$
                            154 ;../_fsgt.c:116: return (0);
   0082 4F            [ 1]  155 	clra
   0083 81            [ 6]  156 	rts
   0084                     157 00102$:
                            158 ;../_fsgt.c:118: if (fl1.l<0 && fl2.l<0) {
   0084 C6r00r08      [ 4]  159 	lda	___fsgt_fl1_1_21
   0087 B7*04         [ 3]  160 	sta	*___fsgt_sloc1_1_0
   0089 C6r00r09      [ 4]  161 	lda	(___fsgt_fl1_1_21 + 1)
   008C B7*05         [ 3]  162 	sta	*(___fsgt_sloc1_1_0 + 1)
   008E C6r00r0A      [ 4]  163 	lda	(___fsgt_fl1_1_21 + 2)
   0091 B7*06         [ 3]  164 	sta	*(___fsgt_sloc1_1_0 + 2)
   0093 C6r00r0B      [ 4]  165 	lda	(___fsgt_fl1_1_21 + 3)
   0096 B7*07         [ 3]  166 	sta	*(___fsgt_sloc1_1_0 + 3)
   0098 B6*04         [ 3]  167 	lda	*___fsgt_sloc1_1_0
   009A A0 00         [ 2]  168 	sub	#0x00
   009C 90 59         [ 3]  169 	bge	00106$
   009E C6r00r0C      [ 4]  170 	lda	___fsgt_fl2_1_21
   00A1 B7*04         [ 3]  171 	sta	*___fsgt_sloc1_1_0
   00A3 C6r00r0D      [ 4]  172 	lda	(___fsgt_fl2_1_21 + 1)
   00A6 B7*05         [ 3]  173 	sta	*(___fsgt_sloc1_1_0 + 1)
   00A8 C6r00r0E      [ 4]  174 	lda	(___fsgt_fl2_1_21 + 2)
   00AB B7*06         [ 3]  175 	sta	*(___fsgt_sloc1_1_0 + 2)
   00AD C6r00r0F      [ 4]  176 	lda	(___fsgt_fl2_1_21 + 3)
   00B0 B7*07         [ 3]  177 	sta	*(___fsgt_sloc1_1_0 + 3)
   00B2 B6*04         [ 3]  178 	lda	*___fsgt_sloc1_1_0
   00B4 A0 00         [ 2]  179 	sub	#0x00
   00B6 90 3F         [ 3]  180 	bge	00106$
                            181 ;../_fsgt.c:119: if (fl2.l > fl1.l)
   00B8 C6r00r0C      [ 4]  182 	lda	___fsgt_fl2_1_21
   00BB B7*04         [ 3]  183 	sta	*___fsgt_sloc1_1_0
   00BD C6r00r0D      [ 4]  184 	lda	(___fsgt_fl2_1_21 + 1)
   00C0 B7*05         [ 3]  185 	sta	*(___fsgt_sloc1_1_0 + 1)
   00C2 C6r00r0E      [ 4]  186 	lda	(___fsgt_fl2_1_21 + 2)
   00C5 B7*06         [ 3]  187 	sta	*(___fsgt_sloc1_1_0 + 2)
   00C7 C6r00r0F      [ 4]  188 	lda	(___fsgt_fl2_1_21 + 3)
   00CA B7*07         [ 3]  189 	sta	*(___fsgt_sloc1_1_0 + 3)
   00CC C6r00r08      [ 4]  190 	lda	___fsgt_fl1_1_21
   00CF B7*00         [ 3]  191 	sta	*___fsgt_sloc0_1_0
   00D1 C6r00r09      [ 4]  192 	lda	(___fsgt_fl1_1_21 + 1)
   00D4 B7*01         [ 3]  193 	sta	*(___fsgt_sloc0_1_0 + 1)
   00D6 C6r00r0A      [ 4]  194 	lda	(___fsgt_fl1_1_21 + 2)
   00D9 B7*02         [ 3]  195 	sta	*(___fsgt_sloc0_1_0 + 2)
   00DB C6r00r0B      [ 4]  196 	lda	(___fsgt_fl1_1_21 + 3)
   00DE B7*03         [ 3]  197 	sta	*(___fsgt_sloc0_1_0 + 3)
   00E0 B6*03         [ 3]  198 	lda	*(___fsgt_sloc0_1_0 + 3)
   00E2 B0*07         [ 3]  199 	sub	*(___fsgt_sloc1_1_0 + 3)
   00E4 B6*02         [ 3]  200 	lda	*(___fsgt_sloc0_1_0 + 2)
   00E6 B2*06         [ 3]  201 	sbc	*(___fsgt_sloc1_1_0 + 2)
   00E8 B6*01         [ 3]  202 	lda	*(___fsgt_sloc0_1_0 + 1)
   00EA B2*05         [ 3]  203 	sbc	*(___fsgt_sloc1_1_0 + 1)
   00EC B6*00         [ 3]  204 	lda	*___fsgt_sloc0_1_0
   00EE B2*04         [ 3]  205 	sbc	*___fsgt_sloc1_1_0
   00F0 90 03         [ 3]  206 	bge	00104$
                            207 ;../_fsgt.c:120: return (1);
   00F2 A6 01         [ 2]  208 	lda	#0x01
   00F4 81            [ 6]  209 	rts
   00F5                     210 00104$:
                            211 ;../_fsgt.c:121: return (0);
   00F5 4F            [ 1]  212 	clra
   00F6 81            [ 6]  213 	rts
   00F7                     214 00106$:
                            215 ;../_fsgt.c:124: if (fl1.l > fl2.l)
   00F7 C6r00r08      [ 4]  216 	lda	___fsgt_fl1_1_21
   00FA B7*04         [ 3]  217 	sta	*___fsgt_sloc1_1_0
   00FC C6r00r09      [ 4]  218 	lda	(___fsgt_fl1_1_21 + 1)
   00FF B7*05         [ 3]  219 	sta	*(___fsgt_sloc1_1_0 + 1)
   0101 C6r00r0A      [ 4]  220 	lda	(___fsgt_fl1_1_21 + 2)
   0104 B7*06         [ 3]  221 	sta	*(___fsgt_sloc1_1_0 + 2)
   0106 C6r00r0B      [ 4]  222 	lda	(___fsgt_fl1_1_21 + 3)
   0109 B7*07         [ 3]  223 	sta	*(___fsgt_sloc1_1_0 + 3)
   010B C6r00r0C      [ 4]  224 	lda	___fsgt_fl2_1_21
   010E B7*00         [ 3]  225 	sta	*___fsgt_sloc0_1_0
   0110 C6r00r0D      [ 4]  226 	lda	(___fsgt_fl2_1_21 + 1)
   0113 B7*01         [ 3]  227 	sta	*(___fsgt_sloc0_1_0 + 1)
   0115 C6r00r0E      [ 4]  228 	lda	(___fsgt_fl2_1_21 + 2)
   0118 B7*02         [ 3]  229 	sta	*(___fsgt_sloc0_1_0 + 2)
   011A C6r00r0F      [ 4]  230 	lda	(___fsgt_fl2_1_21 + 3)
   011D B7*03         [ 3]  231 	sta	*(___fsgt_sloc0_1_0 + 3)
   011F B6*03         [ 3]  232 	lda	*(___fsgt_sloc0_1_0 + 3)
   0121 B0*07         [ 3]  233 	sub	*(___fsgt_sloc1_1_0 + 3)
   0123 B6*02         [ 3]  234 	lda	*(___fsgt_sloc0_1_0 + 2)
   0125 B2*06         [ 3]  235 	sbc	*(___fsgt_sloc1_1_0 + 2)
   0127 B6*01         [ 3]  236 	lda	*(___fsgt_sloc0_1_0 + 1)
   0129 B2*05         [ 3]  237 	sbc	*(___fsgt_sloc1_1_0 + 1)
   012B B6*00         [ 3]  238 	lda	*___fsgt_sloc0_1_0
   012D B2*04         [ 3]  239 	sbc	*___fsgt_sloc1_1_0
   012F 90 03         [ 3]  240 	bge	00109$
                            241 ;../_fsgt.c:125: return (1);
   0131 A6 01         [ 2]  242 	lda	#0x01
   0133 81            [ 6]  243 	rts
   0134                     244 00109$:
                            245 ;../_fsgt.c:126: return (0);
   0134 4F            [ 1]  246 	clra
   0135 81            [ 6]  247 	rts
                            248 	.area CSEG    (CODE)
                            249 	.area CONST   (CODE)
                            250 	.area XINIT   (CODE)
                            251 	.area CABS    (ABS,CODE)
