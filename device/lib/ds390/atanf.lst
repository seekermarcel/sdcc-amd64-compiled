                                      1 ;--------------------------------------------------------
                                      2 ; File Created by SDCC : free open source ANSI-C Compiler
                                      3 ; Version 3.5.0 #9253 (Apr  4 2022) (Linux)
                                      4 ; This file was generated Mon Apr  4 14:10:26 2022
                                      5 ;--------------------------------------------------------
                                      6 	.module atanf
                                      7 	.optsdcc -mds390 --model-flat24
                                      8 	
                                      9 ;--------------------------------------------------------
                                     10 ; CPU specific extensions
                                     11 ;--------------------------------------------------------
                                     12 	.DS80C390
                                     13 	.amode	2	; 24 bit flat addressing
                           000082    14 dpl	=	0x82
                           000083    15 dph	=	0x83
                           000084    16 dpl1	=	0x84
                           000085    17 dph1	=	0x85
                           000086    18 dps	=	0x86
                           000093    19 dpx	=	0x93
                           000095    20 dpx1	=	0x95
                           00009B    21 esp	=	0x9B
                           00009C    22 ap	=	0x9C
                           00009C    23 acc1	=	0x9C
                           0000D1    24 mcnt0	=	0xD1
                           0000D2    25 mcnt1	=	0xD2
                           0000D3    26 ma	=	0xD3
                           0000D4    27 mb	=	0xD4
                           0000D5    28 mc	=	0xD5
                           00009D    29 acon	=	0x9D
                           0000D1    30 F1	=	0xD1	; user flag
                                     31 ;--------------------------------------------------------
                                     32 ; Public variables in this module
                                     33 ;--------------------------------------------------------
                                     34 	.globl _fabsf
                                     35 	.globl _atanf
                                     36 ;--------------------------------------------------------
                                     37 ; special function registers
                                     38 ;--------------------------------------------------------
                                     39 ;--------------------------------------------------------
                                     40 ; special function bits
                                     41 ;--------------------------------------------------------
                                     42 ;--------------------------------------------------------
                                     43 ; overlayable register banks
                                     44 ;--------------------------------------------------------
                                     45 	.area REG_BANK_0	(REL,OVR,DATA)
      000000                         46 	.ds 8
                                     47 ;--------------------------------------------------------
                                     48 ; internal ram data
                                     49 ;--------------------------------------------------------
                                     50 	.area DSEG    (DATA)
                                     51 ;--------------------------------------------------------
                                     52 ; overlayable items in internal ram 
                                     53 ;--------------------------------------------------------
                                     54 ;--------------------------------------------------------
                                     55 ; indirectly addressable internal ram data
                                     56 ;--------------------------------------------------------
                                     57 	.area ISEG    (DATA)
                                     58 ;--------------------------------------------------------
                                     59 ; absolute internal ram data
                                     60 ;--------------------------------------------------------
                                     61 	.area IABS    (ABS,DATA)
                                     62 	.area IABS    (ABS,DATA)
                                     63 ;--------------------------------------------------------
                                     64 ; bit data
                                     65 ;--------------------------------------------------------
                                     66 	.area BSEG    (BIT)
                                     67 ;--------------------------------------------------------
                                     68 ; paged external ram data
                                     69 ;--------------------------------------------------------
                                     70 	.area PSEG    (PAG,XDATA)
                                     71 ;--------------------------------------------------------
                                     72 ; external ram data
                                     73 ;--------------------------------------------------------
                                     74 	.area XSEG    (XDATA)
                                     75 ;--------------------------------------------------------
                                     76 ; absolute external ram data
                                     77 ;--------------------------------------------------------
                                     78 	.area XABS    (ABS,XDATA)
                                     79 ;--------------------------------------------------------
                                     80 ; external initialized ram data
                                     81 ;--------------------------------------------------------
                                     82 	.area XISEG   (XDATA)
                                     83 ;--------------------------------------------------------
                                     84 ; global & static initialisations
                                     85 ;--------------------------------------------------------
                                     86 	.area HOME    (CODE)
                                     87 	.area GSINIT  (CODE)
                                     88 	.area GSFINAL (CODE)
                                     89 	.area GSINIT  (CODE)
                                     90 ;--------------------------------------------------------
                                     91 ; Home
                                     92 ;--------------------------------------------------------
                                     93 	.area HOME    (CODE)
                                     94 	.area HOME    (CODE)
                                     95 ;--------------------------------------------------------
                                     96 ; code
                                     97 ;--------------------------------------------------------
                                     98 	.area CSEG    (CODE)
                                     99 ;------------------------------------------------------------
                                    100 ;Allocation info for local variables in function 'atanf'
                                    101 ;------------------------------------------------------------
                                    102 ;x                         Allocated to stack - _bp +1
                                    103 ;f                         Allocated to stack - _bp +9
                                    104 ;r                         Allocated to registers r2 r3 r4 r5 
                                    105 ;g                         Allocated to registers r2 r3 r4 r5 
                                    106 ;n                         Allocated to stack - _bp +13
                                    107 ;sloc0                     Allocated to stack - _bp +5
                                    108 ;------------------------------------------------------------
                                    109 ;	atanf.c:55: float atanf(float x) _FLOAT_FUNC_REENTRANT
                                    110 ;	-----------------------------------------
                                    111 ;	 function atanf
                                    112 ;	-----------------------------------------
      000000                        113 _atanf:
                           000002   114 	ar2 = 0x02
                           000003   115 	ar3 = 0x03
                           000004   116 	ar4 = 0x04
                           000005   117 	ar5 = 0x05
                           000006   118 	ar6 = 0x06
                           000007   119 	ar7 = 0x07
                           000000   120 	ar0 = 0x00
                           000001   121 	ar1 = 0x01
      000000 C0*00            [ 8]  122 	push	_bpx
      000002 C0*01            [ 8]  123 	push	_bpx+1
      000004 85 81*00         [12]  124 	mov	_bpx,sp
      000007 85 9B*01         [12]  125 	mov	_bpx+1,esp
      00000A 53*01 03         [12]  126 	anl	_bpx+1,#3
      00000D E5 81            [ 8]  127 	mov	a,sp
      00000F 24 0E            [ 8]  128 	add	a,#0x0E
      000011 F5 81            [ 8]  129 	mov	sp,a
      000013 E5 9B            [ 8]  130 	mov	a,esp
      000015 54 03            [ 8]  131 	anl	a,#3
      000017 34 00            [ 8]  132 	addc	a,#0x00
      000019 F5 9B            [ 8]  133 	mov	esp,a
      00001B 75 95 40         [12]  134 	mov	dpx1,#0x40
      00001E 85*01 85         [12]  135 	mov	dph1,_bpx+1
      000021 85*00 84         [12]  136 	mov	dpl1,_bpx
      000024 75 86 01         [12]  137 	mov	dps,#1
      000027 A3               [12]  138 	inc	dptr
      000028 75 86 01         [12]  139 	mov	dps, #1
      00002B E5 82            [ 8]  140 	mov	a,dpl
      00002D F0               [ 8]  141 	movx	@dptr,a
      00002E A3               [12]  142 	inc	dptr
      00002F E5 83            [ 8]  143 	mov	a,dph
      000031 F0               [ 8]  144 	movx	@dptr,a
      000032 A3               [12]  145 	inc	dptr
      000033 E5 93            [ 8]  146 	mov	a,dpx
      000035 F0               [ 8]  147 	movx	@dptr,a
      000036 A3               [12]  148 	inc	dptr
      000037 E5 F0            [ 8]  149 	mov	a,b
      000039 F0               [ 8]  150 	movx	@dptr,a
      00003A 75 86 00         [12]  151 	mov	dps,#0
                                    152 ;	atanf.c:58: int n=0;
                                    153 ;	genAssign: resultIsFar = TRUE
      00003D E5*00            [ 8]  154 	mov	a,_bpx
      00003F C3               [ 4]  155 	clr	c
      000040 94 F3            [ 8]  156 	subb	a,#0xF3
      000042 F5 82            [ 8]  157 	mov	dpl,a
      000044 E5*01            [ 8]  158 	mov	a,_bpx+1
      000046 94 FF            [ 8]  159 	subb	a,#0xFF
      000048 F5 83            [ 8]  160 	mov	dph,a
      00004A 75 93 40         [12]  161 	mov	dpx,#0x40
      00004D E4               [ 4]  162 	clr	a
      00004E F0               [ 8]  163 	movx	@dptr,a
      00004F A3               [12]  164 	inc	dptr
      000050 F0               [ 8]  165 	movx	@dptr,a
                                    166 ;	atanf.c:61: f=fabsf(x);
      000051 75 95 40         [12]  167 	mov	dpx1,#0x40
      000054 85*01 85         [12]  168 	mov	dph1,_bpx+1
      000057 85*00 84         [12]  169 	mov	dpl1,_bpx
      00005A 75 86 01         [12]  170 	mov	dps,#1
      00005D A3               [12]  171 	inc	dptr
      00005E 75 86 01         [12]  172 	mov	dps, #1
      000061 E0               [ 8]  173 	movx	a,@dptr
      000062 F5 82            [ 8]  174 	mov	dpl,a
      000064 A3               [12]  175 	inc	dptr
      000065 E0               [ 8]  176 	movx	a,@dptr
      000066 F5 83            [ 8]  177 	mov	dph,a
      000068 A3               [12]  178 	inc	dptr
      000069 E0               [ 8]  179 	movx	a,@dptr
      00006A F5 93            [ 8]  180 	mov	dpx,a
      00006C A3               [12]  181 	inc	dptr
      00006D E0               [ 8]  182 	movx	a,@dptr
      00006E F5 F0            [ 8]  183 	mov	b,a
      000070 75 86 00         [12]  184 	mov	dps,#0
      000073 12s00r00r00      [16]  185 	lcall	_fabsf
      000077 A8 82            [ 8]  186 	mov	r0,dpl
      000079 A9 83            [ 8]  187 	mov	r1,dph
      00007B AE 93            [ 8]  188 	mov	r6,dpx
      00007D AF F0            [ 8]  189 	mov	r7,b
                                    190 ;	genAssign: resultIsFar = TRUE
      00007F E5*00            [ 8]  191 	mov	a,_bpx
      000081 C3               [ 4]  192 	clr	c
      000082 94 F7            [ 8]  193 	subb	a,#0xF7
      000084 F5 82            [ 8]  194 	mov	dpl,a
      000086 E5*01            [ 8]  195 	mov	a,_bpx+1
      000088 94 FF            [ 8]  196 	subb	a,#0xFF
      00008A F5 83            [ 8]  197 	mov	dph,a
      00008C 75 93 40         [12]  198 	mov	dpx,#0x40
      00008F E8               [ 4]  199 	mov	a,r0
      000090 F0               [ 8]  200 	movx	@dptr,a
      000091 A3               [12]  201 	inc	dptr
      000092 E9               [ 4]  202 	mov	a,r1
      000093 F0               [ 8]  203 	movx	@dptr,a
      000094 A3               [12]  204 	inc	dptr
      000095 EE               [ 4]  205 	mov	a,r6
      000096 F0               [ 8]  206 	movx	@dptr,a
      000097 A3               [12]  207 	inc	dptr
      000098 EF               [ 4]  208 	mov	a,r7
      000099 F0               [ 8]  209 	movx	@dptr,a
                                    210 ;	atanf.c:62: if(f>1.0)
                                    211 ;	genAssign: resultIsFar = TRUE
      00009A 90s00r00r00      [12]  212 	mov	dptr,#___fsgt_PARM_2
      00009E E4               [ 4]  213 	clr	a
      00009F F0               [ 8]  214 	movx	@dptr,a
      0000A0 A3               [12]  215 	inc	dptr
      0000A1 E4               [ 4]  216 	clr	a
      0000A2 F0               [ 8]  217 	movx	@dptr,a
      0000A3 A3               [12]  218 	inc	dptr
      0000A4 74 80            [ 8]  219 	mov	a,#0x80
      0000A6 F0               [ 8]  220 	movx	@dptr,a
      0000A7 A3               [12]  221 	inc	dptr
      0000A8 74 3F            [ 8]  222 	mov	a,#0x3F
      0000AA F0               [ 8]  223 	movx	@dptr,a
      0000AB E5*00            [ 8]  224 	mov	a,_bpx
      0000AD C3               [ 4]  225 	clr	c
      0000AE 94 F7            [ 8]  226 	subb	a,#0xF7
      0000B0 F5 84            [ 8]  227 	mov	dpl1,a
      0000B2 E5*01            [ 8]  228 	mov	a,_bpx+1
      0000B4 94 FF            [ 8]  229 	subb	a,#0xFF
      0000B6 F5 85            [ 8]  230 	mov	dph1,a
      0000B8 75 95 40         [12]  231 	mov	dpx1,#0x40
      0000BB 05 86            [ 8]  232 	inc	dps
      0000BD E0               [ 8]  233 	movx	a,@dptr
      0000BE F5 82            [ 8]  234 	mov	dpl,a
      0000C0 A3               [12]  235 	inc	dptr
      0000C1 E0               [ 8]  236 	movx	a,@dptr
      0000C2 F5 83            [ 8]  237 	mov	dph,a
      0000C4 A3               [12]  238 	inc	dptr
      0000C5 E0               [ 8]  239 	movx	a,@dptr
      0000C6 F5 93            [ 8]  240 	mov	dpx,a
      0000C8 A3               [12]  241 	inc	dptr
      0000C9 E0               [ 8]  242 	movx	a,@dptr
      0000CA F5 F0            [ 8]  243 	mov	b,a
      0000CC 75 86 00         [12]  244 	mov	dps,#0
      0000CF 12s00r00r00      [16]  245 	lcall	___fsgt
      0000D3 E5 82            [ 8]  246 	mov	a,dpl
      0000D5 60 6F            [12]  247 	jz  00102$
      0000D7                        248 00129$:
                                    249 ;	atanf.c:64: f=1.0/f;
      0000D7 E5*00            [ 8]  250 	mov	a,_bpx
      0000D9 C3               [ 4]  251 	clr	c
      0000DA 94 F7            [ 8]  252 	subb	a,#0xF7
      0000DC F5 82            [ 8]  253 	mov	dpl,a
      0000DE E5*01            [ 8]  254 	mov	a,_bpx+1
      0000E0 94 FF            [ 8]  255 	subb	a,#0xFF
      0000E2 F5 83            [ 8]  256 	mov	dph,a
      0000E4 75 93 40         [12]  257 	mov	dpx,#0x40
                                    258 ;	genAssign: resultIsFar = TRUE
      0000E7 75 86 21         [12]  259 	mov	dps,#0x21
      0000EA 90s00r00r00      [12]  260 	mov	dptr,#___fsdiv_PARM_2
      0000EE E0               [ 8]  261 	movx	a,@dptr
      0000EF F0               [ 8]  262 	movx	@dptr,a
      0000F0 A3               [12]  263 	inc	dptr
      0000F1 A3               [12]  264 	inc	dptr
      0000F2 E0               [ 8]  265 	movx	a,@dptr
      0000F3 F0               [ 8]  266 	movx	@dptr,a
      0000F4 A3               [12]  267 	inc	dptr
      0000F5 A3               [12]  268 	inc	dptr
      0000F6 E0               [ 8]  269 	movx	a,@dptr
      0000F7 F0               [ 8]  270 	movx	@dptr,a
      0000F8 A3               [12]  271 	inc	dptr
      0000F9 A3               [12]  272 	inc	dptr
      0000FA E0               [ 8]  273 	movx	a,@dptr
      0000FB F0               [ 8]  274 	movx	@dptr,a
      0000FC 75 86 00         [12]  275 	mov	dps,#0
      0000FF 90 00 00 00      [12]  276 	mov  dptr,#0x0000
      000103 75 93 80         [12]  277 	mov	dpx,#0x80
      000106 75 F0 3F         [12]  278 	mov	b,#0x3F
      000109 12s00r00r00      [16]  279 	lcall	___fsdiv
      00010D AA 82            [ 8]  280 	mov	r2,dpl
      00010F AB 83            [ 8]  281 	mov	r3,dph
      000111 AC 93            [ 8]  282 	mov	r4,dpx
      000113 AD F0            [ 8]  283 	mov	r5,b
                                    284 ;	genAssign: resultIsFar = TRUE
      000115 E5*00            [ 8]  285 	mov	a,_bpx
      000117 C3               [ 4]  286 	clr	c
      000118 94 F7            [ 8]  287 	subb	a,#0xF7
      00011A F5 82            [ 8]  288 	mov	dpl,a
      00011C E5*01            [ 8]  289 	mov	a,_bpx+1
      00011E 94 FF            [ 8]  290 	subb	a,#0xFF
      000120 F5 83            [ 8]  291 	mov	dph,a
      000122 75 93 40         [12]  292 	mov	dpx,#0x40
      000125 EA               [ 4]  293 	mov	a,r2
      000126 F0               [ 8]  294 	movx	@dptr,a
      000127 A3               [12]  295 	inc	dptr
      000128 EB               [ 4]  296 	mov	a,r3
      000129 F0               [ 8]  297 	movx	@dptr,a
      00012A A3               [12]  298 	inc	dptr
      00012B EC               [ 4]  299 	mov	a,r4
      00012C F0               [ 8]  300 	movx	@dptr,a
      00012D A3               [12]  301 	inc	dptr
      00012E ED               [ 4]  302 	mov	a,r5
      00012F F0               [ 8]  303 	movx	@dptr,a
                                    304 ;	atanf.c:65: n=2;
                                    305 ;	genAssign: resultIsFar = TRUE
      000130 E5*00            [ 8]  306 	mov	a,_bpx
      000132 C3               [ 4]  307 	clr	c
      000133 94 F3            [ 8]  308 	subb	a,#0xF3
      000135 F5 82            [ 8]  309 	mov	dpl,a
      000137 E5*01            [ 8]  310 	mov	a,_bpx+1
      000139 94 FF            [ 8]  311 	subb	a,#0xFF
      00013B F5 83            [ 8]  312 	mov	dph,a
      00013D 75 93 40         [12]  313 	mov	dpx,#0x40
      000140 74 02            [ 8]  314 	mov	a,#0x02
      000142 F0               [ 8]  315 	movx	@dptr,a
      000143 E4               [ 4]  316 	clr	a
      000144 A3               [12]  317 	inc	dptr
      000145 F0               [ 8]  318 	movx	@dptr,a
                                    319 ;	atanf.c:84: return r;
                                    320 ;	atanf.c:65: n=2;
      000146                        321 00102$:
                                    322 ;	atanf.c:67: if(f>K1)
                                    323 ;	genAssign: resultIsFar = TRUE
      000146 90s00r00r00      [12]  324 	mov	dptr,#___fsgt_PARM_2
      00014A 74 A3            [ 8]  325 	mov	a,#0xA3
      00014C F0               [ 8]  326 	movx	@dptr,a
      00014D A3               [12]  327 	inc	dptr
      00014E 74 30            [ 8]  328 	mov	a,#0x30
      000150 F0               [ 8]  329 	movx	@dptr,a
      000151 A3               [12]  330 	inc	dptr
      000152 74 89            [ 8]  331 	mov	a,#0x89
      000154 F0               [ 8]  332 	movx	@dptr,a
      000155 A3               [12]  333 	inc	dptr
      000156 74 3E            [ 8]  334 	mov	a,#0x3E
      000158 F0               [ 8]  335 	movx	@dptr,a
      000159 E5*00            [ 8]  336 	mov	a,_bpx
      00015B C3               [ 4]  337 	clr	c
      00015C 94 F7            [ 8]  338 	subb	a,#0xF7
      00015E F5 84            [ 8]  339 	mov	dpl1,a
      000160 E5*01            [ 8]  340 	mov	a,_bpx+1
      000162 94 FF            [ 8]  341 	subb	a,#0xFF
      000164 F5 85            [ 8]  342 	mov	dph1,a
      000166 75 95 40         [12]  343 	mov	dpx1,#0x40
      000169 05 86            [ 8]  344 	inc	dps
      00016B E0               [ 8]  345 	movx	a,@dptr
      00016C F5 82            [ 8]  346 	mov	dpl,a
      00016E A3               [12]  347 	inc	dptr
      00016F E0               [ 8]  348 	movx	a,@dptr
      000170 F5 83            [ 8]  349 	mov	dph,a
      000172 A3               [12]  350 	inc	dptr
      000173 E0               [ 8]  351 	movx	a,@dptr
      000174 F5 93            [ 8]  352 	mov	dpx,a
      000176 A3               [12]  353 	inc	dptr
      000177 E0               [ 8]  354 	movx	a,@dptr
      000178 F5 F0            [ 8]  355 	mov	b,a
      00017A 75 86 00         [12]  356 	mov	dps,#0
      00017D 12s00r00r00      [16]  357 	lcall	___fsgt
      000181 E5 82            [ 8]  358 	mov	a,dpl
      000183 70 04            [12]  359 	jnz	00130$
      000185 02s00r02rCF      [16]  360 	ljmp	00104$
      000189                        361 00130$:
                                    362 ;	atanf.c:69: f=((K2*f-1.0)+f)/(K3+f);
      000189 E5*00            [ 8]  363 	mov	a,_bpx
      00018B C3               [ 4]  364 	clr	c
      00018C 94 F7            [ 8]  365 	subb	a,#0xF7
      00018E F5 82            [ 8]  366 	mov	dpl,a
      000190 E5*01            [ 8]  367 	mov	a,_bpx+1
      000192 94 FF            [ 8]  368 	subb	a,#0xFF
      000194 F5 83            [ 8]  369 	mov	dph,a
      000196 75 93 40         [12]  370 	mov	dpx,#0x40
                                    371 ;	genAssign: resultIsFar = TRUE
      000199 75 86 21         [12]  372 	mov	dps,#0x21
      00019C 90s00r00r00      [12]  373 	mov	dptr,#___fsmul_PARM_2
      0001A0 E0               [ 8]  374 	movx	a,@dptr
      0001A1 F0               [ 8]  375 	movx	@dptr,a
      0001A2 A3               [12]  376 	inc	dptr
      0001A3 A3               [12]  377 	inc	dptr
      0001A4 E0               [ 8]  378 	movx	a,@dptr
      0001A5 F0               [ 8]  379 	movx	@dptr,a
      0001A6 A3               [12]  380 	inc	dptr
      0001A7 A3               [12]  381 	inc	dptr
      0001A8 E0               [ 8]  382 	movx	a,@dptr
      0001A9 F0               [ 8]  383 	movx	@dptr,a
      0001AA A3               [12]  384 	inc	dptr
      0001AB A3               [12]  385 	inc	dptr
      0001AC E0               [ 8]  386 	movx	a,@dptr
      0001AD F0               [ 8]  387 	movx	@dptr,a
      0001AE 75 86 00         [12]  388 	mov	dps,#0
      0001B1 90 3B 67 AF      [12]  389 	mov	dptr,#0x3B67AF
      0001B5 75 F0 3F         [12]  390 	mov	b,#0x3F
      0001B8 12s00r00r00      [16]  391 	lcall	___fsmul
      0001BC AA 82            [ 8]  392 	mov	r2,dpl
      0001BE AB 83            [ 8]  393 	mov	r3,dph
      0001C0 AC 93            [ 8]  394 	mov	r4,dpx
      0001C2 AD F0            [ 8]  395 	mov	r5,b
                                    396 ;	genAssign: resultIsFar = TRUE
      0001C4 90s00r00r00      [12]  397 	mov	dptr,#___fssub_PARM_2
      0001C8 E4               [ 4]  398 	clr	a
      0001C9 F0               [ 8]  399 	movx	@dptr,a
      0001CA A3               [12]  400 	inc	dptr
      0001CB E4               [ 4]  401 	clr	a
      0001CC F0               [ 8]  402 	movx	@dptr,a
      0001CD A3               [12]  403 	inc	dptr
      0001CE 74 80            [ 8]  404 	mov	a,#0x80
      0001D0 F0               [ 8]  405 	movx	@dptr,a
      0001D1 A3               [12]  406 	inc	dptr
      0001D2 74 3F            [ 8]  407 	mov	a,#0x3F
      0001D4 F0               [ 8]  408 	movx	@dptr,a
      0001D5 8A 82            [ 8]  409 	mov	dpl,r2
      0001D7 8B 83            [ 8]  410 	mov	dph,r3
      0001D9 8C 93            [ 8]  411 	mov	dpx,r4
      0001DB 8D F0            [ 8]  412 	mov	b,r5
      0001DD 12s00r00r00      [16]  413 	lcall	___fssub
      0001E1 AA 82            [ 8]  414 	mov	r2,dpl
      0001E3 AB 83            [ 8]  415 	mov	r3,dph
      0001E5 AC 93            [ 8]  416 	mov	r4,dpx
      0001E7 AD F0            [ 8]  417 	mov	r5,b
      0001E9 E5*00            [ 8]  418 	mov	a,_bpx
      0001EB C3               [ 4]  419 	clr	c
      0001EC 94 F7            [ 8]  420 	subb	a,#0xF7
      0001EE F5 82            [ 8]  421 	mov	dpl,a
      0001F0 E5*01            [ 8]  422 	mov	a,_bpx+1
      0001F2 94 FF            [ 8]  423 	subb	a,#0xFF
      0001F4 F5 83            [ 8]  424 	mov	dph,a
      0001F6 75 93 40         [12]  425 	mov	dpx,#0x40
                                    426 ;	genAssign: resultIsFar = TRUE
      0001F9 75 86 21         [12]  427 	mov	dps,#0x21
      0001FC 90s00r00r00      [12]  428 	mov	dptr,#___fsadd_PARM_2
      000200 E0               [ 8]  429 	movx	a,@dptr
      000201 F0               [ 8]  430 	movx	@dptr,a
      000202 A3               [12]  431 	inc	dptr
      000203 A3               [12]  432 	inc	dptr
      000204 E0               [ 8]  433 	movx	a,@dptr
      000205 F0               [ 8]  434 	movx	@dptr,a
      000206 A3               [12]  435 	inc	dptr
      000207 A3               [12]  436 	inc	dptr
      000208 E0               [ 8]  437 	movx	a,@dptr
      000209 F0               [ 8]  438 	movx	@dptr,a
      00020A A3               [12]  439 	inc	dptr
      00020B A3               [12]  440 	inc	dptr
      00020C E0               [ 8]  441 	movx	a,@dptr
      00020D F0               [ 8]  442 	movx	@dptr,a
      00020E 75 86 00         [12]  443 	mov	dps,#0
      000211 8A 82            [ 8]  444 	mov	dpl,r2
      000213 8B 83            [ 8]  445 	mov	dph,r3
      000215 8C 93            [ 8]  446 	mov	dpx,r4
      000217 8D F0            [ 8]  447 	mov	b,r5
      000219 12s00r00r00      [16]  448 	lcall	___fsadd
      00021D AE 82            [ 8]  449 	mov	r6,dpl
      00021F AF 83            [ 8]  450 	mov	r7,dph
      000221 A8 93            [ 8]  451 	mov	r0,dpx
      000223 A9 F0            [ 8]  452 	mov	r1,b
                                    453 ;	genAssign: resultIsFar = TRUE
      000225 90s00r00r00      [12]  454 	mov	dptr,#___fsadd_PARM_2
      000229 74 D7            [ 8]  455 	mov	a,#0xD7
      00022B F0               [ 8]  456 	movx	@dptr,a
      00022C A3               [12]  457 	inc	dptr
      00022D 74 B3            [ 8]  458 	mov	a,#0xB3
      00022F F0               [ 8]  459 	movx	@dptr,a
      000230 A3               [12]  460 	inc	dptr
      000231 74 DD            [ 8]  461 	mov	a,#0xDD
      000233 F0               [ 8]  462 	movx	@dptr,a
      000234 A3               [12]  463 	inc	dptr
      000235 74 3F            [ 8]  464 	mov	a,#0x3F
      000237 F0               [ 8]  465 	movx	@dptr,a
      000238 C0 06            [ 8]  466 	push	ar6
      00023A C0 07            [ 8]  467 	push	ar7
      00023C C0 00            [ 8]  468 	push	ar0
      00023E C0 01            [ 8]  469 	push	ar1
      000240 E5*00            [ 8]  470 	mov	a,_bpx
      000242 C3               [ 4]  471 	clr	c
      000243 94 F7            [ 8]  472 	subb	a,#0xF7
      000245 F5 84            [ 8]  473 	mov	dpl1,a
      000247 E5*01            [ 8]  474 	mov	a,_bpx+1
      000249 94 FF            [ 8]  475 	subb	a,#0xFF
      00024B F5 85            [ 8]  476 	mov	dph1,a
      00024D 75 95 40         [12]  477 	mov	dpx1,#0x40
      000250 05 86            [ 8]  478 	inc	dps
      000252 E0               [ 8]  479 	movx	a,@dptr
      000253 F5 82            [ 8]  480 	mov	dpl,a
      000255 A3               [12]  481 	inc	dptr
      000256 E0               [ 8]  482 	movx	a,@dptr
      000257 F5 83            [ 8]  483 	mov	dph,a
      000259 A3               [12]  484 	inc	dptr
      00025A E0               [ 8]  485 	movx	a,@dptr
      00025B F5 93            [ 8]  486 	mov	dpx,a
      00025D A3               [12]  487 	inc	dptr
      00025E E0               [ 8]  488 	movx	a,@dptr
      00025F F5 F0            [ 8]  489 	mov	b,a
      000261 75 86 00         [12]  490 	mov	dps,#0
      000264 12s00r00r00      [16]  491 	lcall	___fsadd
      000268 AA 82            [ 8]  492 	mov	r2,dpl
      00026A AB 83            [ 8]  493 	mov	r3,dph
      00026C AC 93            [ 8]  494 	mov	r4,dpx
      00026E AD F0            [ 8]  495 	mov	r5,b
      000270 D0 01            [ 8]  496 	pop	ar1
      000272 D0 00            [ 8]  497 	pop	ar0
      000274 D0 07            [ 8]  498 	pop	ar7
      000276 D0 06            [ 8]  499 	pop	ar6
                                    500 ;	genAssign: resultIsFar = TRUE
      000278 90s00r00r00      [12]  501 	mov	dptr,#___fsdiv_PARM_2
      00027C EA               [ 4]  502 	mov	a,r2
      00027D F0               [ 8]  503 	movx	@dptr,a
      00027E A3               [12]  504 	inc	dptr
      00027F EB               [ 4]  505 	mov	a,r3
      000280 F0               [ 8]  506 	movx	@dptr,a
      000281 A3               [12]  507 	inc	dptr
      000282 EC               [ 4]  508 	mov	a,r4
      000283 F0               [ 8]  509 	movx	@dptr,a
      000284 A3               [12]  510 	inc	dptr
      000285 ED               [ 4]  511 	mov	a,r5
      000286 F0               [ 8]  512 	movx	@dptr,a
      000287 8E 82            [ 8]  513 	mov	dpl,r6
      000289 8F 83            [ 8]  514 	mov	dph,r7
      00028B 88 93            [ 8]  515 	mov	dpx,r0
      00028D 89 F0            [ 8]  516 	mov	b,r1
      00028F 12s00r00r00      [16]  517 	lcall	___fsdiv
      000293 AA 82            [ 8]  518 	mov	r2,dpl
      000295 AB 83            [ 8]  519 	mov	r3,dph
      000297 AC 93            [ 8]  520 	mov	r4,dpx
      000299 AD F0            [ 8]  521 	mov	r5,b
                                    522 ;	genAssign: resultIsFar = TRUE
      00029B E5*00            [ 8]  523 	mov	a,_bpx
      00029D C3               [ 4]  524 	clr	c
      00029E 94 F7            [ 8]  525 	subb	a,#0xF7
      0002A0 F5 82            [ 8]  526 	mov	dpl,a
      0002A2 E5*01            [ 8]  527 	mov	a,_bpx+1
      0002A4 94 FF            [ 8]  528 	subb	a,#0xFF
      0002A6 F5 83            [ 8]  529 	mov	dph,a
      0002A8 75 93 40         [12]  530 	mov	dpx,#0x40
      0002AB EA               [ 4]  531 	mov	a,r2
      0002AC F0               [ 8]  532 	movx	@dptr,a
      0002AD A3               [12]  533 	inc	dptr
      0002AE EB               [ 4]  534 	mov	a,r3
      0002AF F0               [ 8]  535 	movx	@dptr,a
      0002B0 A3               [12]  536 	inc	dptr
      0002B1 EC               [ 4]  537 	mov	a,r4
      0002B2 F0               [ 8]  538 	movx	@dptr,a
      0002B3 A3               [12]  539 	inc	dptr
      0002B4 ED               [ 4]  540 	mov	a,r5
      0002B5 F0               [ 8]  541 	movx	@dptr,a
                                    542 ;	atanf.c:73: n++;
      0002B6 E5*00            [ 8]  543 	mov	a,_bpx
      0002B8 C3               [ 4]  544 	clr	c
      0002B9 94 F3            [ 8]  545 	subb	a,#0xF3
      0002BB F5 82            [ 8]  546 	mov	dpl,a
      0002BD E5*01            [ 8]  547 	mov	a,_bpx+1
      0002BF 94 FF            [ 8]  548 	subb	a,#0xFF
      0002C1 F5 83            [ 8]  549 	mov	dph,a
      0002C3 75 93 40         [12]  550 	mov	dpx,#0x40
      0002C6 E0               [ 8]  551 	movx	a,@dptr
      0002C7 24 01            [ 8]  552 	add	a,#0x01
      0002C9 F0               [ 8]  553 	movx	@dptr,a
      0002CA A3               [12]  554 	inc	dptr
      0002CB E0               [ 8]  555 	movx	a,@dptr
      0002CC 34 00            [ 8]  556 	addc	a,#0x00
      0002CE F0               [ 8]  557 	movx	@dptr,a
                                    558 ;	atanf.c:84: return r;
                                    559 ;	atanf.c:73: n++;
      0002CF                        560 00104$:
                                    561 ;	atanf.c:75: if(fabsf(f)<EPS) r=f;
      0002CF E5*00            [ 8]  562 	mov	a,_bpx
      0002D1 C3               [ 4]  563 	clr	c
      0002D2 94 F7            [ 8]  564 	subb	a,#0xF7
      0002D4 F5 84            [ 8]  565 	mov	dpl1,a
      0002D6 E5*01            [ 8]  566 	mov	a,_bpx+1
      0002D8 94 FF            [ 8]  567 	subb	a,#0xFF
      0002DA F5 85            [ 8]  568 	mov	dph1,a
      0002DC 75 95 40         [12]  569 	mov	dpx1,#0x40
      0002DF 05 86            [ 8]  570 	inc	dps
      0002E1 E0               [ 8]  571 	movx	a,@dptr
      0002E2 F5 82            [ 8]  572 	mov	dpl,a
      0002E4 A3               [12]  573 	inc	dptr
      0002E5 E0               [ 8]  574 	movx	a,@dptr
      0002E6 F5 83            [ 8]  575 	mov	dph,a
      0002E8 A3               [12]  576 	inc	dptr
      0002E9 E0               [ 8]  577 	movx	a,@dptr
      0002EA F5 93            [ 8]  578 	mov	dpx,a
      0002EC A3               [12]  579 	inc	dptr
      0002ED E0               [ 8]  580 	movx	a,@dptr
      0002EE F5 F0            [ 8]  581 	mov	b,a
      0002F0 75 86 00         [12]  582 	mov	dps,#0
      0002F3 12s00r00r00      [16]  583 	lcall	_fabsf
      0002F7 AA 82            [ 8]  584 	mov	r2,dpl
      0002F9 AB 83            [ 8]  585 	mov	r3,dph
      0002FB AC 93            [ 8]  586 	mov	r4,dpx
      0002FD AD F0            [ 8]  587 	mov	r5,b
                                    588 ;	genAssign: resultIsFar = TRUE
      0002FF 90s00r00r00      [12]  589 	mov	dptr,#___fslt_PARM_2
      000303 E4               [ 4]  590 	clr	a
      000304 F0               [ 8]  591 	movx	@dptr,a
      000305 A3               [12]  592 	inc	dptr
      000306 E4               [ 4]  593 	clr	a
      000307 F0               [ 8]  594 	movx	@dptr,a
      000308 A3               [12]  595 	inc	dptr
      000309 74 80            [ 8]  596 	mov	a,#0x80
      00030B F0               [ 8]  597 	movx	@dptr,a
      00030C A3               [12]  598 	inc	dptr
      00030D 74 39            [ 8]  599 	mov	a,#0x39
      00030F F0               [ 8]  600 	movx	@dptr,a
      000310 8A 82            [ 8]  601 	mov	dpl,r2
      000312 8B 83            [ 8]  602 	mov	dph,r3
      000314 8C 93            [ 8]  603 	mov	dpx,r4
      000316 8D F0            [ 8]  604 	mov	b,r5
      000318 12s00r00r00      [16]  605 	lcall	___fslt
      00031C E5 82            [ 8]  606 	mov	a,dpl
      00031E 60 1F            [12]  607 	jz  00106$
      000320                        608 00131$:
      000320 E5*00            [ 8]  609 	mov	a,_bpx
      000322 C3               [ 4]  610 	clr	c
      000323 94 F7            [ 8]  611 	subb	a,#0xF7
      000325 F5 82            [ 8]  612 	mov	dpl,a
      000327 E5*01            [ 8]  613 	mov	a,_bpx+1
      000329 94 FF            [ 8]  614 	subb	a,#0xFF
      00032B F5 83            [ 8]  615 	mov	dph,a
      00032D 75 93 40         [12]  616 	mov	dpx,#0x40
                                    617 ;	genAssign: resultIsFar = TRUE
      000330 E0               [ 8]  618 	movx	a,@dptr
      000331 FA               [ 4]  619 	mov	r2,a
      000332 A3               [12]  620 	inc	dptr
      000333 E0               [ 8]  621 	movx	a,@dptr
      000334 FB               [ 4]  622 	mov	r3,a
      000335 A3               [12]  623 	inc	dptr
      000336 E0               [ 8]  624 	movx	a,@dptr
      000337 FC               [ 4]  625 	mov	r4,a
      000338 A3               [12]  626 	inc	dptr
      000339 E0               [ 8]  627 	movx	a,@dptr
      00033A FD               [ 4]  628 	mov	r5,a
      00033B 02s00r05r50      [16]  629 	ljmp	00107$
      00033F                        630 00106$:
                                    631 ;	atanf.c:78: g=f*f;
      00033F E5*00            [ 8]  632 	mov	a,_bpx
      000341 C3               [ 4]  633 	clr	c
      000342 94 F7            [ 8]  634 	subb	a,#0xF7
      000344 F5 82            [ 8]  635 	mov	dpl,a
      000346 E5*01            [ 8]  636 	mov	a,_bpx+1
      000348 94 FF            [ 8]  637 	subb	a,#0xFF
      00034A F5 83            [ 8]  638 	mov	dph,a
      00034C 75 93 40         [12]  639 	mov	dpx,#0x40
                                    640 ;	genAssign: resultIsFar = TRUE
      00034F 75 86 21         [12]  641 	mov	dps,#0x21
      000352 90s00r00r00      [12]  642 	mov	dptr,#___fsmul_PARM_2
      000356 E0               [ 8]  643 	movx	a,@dptr
      000357 F0               [ 8]  644 	movx	@dptr,a
      000358 A3               [12]  645 	inc	dptr
      000359 A3               [12]  646 	inc	dptr
      00035A E0               [ 8]  647 	movx	a,@dptr
      00035B F0               [ 8]  648 	movx	@dptr,a
      00035C A3               [12]  649 	inc	dptr
      00035D A3               [12]  650 	inc	dptr
      00035E E0               [ 8]  651 	movx	a,@dptr
      00035F F0               [ 8]  652 	movx	@dptr,a
      000360 A3               [12]  653 	inc	dptr
      000361 A3               [12]  654 	inc	dptr
      000362 E0               [ 8]  655 	movx	a,@dptr
      000363 F0               [ 8]  656 	movx	@dptr,a
      000364 75 86 00         [12]  657 	mov	dps,#0
      000367 E5*00            [ 8]  658 	mov	a,_bpx
      000369 C3               [ 4]  659 	clr	c
      00036A 94 F7            [ 8]  660 	subb	a,#0xF7
      00036C F5 84            [ 8]  661 	mov	dpl1,a
      00036E E5*01            [ 8]  662 	mov	a,_bpx+1
      000370 94 FF            [ 8]  663 	subb	a,#0xFF
      000372 F5 85            [ 8]  664 	mov	dph1,a
      000374 75 95 40         [12]  665 	mov	dpx1,#0x40
      000377 05 86            [ 8]  666 	inc	dps
      000379 E0               [ 8]  667 	movx	a,@dptr
      00037A F5 82            [ 8]  668 	mov	dpl,a
      00037C A3               [12]  669 	inc	dptr
      00037D E0               [ 8]  670 	movx	a,@dptr
      00037E F5 83            [ 8]  671 	mov	dph,a
      000380 A3               [12]  672 	inc	dptr
      000381 E0               [ 8]  673 	movx	a,@dptr
      000382 F5 93            [ 8]  674 	mov	dpx,a
      000384 A3               [12]  675 	inc	dptr
      000385 E0               [ 8]  676 	movx	a,@dptr
      000386 F5 F0            [ 8]  677 	mov	b,a
      000388 75 86 00         [12]  678 	mov	dps,#0
      00038B 12s00r00r00      [16]  679 	lcall	___fsmul
      00038F AE 82            [ 8]  680 	mov	r6,dpl
      000391 AF 83            [ 8]  681 	mov	r7,dph
      000393 A8 93            [ 8]  682 	mov	r0,dpx
      000395 A9 F0            [ 8]  683 	mov	r1,b
                                    684 ;	genAssign: resultIsFar = FALSE
      000397 8E 02            [ 8]  685 	mov	ar2,r6
      000399 8F 03            [ 8]  686 	mov	ar3,r7
      00039B 88 04            [ 8]  687 	mov	ar4,r0
      00039D 89 05            [ 8]  688 	mov	ar5,r1
                                    689 ;	atanf.c:79: r=f+P(g,f)/Q(g);
                                    690 ;	genAssign: resultIsFar = TRUE
      00039F 90s00r00r00      [12]  691 	mov	dptr,#___fsmul_PARM_2
      0003A3 EA               [ 4]  692 	mov	a,r2
      0003A4 F0               [ 8]  693 	movx	@dptr,a
      0003A5 A3               [12]  694 	inc	dptr
      0003A6 EB               [ 4]  695 	mov	a,r3
      0003A7 F0               [ 8]  696 	movx	@dptr,a
      0003A8 A3               [12]  697 	inc	dptr
      0003A9 EC               [ 4]  698 	mov	a,r4
      0003AA F0               [ 8]  699 	movx	@dptr,a
      0003AB A3               [12]  700 	inc	dptr
      0003AC ED               [ 4]  701 	mov	a,r5
      0003AD F0               [ 8]  702 	movx	@dptr,a
      0003AE C0 02            [ 8]  703 	push	ar2
      0003B0 C0 03            [ 8]  704 	push	ar3
      0003B2 C0 04            [ 8]  705 	push	ar4
      0003B4 C0 05            [ 8]  706 	push	ar5
      0003B6 90 50 86 91      [12]  707 	mov	dptr,#0x508691
      0003BA 75 F0 BD         [12]  708 	mov	b,#0xBD
      0003BD 12s00r00r00      [16]  709 	lcall	___fsmul
      0003C1 AE 82            [ 8]  710 	mov	r6,dpl
      0003C3 AF 83            [ 8]  711 	mov	r7,dph
      0003C5 A8 93            [ 8]  712 	mov	r0,dpx
      0003C7 A9 F0            [ 8]  713 	mov	r1,b
      0003C9 D0 05            [ 8]  714 	pop	ar5
      0003CB D0 04            [ 8]  715 	pop	ar4
      0003CD D0 03            [ 8]  716 	pop	ar3
      0003CF D0 02            [ 8]  717 	pop	ar2
                                    718 ;	genAssign: resultIsFar = TRUE
      0003D1 90s00r00r00      [12]  719 	mov	dptr,#___fsadd_PARM_2
      0003D5 74 F6            [ 8]  720 	mov	a,#0xF6
      0003D7 F0               [ 8]  721 	movx	@dptr,a
      0003D8 A3               [12]  722 	inc	dptr
      0003D9 74 10            [ 8]  723 	mov	a,#0x10
      0003DB F0               [ 8]  724 	movx	@dptr,a
      0003DC A3               [12]  725 	inc	dptr
      0003DD 74 F1            [ 8]  726 	mov	a,#0xF1
      0003DF F0               [ 8]  727 	movx	@dptr,a
      0003E0 A3               [12]  728 	inc	dptr
      0003E1 74 BE            [ 8]  729 	mov	a,#0xBE
      0003E3 F0               [ 8]  730 	movx	@dptr,a
      0003E4 C0 02            [ 8]  731 	push	ar2
      0003E6 C0 03            [ 8]  732 	push	ar3
      0003E8 C0 04            [ 8]  733 	push	ar4
      0003EA C0 05            [ 8]  734 	push	ar5
      0003EC 8E 82            [ 8]  735 	mov	dpl,r6
      0003EE 8F 83            [ 8]  736 	mov	dph,r7
      0003F0 88 93            [ 8]  737 	mov	dpx,r0
      0003F2 89 F0            [ 8]  738 	mov	b,r1
      0003F4 12s00r00r00      [16]  739 	lcall	___fsadd
      0003F8 AE 82            [ 8]  740 	mov	r6,dpl
      0003FA AF 83            [ 8]  741 	mov	r7,dph
      0003FC A8 93            [ 8]  742 	mov	r0,dpx
      0003FE A9 F0            [ 8]  743 	mov	r1,b
      000400 D0 05            [ 8]  744 	pop	ar5
      000402 D0 04            [ 8]  745 	pop	ar4
      000404 D0 03            [ 8]  746 	pop	ar3
      000406 D0 02            [ 8]  747 	pop	ar2
                                    748 ;	genAssign: resultIsFar = TRUE
      000408 90s00r00r00      [12]  749 	mov	dptr,#___fsmul_PARM_2
      00040C EA               [ 4]  750 	mov	a,r2
      00040D F0               [ 8]  751 	movx	@dptr,a
      00040E A3               [12]  752 	inc	dptr
      00040F EB               [ 4]  753 	mov	a,r3
      000410 F0               [ 8]  754 	movx	@dptr,a
      000411 A3               [12]  755 	inc	dptr
      000412 EC               [ 4]  756 	mov	a,r4
      000413 F0               [ 8]  757 	movx	@dptr,a
      000414 A3               [12]  758 	inc	dptr
      000415 ED               [ 4]  759 	mov	a,r5
      000416 F0               [ 8]  760 	movx	@dptr,a
      000417 C0 02            [ 8]  761 	push	ar2
      000419 C0 03            [ 8]  762 	push	ar3
      00041B C0 04            [ 8]  763 	push	ar4
      00041D C0 05            [ 8]  764 	push	ar5
      00041F 8E 82            [ 8]  765 	mov	dpl,r6
      000421 8F 83            [ 8]  766 	mov	dph,r7
      000423 88 93            [ 8]  767 	mov	dpx,r0
      000425 89 F0            [ 8]  768 	mov	b,r1
      000427 12s00r00r00      [16]  769 	lcall	___fsmul
      00042B AE 82            [ 8]  770 	mov	r6,dpl
      00042D AF 83            [ 8]  771 	mov	r7,dph
      00042F A8 93            [ 8]  772 	mov	r0,dpx
      000431 A9 F0            [ 8]  773 	mov	r1,b
      000433 D0 05            [ 8]  774 	pop	ar5
      000435 D0 04            [ 8]  775 	pop	ar4
      000437 D0 03            [ 8]  776 	pop	ar3
      000439 D0 02            [ 8]  777 	pop	ar2
      00043B E5*00            [ 8]  778 	mov	a,_bpx
      00043D C3               [ 4]  779 	clr	c
      00043E 94 F7            [ 8]  780 	subb	a,#0xF7
      000440 F5 82            [ 8]  781 	mov	dpl,a
      000442 E5*01            [ 8]  782 	mov	a,_bpx+1
      000444 94 FF            [ 8]  783 	subb	a,#0xFF
      000446 F5 83            [ 8]  784 	mov	dph,a
      000448 75 93 40         [12]  785 	mov	dpx,#0x40
                                    786 ;	genAssign: resultIsFar = TRUE
      00044B 75 86 21         [12]  787 	mov	dps,#0x21
      00044E 90s00r00r00      [12]  788 	mov	dptr,#___fsmul_PARM_2
      000452 E0               [ 8]  789 	movx	a,@dptr
      000453 F0               [ 8]  790 	movx	@dptr,a
      000454 A3               [12]  791 	inc	dptr
      000455 A3               [12]  792 	inc	dptr
      000456 E0               [ 8]  793 	movx	a,@dptr
      000457 F0               [ 8]  794 	movx	@dptr,a
      000458 A3               [12]  795 	inc	dptr
      000459 A3               [12]  796 	inc	dptr
      00045A E0               [ 8]  797 	movx	a,@dptr
      00045B F0               [ 8]  798 	movx	@dptr,a
      00045C A3               [12]  799 	inc	dptr
      00045D A3               [12]  800 	inc	dptr
      00045E E0               [ 8]  801 	movx	a,@dptr
      00045F F0               [ 8]  802 	movx	@dptr,a
      000460 75 86 00         [12]  803 	mov	dps,#0
      000463 C0 02            [ 8]  804 	push	ar2
      000465 C0 03            [ 8]  805 	push	ar3
      000467 C0 04            [ 8]  806 	push	ar4
      000469 C0 05            [ 8]  807 	push	ar5
      00046B 8E 82            [ 8]  808 	mov	dpl,r6
      00046D 8F 83            [ 8]  809 	mov	dph,r7
      00046F 88 93            [ 8]  810 	mov	dpx,r0
      000471 89 F0            [ 8]  811 	mov	b,r1
      000473 12s00r00r00      [16]  812 	lcall	___fsmul
      000477 E5*00            [ 8]  813 	mov	a,_bpx
      000479 C3               [ 4]  814 	clr	c
      00047A 94 FB            [ 8]  815 	subb	a,#0xFB
      00047C F5 84            [ 8]  816 	mov	dpl1,a
      00047E E5*01            [ 8]  817 	mov	a,_bpx+1
      000480 94 FF            [ 8]  818 	subb	a,#0xFF
      000482 F5 85            [ 8]  819 	mov	dph1,a
      000484 75 95 40         [12]  820 	mov	dpx1,#0x40
      000487 05 86            [ 8]  821 	inc	dps
      000489 E5 82            [ 8]  822 	mov	a,dpl
      00048B F0               [ 8]  823 	movx	@dptr,a
      00048C A3               [12]  824 	inc	dptr
      00048D E5 83            [ 8]  825 	mov	a,dph
      00048F F0               [ 8]  826 	movx	@dptr,a
      000490 A3               [12]  827 	inc	dptr
      000491 E5 93            [ 8]  828 	mov	a,dpx
      000493 F0               [ 8]  829 	movx	@dptr,a
      000494 A3               [12]  830 	inc	dptr
      000495 E5 F0            [ 8]  831 	mov	a,b
      000497 F0               [ 8]  832 	movx	@dptr,a
      000498 75 86 00         [12]  833 	mov	dps,#0
      00049B D0 05            [ 8]  834 	pop	ar5
      00049D D0 04            [ 8]  835 	pop	ar4
      00049F D0 03            [ 8]  836 	pop	ar3
      0004A1 D0 02            [ 8]  837 	pop	ar2
                                    838 ;	genAssign: resultIsFar = TRUE
      0004A3 90s00r00r00      [12]  839 	mov	dptr,#___fsadd_PARM_2
      0004A7 74 D3            [ 8]  840 	mov	a,#0xD3
      0004A9 F0               [ 8]  841 	movx	@dptr,a
      0004AA A3               [12]  842 	inc	dptr
      0004AB 74 CC            [ 8]  843 	mov	a,#0xCC
      0004AD F0               [ 8]  844 	movx	@dptr,a
      0004AE A3               [12]  845 	inc	dptr
      0004AF 74 B4            [ 8]  846 	mov	a,#0xB4
      0004B1 F0               [ 8]  847 	movx	@dptr,a
      0004B2 A3               [12]  848 	inc	dptr
      0004B3 74 3F            [ 8]  849 	mov	a,#0x3F
      0004B5 F0               [ 8]  850 	movx	@dptr,a
      0004B6 8A 82            [ 8]  851 	mov	dpl,r2
      0004B8 8B 83            [ 8]  852 	mov	dph,r3
      0004BA 8C 93            [ 8]  853 	mov	dpx,r4
      0004BC 8D F0            [ 8]  854 	mov	b,r5
      0004BE 12s00r00r00      [16]  855 	lcall	___fsadd
      0004C2 AE 82            [ 8]  856 	mov	r6,dpl
      0004C4 AF 83            [ 8]  857 	mov	r7,dph
      0004C6 A8 93            [ 8]  858 	mov	r0,dpx
      0004C8 A9 F0            [ 8]  859 	mov	r1,b
                                    860 ;	genAssign: resultIsFar = TRUE
      0004CA 90s00r00r00      [12]  861 	mov	dptr,#___fsdiv_PARM_2
      0004CE EE               [ 4]  862 	mov	a,r6
      0004CF F0               [ 8]  863 	movx	@dptr,a
      0004D0 A3               [12]  864 	inc	dptr
      0004D1 EF               [ 4]  865 	mov	a,r7
      0004D2 F0               [ 8]  866 	movx	@dptr,a
      0004D3 A3               [12]  867 	inc	dptr
      0004D4 E8               [ 4]  868 	mov	a,r0
      0004D5 F0               [ 8]  869 	movx	@dptr,a
      0004D6 A3               [12]  870 	inc	dptr
      0004D7 E9               [ 4]  871 	mov	a,r1
      0004D8 F0               [ 8]  872 	movx	@dptr,a
      0004D9 E5*00            [ 8]  873 	mov	a,_bpx
      0004DB C3               [ 4]  874 	clr	c
      0004DC 94 FB            [ 8]  875 	subb	a,#0xFB
      0004DE F5 84            [ 8]  876 	mov	dpl1,a
      0004E0 E5*01            [ 8]  877 	mov	a,_bpx+1
      0004E2 94 FF            [ 8]  878 	subb	a,#0xFF
      0004E4 F5 85            [ 8]  879 	mov	dph1,a
      0004E6 75 95 40         [12]  880 	mov	dpx1,#0x40
      0004E9 05 86            [ 8]  881 	inc	dps
      0004EB E0               [ 8]  882 	movx	a,@dptr
      0004EC F5 82            [ 8]  883 	mov	dpl,a
      0004EE A3               [12]  884 	inc	dptr
      0004EF E0               [ 8]  885 	movx	a,@dptr
      0004F0 F5 83            [ 8]  886 	mov	dph,a
      0004F2 A3               [12]  887 	inc	dptr
      0004F3 E0               [ 8]  888 	movx	a,@dptr
      0004F4 F5 93            [ 8]  889 	mov	dpx,a
      0004F6 A3               [12]  890 	inc	dptr
      0004F7 E0               [ 8]  891 	movx	a,@dptr
      0004F8 F5 F0            [ 8]  892 	mov	b,a
      0004FA 75 86 00         [12]  893 	mov	dps,#0
      0004FD 12s00r00r00      [16]  894 	lcall	___fsdiv
      000501 AE 82            [ 8]  895 	mov	r6,dpl
      000503 AF 83            [ 8]  896 	mov	r7,dph
      000505 A8 93            [ 8]  897 	mov	r0,dpx
      000507 A9 F0            [ 8]  898 	mov	r1,b
                                    899 ;	genAssign: resultIsFar = TRUE
      000509 90s00r00r00      [12]  900 	mov	dptr,#___fsadd_PARM_2
      00050D EE               [ 4]  901 	mov	a,r6
      00050E F0               [ 8]  902 	movx	@dptr,a
      00050F A3               [12]  903 	inc	dptr
      000510 EF               [ 4]  904 	mov	a,r7
      000511 F0               [ 8]  905 	movx	@dptr,a
      000512 A3               [12]  906 	inc	dptr
      000513 E8               [ 4]  907 	mov	a,r0
      000514 F0               [ 8]  908 	movx	@dptr,a
      000515 A3               [12]  909 	inc	dptr
      000516 E9               [ 4]  910 	mov	a,r1
      000517 F0               [ 8]  911 	movx	@dptr,a
      000518 E5*00            [ 8]  912 	mov	a,_bpx
      00051A C3               [ 4]  913 	clr	c
      00051B 94 F7            [ 8]  914 	subb	a,#0xF7
      00051D F5 84            [ 8]  915 	mov	dpl1,a
      00051F E5*01            [ 8]  916 	mov	a,_bpx+1
      000521 94 FF            [ 8]  917 	subb	a,#0xFF
      000523 F5 85            [ 8]  918 	mov	dph1,a
      000525 75 95 40         [12]  919 	mov	dpx1,#0x40
      000528 05 86            [ 8]  920 	inc	dps
      00052A E0               [ 8]  921 	movx	a,@dptr
      00052B F5 82            [ 8]  922 	mov	dpl,a
      00052D A3               [12]  923 	inc	dptr
      00052E E0               [ 8]  924 	movx	a,@dptr
      00052F F5 83            [ 8]  925 	mov	dph,a
      000531 A3               [12]  926 	inc	dptr
      000532 E0               [ 8]  927 	movx	a,@dptr
      000533 F5 93            [ 8]  928 	mov	dpx,a
      000535 A3               [12]  929 	inc	dptr
      000536 E0               [ 8]  930 	movx	a,@dptr
      000537 F5 F0            [ 8]  931 	mov	b,a
      000539 75 86 00         [12]  932 	mov	dps,#0
      00053C 12s00r00r00      [16]  933 	lcall	___fsadd
      000540 AE 82            [ 8]  934 	mov	r6,dpl
      000542 AF 83            [ 8]  935 	mov	r7,dph
      000544 A8 93            [ 8]  936 	mov	r0,dpx
      000546 A9 F0            [ 8]  937 	mov	r1,b
                                    938 ;	genAssign: resultIsFar = TRUE
      000548 8E 02            [ 8]  939 	mov	ar2,r6
      00054A 8F 03            [ 8]  940 	mov	ar3,r7
      00054C 88 04            [ 8]  941 	mov	ar4,r0
      00054E 89 05            [ 8]  942 	mov	ar5,r1
      000550                        943 00107$:
                                    944 ;	atanf.c:81: if(n>1) r=-r;
      000550 E5*00            [ 8]  945 	mov	a,_bpx
      000552 C3               [ 4]  946 	clr	c
      000553 94 F3            [ 8]  947 	subb	a,#0xF3
      000555 F5 82            [ 8]  948 	mov	dpl,a
      000557 E5*01            [ 8]  949 	mov	a,_bpx+1
      000559 94 FF            [ 8]  950 	subb	a,#0xFF
      00055B F5 83            [ 8]  951 	mov	dph,a
      00055D 75 93 40         [12]  952 	mov	dpx,#0x40
      000560 C3               [ 4]  953 	clr	c
      000561 74 01            [ 8]  954 	mov	a,#0x01
      000563 C5 F0            [ 8]  955 	xch	a, b
      000565 E0               [ 8]  956 	movx	a,@dptr
      000566 C5 F0            [ 8]  957 	xch	a, b
      000568 95 F0            [ 8]  958 	subb	a,b
      00056A E4               [ 4]  959 	clr	a
      00056B 64 80            [ 8]  960 	xrl	a,#0x80
      00056D C5 F0            [ 8]  961 	xch	a, b
      00056F A3               [12]  962 	inc	dptr
      000570 E0               [ 8]  963 	movx	a,@dptr
      000571 C5 F0            [ 8]  964 	xch	a, b
      000573 63 F0 80         [12]  965 	xrl	b,#0x80
      000576 95 F0            [ 8]  966 	subb	a,b
      000578 50 04            [12]  967 	jnc  00109$
      00057A                        968 00132$:
      00057A ED               [ 4]  969 	mov	a,r5
      00057B B2 E7            [ 8]  970 	cpl	acc[7]
      00057D FD               [ 4]  971 	mov	r5,a
      00057E                        972 00109$:
                                    973 ;	atanf.c:82: r+=a[n];
      00057E E5*00            [ 8]  974 	mov	a,_bpx
      000580 C3               [ 4]  975 	clr	c
      000581 94 F3            [ 8]  976 	subb	a,#0xF3
      000583 F5 82            [ 8]  977 	mov	dpl,a
      000585 E5*01            [ 8]  978 	mov	a,_bpx+1
      000587 94 FF            [ 8]  979 	subb	a,#0xFF
      000589 F5 83            [ 8]  980 	mov	dph,a
      00058B 75 93 40         [12]  981 	mov	dpx,#0x40
      00058E E0               [ 8]  982 	movx	a,@dptr
      00058F FE               [ 4]  983 	mov	r6,a
      000590 A3               [12]  984 	inc	dptr
      000591 E0               [ 8]  985 	movx	a,@dptr
      000592 CE               [ 4]  986 	xch	a,r6
      000593 25 E0            [ 8]  987 	add	a,acc
      000595 CE               [ 4]  988 	xch	a,r6
      000596 33               [ 4]  989 	rlc	a
      000597 CE               [ 4]  990 	xch	a,r6
      000598 25 E0            [ 8]  991 	add	a,acc
      00059A CE               [ 4]  992 	xch	a,r6
      00059B 33               [ 4]  993 	rlc	a
      00059C FF               [ 4]  994 	mov	r7,a
      00059D EE               [ 4]  995 	mov	a,r6
      00059E 24r00            [ 8]  996 	add	a,#_atanf_a_1_24
      0005A0 F5 82            [ 8]  997 	mov	dpl,a
      0005A2 EF               [ 4]  998 	mov	a,r7
      0005A3 34s00            [ 8]  999 	addc	a,#(_atanf_a_1_24 >> 8)
      0005A5 F5 83            [ 8] 1000 	mov	dph,a
      0005A7 E4               [ 4] 1001 	clr	a
      0005A8 34s00            [ 8] 1002 	addc	a,#(_atanf_a_1_24 >> 16)
      0005AA F5 93            [ 8] 1003 	mov	dpx,a
      0005AC E4               [ 4] 1004 	clr	a
      0005AD 93               [12] 1005 	movc	a,@a+dptr
      0005AE A3               [12] 1006 	inc	dptr
      0005AF FE               [ 4] 1007 	mov	r6,a
      0005B0 E4               [ 4] 1008 	clr	a
      0005B1 93               [12] 1009 	movc	a,@a+dptr
      0005B2 A3               [12] 1010 	inc	dptr
      0005B3 FF               [ 4] 1011 	mov	r7,a
      0005B4 E4               [ 4] 1012 	clr	a
      0005B5 93               [12] 1013 	movc	a,@a+dptr
      0005B6 A3               [12] 1014 	inc	dptr
      0005B7 F8               [ 4] 1015 	mov	r0,a
      0005B8 E4               [ 4] 1016 	clr	a
      0005B9 93               [12] 1017 	movc	a,@a+dptr
      0005BA F9               [ 4] 1018 	mov	r1,a
                                   1019 ;	genAssign: resultIsFar = TRUE
      0005BB 90s00r00r00      [12] 1020 	mov	dptr,#___fsadd_PARM_2
      0005BF EE               [ 4] 1021 	mov	a,r6
      0005C0 F0               [ 8] 1022 	movx	@dptr,a
      0005C1 A3               [12] 1023 	inc	dptr
      0005C2 EF               [ 4] 1024 	mov	a,r7
      0005C3 F0               [ 8] 1025 	movx	@dptr,a
      0005C4 A3               [12] 1026 	inc	dptr
      0005C5 E8               [ 4] 1027 	mov	a,r0
      0005C6 F0               [ 8] 1028 	movx	@dptr,a
      0005C7 A3               [12] 1029 	inc	dptr
      0005C8 E9               [ 4] 1030 	mov	a,r1
      0005C9 F0               [ 8] 1031 	movx	@dptr,a
      0005CA 8A 82            [ 8] 1032 	mov	dpl,r2
      0005CC 8B 83            [ 8] 1033 	mov	dph,r3
      0005CE 8C 93            [ 8] 1034 	mov	dpx,r4
      0005D0 8D F0            [ 8] 1035 	mov	b,r5
      0005D2 12s00r00r00      [16] 1036 	lcall	___fsadd
      0005D6 AE 82            [ 8] 1037 	mov	r6,dpl
      0005D8 AF 83            [ 8] 1038 	mov	r7,dph
      0005DA A8 93            [ 8] 1039 	mov	r0,dpx
      0005DC A9 F0            [ 8] 1040 	mov	r1,b
                                   1041 ;	genAssign: resultIsFar = TRUE
      0005DE 8E 02            [ 8] 1042 	mov	ar2,r6
      0005E0 8F 03            [ 8] 1043 	mov	ar3,r7
      0005E2 88 04            [ 8] 1044 	mov	ar4,r0
      0005E4 89 05            [ 8] 1045 	mov	ar5,r1
                                   1046 ;	atanf.c:83: if(x<0.0) r=-r;
                                   1047 ;	genAssign: resultIsFar = TRUE
      0005E6 90s00r00r00      [12] 1048 	mov	dptr,#___fslt_PARM_2
      0005EA E4               [ 4] 1049 	clr	a
      0005EB F0               [ 8] 1050 	movx	@dptr,a
      0005EC A3               [12] 1051 	inc	dptr
      0005ED F0               [ 8] 1052 	movx	@dptr,a
      0005EE A3               [12] 1053 	inc	dptr
      0005EF F0               [ 8] 1054 	movx	@dptr,a
      0005F0 A3               [12] 1055 	inc	dptr
      0005F1 F0               [ 8] 1056 	movx	@dptr,a
      0005F2 C0 02            [ 8] 1057 	push	ar2
      0005F4 C0 03            [ 8] 1058 	push	ar3
      0005F6 C0 04            [ 8] 1059 	push	ar4
      0005F8 C0 05            [ 8] 1060 	push	ar5
      0005FA 75 95 40         [12] 1061 	mov	dpx1,#0x40
      0005FD 85*01 85         [12] 1062 	mov	dph1,_bpx+1
      000600 85*00 84         [12] 1063 	mov	dpl1,_bpx
      000603 75 86 01         [12] 1064 	mov	dps,#1
      000606 A3               [12] 1065 	inc	dptr
      000607 75 86 01         [12] 1066 	mov	dps, #1
      00060A E0               [ 8] 1067 	movx	a,@dptr
      00060B F5 82            [ 8] 1068 	mov	dpl,a
      00060D A3               [12] 1069 	inc	dptr
      00060E E0               [ 8] 1070 	movx	a,@dptr
      00060F F5 83            [ 8] 1071 	mov	dph,a
      000611 A3               [12] 1072 	inc	dptr
      000612 E0               [ 8] 1073 	movx	a,@dptr
      000613 F5 93            [ 8] 1074 	mov	dpx,a
      000615 A3               [12] 1075 	inc	dptr
      000616 E0               [ 8] 1076 	movx	a,@dptr
      000617 F5 F0            [ 8] 1077 	mov	b,a
      000619 75 86 00         [12] 1078 	mov	dps,#0
      00061C 12s00r00r00      [16] 1079 	lcall	___fslt
      000620 D0 05            [ 8] 1080 	pop	ar5
      000622 D0 04            [ 8] 1081 	pop	ar4
      000624 D0 03            [ 8] 1082 	pop	ar3
      000626 D0 02            [ 8] 1083 	pop	ar2
      000628 E5 82            [ 8] 1084 	mov	a,dpl
      00062A 60 04            [12] 1085 	jz  00111$
      00062C                       1086 00133$:
      00062C ED               [ 4] 1087 	mov	a,r5
      00062D B2 E7            [ 8] 1088 	cpl	acc[7]
      00062F FD               [ 4] 1089 	mov	r5,a
      000630                       1090 00111$:
                                   1091 ;	atanf.c:84: return r;
      000630 8A 82            [ 8] 1092 	mov	dpl,r2
      000632 8B 83            [ 8] 1093 	mov	dph,r3
      000634 8C 93            [ 8] 1094 	mov	dpx,r4
      000636 8D F0            [ 8] 1095 	mov	b,r5
      000638                       1096 00112$:
      000638 85*00 81         [12] 1097 	mov	sp,_bpx
      00063B 85*01 9B         [12] 1098 	mov	esp,_bpx+1
      00063E D0*01            [ 8] 1099 	pop	_bpx+1
      000640 D0*00            [ 8] 1100 	pop	_bpx
      000642 22               [16] 1101 	ret
                                   1102 	.area CSEG    (CODE)
                                   1103 	.area CONST   (CODE)
      000000                       1104 _atanf_a_1_24:
      000000 00 00 00 00           1105 	.byte #0x00,#0x00,#0x00,#0x00	;  0.000000e+00
      000004 92 0A 06 3F           1106 	.byte #0x92,#0x0A,#0x06,#0x3F	;  5.235988e-01
      000008 DB 0F C9 3F           1107 	.byte #0xDB,#0x0F,#0xC9,#0x3F	;  1.570796e+00
      00000C 92 0A 86 3F           1108 	.byte #0x92,#0x0A,#0x86,#0x3F	;  1.047198e+00
                                   1109 	.area XINIT   (CODE)
                                   1110 	.area CABS    (ABS,CODE)
