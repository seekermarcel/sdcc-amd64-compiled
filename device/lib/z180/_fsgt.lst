                              1 ;--------------------------------------------------------
                              2 ; File Created by SDCC : free open source ANSI-C Compiler
                              3 ; Version 3.5.0 #9253 (Apr  4 2022) (Linux)
                              4 ; This file was generated Mon Apr  4 14:15:37 2022
                              5 ;--------------------------------------------------------
                              6 	.hd64
                              7 	.module _fsgt
                              8 	.optsdcc -mz180
                              9 	
                             10 ;--------------------------------------------------------
                             11 ; Public variables in this module
                             12 ;--------------------------------------------------------
                             13 	.globl ___fsgt
                             14 ;--------------------------------------------------------
                             15 ; special function registers
                             16 ;--------------------------------------------------------
                             17 ;--------------------------------------------------------
                             18 ; ram data
                             19 ;--------------------------------------------------------
                             20 	.area _DATA
                             21 ;--------------------------------------------------------
                             22 ; ram data
                             23 ;--------------------------------------------------------
                             24 	.area _INITIALIZED
                             25 ;--------------------------------------------------------
                             26 ; absolute external ram data
                             27 ;--------------------------------------------------------
                             28 	.area _DABS (ABS)
                             29 ;--------------------------------------------------------
                             30 ; global & static initialisations
                             31 ;--------------------------------------------------------
                             32 	.area _HOME
                             33 	.area _GSINIT
                             34 	.area _GSFINAL
                             35 	.area _GSINIT
                             36 ;--------------------------------------------------------
                             37 ; Home
                             38 ;--------------------------------------------------------
                             39 	.area _HOME
                             40 ;../_fsgt.c:108: char __fsgt (float a1, float a2)
                             41 ;	---------------------------------
                             42 ; Function __fsgt
                             43 ; ---------------------------------
   0000                      44 ___fsgt::
   0000 DD E5         [14]   45 	push	ix
   0002 DD 21 00 00   [12]   46 	ld	ix,#0
   0006 DD 39         [10]   47 	add	ix,sp
   0008 21 F4 FF      [ 9]   48 	ld	hl,#-12
   000B 39            [ 7]   49 	add	hl,sp
   000C F9            [ 4]   50 	ld	sp,hl
                             51 ;../_fsgt.c:112: fl1.f = a1;
   000D 21 04 00      [ 9]   52 	ld	hl,#0x0004
   0010 39            [ 7]   53 	add	hl,sp
   0011 EB            [ 3]   54 	ex	de,hl
   0012 21 10 00      [ 9]   55 	ld	hl, #0x0010
   0015 39            [ 7]   56 	add	hl, sp
   0016 01 04 00      [ 9]   57 	ld	bc, #0x0004
   0019 ED B0         [14]   58 	ldir
                             59 ;../_fsgt.c:113: fl2.f = a2;
   001B 21 00 00      [ 9]   60 	ld	hl,#0x0000
   001E 39            [ 7]   61 	add	hl,sp
   001F EB            [ 3]   62 	ex	de,hl
   0020 21 14 00      [ 9]   63 	ld	hl, #0x0014
   0023 39            [ 7]   64 	add	hl, sp
   0024 01 04 00      [ 9]   65 	ld	bc, #0x0004
   0027 ED B0         [14]   66 	ldir
                             67 ;../_fsgt.c:115: if (((fl1.l | fl2.l) & 0x7FFFFFFF) == 0)
   0029 21 04 00      [ 9]   68 	ld	hl,#0x0004
   002C 39            [ 7]   69 	add	hl,sp
   002D EB            [ 3]   70 	ex	de,hl
   002E 21 08 00      [ 9]   71 	ld	hl, #0x0008
   0031 39            [ 7]   72 	add	hl, sp
   0032 EB            [ 3]   73 	ex	de, hl
   0033 01 04 00      [ 9]   74 	ld	bc, #0x0004
   0036 ED B0         [14]   75 	ldir
   0038 21 00 00      [ 9]   76 	ld	hl,#0x0000
   003B 39            [ 7]   77 	add	hl,sp
   003C 5E            [ 6]   78 	ld	e,(hl)
   003D 23            [ 4]   79 	inc	hl
   003E 56            [ 6]   80 	ld	d,(hl)
   003F 23            [ 4]   81 	inc	hl
   0040 4E            [ 6]   82 	ld	c,(hl)
   0041 23            [ 4]   83 	inc	hl
   0042 46            [ 6]   84 	ld	b,(hl)
   0043 DD 7E FC      [14]   85 	ld	a,-4 (ix)
   0046 B3            [ 4]   86 	or	a, e
   0047 5F            [ 4]   87 	ld	e,a
   0048 DD 7E FD      [14]   88 	ld	a,-3 (ix)
   004B B2            [ 4]   89 	or	a, d
   004C 57            [ 4]   90 	ld	d,a
   004D DD 7E FE      [14]   91 	ld	a,-2 (ix)
   0050 B1            [ 4]   92 	or	a, c
   0051 6F            [ 4]   93 	ld	l,a
   0052 DD 7E FF      [14]   94 	ld	a,-1 (ix)
   0055 B0            [ 4]   95 	or	a, b
   0056 67            [ 4]   96 	ld	h,a
   0057 7B            [ 4]   97 	ld	a,e
   0058 B7            [ 4]   98 	or	a,a
   0059 20 0D         [ 8]   99 	jr	NZ,00102$
   005B B2            [ 4]  100 	or	a,d
   005C 20 0A         [ 8]  101 	jr	NZ,00102$
   005E BF            [ 4]  102 	cp	a, a
   005F ED 6A         [10]  103 	adc	hl, hl
   0061 20 05         [ 8]  104 	jr	NZ,00102$
                            105 ;../_fsgt.c:116: return (0);
   0063 2E 00         [ 6]  106 	ld	l,#0x00
   0065 C3rF8r00      [ 9]  107 	jp	00110$
   0068                     108 00102$:
                            109 ;../_fsgt.c:118: if (fl1.l<0 && fl2.l<0) {
   0068 21 04 00      [ 9]  110 	ld	hl,#0x0004
   006B 39            [ 7]  111 	add	hl,sp
   006C 56            [ 6]  112 	ld	d,(hl)
   006D 23            [ 4]  113 	inc	hl
   006E 5E            [ 6]  114 	ld	e,(hl)
   006F 23            [ 4]  115 	inc	hl
   0070 4E            [ 6]  116 	ld	c,(hl)
   0071 23            [ 4]  117 	inc	hl
   0072 66            [ 6]  118 	ld	h,(hl)
   0073 CB 7C         [ 7]  119 	bit	7, h
   0075 28 49         [ 8]  120 	jr	Z,00106$
   0077 21 00 00      [ 9]  121 	ld	hl,#0x0000
   007A 39            [ 7]  122 	add	hl,sp
   007B 56            [ 6]  123 	ld	d,(hl)
   007C 23            [ 4]  124 	inc	hl
   007D 5E            [ 6]  125 	ld	e,(hl)
   007E 23            [ 4]  126 	inc	hl
   007F 4E            [ 6]  127 	ld	c,(hl)
   0080 23            [ 4]  128 	inc	hl
   0081 66            [ 6]  129 	ld	h,(hl)
   0082 CB 7C         [ 7]  130 	bit	7, h
   0084 28 3A         [ 8]  131 	jr	Z,00106$
                            132 ;../_fsgt.c:119: if (fl2.l > fl1.l)
   0086 21 00 00      [ 9]  133 	ld	hl,#0x0000
   0089 39            [ 7]  134 	add	hl,sp
   008A EB            [ 3]  135 	ex	de,hl
   008B 21 08 00      [ 9]  136 	ld	hl, #0x0008
   008E 39            [ 7]  137 	add	hl, sp
   008F EB            [ 3]  138 	ex	de, hl
   0090 01 04 00      [ 9]  139 	ld	bc, #0x0004
   0093 ED B0         [14]  140 	ldir
   0095 21 04 00      [ 9]  141 	ld	hl,#0x0004
   0098 39            [ 7]  142 	add	hl,sp
   0099 56            [ 6]  143 	ld	d,(hl)
   009A 23            [ 4]  144 	inc	hl
   009B 5E            [ 6]  145 	ld	e,(hl)
   009C 23            [ 4]  146 	inc	hl
   009D 4E            [ 6]  147 	ld	c,(hl)
   009E 23            [ 4]  148 	inc	hl
   009F 66            [ 6]  149 	ld	h,(hl)
   00A0 7A            [ 4]  150 	ld	a,d
   00A1 DD 96 FC      [14]  151 	sub	a, -4 (ix)
   00A4 7B            [ 4]  152 	ld	a,e
   00A5 DD 9E FD      [14]  153 	sbc	a, -3 (ix)
   00A8 79            [ 4]  154 	ld	a,c
   00A9 DD 9E FE      [14]  155 	sbc	a, -2 (ix)
   00AC 7C            [ 4]  156 	ld	a,h
   00AD DD 9E FF      [14]  157 	sbc	a, -1 (ix)
   00B0 E2rB5r00      [ 9]  158 	jp	PO, 00134$
   00B3 EE 80         [ 6]  159 	xor	a, #0x80
   00B5                     160 00134$:
   00B5 F2rBCr00      [ 9]  161 	jp	P,00104$
                            162 ;../_fsgt.c:120: return (1);
   00B8 2E 01         [ 6]  163 	ld	l,#0x01
   00BA 18 3C         [ 8]  164 	jr	00110$
   00BC                     165 00104$:
                            166 ;../_fsgt.c:121: return (0);
   00BC 2E 00         [ 6]  167 	ld	l,#0x00
   00BE 18 38         [ 8]  168 	jr	00110$
   00C0                     169 00106$:
                            170 ;../_fsgt.c:124: if (fl1.l > fl2.l)
   00C0 21 04 00      [ 9]  171 	ld	hl,#0x0004
   00C3 39            [ 7]  172 	add	hl,sp
   00C4 EB            [ 3]  173 	ex	de,hl
   00C5 21 08 00      [ 9]  174 	ld	hl, #0x0008
   00C8 39            [ 7]  175 	add	hl, sp
   00C9 EB            [ 3]  176 	ex	de, hl
   00CA 01 04 00      [ 9]  177 	ld	bc, #0x0004
   00CD ED B0         [14]  178 	ldir
   00CF 21 00 00      [ 9]  179 	ld	hl,#0x0000
   00D2 39            [ 7]  180 	add	hl,sp
   00D3 56            [ 6]  181 	ld	d,(hl)
   00D4 23            [ 4]  182 	inc	hl
   00D5 5E            [ 6]  183 	ld	e,(hl)
   00D6 23            [ 4]  184 	inc	hl
   00D7 4E            [ 6]  185 	ld	c,(hl)
   00D8 23            [ 4]  186 	inc	hl
   00D9 66            [ 6]  187 	ld	h,(hl)
   00DA 7A            [ 4]  188 	ld	a,d
   00DB DD 96 FC      [14]  189 	sub	a, -4 (ix)
   00DE 7B            [ 4]  190 	ld	a,e
   00DF DD 9E FD      [14]  191 	sbc	a, -3 (ix)
   00E2 79            [ 4]  192 	ld	a,c
   00E3 DD 9E FE      [14]  193 	sbc	a, -2 (ix)
   00E6 7C            [ 4]  194 	ld	a,h
   00E7 DD 9E FF      [14]  195 	sbc	a, -1 (ix)
   00EA E2rEFr00      [ 9]  196 	jp	PO, 00135$
   00ED EE 80         [ 6]  197 	xor	a, #0x80
   00EF                     198 00135$:
   00EF F2rF6r00      [ 9]  199 	jp	P,00109$
                            200 ;../_fsgt.c:125: return (1);
   00F2 2E 01         [ 6]  201 	ld	l,#0x01
   00F4 18 02         [ 8]  202 	jr	00110$
   00F6                     203 00109$:
                            204 ;../_fsgt.c:126: return (0);
   00F6 2E 00         [ 6]  205 	ld	l,#0x00
   00F8                     206 00110$:
   00F8 DD F9         [ 7]  207 	ld	sp, ix
   00FA DD E1         [12]  208 	pop	ix
   00FC C9            [ 9]  209 	ret
                            210 	.area _HOME
                            211 ;--------------------------------------------------------
                            212 ; code
                            213 ;--------------------------------------------------------
                            214 	.area _CODE
                            215 	.area _CODE
                            216 	.area _INITIALIZER
                            217 	.area _CABS (ABS)
