                              1 ;--------------------------------------------------------
                              2 ; File Created by SDCC : free open source ANSI-C Compiler
                              3 ; Version 3.5.0 #9253 (Apr  4 2022) (Linux)
                              4 ; This file was generated Mon Apr  4 14:15:27 2022
                              5 ;--------------------------------------------------------
                              6 	.module _strrchr
                              7 	.optsdcc -mz80
                              8 	
                              9 ;--------------------------------------------------------
                             10 ; Public variables in this module
                             11 ;--------------------------------------------------------
                             12 	.globl _strrchr
                             13 ;--------------------------------------------------------
                             14 ; special function registers
                             15 ;--------------------------------------------------------
                             16 ;--------------------------------------------------------
                             17 ; ram data
                             18 ;--------------------------------------------------------
                             19 	.area _DATA
                             20 ;--------------------------------------------------------
                             21 ; ram data
                             22 ;--------------------------------------------------------
                             23 	.area _INITIALIZED
                             24 ;--------------------------------------------------------
                             25 ; absolute external ram data
                             26 ;--------------------------------------------------------
                             27 	.area _DABS (ABS)
                             28 ;--------------------------------------------------------
                             29 ; global & static initialisations
                             30 ;--------------------------------------------------------
                             31 	.area _HOME
                             32 	.area _GSINIT
                             33 	.area _GSFINAL
                             34 	.area _GSINIT
                             35 ;--------------------------------------------------------
                             36 ; Home
                             37 ;--------------------------------------------------------
                             38 	.area _HOME
                             39 	.area _HOME
                             40 ;--------------------------------------------------------
                             41 ; code
                             42 ;--------------------------------------------------------
                             43 	.area _CODE
                             44 ;../_strrchr.c:34: char * strrchr ( const char * string, int ch )
                             45 ;	---------------------------------
                             46 ; Function strrchr
                             47 ; ---------------------------------
   0000                      48 _strrchr::
   0000 DD E5         [15]   49 	push	ix
   0002 DD 21 00 00   [14]   50 	ld	ix,#0
   0006 DD 39         [15]   51 	add	ix,sp
   0008 F5            [11]   52 	push	af
                             53 ;../_strrchr.c:37: const char * start = string;
   0009 DD 7E 04      [19]   54 	ld	a,4 (ix)
   000C DD 77 FE      [19]   55 	ld	-2 (ix),a
   000F DD 7E 05      [19]   56 	ld	a,5 (ix)
   0012 DD 77 FF      [19]   57 	ld	-1 (ix),a
                             58 ;../_strrchr.c:39: while (*string++)                       /* find end of string */
   0015 C1            [10]   59 	pop	bc
   0016 C5            [11]   60 	push	bc
   0017                      61 00101$:
   0017 0A            [ 7]   62 	ld	a,(bc)
   0018 03            [ 6]   63 	inc	bc
   0019 B7            [ 4]   64 	or	a, a
   001A 20 FB         [12]   65 	jr	NZ,00101$
                             66 ;../_strrchr.c:42: while (--string != start && *string != ch)
   001C                      67 00105$:
   001C 0B            [ 6]   68 	dec	bc
   001D 0A            [ 7]   69 	ld	a,(bc)
   001E 57            [ 4]   70 	ld	d,a
   001F 17            [ 4]   71 	rla
   0020 9F            [ 4]   72 	sbc	a, a
   0021 5F            [ 4]   73 	ld	e,a
   0022 DD 7E 06      [19]   74 	ld	a,6 (ix)
   0025 92            [ 4]   75 	sub	a, d
   0026 20 0A         [12]   76 	jr	NZ,00133$
   0028 DD 7E 07      [19]   77 	ld	a,7 (ix)
   002B 93            [ 4]   78 	sub	a, e
   002C 20 04         [12]   79 	jr	NZ,00133$
   002E 3E 01         [ 7]   80 	ld	a,#0x01
   0030 18 01         [12]   81 	jr	00134$
   0032                      82 00133$:
   0032 AF            [ 4]   83 	xor	a,a
   0033                      84 00134$:
   0033 57            [ 4]   85 	ld	d,a
   0034 DD 7E FE      [19]   86 	ld	a,-2 (ix)
   0037 91            [ 4]   87 	sub	a, c
   0038 20 06         [12]   88 	jr	NZ,00135$
   003A DD 7E FF      [19]   89 	ld	a,-1 (ix)
   003D 90            [ 4]   90 	sub	a, b
   003E 28 04         [12]   91 	jr	Z,00107$
   0040                      92 00135$:
   0040 7A            [ 4]   93 	ld	a,d
   0041 B7            [ 4]   94 	or	a, a
   0042 28 D8         [12]   95 	jr	Z,00105$
   0044                      96 00107$:
                             97 ;../_strrchr.c:45: if (*string == ch)                      /* char found ? */
   0044 7A            [ 4]   98 	ld	a,d
   0045 B7            [ 4]   99 	or	a, a
   0046 28 04         [12]  100 	jr	Z,00109$
                            101 ;../_strrchr.c:46: return( (char *)string );
   0048 69            [ 4]  102 	ld	l, c
   0049 60            [ 4]  103 	ld	h, b
   004A 18 03         [12]  104 	jr	00110$
   004C                     105 00109$:
                            106 ;../_strrchr.c:48: return (NULL) ;
   004C 21 00 00      [10]  107 	ld	hl,#0x0000
   004F                     108 00110$:
   004F DD F9         [10]  109 	ld	sp, ix
   0051 DD E1         [14]  110 	pop	ix
   0053 C9            [10]  111 	ret
                            112 	.area _CODE
                            113 	.area _INITIALIZER
                            114 	.area _CABS (ABS)
