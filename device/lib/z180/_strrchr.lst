                              1 ;--------------------------------------------------------
                              2 ; File Created by SDCC : free open source ANSI-C Compiler
                              3 ; Version 3.5.0 #9253 (Apr  4 2022) (Linux)
                              4 ; This file was generated Mon Apr  4 14:15:44 2022
                              5 ;--------------------------------------------------------
                              6 	.hd64
                              7 	.module _strrchr
                              8 	.optsdcc -mz180
                              9 	
                             10 ;--------------------------------------------------------
                             11 ; Public variables in this module
                             12 ;--------------------------------------------------------
                             13 	.globl _strrchr
                             14 ;--------------------------------------------------------
                             15 ; special function registers
                             16 ;--------------------------------------------------------
                             17 ;--------------------------------------------------------
                             18 ; ram data
                             19 ;--------------------------------------------------------
                             20 	.area _DATA
                             21 ;--------------------------------------------------------
                             22 ; ram data
                             23 ;--------------------------------------------------------
                             24 	.area _INITIALIZED
                             25 ;--------------------------------------------------------
                             26 ; absolute external ram data
                             27 ;--------------------------------------------------------
                             28 	.area _DABS (ABS)
                             29 ;--------------------------------------------------------
                             30 ; global & static initialisations
                             31 ;--------------------------------------------------------
                             32 	.area _HOME
                             33 	.area _GSINIT
                             34 	.area _GSFINAL
                             35 	.area _GSINIT
                             36 ;--------------------------------------------------------
                             37 ; Home
                             38 ;--------------------------------------------------------
                             39 	.area _HOME
                             40 	.area _HOME
                             41 ;--------------------------------------------------------
                             42 ; code
                             43 ;--------------------------------------------------------
                             44 	.area _CODE
                             45 ;../_strrchr.c:34: char * strrchr ( const char * string, int ch )
                             46 ;	---------------------------------
                             47 ; Function strrchr
                             48 ; ---------------------------------
   0000                      49 _strrchr::
   0000 DD E5         [14]   50 	push	ix
   0002 DD 21 00 00   [12]   51 	ld	ix,#0
   0006 DD 39         [10]   52 	add	ix,sp
   0008 3B            [ 4]   53 	dec	sp
   0009 3B            [ 4]   54 	dec	sp
                             55 ;../_strrchr.c:37: const char * start = string;
   000A DD 7E 04      [14]   56 	ld	a,4 (ix)
   000D DD 77 FE      [15]   57 	ld	-2 (ix),a
   0010 DD 7E 05      [14]   58 	ld	a,5 (ix)
   0013 DD 77 FF      [15]   59 	ld	-1 (ix),a
                             60 ;../_strrchr.c:39: while (*string++)                       /* find end of string */
   0016 C1            [ 9]   61 	pop	bc
   0017 C5            [11]   62 	push	bc
   0018                      63 00101$:
   0018 0A            [ 6]   64 	ld	a,(bc)
   0019 03            [ 4]   65 	inc	bc
   001A B7            [ 4]   66 	or	a, a
   001B 20 FB         [ 8]   67 	jr	NZ,00101$
                             68 ;../_strrchr.c:42: while (--string != start && *string != ch)
   001D                      69 00105$:
   001D 0B            [ 4]   70 	dec	bc
   001E 0A            [ 6]   71 	ld	a,(bc)
   001F 57            [ 4]   72 	ld	d,a
   0020 17            [ 3]   73 	rla
   0021 9F            [ 4]   74 	sbc	a, a
   0022 5F            [ 4]   75 	ld	e,a
   0023 DD 7E 06      [14]   76 	ld	a,6 (ix)
   0026 92            [ 4]   77 	sub	a, d
   0027 20 0A         [ 8]   78 	jr	NZ,00133$
   0029 DD 7E 07      [14]   79 	ld	a,7 (ix)
   002C 93            [ 4]   80 	sub	a, e
   002D 20 04         [ 8]   81 	jr	NZ,00133$
   002F 3E 01         [ 6]   82 	ld	a,#0x01
   0031 18 01         [ 8]   83 	jr	00134$
   0033                      84 00133$:
   0033 AF            [ 4]   85 	xor	a,a
   0034                      86 00134$:
   0034 57            [ 4]   87 	ld	d,a
   0035 DD 7E FE      [14]   88 	ld	a,-2 (ix)
   0038 91            [ 4]   89 	sub	a, c
   0039 20 06         [ 8]   90 	jr	NZ,00135$
   003B DD 7E FF      [14]   91 	ld	a,-1 (ix)
   003E 90            [ 4]   92 	sub	a, b
   003F 28 04         [ 8]   93 	jr	Z,00107$
   0041                      94 00135$:
   0041 7A            [ 4]   95 	ld	a,d
   0042 B7            [ 4]   96 	or	a, a
   0043 28 D8         [ 8]   97 	jr	Z,00105$
   0045                      98 00107$:
                             99 ;../_strrchr.c:45: if (*string == ch)                      /* char found ? */
   0045 7A            [ 4]  100 	ld	a,d
   0046 B7            [ 4]  101 	or	a, a
   0047 28 04         [ 8]  102 	jr	Z,00109$
                            103 ;../_strrchr.c:46: return( (char *)string );
   0049 69            [ 4]  104 	ld	l, c
   004A 60            [ 4]  105 	ld	h, b
   004B 18 03         [ 8]  106 	jr	00110$
   004D                     107 00109$:
                            108 ;../_strrchr.c:48: return (NULL) ;
   004D 21 00 00      [ 9]  109 	ld	hl,#0x0000
   0050                     110 00110$:
   0050 DD F9         [ 7]  111 	ld	sp, ix
   0052 DD E1         [12]  112 	pop	ix
   0054 C9            [ 9]  113 	ret
                            114 	.area _CODE
                            115 	.area _INITIALIZER
                            116 	.area _CABS (ABS)
