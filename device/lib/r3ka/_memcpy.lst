                              1 ;--------------------------------------------------------
                              2 ; File Created by SDCC : free open source ANSI-C Compiler
                              3 ; Version 3.5.0 #9253 (Apr  4 2022) (Linux)
                              4 ; This file was generated Mon Apr  4 14:16:20 2022
                              5 ;--------------------------------------------------------
                              6 	.r3k
                              7 	.module _memcpy
                              8 	.optsdcc -mr3ka
                              9 	
                             10 ;--------------------------------------------------------
                             11 ; Public variables in this module
                             12 ;--------------------------------------------------------
                             13 	.globl _memcpy
                             14 ;--------------------------------------------------------
                             15 ; special function registers
                             16 ;--------------------------------------------------------
                             17 ;--------------------------------------------------------
                             18 ; ram data
                             19 ;--------------------------------------------------------
                             20 	.area _DATA
                             21 ;--------------------------------------------------------
                             22 ; ram data
                             23 ;--------------------------------------------------------
                             24 	.area _INITIALIZED
                             25 ;--------------------------------------------------------
                             26 ; absolute external ram data
                             27 ;--------------------------------------------------------
                             28 	.area _DABS (ABS)
                             29 ;--------------------------------------------------------
                             30 ; global & static initialisations
                             31 ;--------------------------------------------------------
                             32 	.area _HOME
                             33 	.area _GSINIT
                             34 	.area _GSFINAL
                             35 	.area _GSINIT
                             36 ;--------------------------------------------------------
                             37 ; Home
                             38 ;--------------------------------------------------------
                             39 	.area _HOME
                             40 	.area _HOME
                             41 ;--------------------------------------------------------
                             42 ; code
                             43 ;--------------------------------------------------------
                             44 	.area _CODE
                             45 ;../_memcpy.c:36: void * memcpy (void * dst, const void * src, size_t acount)
                             46 ;	---------------------------------
                             47 ; Function memcpy
                             48 ; ---------------------------------
   0000                      49 _memcpy::
   0000 DD E5                50 	push	ix
   0002 DD 21 00 00          51 	ld	ix,#0
   0006 DD 39                52 	add	ix,sp
   0008 27 FC                53 	add	sp, #-4
                             54 ;../_memcpy.c:38: void * ret = dst;
   000A DD 7E 04             55 	ld	a,4 (ix)
   000D DD 77 FC             56 	ld	-4 (ix),a
   0010 DD 7E 05             57 	ld	a,5 (ix)
   0013 DD 77 FD             58 	ld	-3 (ix),a
                             59 ;../_memcpy.c:39: char * d = dst;
   0016 DD 7E 04             60 	ld	a,4 (ix)
   0019 DD 77 FE             61 	ld	-2 (ix),a
   001C DD 7E 05             62 	ld	a,5 (ix)
   001F DD 77 FF             63 	ld	-1 (ix),a
                             64 ;../_memcpy.c:40: const char * s = src;
   0022 DD 4E 06             65 	ld	c,6 (ix)
   0025 DD 46 07             66 	ld	b,7 (ix)
                             67 ;../_memcpy.c:45: while (acount--) {
   0028 EB                   68 	ex	de, hl
   0029 C4 0C                69 	ld	hl, 12 (sp)
   002B EB                   70 	ex	de, hl
   002C                      71 00101$:
   002C 63                   72 	ld	h,e
   002D 6A                   73 	ld	l,d
   002E 1B                   74 	dec	de
   002F 7D                   75 	ld	a,l
   0030 B4                   76 	or	a,h
   0031 28 0F                77 	jr	Z,00103$
                             78 ;../_memcpy.c:46: *d++ = *s++;
   0033 0A                   79 	ld	a,(bc)
   0034 03                   80 	inc	bc
   0035 C4 02                81 	ld	hl, 2 (sp)
   0037 77                   82 	ld	(hl),a
   0038 DD 34 FE             83 	inc	-2 (ix)
   003B 20 EF                84 	jr	NZ,00101$
   003D DD 34 FF             85 	inc	-1 (ix)
   0040 18 EA                86 	jr	00101$
   0042                      87 00103$:
                             88 ;../_memcpy.c:49: return(ret);
   0042 C4 00                89 	ld	hl, 0 (sp)
   0044 DD F9                90 	ld	sp, ix
   0046 DD E1                91 	pop	ix
   0048 C9                   92 	ret
                             93 	.area _CODE
                             94 	.area _INITIALIZER
                             95 	.area _CABS (ABS)
